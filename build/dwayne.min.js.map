{"version":3,"file":"dwayne.min.js","sources":["../lib/helpers/toStringTag.js","../lib/helpers/checkTypes.js","../lib/D.js","../lib/helpers/iterate.js","../lib/helpers/assign.js","../lib/helpers/defineProperty.js","../lib/helpers/toArray.js","../lib/helpers/validate.js","../lib/Alphabet.js","../lib/Switcher.js","../lib/Super.js","../lib/Arr.js","../lib/BlobObject.js","../lib/Func.js","../lib/Num.js","../lib/Str.js","../lib/constants/formats.js","../lib/Dat.js","../lib/helpers/constructURL.js","../lib/Fetch.js","../lib/Elem.js","../lib/Router.js","../lib/constants/global.js","../lib/helpers/Symbol.js","../lib/constants/validateCheckExpressions.js","../lib/Promise.js","../lib/constants/regexpSpecialCharacters.js","../lib/helpers/parseHeaders.js","../lib/helpers/transformData.js","../lib/constants/appliedRegExps.js","../lib/constants/elements.js","../lib/constants/canvasMethods.js","../lib/helpers/resolveURL.js","../browser.js"],"sourcesContent":["/**\n * @module helpers/toStringTag\n * @private\n * @description Exports toStringTag method.\n */\n\n/**\n * @function toStringTag\n * @param {*} object - Object to get toStringTag of.\n * @returns {String} Cut string.\n * @description Cut \"Type\" string from \"[object Type]\" string that gotten from {}.toString,call(object).\n */\nexport function toStringTag(object) {\n  return {}.toString.call(object).replace(/^\\[object |]$/g, '');\n}\n","/**\n * @module helpers/checkTypes\n * @private\n * @mixin\n * @description Exports is<Type> methods.\n */\n\nimport { toStringTag } from './toStringTag';\n\n/**\n * @function isArray\n * @public\n * @param {*} value - Value to check if it is an array.\n * @returns {Boolean} If the argument is an array or not.\n * \n * @example\n * isArray([]);                             // true\n * isArray(0);                              // true\n * isArray(document.querySelectorAll('*')); // false\n */\nexport function isArray(value) {\n  return toStringTag(value) === 'Array';\n}\n\n/**\n * @function isArrayLike\n * @public\n * @param {*} value - Value to check if it is array-like.\n * @returns {Boolean} If the argument is array-like or not.\n * @description Basically returns if the argument has non-negative integer \"length\" property and isn't a function.\n * \n * @example\n * isArrayLike([]);                             // true\n * isArrayLike('');                             // true\n * isArrayLike(() => {});                       // false\n * isArrayLike(document.querySelectorAll('*')); // true\n */\nexport function isArrayLike(value) {\n  if (!value || isFunction(value)) {\n    return false;\n  }\n  \n  const length = value.length;\n  \n  return isInteger(length) && length >= 0;\n}\n\n/**\n * @function isBoolean\n * @public\n * @param {*} value - Value to check if it is a boolean.\n * @returns {Boolean} If the argument is a boolean or not.\n * \n * @example\n * isBoolean(true);               // true\n * isBoolean(new Boolean(false)); // true\n * isBoolean(null);               // false\n */\nexport function isBoolean(value) {\n  return toStringTag(value) === 'Boolean';\n}\n\n/**\n * @function isDate\n * @public\n * @param {*} value - Value to check if it is a date.\n * @returns {Boolean} If the argument is a date or not.\n * \n * @example\n * isDate(new Date());                 // true\n * isDate('1999-12-31T23:59:59.999Z'); // false\n */\nexport function isDate(value) {\n  return toStringTag(value) === 'Date';\n}\n\n/**\n * @function isDateLike\n * @public\n * @param {*} value - Value to check if it is date-like.\n * @returns {Boolean} If the argument is date-like or not.\n * @description Basically returns if new Date(argument) is not invalid date.\n * \n * @example\n * isDateLike(new Date());                 // true\n * isDateLike('1999-12-31T23:59:59.999Z'); // true\n * isDateLike(0);                          // true\n */\nexport function isDateLike(value) {\n  value = new Date(value);\n  \n  return !isNaN(value.getTime());\n}\n\n/**\n * @function isElement\n * @public\n * @param {*} value - Value to check if it is an element.\n * @returns {Boolean} If the argument is element or not.\n *\n * @example\n * isElement(document.querySelector('html')); // true\n */\nexport function isElement(value) {\n  return /Element$/.test(toStringTag(value));\n}\n\n/**\n * @function isFinite\n * @public\n * @param {*} value - Value to check if it is finite.\n * @returns {Boolean} If the argument is finite or not.\n * \n * @example\n * isFinite(0);        // true\n * isFinite('0');      // false\n * isFinite(Infinity); // false\n * isFinite(NaN);      // false\n */\nexport function isFinite(value) {\n  if (!isNumber(value)) {\n    return false;\n  }\n  \n  value = Number(value);\n\n  return !isNaN(value) && value !== Infinity && value !== -Infinity;\n}\n\n/**\n * @function isFunction\n * @public\n * @param {*} value - Value to check if it is a function.\n * @returns {Boolean} If the argument is a function or not.\n * \n * @example\n * isFunction(() => {});            // true\n * \n * const func = () => {};\n * Object.setPrototypeOf(func, {});\n * isFunction(func);                // true\n */\nexport function isFunction(value) {\n  return toStringTag(value) === 'Function' || typeof value === 'function';\n}\n\n/**\n * @function isInteger\n * @public\n * @param {*} value - Value to check if it is an integer.\n * @returns {Boolean} If the argument is an integer or not.\n *\n * @example\n * isInteger(0);             // true\n * isInteger(0.1);           // false\n * isInteger(new Number(0)); // true\n * isInteger('0');           // false\n * isInteger(Infinity);      // false\n * isInteger(NaN);           // false\n */\nexport function isInteger(value) {\n  return isNumber(value) && value % 1 === 0;\n}\n\n/**\n * @function isIntegerLike\n * @public\n * @param {*} value - Value to check if it is integer-like.\n * @returns {Boolean} If the argument is integer-like or not.\n *\n * @example\n * isIntegerLike(0);             // true\n * isIntegerLike(new Number(0)); // true\n * isIntegerLike(0.1);           // false\n * isIntegerLike('0');           // true\n */\nexport function isIntegerLike(value) {\n  value = parseInt(Number(value));\n\n  return !!(value || value === 0);\n}\n\n/**\n * @function isNaN\n * @public\n * @param {*} value - Value to check if it is NaN.\n * @returns {Boolean} If the argument is NaN or not.\n *\n * @example\n * isNaN(0);               // false\n * isNaN('NaN');           // false\n * isNaN(NaN);             // true\n * isNaN(new Number(NaN)); // true\n */\nexport function isNaN(value) {\n  if (!isNumber(value)) {\n    return false;\n  }\n  \n  value = Number(value);\n\n  return value !== value;\n}\n\n/**\n * @function isNull\n * @public\n * @param {*} value - Value to check if it is null.\n * @returns {Boolean} If the argument is null or not.\n *\n * @example\n * isNull(null);      // true\n * isNull(undefined); // false\n */\nexport function isNull(value) {\n  return value === null;\n}\n\n/**\n * @function isNullOrUndefined\n * @public\n * @param {*} value - Value to check if it is null or undefined.\n * @returns {Boolean} If the argument is null or undefined or not.\n *\n * @example\n * isNullOrUndefined(null);      // true\n * isNullOrUndefined(undefined); // true\n * isNullOrUndefined(false);     // false\n */\nexport function isNullOrUndefined(value) {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * @function isNumber\n * @public\n * @param {*} value - Value to check if it is a number.\n * @returns {Boolean} If the argument is a number or not.\n *\n * @example\n * isNumber(0);             // true\n * isNumber(new Number(0)); // true\n * isNumber(NaN);           // true\n * isNumber('0');           // false\n */\nexport function isNumber(value) {\n  return toStringTag(value) === 'Number';\n}\n\n/**\n * @function isNumberLike\n * @public\n * @param {*} value - Value to check if it is number-like.\n * @returns {Boolean} If the argument is number-like or not.\n *\n * @example\n * isNumberLike(0);          // true\n * isNumberLike('0');        // true\n * isNumberLike('Infinity'); // true\n * isNumberLike('NaN');      // true\n * isNumberLike(NaN);        // true\n */\nexport function isNumberLike(value) {\n  if (isNaN(value) || value === 'NaN') {\n    return true;\n  }\n  \n  value = Number(value);\n  \n  return !!(value || value === 0);\n}\n\n/**\n * @function isObject\n * @public\n * @param {*} value - Value to check if it is an object.\n * @returns {Boolean} If the argument is an object or not.\n *\n * @example\n * isObject({});   // true\n * isObject(1);    // false\n * isObject(null); // false\n */\nexport function isObject(value) {\n  return !!value && (toStringTag(value) === 'Object' || typeof value === 'object' || value instanceof Object);\n}\n\n/**\n * @function isPlainObject\n * @public\n * @param {*} value - Value to check if it is a plain object.\n * @returns {Boolean} If the argument is a plain object or not.\n *\n * @example\n * const obj = {};\n *\n * ifPlainObject(obj); // true\n *\n * Object.setPrototypeOf(object, null);\n *\n * ifPlainObject(obj); // true\n *\n * Object.setPrototypeOf(object, {});\n *\n * ifPlainObject(obj); // false\n */\nexport function isPlainObject(value) {\n  if (isPrimitive(value)) {\n    return false;\n  }\n\n  const proto = Object.getPrototypeOf(value);\n\n  if (isNull(proto)) {\n    return true;\n  }\n\n  const constructor = proto.constructor;\n\n  return isFunction(constructor) &&\n    constructor instanceof constructor &&\n    isNull(Object.getPrototypeOf(proto));\n}\n\n/**\n * @function isPrimitive\n * @public\n * @param {*} value - Value to check if it is primitive.\n * @returns {Boolean} If the argument is primitive or not.\n *\n * @example\n * isPrimitive(1);             // true\n * isPrimitive({});            // false\n * isPrimitive('');            // true\n * isPrimitive(new Number(0)); // false\n * isPrimitive(true);          // true\n * isPrimitive(Symbol('foo')); // true\n * isPrimitive(null);          // true\n * isPrimitive(undefined);     // true\n */\nexport function isPrimitive(value) {\n  return isNull(value) || /^(number|string|boolean|symbol|undefined)$/.test(typeof value);\n}\n\n/**\n * @function isRegExp\n * @public\n * @param {*} value - Value to check if it is a regular expression.\n * @returns {Boolean} If the argument is a regular expression or not.\n *\n * @example\n * isRegExp(/foo/);             // true\n * isRegExp('/foo/');           // false\n * isRegExp(new RegExp('foo')); // true\n */\nexport function isRegExp(value) {\n  return toStringTag(value) === 'RegExp';\n}\n\n/**\n * @function isString\n * @public\n * @param {*} value - Value to check if it is a string.\n * @returns {Boolean} If the argument is a string or not.\n *\n * @example\n * isString('0');             // true\n * isString(new String('0')); // true\n */\nexport function isString(value) {\n  return toStringTag(value) === 'String';\n}\n\n/**\n * @function isSymbol\n * @public\n * @param {*} value - Value to check if it is a symbol.\n * @returns {Boolean} If the argument is a symbol or not.\n *\n * @example\n * isSymbol(Symbol('1')); // true\n */\nexport function isSymbol(value) {\n  return toStringTag(value) === 'Symbol';\n}\n\n/**\n * @function isUndefined\n * @public\n * @param {*} value - Value to check if it is undefined.\n * @returns {Boolean} If the argument is undefined or not.\n *\n * @example\n * isUndefined(null);      // false\n * isUndefined(undefined); // true\n */\nexport function isUndefined(value) {\n  return typeof value === 'undefined';\n}\n","/**\n * @module D\n * @private\n * @description Exports D function.\n */\n\nimport constructors from './constants/constructors';\n\nexport * from './helpers/checkTypes';\n\n/**\n * @function D\n * @public\n * @param {*} [value] - Any value.\n * @returns {DWrap} Wrap of the argument.\n * @description Function for creating a D-wrap of an object.\n *\n * @example\n * D({});            // Super\n * D(() => {});      // Func\n * D([]);            // Arr\n * D(1);             // Num\n * D('1');           // Str\n * D(new Date());    // Dat\n * D(document.body); // Elem\n */\nexport function D(value) {\n  for (let i = constructors.length - 1; i >= 0; i--) {\n    const levelConstructors = constructors[i];\n\n    for (let k = 0, len = levelConstructors.length; k < len; k++) {\n      const constructor = levelConstructors[k];\n\n      if (value instanceof constructor.cls) {\n        return value;\n      }\n\n      if (constructor.check(value)) {\n        return new constructor.cls(value);\n      }\n    }\n  }\n}\n\nexport default D;\n","/**\n * @module helpers/iterate\n * @private\n * @description Exports iterate method.\n */\n\nimport { isArrayLike, isUndefined } from './checkTypes';\n\n/**\n * @callback IterationCallback\n * @param {*} value - Iteration value.\n * @param {String|Number} key - Iteration key.\n * @param {*} object - Initial iterable object.\n */\n\n/**\n * @function iterate\n * @param {(Object|Array|null|undefined)} object - Value to iterate over.\n * @param {IterationCallback} callback - Callback that is called on every iteration.\n * @returns {*} If callback returns not undefined then iterate returns this value.\n * @description Function for iterating over all types of values.\n */\nexport function iterate(object, callback) {\n  const array = isArrayLike(object);\n\n  let iterated = 0;\n\n  for (const key in object) {\n    if ({}.hasOwnProperty.call(object, key)) {\n      if (array && iterated++ >= object.length) {\n        break;\n      }\n\n      const value = callback(object[key], array ? Number(key) : key, object);\n\n      if (!isUndefined(value)) {\n        return value;\n      }\n    }\n  }\n}\n","/**\n * @module helpers/assign\n * @private\n * @description Exports Object.assign-like method.\n */\n\nimport { iterate } from './iterate';\n\n/**\n * @const\n * @function assign\n * @param {Object} target - Object to assign rest of arguments to.\n * @param {...Object} objects - Objects that are assigned to the target.\n * @returns {Object} Target.\n */\nexport function assign(target) {\n  iterate(arguments, (source, index) => {\n    if (index) {\n      iterate(source, (value, key) => {\n        target[key] = value;\n      });\n    }\n  });\n    \n  return target;\n}\n","/**\n * @module helpers/defineProperty\n * @private\n * @description Exports defineProperty and dynamicDefineProperties methods.\n */\n\nimport { iterate } from './iterate';\n\n/**\n * @callback propertyGeneratorCallback\n * @param {String} name - Name of the property.\n * @returns {*} Generated property.\n */\n\n/**\n * @function dynamicDefineProperties\n * @param {Object} target - Object to define properties for.\n * @param {Array} properties - Object which keys are properties.\n * @param {propertyGeneratorCallback} propertyGenerator - Callback for every property.\n * @returns {void}\n * @description Function for dynamic creating properties based on name of the method.\n */\nexport function dynamicDefineProperties(target, properties, propertyGenerator) {\n  iterate(properties, (name) => {\n    Object.defineProperty(target, name, {\n      value: propertyGenerator(name),\n      writable: true,\n      enumerable: false,\n      configurable: true\n    });\n  });\n}\n\n/**\n * @function defineProperties\n * @param {Object} target - Target to define properties for.\n * @param {Object} properties - Object with properties needed to be assign to the target.\n * @returns {void}\n * @description Function for defining properties of an object.\n */\nexport function defineProperties(target, properties) {\n  iterate(properties, (method, name) => {\n    if (/^get /.test(name)) {\n      Object.defineProperty(target, name.replace(/^get /, ''), {\n        get: method,\n        set: undefined,\n        enumerable: false,\n        configurable: true\n      });\n\n      return;\n    }\n\n    if (/^set /.test(name)) {\n      Object.defineProperty(target, name.replace(/^set /, ''), {\n        set: method,\n        get: undefined,\n        enumerable: false,\n        configurable: true\n      });\n\n      return;\n    }\n\n    if (/^get\\/set /.test(name)) {\n      Object.defineProperty(target, name.replace(/^get\\/set /, ''), {\n        get: method.get,\n        set: method.set,\n        enumerable: false,\n        configurable: true\n      });\n\n      return;\n    }\n\n    if (name !== 'Symbol.toStringTag') {\n      Object.defineProperty(target, name, {\n        value: method,\n        writable: true,\n        enumerable: false,\n        configurable: true\n      });\n    }\n  });\n}\n","/**\n * @module helpers/toArray\n * @private\n * @description Exports toArray method.\n */\n\nimport { isArray, isArrayLike, isString } from './checkTypes';\nimport { iterate } from './iterate';\n\n/**\n * @function toArray\n * @param {*} value - Any value.\n * @param {Boolean} [createNewArray = false] - If it is needed to create new array.\n * @returns {Array} Create array.\n * @description Function for creating an array of any value.\n */\nexport function toArray(value, createNewArray) {\n  if (isArray(value) && !createNewArray) {\n    return value;\n  }\n\n  const array = [];\n\n  if (isArrayLike(value) && !isString(value)) {\n    iterate(value, (value) => {\n      array.push(value);\n    });\n  } else {\n    array.push(value);\n  }\n\n  return array;\n}\n","/**\n * @module helpers/validate\n * @private\n * @description Exports validate method.\n */\n\nimport checkExpressions from '../constants/validateCheckExpressions';\nimport { iterate } from './iterate';\nimport { isArray } from './checkTypes';\n\nconst numbers = ['1st', '2nd', '3rd', '4th', '5th', '6th', '7th'];\n\n/**\n * @function validate\n * @private\n * @param {Object} args - Arguments of function.\n * @param {Object} options - Object with validate parameters.\n * @param {String} [name] - Name of the function what called validate.\n * @returns {void}\n * @description Function for checking arguments of other functions.\n */\nexport function validate(args, options, name) {\n  iterate(options, (array, number) => {\n    if (!isArray(array)) {\n      array = [array];\n    }\n\n    iterate(array, (checker) => {\n      checker = checkExpressions[checker];\n\n      if (!checker.check(args[number])) {\n        throw new checker.error(checker.text.replace('$n', numbers[number]) + (name ? ` (at ${ name })` : ''));\n      }\n    });\n  });\n}\n","/**\n * @module Alphabet\n * @private\n * @mixin\n * @description Exports Alphabet class.\n */\n\nimport { isString, validate, defineProperties, Symbol } from './helpers';\n\n/**\n * @typedef {String} Char\n * @public\n * @description A string of one char.\n */\n\n/**\n * @class Alphabet\n * @public\n * @param {ArrayLike} alphabet - Alphabet to wrap.\n * @returns {Alphabet} Instance of Alphabet.\n * @description Class for alphabet manipulations: add, delete symbols, generate a token from an alphabet,\n * check if an alphabet contains a word.\n *\n * @example\n * new Alphabet(['a', 'b', 'c']);\n */\nexport class Alphabet {\n  constructor(alphabet = []) {\n    const a = {};\n\n    for (let i = 0, length = alphabet.length; i < length; i++) {\n      const char = alphabet[i];\n\n      if (!check(char)) {\n        throw new Error('Each element of an array must be a single char! (in Alphabet)');\n      }\n\n      a[char] = char;\n    }\n\n    /**\n     * @member {Object} Alphabet#$$\n     * @public\n     * @description The alphabet.\n     */\n    Object.defineProperty(this, '$$', { value: a });\n  }\n\n  /**\n   * @method Alphabet#add\n   * @public\n   * @param {...Char} chars - Chars to add.\n   * @returns {Alphabet} Returns this.\n   * @description Method for adding new letters to the alphabet.\n   *\n   * @example\n   * const alphabet = new Alphabet(['a', 'b', 'c']);\n   *\n   * alphabet.add('d', 'e');\n   *\n   * alphabet.get().$; // ['a', 'b', 'c', 'd', 'e']\n   */\n  add(...chars) {\n    for (let i = 0, length = chars.length; i < length; i++) {\n      const char = chars[i];\n\n      if (!check(char)) {\n        throw new Error('Each argument must be a single char! (in Alphabet#add)');\n      }\n\n      this.$$[char] = char;\n    }\n\n    return this;\n  }\n\n  /**\n   * @method Alphabet#contains\n   * @public\n   * @param {String} word - Word to check if it is in the alphabet or not.\n   * @returns {Boolean} If the word in the alphabet or not.\n   * @description Method that returns if a word is in alphabet or not.\n   *\n   * @example\n   * const alphabet = new Alphabet(['f', 'b', 'o', 'a', 'r']);\n   *\n   * alphabet.contains('foo'); // true\n   * alphabet.contains('bar'); // true\n   * alphabet.contains('baz'); // false\n   */\n  contains(word) {\n    validate([word], ['string'], 'Alphabet#contains');\n\n    const alphabet = this.$$;\n\n    for (let i = 0, length = word.length; i < length; i++) {\n      if (!alphabet[word[i]]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * @method Alphabet#delete\n   * @public\n   * @param {...Char} chars - Chars to delete.\n   * @returns {Alphabet} Returns this.\n   * @description Method for deleting letters from the alphabet.\n   *\n   * @example\n   * const alphabet = new Alphabet(['a', 'b', 'c', 'd']);\n   *\n   * alphabet.delete('a');\n   *\n   * alphabet.get().$; // ['b', 'c', 'd']\n   *\n   * alphabet.delete('b', 'd');\n   *\n   * alphabet.get().$; // ['c']\n   */\n  delete(...chars) {\n    for (let i = 0, length = chars.length; i < length; i++) {\n      const char = chars[i];\n\n      if (!check(char)) {\n        throw new Error('Each argument must be a single char! (in Alphabet#delete)');\n      }\n\n      delete this.$$[char];\n    }\n\n    return this;\n  }\n\n  /**\n   * @method Alphabet#get\n   * @returns {Array} Wrap of an array of alphabet letters.\n   * @description Method for getting array of alphabet letters.\n   *\n   * @example\n   * new Alphabet(['a', 'b', 'c']).get().$; // ['a', 'b', 'c']\n   */\n  get() {\n    return Object.keys(this.$$);\n  }\n\n  /**\n   * @method Alphabet#token\n   * @public\n   * @param {Number} length - Token length.\n   * @returns {String} Token.\n   * @description Method for generating random token with given length.\n   *\n   * @example\n   * new Alphabet(['a', 'b', 'c']).token(4); // 'abcb'\n   */\n  token(length) {\n    validate([length], [['intLike', '>0']], 'Alphabet#token');\n\n    const alphabet = Object.keys(this.$$);\n    const len = alphabet.length;\n    let token = '';\n\n    for (let i = 0; i < length; i++) {\n      token += alphabet[Math.floor(Math.random() * len)];\n    }\n\n    return token;\n  }\n}\n\ndefineProperties(Alphabet.prototype, {\n  [Symbol.toStringTag]: 'Alphabet'\n});\n\nfunction check(char) {\n  return isString(char) && char.length === 1;\n}\n\n/**\n * @function alphabet\n * @public\n * @param {String} string - String to generate an alphabet from.\n * @returns {Alphabet} New instance of Alphabet.\n * @description Function for creating an alphabet from a string that has format like this:\n * '&lt;char1&gt;-&lt;char2&gt; &lt;char3&gt;-&lt;char4&gt;'\n *\n * @example\n * const a1 = alphabet('a-c 1-3');\n * const a2 = alphabet('5-5f-g');\n *\n * a1.get().$; // ['1', '2', '3', 'a', 'b', 'c']\n * a2.get().$; // ['5', 'f', 'g']\n */\nexport function alphabet(string) {\n  validate([string], ['string']);\n\n  const ranges = string.split(/([\\s\\S]\\-+[\\s\\S])?/g);\n  const length = ranges.length;\n  const alphabet = [];\n\n  for (let i = 0; i < length; i++) {\n    const range = ranges[i];\n\n    if (!range || range === ' ') {\n      continue;\n    }\n\n    if (/\\-/.test(range) && !/[\\s\\S]\\-+[\\s\\S]/.test(range)) {\n      throw new Error(`Wrong part of the string (${ range })! (in alphabet)`);\n    }\n\n    if (/\\-/.test(range)) {\n      const start = range.charCodeAt(0);\n      const end = range.charCodeAt(2);\n\n      if (start > end) {\n        throw new Error('Start of the range must be before its end! (in alphabet)');\n      }\n\n      for (let k = 0, len = end - start + 1; k < len; k++) {\n        alphabet.push(String.fromCharCode(start + k));\n      }\n\n      continue;\n    }\n\n    if (range.length === 1) {\n      alphabet.push(range);\n    }\n  }\n\n  return new Alphabet(alphabet);\n}\n\nexport default Alphabet;\n","/**\n * @module Switcher\n * @private\n * @mixin\n * @description Exports Switcher class.\n */\n\nimport {\n  isArray, isFunction, isString, isUndefined,\n  iterate, Symbol, toArray, defineProperties\n} from './helpers';\n\n/**\n * @typedef {'boolean'|'equals'|'strictEquals'|'call'} SwitcherMode\n * @public\n * @description Enum type of switcher modes.\n */\n\n/**\n * @callback SwitcherCallCallback\n * @public\n * @param {*} value - Switcher value.\n * @returns {Boolean|*} On what the callback returns depends if the case is a match (truthy for the match).\n */\n\n/**\n * @callback SwitcherMatchCallback\n * @public\n * @param {...*} args - Arguments from the second argument that switcher was called with.\n * @param {*} value - Switcher value.\n * @param {*} matched - Switcher matched case.\n */\n\n/**\n * @class Switcher\n * @public\n * @param {Object} [cases = {}] - Object of cases.\n * @param {SwitcherMode} [mode = 'equals'] - Switcher mode.\n * @param {*} [defaultValue] - Switcher default value.\n * @returns {Switcher} - Instance of Switcher.\n * @description Switcher class for creating functions working similar to switch (value) {} construction,\n * but with the value assignment. Switcher instance is a function that accepts a value argument and an optional\n * args argument. Args with additional switcher value and matched case\n * are passed into the function of the matched case (if it is a function).\n *\n * @example\n * const switcher = new Switcher();\n * const switcher = new Switcher({\n *   case1: 'value1',\n *   case2: 'value2'\n * });\n * const switcher = new Switcher('strictEquals');\n * const switcher = new Switcher({\n *   case1: 'value1',\n *   case2: 'value2'\n * }, 'strictEquals');\n * const switcher = new Switcher('strictEquals', 'defaultValue');\n * const switcher = new Switcher({\n *   case1: 'value1',\n *   case2: 'value2'\n * }, 'strictEquals', 'defaultValue');\n *\n * // See [switcher]{@link switcher} examples for more information.\n */\nexport class Switcher extends Function {\n  constructor(cases = {}, mode = 'equals', defaultValue) {\n    super();\n\n    if (isString(cases)) {\n      if (!isUndefined(arguments[1])) {\n        defaultValue = mode;\n      }\n\n      mode = cases;\n      cases = {};\n    }\n\n    const eventualCases = [];\n\n    iterate(cases, (value, Case) => {\n      eventualCases.push({ case: Case, value });\n    });\n\n    function switcher(value, args = []) {\n      const { mode, default: def, cases } = switcher.$$;\n\n      let ret = iterate(cases, ({ value: val, case: Case }) => {\n        if (\n          (mode === 'boolean' && Case) ||\n          /* eslint eqeqeq: 0 */\n          (mode === 'equals' && Case == value) ||\n          (mode === 'strictEquals' && Case === value) ||\n          (mode === 'call' && Case(value))\n        ) {\n          return { case: Case, value: val };\n        }\n      });\n\n      if (isUndefined(ret)) {\n        ret = { value: def };\n      }\n\n      if (!isFunction(ret.value)) {\n        return ret.value;\n      }\n\n      args = toArray(args, true);\n      args.push(value, ret.case);\n\n      return ret.value.apply(null, args);\n    }\n\n    /**\n     * @member Switcher#$$\n     * @type {Object}\n     * @protected\n     * @property {Array} cases - Array of cases.\n     * @property {SwitcherMode} mode - Switcher mode.\n     * @property {*} default - Switcher default value.\n     * @description Config parameters.\n     */\n    Object.defineProperty(switcher, '$$', {\n      value: {\n        cases: eventualCases,\n        mode,\n        default: defaultValue\n      }\n    });\n    Object.setPrototypeOf(switcher, Switcher.prototype);\n\n    return switcher;\n  }\n\n  /**\n   * @method Switcher#case\n   * @public\n   * @param {*|SwitcherCallCallback|Array.<*|SwitcherCallCallback>} cases - Case or an array of cases.\n   * @param {*|SwitcherMatchCallback} value - Value that has to be assigned or a function\n   * that is called with switcher value, if it's the case.\n   * @returns {Switcher} Returns this.\n   * @description Method for defining new cases.\n   *\n   * @example\n   * const sw = new Switcher()\n   *   .case(1, 'one')\n   *   .case(2, 'two');\n   *\n   * sw(1); // 'one'\n   * sw(2); // 'two'\n   */\n  case(cases, value) {\n    if (!isArray(cases)) {\n      cases = [cases];\n    }\n\n    iterate(cases, (Case) => {\n      this.$$.cases.push({ case: Case, value });\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Switcher#default\n   * @public\n   * @param {*} def - New default value.\n   * @returns {Switcher} Returns this.\n   * @description Method for redefining default switcher value.\n   *\n   * @example\n   * const sw = new Switcher()\n   *   .case(1, 'one')\n   *   .default('three');\n   *\n   * sw(1); // 'one'\n   * sw(2); // 'three'\n   */\n  default(def) {\n    this.$$.default = def;\n\n    return this;\n  }\n\n  /**\n   * @method Switcher#mode\n   * @public\n   * @param {SwitcherMode} mode - New switcher mode.\n   * @returns {Switcher} Returns this.\n   * @description Method for redefining switcher mode.\n   *\n   * @example\n   * const sw = new Switcher()\n   *   .mode('strictEquals')\n   *   .case(1, 'number')\n   *   .case('1', 'string');\n   *\n   * sw(1);   // 'number'\n   * sw('1'); // 'string'\n   */\n  mode(mode) {\n    this.$$.mode = mode;\n\n    return this;\n  }\n}\n\ndefineProperties(Switcher.prototype, {\n  [Symbol.toStringTag]: 'Switcher'\n});\n\n/**\n * @function switcher\n * @public\n * @param {Object} [cases = {}] - Object of cases.\n * @param {SwitcherMode} [mode = 'equals'] - Switcher mode.\n * @param {*} [defaultValue] - Switcher default value.\n * @returns {Switcher} New instance of Switcher.\n * @description Simple wrap of [new Switcher(...)]{@link Switcher}.\n * \n * @example\n * const sw = switcher({\n *   1: 'foo',\n *   2: 'bar'\n * });\n * sw(1); // 'foo'\n * sw(2); // 'bar'\n * sw(3); // undefined\n * \n * @example\n * const sw = switcher()\n *   .case([1, 2], 'foo')\n *   .case(3, 'bar');\n *   \n * sw(1); // 'foo'\n * sw(2); // 'foo'\n * sw(3); // 'bar'\n * \n * @example\n * const sw = switcher('call')\n *   .case(isArray, 'array')\n *   .case(isString, 'string')\n *   .case(isNumber, 'number')\n *   .default('rest');\n *   \n * sw([]);    // 'array'\n * sw('foo'); // 'string'\n * sw(123);   // 'number'\n * sw({});    // 'rest'\n * \n * @example\n * const sw = switcher({\n *   1: (value) => {\n *     console.log(value + 1);\n *   },\n *   2: () => {\n *     console.log(value - 1);\n *   }\n * });\n * \n * sw(1); // 2\n * sw(2); // 1\n * \n * @example\n * const sw = switcher({\n *   first: (array) => array[0],\n *   last: (array) => array[array.length - 1]\n * }, 'equals', (array, index) => array[index]);\n * const array = [1, 2, 3, 4];\n * \n * sw('first', [array]); // 1\n * sw('last', [array]);  // 4\n * sw(1, [array]);       // 2\n * sw(2, [array]);       // 3\n */\nexport function switcher(cases, mode, defaultValue) {\n  return new Switcher(...arguments);\n}\n\n/**\n * @function when\n * @public\n * @param {Boolean|*} condition - Condition used for returning the proper value.\n * @param {*} value1 - Value if the condition is truthy.\n * @param {*} value2 - Value if the condition is falsey.\n * @returns {*} value1 or value2.\n * @description Synonym for\n * [ternary operator]{@link https://developer.mozilla.org/nl/docs/Web/JavaScript/Reference/Operators/Conditional_Operator}.\n * \n * @example\n * when(true, 'true', 'false'); // 'true'\n */\nexport function when(condition, value1, value2) {\n  return condition ? value1 : value2;\n}\n\nexport default Switcher;\n","/**\n * @module Super\n * @private\n * @mixin\n * @description Exports Super class.\n */\n\nimport D from './D';\nimport { switcher } from './Switcher';\nimport constructors from './constants/constructors';\nimport {\n  isArray, isArrayLike, isDate, isElement, isFunction, isNaN, isNull, isNullOrUndefined,\n  isObject, isPlainObject, isPrimitive, isRegExp, isString, isUndefined,\n  validate, toStringTag, iterate, Symbol, defineProperties\n} from './helpers';\n\n/**\n * @typedef {Super|Arr|Func|Elem|Str|Num|Dat|BlobObject} DWrap\n * @public\n * @description Any kind of D-Wrap.\n */\n\n/**\n * @typedef {String|Number|null} Key\n * @public\n * @description Key type used in many methods.\n */\n\n/**\n * @typedef {TreeElement[]} Tree\n * @public\n */\n\n/**\n * @typedef {Object} TreeElement\n * @public\n * @property {Key} key - Tree element key.\n * @property {*} value - Tree element value.\n * @description {@link Tree} element.\n */\n\n/**\n * @callback DeepIterationCallback\n * @public\n * @param {*} value - Current iteration value.\n * @param {String|Number} key - Current iteration key/index.\n * @param {*} object - Iteration object.\n * @param {Tree} tree - Tree of { key, value } elements.\n */\n\n/**\n * @callback DeepReduceCallback\n * @public\n * @param {*} previousValue - Previous value.\n * @param {*} value - Current iteration value.\n * @param {String|Number} key - Current iteration key/index.\n * @param {*} object - Iteration object.\n * @param {Tree} tree - Tree of { key, value } elements.\n */\n\n/**\n * @callback IterationCallback\n * @public\n * @param {*} value - Current iteration value.\n * @param {String|Number} key - Current iteration key/index.\n * @param {*} object - Iteration object.\n */\n\n/**\n * @callback JSONCallback\n * @public\n * @param {String|null} key - Current value.\n * @param {*} value - Current key.\n * @param {Object} object - Iteration object.\n */\n\n/**\n * @callback ObjectCallback\n * @public\n * @param {Object} newObject - The new object.\n * @param {*} value - Current iteration value.\n * @param {String|Number} key - Current iteration key/index.\n * @param {*} object - Iteration object.\n */\n\n/**\n * @callback ReduceCallback\n * @public\n * @param {*} previousValue - Previous value.\n * @param {*} value - Current iteration value.\n * @param {String|Number} key - Current iteration key/index.\n * @param {*} object - Iteration object.\n */\n\n/**\n * @callback SuperMethod\n * @public\n * @this {DWrap}\n */\n\nconst cloneSwitcher = switcher('call', (object) => object)\n  .case(\n    (object) => new Super(object) === object,\n    (object) => new (object.proto().$.constructor)(object)\n  )\n  .case(isElement, (object, deep) => object.clone(deep))\n  .case(isDate, (object) => new Date(object))\n  .case(isRegExp, (object) => new RegExp(object.source, object.toString().match(/[gimuy]*$/)[0]))\n  .case(isArray, () => [])\n  .case(isPlainObject, () => ({}));\n\n/**\n * @class Super\n * @public\n * @param {*} [object] - An object to wrap.\n * @returns {DWrap} Instance of Super.\n * @description Wrap of any value. And there is no way to create a nested wrap.\n *\n * @example\n * new Super({}); // Super\n */\nexport class Super {\n  constructor(object) {\n    if (object instanceof Super) {\n      return object;\n    }\n\n    /**\n     * @member Super#$\n     * @type {*}\n     * @public\n     * @description Wrapped object.\n     */\n    Object.defineProperty(this, '$', { value: object });\n  }\n\n  /**\n   * @method Super.addStaticProperties\n   * @public\n   * @param {String|Object} property - Either a string of a property or an object\n   * with properties keys and values values.\n   * @param {Object} [value] - If a property parameter is a string this has to be a property value.\n   * @returns {this} Returns this.\n   * @description Sets static properties for DWrap constructors.\n   *\n   * @example\n   * Super.addStaticProperties('cool', 42);\n   * Super.addStaticProperties('superCool', 42*42);\n   */\n  static addStaticProperties(property, value) {\n    if (arguments.length >= 2) {\n      property = { [property]: value };\n    }\n\n    defineProperties(this, property);\n\n    return this;\n  }\n\n  /**\n   * @method Super.addInstanceProperties\n   * @public\n   * @param {String|Object} property - Either a string of a property or an object\n   * with properties keys and values values.\n   * @param {Object} [value] - If a property parameter is a string this has to be a property value.\n   * @returns {this} Returns this.\n   * @description Sets static properties for DWrap prototypes.\n   *\n   * @example\n   * Super.addInstanceProperties('cool', 42);\n   * Super.addInstanceProperties('superCool', 42*42);\n   */\n  static addInstanceProperties(property, value) {\n    if (arguments.length >= 2) {\n      property = { [property]: value };\n    }\n\n    defineProperties(this.prototype, property);\n\n    return this;\n  }\n\n  /**\n   * @method Super#assign\n   * @public\n   * @param {...(Object|Super|*)} objects - Objects to be assigned to the object.\n   * @returns {DWrap} Returns this.\n   * @description Synonym for\n   * [Object.assign]\n   * {@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign}.\n   *\n   * @example\n   * new Super({ a: 1, b: 2 }).assign({ a: 3 }, { c: 3, d: 4 }, { d: 5 }).$; // { a: 3, b: 2, c: 3, d: 5 }\n   */\n  assign(...objects) {\n    const object = this.$;\n\n    iterate(object && arguments, (o) => {\n      iterate(new Super(o).$, (value, key) => {\n        object[key] = value;\n      });\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Super#average\n   * @public\n   * @param {IterationCallback} [callback = null] - Callback that is passed to {@link Super#sum}.\n   * @returns {Number} Average value.\n   * @description Synonym for object.sum(callback) / object.count.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).average();                         // 2\n   * new Super({ a: 1, b: 2, c: 5 }).average((value) => value * value); // 10\n   */\n  average(callback = null) {\n    validate([callback], ['function||!'], 'Super#average');\n\n    return this.sum(callback) / this.count;\n  }\n\n  /**\n   * @method Super#call\n   * @public\n   * @param {SuperMethod} func - Function to be called with this context.\n   * @param {...*} args - Arguments to be called with.\n   * @returns {*} Return of function call.\n   * @description Synonym for func.call(DObject, ...args);\n   *\n   * @example\n   * new Super({ a: 1 }).call(function (b, c) {\n   *   return this.a + b + c;\n   * }, 2, 3); // 6\n   */\n  call(func, ...args) {\n    validate([func], ['function'], 'Super#call');\n\n    return func.apply(this, args);\n  }\n\n  /**\n   * @method Super#clone\n   * @returns {DWrap} New object.\n   * @description Method assigns properties of the object to an empty one and returns the new one.\n   *\n   * @example\n   * new Super({ a: 1, b: { c: 2 } }).clone().$; // { a: 1, b: { c: 2 } }\n   */\n  clone() {\n    const object = this.$;\n    const clone = cloneSwitcher(object, [object, false]);\n\n    if (clone !== object) {\n      iterate(object, (value, key) => {\n        clone[key] = value;\n      });\n    }\n\n    return new this.constructor(clone);\n  }\n\n  /**\n   * @member Super#count\n   * @type {Number}\n   * @public\n   * @readonly\n   * @description Returns number of own enumerable keys of the object.\n   *\n   * @example\n   * new Super({ a: 1, b: 2 }).count; // 2\n   */\n  get count() {\n    const object = this.$;\n\n    if (!isObject(object)) {\n      return 0;\n    }\n\n    return isArrayLike(object) ? object.length : Object.keys(object).length;\n  }\n\n  /**\n   * @method Super#create\n   * @public\n   * @param {Object} [descriptors] - Descriptors passed to Object.create.\n   * @returns {DWrap} New instance of D-Wrap.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n   * @description Synonym for\n   * [Object.create]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/create}.\n   *\n   * @example\n   * new Super({}).create({\n   *   a: {\n   *     value: 1,\n   *     enumerable: false,\n   *     writable: true,\n   *     configurable: false\n   *   }\n   * }).$; // { a: 1 }\n   */\n  create(descriptors) {\n    return D(isPrimitive(this.$) ? undefined : Object.create(this.$, descriptors));\n  }\n\n  /**\n   * @method Super#deepAssign\n   * @public\n   * @param {...*} objects - Objects to be assigned to the object.\n   * @returns {DWrap} Returns this.\n   * @description Deep analogue of {@link Super#assign}.\n   *\n   * @example\n   * new Super({ a: 1 }).deepAssign(\n   *   {\n   *     b: {\n   *       c: 2\n   *     }\n   *   },\n   *   {\n   *     a: {\n   *       b: 1\n   *     }\n   *   },\n   *   {\n   *     a: {\n   *       c: {\n   *         d: 1\n   *       }\n   *     },\n   *     b: 2\n   *   },\n   *   null\n   * });\n   * // {\n   * //   a: {\n   * //     b: 1,\n   * //     c: {\n   * //       d: 1\n   * //     }\n   * //   },\n   * //   b: 2,\n   * // }\n   */\n  deepAssign(...objects) {\n    const object = this.$;\n\n    if (isPrimitive(object)) {\n      return this;\n    }\n\n    iterate(arguments, (o) => {\n      deepAssign(object, o);\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Super#deepClone\n   * @public\n   * @returns {DWrap} New instance of DWrap.\n   * @description Deep cloning method. Clones plain objects, arrays, regular expressions and elements, the rest stays the same.\n   *\n   * @example\n   * new Super({ a: 1, b: [2, 3], c: { d: 4 } }).deepClone().$;\n   * // {\n   * //   a: 1,\n   * //   b: [2, 3],\n   * //   c: { d: 4 }\n   * // }\n   */\n  deepClone() {\n    return new this.constructor(deepClone(this.$));\n  }\n\n  /**\n   * @method Super#deepEquals\n   * @public\n   * @param {*} [object] - Object to compare to.\n   * @returns {Boolean} - If the objects are deep equal or not.\n   * @description Method for deep comparison of two objects.\n   *\n   * @example\n   * new Super({ a: 1 }).deepEquals({ a: '1' }); // true\n   * new Super(/1/).deepEquals(/1/);             // true\n   */\n  deepEquals(object = null) {\n    return deepEqual(this.$, object, false);\n  }\n\n  /**\n   * @method Super#deepEvery\n   * @public\n   * @param {DeepIterationCallback} [callback = Boolean] - Called on each iteration.\n   * If returns truthy iteration goes on and if falsey it stops.\n   * @param {Number} [n = Infinity] - Iteration depth.\n   * @returns {Boolean} If all the callback calls returned truthy value.\n   * @description Returns boolean if all the callback calls returned truthy value.\n   * Otherwise false. Deep analogue of {@link Super#every}.\n   *\n   * @example\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepEvery((value) => value < 4); // true\n   * new Super({ a: {}, b: {}, c: {} }).deepEvery(() => false);              // true\n   */\n  deepEvery(callback, n) {\n    if (arguments.length === 1 && !isFunction(callback)) {\n      n = callback;\n      callback = Boolean;\n    } else if (arguments.length === 1) {\n      n = Infinity;\n    } else if (!arguments.length) {\n      n = Infinity;\n      callback = Boolean;\n    }\n\n    validate([callback, n], ['function', ['numberLike', '>0']], 'Super#deepEvery');\n\n    n = Number(n);\n\n    return deepEvery(this.$, callback, n, [{ key: null, value: this.$ }]);\n  }\n\n  /**\n   * @method Super#deepFilter\n   * @public\n   * @param {DeepIterationCallback} [callback = Boolean] - Called on each iteration.\n   * If returns truthy the element is included and if falsey it's excluded.\n   * @param {Number} [n = Infinity] - Iteration depth.\n   * @returns {DWrap} New D-Wrap of filtered object.\n   * @description Returns filtered by the callback object. Deep analogue of {@link Super#filter}.\n   *\n   * @example\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepFilter((value) => value%2).$;     // { a: 1, b: { d: 3 } }\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepFilter((value) => value === 1).$; // { a: 1 }\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepFilter((value) => value > 3).$;   // {}\n   */\n  deepFilter(callback, n) {\n    if (arguments.length === 1 && !isFunction(callback)) {\n      n = callback;\n      callback = Boolean;\n    } else if (arguments.length === 1) {\n      n = Infinity;\n    } else if (!arguments.length) {\n      n = Infinity;\n      callback = Boolean;\n    }\n\n    validate([callback, n], ['function', ['numberLike', '>0']], 'Super#deepFilter');\n\n    const filtered = deepFilter(this.$, callback, n, [{ key: null, value: this.$ }]);\n\n    return D(isNullOrUndefined(filtered) ? filtered : filtered || {});\n  }\n\n  /**\n   * @method Super#deepFind\n   * @public\n   * @param {DeepIterationCallback} [callback = Boolean] - Called on each iteration.\n   * If returns truthy iteration stops and if falsey it continues.\n   * @param {Number} [n = Infinity] - Iteration depth.\n   * @returns {Tree|null} Tree of { key, value } if something found and null if not.\n   * @description Returns tree of the elements if something found and null if nothing found.\n   * Deep analogue of {@link Super#find}.\n   *\n   * @example\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepFind((value) => value === 2);\n   * // [\n   * //   { key: 'c', value: 2 },\n   * //   { key: 'b', value: { c: 2, d: 3 } },\n   * //   { key: null, value: <initial object> }\n   * // ]\n   */\n  deepFind(callback, n) {\n    if (arguments.length === 1 && !isFunction(callback)) {\n      n = callback;\n      callback = Boolean;\n    } else if (arguments.length === 1) {\n      n = Infinity;\n    } else if (!arguments.length) {\n      n = Infinity;\n      callback = Boolean;\n    }\n\n    validate([callback, n], ['function', ['numberLike', '>0']], 'Super#deepFind');\n\n    return deepFind(this.$, callback, n, [{ key: null, value: this.$ }]);\n  }\n\n  /**\n   * @method Super#deepForEach\n   * @public\n   * @param {DeepIterationCallback} callback - Called on each iteration.\n   * @param {Number} [n = Infinity] - Iteration depth.\n   * @returns {DWrap} Returns this.\n   * @description Method for iterating over any object. Deep analogue of {@link Super#forEach}.\n   *\n   * @example\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepForEach((value, key, object) => object[key] = value * value).$;\n   * // { a: 1, b: { c: 4, d: 9 } }\n   */\n  deepForEach(callback, n = Infinity) {\n    validate([callback, n], ['function', ['numberLike', '>0']], 'Super#deepForEach');\n\n    n = Number(n);\n\n    deepForEach(this.$, callback, n, [{ key: null, value: this.$ }]);\n\n    return this;\n  }\n\n  /**\n   * @method Super#deepFreeze\n   * @public\n   * @returns {DWrap} Returns this.\n   * @description Deep analogue of {@link Super#freeze}.\n   *\n   * @example\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepFreeze(); // Super\n   */\n  deepFreeze() {\n    deepFreeze(this.$);\n\n    return this;\n  }\n\n  /**\n   * @method Super#deepMap\n   * @public\n   * @param {DeepIterationCallback} callback - Called on each iteration.\n   * Return value is used for creating a new object.\n   * @param {Number} [n = Infinity] - Iteration depth.\n   * @returns {DWrap} D-Wrap of the new object.\n   * @description Returns a wrap of a new object using the callback. Deep analogue of {@link Super#map}.\n   *\n   * @example\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepMap((value) => value * value).$;\n   * // { a: 1, b: { c: 4, d: 9 } }\n   */\n  deepMap(callback, n = Infinity) {\n    validate([callback, n], ['function', ['numberLike', '>0']], 'Super#deepMap');\n\n    n = Number(n);\n\n    return D(deepMap(this.$, callback, n, [{ key: null, value: this.$ }]));\n  }\n\n  /**\n   * @method Super#deepReduce\n   * @public\n   * @param {DeepReduceCallback} callback - Called on each iteration.\n   * Return value is passed to the next callback call.\n   * @param {Number} [n = Infinity] - Iteration depth.\n   * @param {*} [IV = <first value>|undefined] - Initial value.\n   * @returns {*} Modified IV.\n   * @description Returns modified IV. Deep analogue of {@link Super#reduce}.\n   *\n   * @example\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepReduce((sum, value) => sum + value * value, Infinity, 0); // 14\n   */\n  deepReduce(callback, n = Infinity, IV) {\n    validate([callback, n], ['function', ['numberLike', '>0']], 'Super#deepReduce');\n\n    n = Number(n);\n\n    const object = this.$;\n    const tree = [{ key: null, value: this.$ }];\n\n    if (arguments.length < 3) {\n      return deepReduce(object, callback, n, false, undefined, tree).IV;\n    }\n\n    return deepReduce(object, callback, n, false, { IV }, tree).IV;\n  }\n\n  /**\n   * @method Super#deepSome\n   * @public\n   * @param {DeepIterationCallback} [callback = Boolean] - Called on each iteration.\n   * If returns truthy iteration stops and if falsey it continues.\n   * @param {Number} [n = Infinity] - Iteration depth.\n   * @returns {Boolean} If all the callback calls returned truthy value.\n   * @description Returns true if some of the callback calls returned truthy value.\n   * Otherwise false. Deep analogue of {@link Super#some}.\n   *\n   * @example\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepSome((value) => value > 4); // false\n   * new Super({ a: {}, b: {}, c: {} }).deepSome(() => true);               // false\n   */\n  deepSome(callback, n) {\n    if (arguments.length === 1 && !isFunction(callback)) {\n      n = callback;\n      callback = Boolean;\n    } else if (arguments.length === 1) {\n      n = Infinity;\n    } else if (!arguments.length) {\n      n = Infinity;\n      callback = Boolean;\n    }\n\n    validate([callback, n], ['function', ['numberLike', '>0']], 'Super#deepSome');\n\n    n = Number(n);\n\n    return deepSome(this.$, callback, n, [{ key: null, value: this.$ }]);\n  }\n\n  /**\n   * @method Super#deepStrictEquals\n   * @public\n   * @param {*} [object] - Object to compare to.\n   * @returns {Boolean} - If the objects are deep strict equal or not.\n   * @description Method for deep strict comparison of two objects.\n   *\n   * @example\n   * new Super({ a: 1 }).deepStrictEquals({ a: '1' }); // false\n   * new Super(/1/).deepStrictEquals(/1/);             // true\n   */\n  deepStrictEquals(object = null) {\n    return deepEqual(this.$, object, true);\n  }\n\n  /**\n   * @method Super#define\n   * @param {String|Object} property - Either a string of a property or a descriptors object.\n   * @param {Object} [descriptor] - If a property parameter is a string this has to be a property descriptor.\n   * @returns {DWrap} Returns this.\n   * @description Synonym for both\n   * [Object.defineProperty]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty}\n   * and\n   * [Object.defineProperties]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties}.\n   *\n   * @example\n   * new Super({}).define('a', {\n   *   value: 1,\n   *   enumerable: false,\n   *   writable: true,\n   *   configurable: false\n   * }).$; // { a: 1 }\n   * new Super({}).define({\n   *   a: {\n   *     value: 1,\n   *     enumerable: false,\n   *     writable: true,\n   *     configurable: false\n   *   }\n   * }).$; // { a: 1 }\n   */\n  define(property, descriptor) {\n    if (arguments.length >= 2) {\n      property = { [property]: descriptor };\n    }\n\n    property = new Super(property).$;\n\n    if (isObject(this.$)) {\n      Object.defineProperties(this.$, property);\n    }\n\n    return this;\n  }\n\n  /**\n   * @method Super#delete\n   * @public\n   * @param {...String} props - List of properties to delete.\n   * @returns {DWrap} Returns this.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/delete\n   * @description Synonym for multiple\n   * [\"delete\" operator]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/delete}.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).delete('c', 'a').$; // { b: 2 }\n   */\n  delete(...props) {\n    const object = this.$;\n\n    iterate(object && props, (property) => {\n      delete object[property];\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Super#equals\n   * @public\n   * @param {*} [object] - Object to compare.\n   * @returns {Boolean} If the objects are equal or not.\n   * @description Returns true if objects are equal using '==' operator and false if not. NaNs are considered to be equal.\n   *\n   * @example\n   * new Super(3).equals('3');   // true\n   * new Super(NaN).equals(NaN); // true\n   */\n  equals(object) {\n    const o = this.$;\n\n    object = new Super(object).$;\n\n    /* eslint eqeqeq: 0 */\n    return o == object || (isNaN(o) && isNaN(object));\n  }\n\n  /**\n   * @method Super#every\n   * @public\n   * @param {IterationCallback} [callback = Boolean] - Called on each iteration.\n   * If returns truthy iteration goes on and if falsey it stops.\n   * @returns {Boolean} If all the callback calls returned truthy value.\n   * @description Returns boolean if all the callback calls returned truthy value.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).every((value) => value < 4); // true\n   * new Super({}).every(() => false);                            // true\n   */\n  every(callback = Boolean) {\n    validate([callback], ['function'], 'Super#every');\n\n    return iterate(this.$, (value, key, object) => {\n      if (!callback(value, key, object)) {\n        return false;\n      }\n    }) !== false;\n  }\n\n  /**\n   * @method Super#filter\n   * @public\n   * @param {IterationCallback} [callback = Boolean] - Called on each iteration.\n   * If returns truthy the element is included and if falsey it's excluded.\n   * @returns {DWrap} New D-Wrap of filtered object.\n   * @description Returns filtered by the callback object.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).filter((value) => value%2).$; // { a: 1, c: 3 }\n   * new Super(null).filter((value) => value%2).$;                 // null\n   */\n  filter(callback = Boolean) {\n    validate([callback], ['function'], 'Super#filter');\n\n    const object = this.$;\n    const array = isArrayLike(object);\n\n    /* eslint no-nested-ternary: 0 */\n    const o = array ? [] : isNullOrUndefined(object) ? object : {};\n\n    iterate(object, (value, key) => {\n      if (callback(value, key, object)) {\n        if (array) {\n          o.push(value);\n        } else {\n          o[key] = value;\n        }\n      }\n    });\n\n    return D(o);\n  }\n\n  /**\n   * @method Super#find\n   * @public\n   * @param {IterationCallback} [callback = Boolean] - Called on each iteration.\n   * If returns truthy iteration stops and if falsey it continues.\n   * @returns {{ key: Key, value: * }|null} { key, value } if found and null if not.\n   * @description Returns found { key, value } if something found and null if nothing found.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).find((value) => value === 2); // { key: 'b', value: 2 }\n   * new Super([1, 2, 3]).find((value) => value === 2);            // { key: 1, value: 2 }\n   */\n  find(callback) {\n    validate([callback], ['function'], 'Super#find');\n\n    return iterate(this.$, (value, key, object) => {\n      if (callback(value, key, object)) {\n        return { key, value };\n      }\n    }) || null;\n  }\n\n  /**\n   * @method Super#forEach\n   * @public\n   * @param {IterationCallback} callback - Called on each iteration.\n   * @returns {DWrap} Returns this.\n   * @description Method for iterating over any object.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).forEach((value, key, object) => {\n   *   object[key] = value * value;\n   * }).$; // { a: 1, b: { c: 4, d: 5 } }\n   */\n  forEach(callback) {\n    validate([callback], ['function'], 'Super#forEach');\n\n    iterate(this.$, (value, key, object) => {\n      callback(value, key, object);\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Super#freeze\n   * @public\n   * @returns {DWrap} Returns this.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n   * @description Synonym for\n   * [Object.freeze]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze}.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).freeze(); // Super\n   */\n  freeze() {\n    Object.freeze(this.$);\n\n    return this;\n  }\n\n  /**\n   * @method Super#get\n   * @public\n   * @param {String|Object.<String, Function>} property - Either a string of a property or a getters object.\n   * @param {Function} [getter] - If a property parameter is a string this has to be a getter function.\n   * @returns {DWrap} Returns this.\n   * @description Method for defining getters.\n   *\n   * @example\n   * const object1 = new Super({}).get('a', () => 1).$;\n   * object1.a; // 1\n   *\n   * const object2 = new Super({}).get({\n   *   a: () => 2\n   * }).$;\n   * object2.a; // 2\n   */\n  get(property, getter) {\n    if (arguments.length >= 2) {\n      property = { [property]: getter };\n    }\n\n    const object = this.$;\n\n    iterate(isObject(object) && new Super(property).$, (getter, property) => {\n      Object.defineProperty(object, property, { get: getter });\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Super#has\n   * @public\n   * @param {String|*} key - Property to check.\n   * @returns {Boolean} Returns true if the object has the key and false if not.\n   * @see https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/in\n   * @description Synonym for\n   * [\"in\" operator]{@link https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/in}.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).has('b'); // true\n   */\n  has(key) {\n    const object = this.$;\n\n    if (!isObject(object)) {\n      return false;\n    }\n\n    return key in object;\n  }\n\n  /**\n   * @method Super#hasOwn\n   * @public\n   * @param {String|*} key - Property to check.\n   * @returns {Boolean} Returns true if the object has its own key and false if not.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\n   * @description Synonym for\n   * [Object#hasOwnProperty]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty}.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).hasOwn('b');              // true\n   * new Super({ a: 1, b: 2, c: 3 }).hasOwn('hasOwnProperty'); // false\n   */\n  hasOwn(key) {\n    const object = this.$;\n\n    if (!isObject(object)) {\n      return false;\n    }\n\n    return {}.hasOwnProperty.call(object, key);\n  }\n\n  /**\n   * @method Super#instanceof\n   * @public\n   * @param {Function} constructor - Constructor to check.\n   * @returns {Boolean} If the object is an instance of constructor.\n   * @see https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/instanceof\n   * @description Synonym for\n   * [\"instanceof\" operator]{@link https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/instanceof}.\n   */\n  instanceof(constructor) {\n    return this.$ instanceof constructor;\n  }\n\n  /**\n   * @method Super#isFrozen\n   * @public\n   * @returns {Boolean} If the object is frozen.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\n   * @description Synonym for\n   * [Object.isFrozen]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen}.\n   *\n   * @example\n   * new Super({}).freeze().isFrozen(); // true\n   */\n  isFrozen() {\n    return Object.isFrozen(this.$);\n  }\n\n  /**\n   * @method Super#json\n   * @public\n   * @param {JSONCallback|String[]} [replacer] - See the link.\n   * @param {String|Number} [space] - See the link.\n   * @returns {String} JSON string.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\n   * @description Synonym for\n   * [JSON.stringify]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify}.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).json(); // '{\"a\":1,\"b\":2,\"c\":3}'\n   * new Super({ a: 1, b: 2, c: 3 }).json('    ');\n   * // {\n   * //     \"a\": 1,\n   * //     \"b\": 2,\n   * //     \"c\": 3\n   * // }\n   * new Super({ a: 1, b: 2, c: 3 }).json((key, value) => {\n   *   if (typeof value === 'number') {\n   *     return value%2 ? key + value0 : undefined;\n   *   }\n   *\n   *   return value;\n   * }, 2);\n   * // {\n   * //   \"a\": \"a1\",\n   * //   \"c\": \"c3\"\n   * // }\n   */\n  json(replacer, space) {\n    if (arguments.length === 1 && !isFunction(replacer) && !isArray(replacer)) {\n      [].unshift.call(arguments, null);\n    }\n\n    [].unshift.call(arguments, this.$);\n\n    return JSON.stringify.apply(JSON, arguments);\n  }\n\n  /**\n   * @method Super#keyOf\n   * @public\n   * @param {*} value - Value to find.\n   * @returns {String|Number|null} A key or an index if found and null if not.\n   * @description Method for finding equal to the argument value in the object. NaNs are considered to be equal.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).keyOf(2);   // 'b'\n   * new Super({ a: 1, b: 2, c: 3 }).keyOf('2'); // 'b'\n   */\n  keyOf(value) {\n    const key = iterate(this.$, (val, key) => {\n      if (val == value || (isNaN(val) && isNaN(value))) {\n        return key;\n      }\n    });\n\n    return isUndefined(key) ? null : key;\n  }\n\n  /**\n   * @method Super#keyOfStrict\n   * @public\n   * @param {*} value - Value to find.\n   * @returns {String|Number|null} A key or an index if found and null if not.\n   * @description Method for finding strict equal to the argument value in the object. NaNs are considered to be equal.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).keyOfStrict(2);   // 'b'\n   * new Super({ a: 1, b: 2, c: 3 }).keyOfStrict('2'); // 'b'\n   */\n  keyOfStrict(value) {\n    const key = iterate(this.$, (val, key) => {\n      if (val === value || (isNaN(val) && isNaN(value))) {\n        return key;\n      }\n    });\n\n    return isUndefined(key) ? null : key;\n  }\n\n  /**\n   * @method Super#keys\n   * @public\n   * @returns {DWrap} A wrap of the keys array.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n   * @description Synonym for\n   * [Object.keys]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/keys}.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).keys().$; // ['a', 'b', 'c']\n   * new Super(null).keys().$;                 // []\n   */\n  keys() {\n    const object = this.$;\n\n    return D(isObject(object) ? Object.keys(object) : []);\n  }\n\n  /**\n   * @method Super#map\n   * @public\n   * @param {IterationCallback} callback - Called on each iteration.\n   * Return value is used for creating a new object.\n   * @returns {DWrap} D-Wrap of the new object.\n   * @description Returns a wrap of a new object using the callback.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).map((value) => value * 2).$; // { a: 2, b: 4, c: 6 }\n   * new Super(null).map((value) => value * 2).$;                 // null\n   */\n  map(callback) {\n    validate([callback], ['function'], 'Super#map');\n\n    const object = this.$;\n    const o = isArrayLike(object) ? [] : isNull(object) ? null : {};\n\n    iterate(object, (value, key) => {\n      o[key] = callback(value, key, object);\n    });\n\n    return D(o);\n  }\n\n  /**\n   * @method Super#max\n   * @public\n   * @param {IterationCallback} callback - Called on each iteration.\n   * Return value is used for comparison with the previous max value.\n   * @returns {{key: Key, value: Number}} Object with max value and key of the max value.\n   * @description Method for finding max value in the object.\n   * If no callback is present comparison is between values of the object.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).max();                     // { key: 'c', value: 3 }\n   * new Super({ a: 1, b: 2, c: 3 }).max((value) => 4 - value); // { key: 'a', value: 3 }\n   * new Super({ a: 'a', b: 'b', c: 'c' }).max();               // { key: null, value: -Infinity }\n   */\n  max(callback = null) {\n    validate([callback], ['function||!'], 'Super#max');\n\n    return this.object((max, value, key, object) => {\n      const val = Number(callback ? callback(value, key, object) : value);\n\n      if (val > max.value) {\n        max.key = key;\n        max.value = val;\n      }\n    }, { key: null, value: -Infinity }).$;\n  }\n\n  /**\n   * @method Super#min\n   * @public\n   * @param {IterationCallback} callback - Called on each iteration.\n   * Return value is used for comparison with the previous min value.\n   * @returns {{key: Key, value: Number}} Object with min value and key of the min value.\n   * @description Method for finding min value in the object.\n   * If no callback is present comparison is between values of the object.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).min();                     // { key: 'a', value: 1 }\n   * new Super({ a: 1, b: 2, c: 3 }).min((value) => 4 - value); // { key: 'c', value: 1 }\n   * new Super({ a: 'a', b: 'b', c: 'c' }).min();               // { key: null, value: Infinity }\n   */\n  min(callback = null) {\n    validate([callback], ['function||!'], 'Super#min');\n\n    return this.object((min, value, key, object) => {\n      const val = Number(callback ? callback(value, key, object) : value);\n\n      if (val < min.value) {\n        min.key = key;\n        min.value = val;\n      }\n    }, { key: null, value: Infinity }).$;\n  }\n\n  /**\n   * @method Super#object\n   * @public\n   * @param {ObjectCallback} callback - Called on each iteration.\n   * @param {Object|*} [object = {}] - Object that is passed to the callback.\n   * @returns {DWrap} Wrap of the new object.\n   * @description Type of {@link Super#reduce}.\n   * The object is passed as an argument into the callback. The output is this object.\n   *\n   * @example\n   * new Super({ a: 1, b: 2 }).object((object, value, key) => {\n   *   object[key] = value;\n   *   object[key + key] = value * 2;\n   * }).$; // { a: 1, aa: 2, b: 2, bb: 4 }\n   */\n  object(callback, object = {}) {\n    validate([callback], ['function'], 'Super#object');\n\n    iterate(this.$, (value, key, obj) => {\n      callback(object, value, key, obj);\n    });\n\n    return D(object);\n  }\n\n  /**\n   * @method Super#prop\n   * @public\n   * @param {String|Object.<String, *>} property - Either a string of a property or an assigned object.\n   * @param {*} [value] - If a property parameter is a string\n   * this has to be an assigned value if it's present.\n   * @returns {DWrap|*} Returns this if it's a setter or a value if getter.\n   * @description Method for getting and setting properties.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).prop('a');              // 1\n   * new Super({ a: 1, b: 2, c: 3 }).prop('a', 7).$;         // { a: 7, b: 2, c: 3 }\n   * new Super({ a: 1, b: 2, c: 3 }).prop({ a: 7, b: 8 }).$; // { a: 7, b: 8, c: 3 }\n   */\n  prop(property, value) {\n    if (arguments.length <= 1 && isString(property)) {\n      return this.$ ? this.$[property] : undefined;\n    }\n\n    if (arguments.length >= 2) {\n      property = { [property]: value };\n    }\n\n    return this.assign(property);\n  }\n\n  /**\n   * @method Super#propertyDescriptor\n   * @public\n   * @param {String} property - Property of the object.\n   * @returns {Object|undefined} Property descriptor.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor\n   * @descriptor Synonym for\n   * [Object.getOwnPropertyDescriptor]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor}.\n   *\n   * @example\n   * new Super({ a: 1 }).propertyDescriptor('a');\n   * // {\n   * //   value: 1,\n   * //   enumerable: true,\n   * //   writable: true,\n   * //   configurable: true\n   * // }\n   */\n  propertyDescriptor(property) {\n    const object = this.$;\n\n    return isObject(object) ? Object.getOwnPropertyDescriptor(object, property) : undefined;\n  }\n\n  /**\n   * @method Super#propertyNames\n   * @public\n   * @returns {DWrap} D-Wrap of the names array.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\n   * @descriptor Synonym for\n   * [Object.getOwnPropertyNames]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames}.\n   *\n   * @example\n   * new Super({ a: 1, b: 2 }).define('c', { value: 3 }).$; // ['a', 'b', 'c']\n   */\n  propertyNames() {\n    const object = this.$;\n\n    return D(isObject(object) ? Object.getOwnPropertyNames(object) : []);\n  }\n\n  /**\n   * @method Super#propertySymbols\n   * @public\n   * @returns {DWrap} D-Wrap of the names array.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols\n   * @descriptor Synonym for\n   * [Object.getOwnPropertySymbols]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols}.\n   *\n   * @example\n   * new Super({ [Symbol('foo')]: 1 }).define(Symbol('bar'), { value: 2 }).$; // [Symbol('foo'), Symbol('bar')]\n   */\n  propertySymbols() {\n    const object = this.$;\n\n    return D(isObject(object) ? Object.getOwnPropertySymbols(object) : []);\n  }\n\n  /**\n   * @method Super#proto\n   * @public\n   * @param {*} [proto] - If it's present it's set as a prototype to the object.\n   * @returns {DWrap} In getter mode returns wrap of the prototype and in setter mode returns this.\n   * @description Synonym for both\n   * [Object.getPrototypeOf]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf}\n   * and\n   * [Object.setPrototypeOf]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf}.\n   */\n  proto(proto) {\n    const object = this.$;\n    const isContextObject = !isNullOrUndefined(object);\n\n    if (arguments.length) {\n      if (isContextObject && (isObject(proto) || isNull(proto))) {\n        Object.setPrototypeOf(object, proto);\n      }\n\n      return this;\n    }\n\n    return isContextObject ? new Super(Object.getPrototypeOf(object)) : new Super();\n  }\n\n  /**\n   * @method Super#reduce\n   * @public\n   * @param {ReduceCallback} callback - Called on each iteration.\n   * Return value is passed to the next callback call.\n   * @param {*} [IV = <first value>|undefined] - Initial value.\n   * @returns {*} Modified IV.\n   * @description Returns modified IV. If the second argument is not present first value in the object is taken\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).reduce((sum, value) => sum + value * value, 0); // 14\n   */\n  reduce(callback, IV) {\n    validate([callback], ['function'], 'Super#reduce');\n\n    const object = this.$;\n\n    let startKey;\n\n    if (arguments.length === 1) {\n      iterate(object, (value, key) => {\n        startKey = key;\n        IV = value;\n\n        return true;\n      });\n    }\n\n    iterate(object, (value, key) => {\n      if (key !== startKey) {\n        IV = callback(IV, value, key, object);\n      }\n    });\n\n    return IV;\n  }\n\n  /**\n   * @method Super#set\n   * @public\n   * @param {String|Object.<String, Function>} property - Either a string of a property or a setters object.\n   * @param {Function} [setter] - If a property parameter is a string this has to be a setter function.\n   * @returns {DWrap} Returns this.\n   * @description Method for defining setters.\n   *\n   * @example\n   * const object = new Super({})\n   *   .get('public', function () {\n   *     return this._private;\n   *   })\n   *   .set('public', function (value) {\n   *     if (typeof value === 'number') {\n   *       this._private = value;\n   *     }\n   *   });\n   * object.prop('public', '1').$; // { public: undefined }\n   * object.prop('public', 1).$;   // { public: 1, _private: 1 }\n   *\n   * new Super({}).set({\n   *   public(value) {\n   *     if (typeof value === 'number') {\n   *       this._private = value;\n   *     }\n   *   }\n   * });\n   */\n  set(property, setter) {\n    if (arguments.length >= 2) {\n      property = { [property]: setter };\n    }\n\n    const object = this.$;\n\n    iterate(isObject(object) && new Super(property).$, (setter, property) => {\n      Object.defineProperty(object, property, { set: setter });\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Super#some\n   * @public\n   * @param {IterationCallback} [callback = Boolean] - Called on each iteration.\n   * If returns truthy iteration stops and if falsey it continues.\n   * @returns {Boolean} If all the callback calls returned truthy value.\n   * @description Returns true if some of the callback calls returned truthy value. Otherwise false.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).some((value) => value > 4); // false\n   * new Super({}).some(() => true);                             // false\n   */\n  some(callback = Boolean) {\n    validate([callback], ['function'], 'Super#some');\n\n    return iterate(this.$, (value, key, object) => {\n      if (callback(value, key, object)) {\n        return true;\n      }\n    }) || false;\n  }\n\n  /**\n   * @method Super#strictEquals\n   * @public\n   * @param {*} [object] - Object to compare.\n   * @returns {Boolean} If the objects are equal or not.\n   * @description Returns true if objects are equal using '===' operator and false if not.\n   * NaNs are considered to be strict equal.\n   *\n   * @example\n   * new Super(3).strictEquals('3');   // false\n   * new Super(NaN).strictEquals(NaN); // true\n   */\n  strictEquals(object) {\n    const o = this.$;\n\n    object = new Super(object).$;\n\n    return o === object || (isNaN(o) && isNaN(object));\n  }\n\n  /**\n   * @method Super#sum\n   * @public\n   * @param {IterationCallback} [callback = null] - Called on each iteration.\n   * @returns {Number} Sum.\n   * @description Type of {@link Super#reduce}.\n   * If the callback is present it's used for summing. If not the value is used.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).sum();                         // 6\n   * new Super({ a: 1, b: 2, c: 3 }).sum((value) => value * value); // 14\n   */\n  sum(callback = null) {\n    validate([callback], ['function||!'], 'Super#sum');\n\n    return this.reduce((sum, value, key, object) => (\n      sum + Number(callback ? callback(value, key, object) : value)\n    ), 0);\n  }\n\n  toJSON() {\n    return this.$;\n  }\n\n  /**\n   * @member Super#toStringTag\n   * @type {String}\n   * @public\n   * @readonly\n   * @description Returns toString tag of the object.\n   *\n   * @example\n   * new Super({}).toStringTag; // 'Object'\n   * new Super([]).toStringTag; // 'Array'\n   * new Super(1).toStringTag;  // 'Number'\n   */\n  get toStringTag() {\n    return toStringTag(this.$);\n  }\n\n  /**\n   * @member Super#type\n   * @type {String}\n   * @public\n   * @readonly\n   * @description Synonym for\n   * [\"typeof\" operator]{@link https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/instanceof}..\n   *\n   * @example\n   * new Super({}).type;   // 'object'\n   * new Super(1).type;    // 'number'\n   * new Super('1').type;  // 'string'\n   * new Super(true).type; // 'boolean'\n   */\n  get type() {\n    return typeof this.$;\n  }\n\n  /**\n   * @method Super#value\n   * @public\n   * @param {String|Object.<String, *>} property - Either a string of a property or a values object.\n   * @param {Object.<String, *>} [value] - If a property parameter is a string this has to be a value to be set.\n   * @returns {DWrap} Returns this.\n   * @description Method for defining non-enumerable, non-writable, non-configurable values.\n   * Synonym for object.define(property, { value: value }).\n   *\n   * @example\n   * new Super({}).value('a', 1).$; // { a: 1 }\n   * new Super({}).value({\n   *   a: 1\n   * }).$;                          // { a: 1 }\n   */\n  value(property, value) {\n    if (arguments.length >= 2) {\n      property = { [property]: value };\n    }\n\n    const object = this.$;\n\n    iterate(isObject(object) && new Super(property).$, (value, property) => {\n      Object.defineProperty(object, property, { value });\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Super#values\n   * @public\n   * @returns {DWrap} A wrap of the values array.\n   * @description Returns D-Wrap of the values array.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).values().$; // [1, 2, 3]\n   * new Super(null).values().$;                 // []\n   */\n  values() {\n    const array = [];\n\n    iterate(this.$, (value) => {\n      array.push(value);\n    });\n\n    return D(array);\n  }\n\n  /**\n   * @method Super#word\n   * @public\n   * @param {IterationCallback} callback - Called on each iteration.\n   * @returns {String} Concatenated string.\n   * @description Type of {@link Super#reduce}.\n   * If the callback is present it's used for concatenating. If not the value is used.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).word();                         // '123'\n   * new Super({ a: 1, b: 2, c: 3 }).word((value) => value + value); // '112233'\n   */\n  word(callback = null) {\n    validate([callback], ['function||!'], 'Super#word');\n\n    return this.reduce((word, value, key, object) => (\n      word + String(callback ? callback(value, key, object) : value)\n    ), '');\n  }\n}\n\ndefineProperties(Super.prototype, {\n  [Symbol.toStringTag]: 'Super'\n});\n\n/**\n * @function deepAssign\n * @private\n * @param {*} target - Object to assign properties to.\n * @param {*} object - Object to assign properties from.\n * @returns {void}\n */\nfunction deepAssign(target, object) {\n  iterate(object, (value, key) => {\n    if (isPrimitive(target[key]) || !{}.hasOwnProperty.call(target, key)) {\n      target[key] = deepClone(value);\n\n      return;\n    }\n\n    if (!isPrimitive(target[key])) {\n      deepAssign(target[key], value);\n    }\n  });\n}\n\n/**\n * @function deepClone\n * @private\n * @param {*} object - Object to clone.\n * @description Does the deep cloning.\n */\nfunction deepClone(object) {\n  const clone = cloneSwitcher(object, [object, true]);\n\n  if (clone !== object) {\n    iterate(object, (value, key) => {\n      clone[key] = deepClone(value);\n    });\n  }\n\n  return clone;\n}\n\n/**\n * @function deepEqual\n * @private\n * @param {*} o1 - First object to compare.\n * @param {*} o2 - Second object to compare.\n * @param {Boolean} strict - If comparison should be strict or not.\n * @returns {Boolean} - If the object are deep equal or not.\n */\nfunction deepEqual(o1, o2, strict) {\n  if (o1 === o2) {\n    return true;\n  }\n\n  if (isNaN(o1) && isNaN(o2) && isPrimitive(o1) && isPrimitive(o2)) {\n    return true;\n  }\n\n  if (isNaN(o1) || isNaN(o2)) {\n    return false;\n  }\n\n  if (isPrimitive(o1) || isPrimitive(o2)) {\n    return strict ? o1 === o2 : o1 == o2;\n  }\n\n  if (isDate(o1) && isDate(o2)) {\n    return o1.getTime() === o2.getTime();\n  }\n\n  if (isDate(o1) || isDate(o2)) {\n    return false;\n  }\n\n  if (isRegExp(o1) && isRegExp(o2)) {\n    return o1.source === o2.source &&\n      o1.toString().match(/[gimuy]*$/)[0] === o2.toString().match(/[gimuy]*$/)[0] &&\n      o1.lastIndex === o2.lastIndex;\n  }\n\n  if (isRegExp(o1) || isRegExp(o2)) {\n    return false;\n  }\n\n  if ((!isPlainObject(o1) && !isArray(o1)) || (!isPlainObject(o2) && !isArray(o2))) {\n    return false;\n  }\n\n  const p1 = Object.getPrototypeOf(o1);\n  const p2 = Object.getPrototypeOf(o1);\n\n  if (Object.keys(o1).length !== Object.keys(o2).length) {\n    return false;\n  }\n\n  if (p1 && p2 && (toStringTag(p1.constructor) !== toStringTag(p2.constructor))) {\n    return false;\n  }\n\n  return iterate(o1, (value, key) => {\n    if (!(key in o2) || !deepEqual(value, o2[key], strict)) {\n      return false;\n    }\n  }) !== false;\n}\n\n/**\n * @function deepEvery\n * @private\n * @param {*} object - Object to iterate over.\n * @param {DeepIterationCallback} callback - Callback that is called on every element.\n * If returns truthy the iteration goes on and if not it stops.\n * @param {Number} n - Depth of iteration.\n * @param {Tree} tree - Tree of { key, value } objects of iteration.\n * @returns {Boolean} - If all the callback calls returned truthy value.\n */\nfunction deepEvery(object, callback, n, tree) {\n  const end = n === 1;\n\n  return iterate(object, (value, key, object) => {\n    const newTree = [{ key, value }].concat(tree);\n\n    if (\n      end || isPrimitive(value)\n        ? !callback(value, key, object, newTree)\n        : !deepEvery(value, callback, n - 1, newTree)\n    ) {\n      return false;\n    }\n  }) !== false;\n}\n\n/**\n * @function deepFilter\n * @private\n * @param {*} object - Object to iterate over.\n * @param {DeepIterationCallback} callback - Callback that is called on every element.\n * If returns truthy the element is included in the output and if not it's excluded.\n * @param {Number} n - Depth of iteration.\n * @param {Tree} tree - Tree of { key, value } objects of iteration.\n * @returns {*} Filtered object.\n */\nfunction deepFilter(object, callback, n, tree) {\n  const array = isArrayLike(object);\n  const nul = isNullOrUndefined(object);\n  const o = array ? [] : nul ? object : {};\n  const end = n === 1;\n\n  iterate(object, (value, key, object) => {\n    const newTree = [{ key, value }].concat(tree);\n\n    if ((end || isPrimitive(value)) && callback(value, key, object, newTree)) {\n      if (array) {\n        o.push(value);\n      } else {\n        o[key] = value;\n      }\n\n      return;\n    }\n\n    if (!end) {\n      const filtered = deepFilter(value, callback, n - 1, newTree);\n\n      if (filtered) {\n        if (array) {\n          o.push(filtered);\n        } else {\n          o[key] = filtered;\n        }\n      }\n    }\n  });\n\n  if (array) {\n    return o.length ? o : undefined;\n  }\n\n  if (!nul) {\n    return Object.keys(o).length ? o : undefined;\n  }\n\n  return o;\n}\n\n/**\n * @function deepFind\n * @private\n * @param {*} object - Object to iterate over.\n * @param {DeepIterationCallback} callback - Callback that is called on every element.\n * If returns truthy the iteration stops and if not it continues.\n * @param {Number} n - Depth of iteration.\n * @param {Tree} tree - Tree of { key, value } objects of iteration.\n * @returns {Tree|null} - If found the whole tree is returned and if not it's null what's returned.\n */\nfunction deepFind(object, callback, n, tree) {\n  const end = n === 1;\n\n  return iterate(object, (value, key, object) => {\n    const newTree = [{ key, value }].concat(tree);\n\n    if (end || isPrimitive(value)) {\n      if (callback(value, key, object, newTree)) {\n        return newTree;\n      }\n\n      return;\n    }\n\n    const result = deepFind(value, callback, n - 1, newTree);\n\n    if (result) {\n      return result;\n    }\n  }) || null;\n}\n\n/**\n * @function deepFreeze\n * @private\n * @param {*} object - Object to freeze.\n * @returns {void}\n */\nfunction deepFreeze(object) {\n  Object.freeze(object);\n  iterate(object, deepFreeze);\n}\n\n/**\n * @function deepForEach\n * @private\n * @param {*} object - Object to iterate over.\n * @param {DeepIterationCallback} callback - Callback that is called on every element.\n * @param {Number} n - Depth of iteration.\n * @param {Tree} tree - Tree of { key, value } objects of iteration.\n * @returns {void}\n */\nfunction deepForEach(object, callback, n, tree) {\n  const end = n === 1;\n\n  iterate(object, (value, key, object) => {\n    const newTree = [{ key, value }].concat(tree);\n\n    if (end || isPrimitive(value)) {\n      callback(value, key, object, newTree);\n    } else {\n      deepForEach(value, callback, n - 1, newTree);\n    }\n  });\n}\n\n/**\n * @function deepMap\n * @private\n * @param {*} object - Object to iterate over.\n * @param {DeepIterationCallback} callback - Callback that is called on every element.\n * Returned value is used to create to new object.\n * @param {Number} n - Depth of iteration.\n * @param {Tree} tree - Tree of { key, value } objects of iteration.\n * @returns {*} New object.\n */\nfunction deepMap(object, callback, n, tree) {\n  const o = isArrayLike(object) ? [] : isNullOrUndefined(object) ? object : {};\n  const end = n === 1;\n\n  iterate(object, (value, key, object) => {\n    const newTree = [{ key, value }].concat(tree);\n\n    o[key] = end || isPrimitive(value)\n      ? callback(value, key, object, newTree)\n      : deepMap(value, callback, n - 1, newTree);\n  });\n\n  return o;\n}\n\n/**\n * @function deepReduce\n * @private\n * @param {*} object - Object to iterate over.\n * @param {DeepReduceCallback} callback - Callback that is called on every element.\n * Returned value is used to create to new object.\n * @param {Number} n - Depth of iteration.\n * @param {Boolean} start - If callback was called already or not.\n * @param {{ IV: * }|undefined} IV - If callback was called already or not.\n * @param {Tree} tree - Tree of { key, value } objects of iteration.\n * @returns {{ IV: * }} Transformed IV.\n */\nfunction deepReduce(object, callback, n, start, IV, tree) {\n  const end = n === 1;\n\n  iterate(object, (value, key, object) => {\n    if (!IV && (end || isPrimitive(value)) && !start) {\n      IV = { IV: value };\n      start = true;\n\n      return;\n    }\n\n    const newTree = [{ key, value }].concat(tree);\n\n    IV = end || isPrimitive(value)\n      ? { IV: callback(IV.IV, value, key, object, newTree) }\n      : deepReduce(value, callback, n - 1, start, IV, newTree);\n  });\n\n  return IV;\n}\n\n/**\n * @function deepSome\n * @private\n * @param {*} object - Object to iterate over.\n * @param {DeepIterationCallback} callback - Callback that is called on every element.\n * If returns truthy the iteration stops and if not it continues.\n * @param {Number} n - Depth of iteration.\n * @param {Tree} tree - Tree of { key, value } objects of iteration.\n * @returns {Boolean} - If some of the callback calls returned truthy value.\n */\nfunction deepSome(object, callback, n, tree) {\n  const end = n === 1;\n\n  return iterate(object, (value, key, object) => {\n    const newTree = [{ key, value }].concat(tree);\n\n    if (\n      end || isPrimitive(value)\n        ? callback(value, key, object, newTree)\n        : deepSome(value, callback, n - 1, newTree)\n    ) {\n      return true;\n    }\n  }) || false;\n}\n\nconstructors[0].push({\n  check: () => true,\n  cls: Super\n});\n\nexport default Super;\n","/**\n * @module Arr\n * @private\n * @mixin\n * @description Exports Arr class.\n */\n\nimport Super from './Super';\nimport constructors from './constants/constructors';\nimport {\n  isArrayLike, isNaN, isNumber, isString,\n  toArray, validate, iterate as iterator, Symbol, defineProperties\n} from './helpers';\n\n/**\n * @typedef {Array|*} ArrayLike\n * @public\n * @description Array-like type.\n */\n\n/**\n * @callback ArrayCallback\n * @public\n * @param {Number} i - Iteration index.\n */\n\n/**\n * @callback IterateCallback\n * @public\n * @param {Number} i - Iteration index.\n */\n\n/**\n * @callback CompareFunction\n * @public\n * @param {*} x - First value to be compared.\n * @param {*} y - Second value to be compared.\n */\n\n/**\n * @class Arr\n * @extends Super\n * @public\n * @param {Array} [array = []] - An array to wrap.\n * @returns {Arr} Instance of Arr.\n * @description Wrap of an array.\n *\n * @example\n * new Arr([1, 2]);\n */\nexport class Arr extends Super {\n  constructor(array = []) {\n    super(toArray(array instanceof Arr ? array.$ : array));\n\n    /**\n     * @member Arr#$\n     * @type {Array}\n     * @public\n     * @description Made array.\n     */\n  }\n\n  /**\n   * @method Arr#concat\n   * @public\n   * @param {...(Array|Arr|*)} values - Arrays or any other values to concat the array with.\n   * @returns {Arr} New instance of Arr.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\n   * @description Synonym for\n   * [Array#concat]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/concat}.\n   */\n  concat(...values) {\n    const array = toArray(this.$, true);\n\n    iterator(arguments, (value) => {\n      value = new Super(value).$;\n\n      if (isArrayLike(value) && !isString(value)) {\n        iterator(value, (value) => {\n          array.push(value);\n        });\n\n        return;\n      }\n\n      array.push(value);\n    });\n\n    return new this.constructor(array);\n  }\n\n  /**\n   * @member Arr#first\n   * @type {*}\n   * @public\n   * @readonly\n   * @description Returns the first element of the array.\n   *\n   * @example\n   * new Arr([1, 2, 3]).first; // 1\n   * new Arr([]).first;        // undefined\n   */\n  get first() {\n    return this.$[0];\n  }\n\n  /**\n   * @method Arr#indexOf\n   * @public\n   * @param {*} value - Value to search.\n   * @returns {Number} Index of the argument.\n   * @description Almost the same as {@link Super#keyOf}. The difference is that if the value is not found\n   * -1 returned instead of null and if found Number(key) returned.\n   *\n   * @example\n   * new Arr([1, 2, 3]).indexOf(1);       // 0\n   * new Arr([1, 2, 3]).indexOf('1');     // 0\n   * new Arr([1, 2, 3]).indexOf(3);       // -1\n   * new Arr([1, 2, NaN]).indexOf(NaN);   // 2\n   */\n  indexOf(value) {\n    const key = this.keyOf(value);\n\n    return key === null ? -1 : Number(key);\n  }\n\n  /**\n   * @method Arr#indexOfStrict\n   * @public\n   * @param {*} value - Value to search.\n   * @returns {Number} Index of the argument.\n   * @description Almost the same as {@link Super#keyOfStrict}. The difference is that if the value is not found\n   * -1 returned instead of null and if found Number(key) returned.\n   *\n   * @example\n   * new Arr([1, 2, 3]).indexOfStrict(1);       // 0\n   * new Arr([1, 2, 3]).indexOfStrict('1');     // -1\n   * new Arr([1, 2, 3]).indexOfStrict(3);       // -1\n   * new Arr([1, 2, NaN]).indexOfStrict(NaN);   // 2\n   */\n  indexOfStrict(value) {\n    const key = this.keyOfStrict(value);\n\n    return key === null ? -1 : Number(key);\n  }\n\n  /**\n   * @method Arr#join\n   * @public\n   * @param {String} [separator = ','] - See the link.\n   * @returns {String} - String of joined array.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/join\n   * @description Synonym for\n   * [Array#join]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/join}.\n   */\n  join(separator) {\n    return this.$.join.apply(this.$, arguments);\n  }\n\n  /**\n   * @member Arr#last\n   * @type {*}\n   * @public\n   * @readonly\n   * @description The last element of the array.\n   *\n   * @example\n   * new Arr([1, 2, 3]).last; // 3\n   * new Arr([]).last;        // undefined\n   */\n  get last() {\n    const array = this.$;\n\n    return array[array.length - 1];\n  }\n\n  /**\n   * @member Arr#length\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/length\n   * @description Synonym for\n   * [Array#length]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/length}.\n   */\n  get length() {\n    return this.$.length;\n  }\n\n  /**\n   * @method Arr#pop\n   * @public\n   * @returns {*} Returns deleted element.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/pop\n   * @description Synonym for\n   * [Array#pop]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/pop}.\n   */\n  pop() {\n    return this.$.pop();\n  }\n\n  /**\n   * @method Arr#push\n   * @public\n   * @param {...*} values See the link.\n   * @this {Arr}\n   * @returns {Arr} Returns this.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push\n   * @description Synonym for\n   * [Array#push]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push}\n   * besides returning this.\n   */\n  push(...values) {\n    this.$.push.apply(this.$, arguments);\n\n    return this;\n  }\n\n  /**\n   * @method Arr#reverse\n   * @public\n   * @returns {Arr} A wrap of the reversed array.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse\n   * @description Synonym for\n   * [Array#reverse]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse}.\n   */\n  reverse() {\n    this.$.reverse();\n\n    return this;\n  }\n\n  /**\n   * @method Arr#shift\n   * @public\n   * @returns {*} Returns deleted element.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/shift\n   * @description Synonym for\n   * [Array#shift]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/shift}.\n   */\n  shift() {\n    return this.$.shift();\n  }\n\n  /**\n   * @method Arr#shuffle\n   * @public\n   * @returns {Arr} Returns this.\n   * @description Method for shuffling.\n   *\n   * @example\n   * new Arr([1, 2, 3, 4]).shuffle().$; // [4, 2, 3, 1]\n   * new Arr([1, 2, 3, 4]).shuffle().$; // [1, 3, 4, 2]\n   */\n  shuffle() {\n    const length = this.$.length;\n\n    return this.forEach((value, index, array) => {\n      const randomIndex = index + Math.floor((length - index) * Math.random());\n\n      array[index] = array[randomIndex];\n      array[randomIndex] = value;\n    });\n  }\n\n  /**\n   * @method Arr#slice\n   * @public\n   * @param {Number} [begin = 0] - See the link.\n   * @param {Number} [end = array.length] - See the link.\n   * @returns {Arr} A wrap of a sliced array.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\n   * @description Synonym for\n   * [Array#slice]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/slice}.\n   */\n  slice(begin, end) {\n    return new this.constructor(this.$.slice.apply(this.$, arguments));\n  }\n\n  /**\n   * @method Arr#sort\n   * @public\n   * @param {CompareFunction} [compareFunction] - See the link.\n   * @returns {Arr} Returns this.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n   * @description Synonym for\n   * [Array#sort]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/sort}.\n   */\n  sort(compareFunction) {\n    validate([compareFunction], ['function||!'], 'Arr#sort');\n\n    this.$.sort(compareFunction);\n\n    return this;\n  }\n\n  /**\n   * @method Arr#sortAsc\n   * @public\n   * @returns {Arr} Returns this.\n   * @description Method for ascending sorting. Puts non-numbers first, then NaNs, then sorted values.\n   *\n   * @example\n   * new Arr([NaN, 1, -7, '100', 5]).sortAsc().$; // ['100', NaN, -7, 1, 5]\n   */\n  sortAsc() {\n    return this.sort(asc);\n  }\n\n  /**\n   * @method Arr#sortDesc\n   * @public\n   * @returns {Arr} Returns this.\n   * @description Method for descending sorting. Puts sorted values first, then NaNs, then non-numbers.\n   *\n   * @example\n   * new Arr([NaN, 1, -7, '100', 5]).sortDesc().$; // [5, 1, -7, NaN, '100']\n   */\n  sortDesc() {\n    return this.sort((y, x) => asc(x, y));\n  }\n\n  /**\n   * @method Arr#splice\n   * @public\n   * @param {Number} [start] - See the link.\n   * @param {Number} [deleteCount] - See the link.\n   * @param {...*} [items] - See the link.\n   * @returns {Arr} A wrap of return value of #splice call.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n   * @description Synonym for\n   * [Array#splice]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/splice}.\n   */\n  splice(start, deleteCount, ...items) {\n    return new Arr(this.$.splice.apply(this.$, arguments));\n  }\n\n  /**\n   * @method Arr#string\n   * @public\n   * @returns {String} Concatenated array.\n   * @description Synonym for array.join('').\n   *\n   * @example\n   * new Arr([1, 2, 3]).string(); // '123'\n   */\n  string() {\n    return this.join('');\n  }\n\n  /**\n   * @method Arr#unshift\n   * @public\n   * @param {...*} [values] - See the link.\n   * @returns {Arr} Returns this.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift\n   * @description Synonym for\n   * [Array#unshift]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift}\n   * besides returning this.\n   */\n  unshift(...values) {\n    this.$.unshift.apply(this.$, arguments);\n\n    return this;\n  }\n}\n\ndefineProperties(Arr.prototype, {\n  [Symbol.toStringTag]: 'Arr'\n});\n\n/**\n * @function asc\n * @private\n * @param {*} x - First value to be compared.\n * @param {*} y - Second value to be compared.\n * @returns {Number} Where to put the first element: before or after.\n */\nfunction asc(x, y) {\n  if (!isNumber(x) && !isNumber(y)) {\n    return 0;\n  }\n\n  if (!isNumber(x)) {\n    return -1;\n  }\n\n  if (!isNumber(y)) {\n    return 1;\n  }\n\n  if (isNaN(x) && isNaN(y)) {\n    return 0;\n  }\n\n  if (isNaN(x)) {\n    return -1;\n  }\n\n  if (isNaN(y)) {\n    return 1;\n  }\n\n  return x - y;\n}\n\nconstructors[1].push({\n  check: isArrayLike,\n  cls: Arr\n});\n\n/**\n * @function array\n * @public\n * @param {Number} number - Length of the array.\n * @param {ArrayCallback} [callback] - If it's present it has to be a function\n * that returns the element that is pushed to the new array.\n * @returns {Arr} New instance of Arr.\n * @description Method for creating new array from the length using optional callback.\n *\n * @example\n * array(3).$;               // [0, 1, 2]\n * array(3, (i) => i * 2).$; // [0, 2, 4]\n */\nexport function array(number, callback) {\n  validate([number, callback], [['intLike', '>=0'], 'function||!'], 'array');\n\n  const array = [];\n\n  for (let i = 0; i < number; i++) {\n    array.push(callback ? callback(i) : i);\n  }\n\n  return new Arr(array);\n}\n\n/**\n * @function iterate\n * @public\n * @param {Number} number - Number of iterations.\n * @param {IterateCallback} callback - Callback that is called on each iteration with the iteration index.\n * @returns {void}\n * @description Method for replacing for (...) construction.\n *\n * @example\n * iterate();\n */\nexport function iterate(number, callback) {\n  validate([number, callback], [['intLike', '>=0'], 'function'], 'iterate');\n\n  for (let i = 0; i < number; i++) {\n    callback(i);\n  }\n}\n\nexport default Arr;\n","/**\n * @module BlobObject\n * @private\n * @mixin\n * @description Exports BlobObject class.\n */\n\nimport Super from './Super';\nimport Promise from './Promise';\nimport constructors from './constants/constructors';\nimport {\n  isArray, isFunction,\n  toStringTag, Symbol, defineProperties\n} from './helpers';\n\n/**\n * @typedef {{ buffer: String, binary: String, dataURL: String, text: String }} methods\n * @private\n * @description List of read blob methods.\n */\nconst methods = {\n  buffer: 'ArrayBuffer',\n  binary: 'BinaryString',\n  dataURL: 'DataURL',\n  text: 'Text'\n};\nconst { URL } = global;\n\n/**\n * @typedef {('buffer'|'binary'|'dataURL'|'text')} ReadBlobMethod\n * @public\n * @description Enum type of read blob methods.\n */\n\n/**\n * @typedef {ArrayBuffer|ArrayBufferView|Blob|String} BlobParts\n * @public\n * @description Allowed blob parts.\n */\n\n/**\n * @callback ReaderEventListener\n * @public\n * @param {Event} e - Fired event.\n * @param {FileReader} reader - FileReader.\n */\n\n/**\n * @class BlobObject\n * @extends Super\n * @public\n * @param {Blob} blob - Blob to wrap.\n * @returns {BlobObject} Instance of BlobObject.\n * @description Wrap of a blob.\n *\n * @example\n * new BlobObject(new Blob(['{\"foo\":\"bar\"}'], { type: 'application/json' }));\n */\nexport class BlobObject extends Super {\n  /**\n   * @member BlobObject#$\n   * @type {Blob}\n   * @public\n   * @description Original Blob.\n   */\n\n  /**\n   * @member {String} BlobObject#dataURL\n   * @type {String}\n   * @public\n   * @readonly\n   * @description Returns dataURL representation of the blob.\n   */\n  get dataURL() {\n    return URL.createObjectURL(this.$);\n  }\n\n  /**\n   * @method BlobObject#readAs\n   * @public\n   * @param {ReadBlobMethod} method - Method that is used for reading from blob.\n   * @param {ReaderEventListener} [progress] - Progress listener.\n   * @returns {Promise} Promise that could be aborted.\n   * @description Method for reading from blobs.\n   *\n   * @example\n   * new BlobObject(new Blob(['{\"foo\":\"bar\"}'], { type: 'application/json' }))\n   *   .readAs('text')\n   *   .then((value) => {\n   *     console.log(value); // '{\"foo\":\"bar\"}'\n   *   });\n   */\n  readAs(method, progress) {\n    if (!methods[method]) {\n      throw new Error('1st argument must be one of following values: buffer, binary, dataURL, text');\n    }\n\n    let reader = new FileReader();\n    let toReject;\n\n    if (isFunction(progress)) {\n      reader.onprogress = function (e) {\n        progress(e, this);\n      };\n    }\n\n    const promise = new Promise((resolve, reject) => {\n      toReject = reject;\n\n      reader.onerror = ({ target }) => {\n        if (reader) {\n          reject(target.error);\n        }\n      };\n\n      reader.onload = ({ target }) => {\n        resolve(target.result);\n      };\n\n      reader[`readAs${ methods[method] }`](this.$);\n    });\n\n    promise.abort = function abort() {\n      toReject(new Error('Reading was aborted'));\n\n      reader.abort();\n\n      reader = null;\n\n      return this;\n    };\n\n    return promise;\n  }\n\n  /**\n   * @method BlobObject#saveAs\n   * @public\n   * @param {String} [name] - Name that is used for saving file.\n   * @returns {BlobObject} Returns this.\n   * @description Method for saving blobs.\n   *\n   * @example\n   * new BlobObject(new Blob(['{\"foo\":\"bar\"}'], { type: 'application/json' }))\n   *   .saveAs('blob.json');\n   */\n  saveAs(name = 'download') {\n    const anchor = document.createElement('a');\n\n    anchor.href = this.dataURL;\n    anchor.setAttribute('download', name);\n    anchor.click();\n\n    return this;\n  }\n}\n\ndefineProperties(BlobObject.prototype, {\n  [Symbol.toStringTag]: 'BlobObject'\n});\n\nconstructors[1].push({\n  check: (blob) => /^(Blob|File)$/.test(toStringTag(blob)),\n  cls: BlobObject\n});\n\n/**\n * @function blob\n * @public\n * @param {(BlobParts[]|BlobParts)} blobParts - Blob parts that are passed to\n * [Blob]{@link https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob} constructor.\n * @param {Object} [options] - Options that are passed to\n * [Blob]{@link https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob} constructor.\n * @returns {BlobObject} New instance of BlobObject.\n * @description Function for creating blobs not involving BlobObject and Blob constructors.\n */\nexport function blob(blobParts, options = {}) {\n  if (!isArray(blobParts)) {\n    blobParts = [blobParts];\n  }\n\n  return new BlobObject(new Blob(blobParts, options));\n}\n\nexport default BlobObject;\n","/**\n * @module Func\n * @private\n * @mixin\n * @description Exports Func class.\n */\n\nimport Super from './Super';\nimport Promise from './Promise';\nimport constructors from './constants/constructors';\nimport { isFunction, validate, toArray, Symbol, defineProperties, iterate } from './helpers';\n\n/**\n * @callback BeforeMiddleware\n * @param {Array} args - Previous arguments.\n * @param {Func} func - This function.\n * @returns {Array} - New arguments.\n */\n\n/**\n * @callback AfterMiddleware\n * @param {*} returnValue - Previous return value.\n * @param {Func} func - This function.\n * @returns {*} - New return value.\n */\n\n/**\n * @class Func\n * @extends Super\n * @public\n * @param {Function} [func = function () {}] - Function to wrap.\n * @returns {Func} Instance of Func.\n * @description A wrap of a function.\n *\n * @example\n * const func = new Func(Math.max);\n *\n * func(1, 4, -2, 5); // 5\n */\nexport class Func extends Super {\n  constructor(func = () => {}) {\n    super();\n\n    function proxy() {\n      if (++proxy.$$.called < proxy.$$.canBeCalled) {\n        const { before, after, sync, contextLocked } = proxy.$$;\n        let { context, args } = proxy.$$;\n        let ret;\n\n        context = contextLocked ? context : context || this;\n        args = args.concat(toArray(arguments));\n\n        if (sync) {\n          iterate(before, (middleware) => {\n            args = middleware.call(context, toArray(args), proxy);\n          });\n\n          ret = func.apply(context, toArray(args));\n\n          iterate(after, (middleware) => {\n            ret = middleware.call(context, ret, proxy);\n          });\n\n          return ret;\n        }\n\n        let promise = Promise.resolve(args);\n\n        iterate(before, (middleware) => {\n          promise = promise.then((args) => middleware.call(context, toArray(args), proxy));\n        });\n\n        promise = promise.then((args) => func.apply(context, toArray(args)));\n\n        iterate(after, (middleware) => {\n          promise = promise.then((ret) => middleware.call(context, ret, proxy));\n        });\n\n        return promise;\n      }\n    }\n\n    /**\n     * @member {Object} Func#$$\n     * @type {Object}\n     * @protected\n     * @property {Array} after - After middleware array.\n     * @property {Array} args - Locked and bound arguments.\n     * @property {Array} argsLocked - Locked arguments.\n     * @property {Array} before - Before middleware array.\n     * @property {Number} called - How many times the function was called.\n     * @property {Number} canBeCalled - How many times the function can be actually called.\n     * @property {*} context - Locked or bound context.\n     * @property {Boolean} contextLocked - Is context locked or not.\n     * @property {Boolean} sync - Is function synchronous or not.\n     * @description Config parameters.\n     */\n    Object.defineProperty(proxy, '$$', {\n      value: {\n        after: [],\n        args: [],\n        argsLocked: [],\n        before: [],\n        called: 0,\n        canBeCalled: Infinity,\n        context: null,\n        contextLocked: false,\n        sync: true\n      }\n    });\n\n    /**\n     * @member {Function} Func#$\n     * @type {Function}\n     * @public\n     * @description Original function.\n     */\n    Object.defineProperty(proxy, '$', { value: func });\n    Object.setPrototypeOf(proxy, Func.prototype);\n\n    return proxy;\n  }\n\n  /**\n   * @method Func#after\n   * @public\n   * @param {AfterMiddleware} middleware - After middleware.\n   * @param {Boolean|*} [afterAll = true] - Boolean parameter where to put middleware.\n   * Truthy parameter stands for \"to the end\" and falsey for \"to the beginning\".\n   * @returns {Func} Returns this.\n   * @description Adds after middleware.\n   *\n   * @example\n   * const func = new Func((a) => a + 1)\n   *   .after((result) => result * result);\n   *\n   * func(4);  // 25\n   * func(-4); // 9\n   */\n  after(middleware, afterAll = true) {\n    validate([middleware], ['function'], 'Func#after');\n\n    const { after } = this.$$;\n\n    if (afterAll) {\n      after.push(middleware);\n    } else {\n      after.unshift(middleware);\n    }\n\n    return this;\n  }\n\n  /**\n   * @method Func#apply\n   * @public\n   * @param {*} [context] - Context to call with.\n   * @param {(Array|Arguments)} [args] - Arguments to call with.\n   * @returns {*} Return of function call.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\n   * @description Synonym for\n   * [Function#apply]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Function/apply}.\n   */\n  apply(context, args) {\n    return (() => {}).apply.apply(this, arguments);\n  }\n\n  /**\n   * @method Func#async\n   * @public\n   * @param {Boolean|*} [condition] - If the function should be synchronous or not.\n   * @returns {Func} Returns this.\n   * @description If the function should be synchronous or not.\n   *\n   * @example\n   * const func = new Func((a) => a + 1).async();\n   *\n   * func(4).then((result) => {\n   *   console.log(result); // 5\n   * });\n   */\n  async(condition = true) {\n    this.$$.sync = !condition;\n\n    return this;\n  }\n\n  /**\n   * @method Func#before\n   * @public\n   * @param {BeforeMiddleware} middleware - Before middleware.\n   * @param {Boolean|*} [beforeAll = true] - Boolean parameter where to put middleware.\n   * Truthy parameter stands for \"to the beginning\" and falsey for \"to the end\".\n   * @returns {Func} Returns this.\n   * @description Adds before middleware.\n   *\n   * @example\n   * const func = new Func((a) => a + 1)\n   *   .before(([arg]) => [arg * arg]);\n   *\n   * func(4); // 17\n   * func(3); // 10\n   */\n  before(middleware, beforeAll = true) {\n    validate([middleware], ['function'], 'Func#before');\n\n    const { before } = this.$$;\n\n    if (beforeAll) {\n      before.unshift(middleware);\n    } else {\n      before.push(middleware);\n    }\n\n    return this;\n  }\n\n  /**\n   * @method Func#bind\n   * @public\n   * @param {*} context - Context to bind.\n   * @param {...(Array|Arguments|*)} args - Arguments to bind.\n   * @returns {Func} Returns this.\n   * @description Composition of {@link Func#bindContext} and {@link Func#bindArgs}.\n   *\n   * @example\n   * const func = new Func(function (a, b) {\n   *   return this.a + a + b;\n   * }).bind({ a: 2 }, 1);\n   *\n   * func(1); // 4\n   * func(3); // 6\n   */\n  bind(context, ...args) {\n    return this\n      .bindContext(context)\n      .bindArgs(args);\n  }\n\n  /**\n   * @method Func#bindArgs\n   * @public\n   * @param {(Array|Arguments)} args - Arguments to bind.\n   * @returns {Func} Returns this.\n   * @description Binds arguments in addition to already locked and bound ones.\n   *\n   * @example\n   * const func = new Func((...args) => {\n   *   let sum = 0;\n   *\n   *   for (let i = 0; i < args.length; i++) {\n   *     sum += args[i];\n   *   }\n   *\n   *   return sum;\n   * });\n   *\n   * func(1, 2, 3); // 6\n   *\n   * func.bindArgs([4]);\n   *\n   * func(1, 2, 3); // 10\n   *\n   * func.bindArgs([5]);\n   *\n   * func(1, 2, 3); // 15\n   */\n  bindArgs(args) {\n    const func = this.$$;\n\n    func.args = func.args.concat(toArray(args));\n\n    return this;\n  }\n\n  /**\n   * @method Func#bindContext\n   * @public\n   * @param {*} context - Context to bind.\n   * @returns {Func} Returns this.\n   * @description Bind new context if it's not already locked.\n   *\n   * @example\n   * const func = new Func(function () {\n   *   return this.a;\n   * }).bindContext({ a: 1 });\n   *\n   * func(); // 1\n   *\n   * func.bindContext({ a: 2 });\n   *\n   * func(); // 2\n   */\n  bindContext(context) {\n    const func = this.$$;\n\n    if (!func.contextLocked) {\n      func.context = context;\n    }\n\n    return this;\n  }\n\n  /**\n   * @method Func#call\n   * @public\n   * @param {*} [context] - Context to call with.\n   * @param {...*} [args] - Arguments to call with.\n   * @returns {*} Return of function call.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Function/call\n   * @description Synonym for\n   * [Function#call]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Function/call}.\n   */\n  call(context, ...args) {\n    return (() => {}).call.apply(this, arguments);\n  }\n\n  /**\n   * @member {Number} Func#called\n   * @public\n   * @readonly\n   * @description Returns how many times the function was called.\n   *\n   * @example\n   * const func = new Func((a) => a + 1);\n   *\n   * func();\n   * func();\n   *\n   * func.called // 2\n   */\n  get called() {\n    return this.$$.called;\n  }\n\n  /**\n   * @method Func#canBeCalled\n   * @public\n   * @param {Number} times - Number of maximum times the function is called (middlewares are also taken for a count).\n   * @returns {Func} Returns this.\n   * @description Method for limiting call times of function.\n   *\n   * @example\n   * const func = new Func((a) => a + 1)\n   *   .canBeCalled(1);\n   *\n   * func(1); // 2\n   * func(1); // undefined\n   */\n  canBeCalled(times) {\n    this.$$.canBeCalled = times;\n\n    return this;\n  }\n\n  /**\n   * @method Func#limitArgsTo\n   * @public\n   * @param {Number} number - Number of arguments to limit to.\n   * @returns {Func} Returns this.\n   * @description Built-in before middleware for limiting number of arguments\n   * that is put to the end of before middlewares.\n   *\n   * @example\n   * const func = new Func((a, b) => [a, b]);\n   *\n   * func(1, 2); // [1, 2]\n   *\n   * func.limitArgsTo(1);\n   *\n   * func(1, 2); // [1, undefined]\n   */\n  limitArgsTo(number) {\n    return this.before((args) => args.slice(0, number), false);\n  }\n\n  /**\n   * @method Func#lock\n   * @public\n   * @param {*} context - Context to lock.\n   * @param {(Array|Arguments|*)} args - Arguments to lock.\n   * @returns {Func} Returns this.\n   * @description Composition of {@link Func#lockContext} and {@link Func#lockArgs}.\n   *\n   * @example\n   * const func = new Func(function (a, b) {\n   *   return this.a + a + b;\n   * }).lock({ a: 2 }, [1]);\n   *\n   * func(1); // 4\n   * func(3); // 6\n   */\n  lock(context, args) {\n    return this\n      .lockContext(context)\n      .lockArgs(args);\n  }\n\n  /**\n   * @method Func#lockArgs\n   * @public\n   * @param {(Array|Arguments|*)} args - Arguments to lock.\n   * @returns {Func} Returns this.\n   * @description Erases bound arguments and adds new arguments to already locked ones.\n   *\n   * @example\n   * const func = new Func((...args) => {\n   *   let sum = 0;\n   *\n   *   for (let i = 0; i < args.length; i++) {\n   *     sum += args[i];\n   *   }\n   *\n   *   return sum;\n   * });\n   *\n   * func(1, 2, 3); // 6\n   *\n   * func.lockArgs([4]);\n   *\n   * func(1, 2, 3); // 10\n   *\n   * func.bindArgs([6, 7]);\n   * func.lockArgs([5]);\n   *\n   * func(1, 2, 3); // 15\n   */\n  lockArgs(args) {\n    const func = this.$$;\n\n    func.args = func.argsLocked = func.argsLocked.concat(toArray(args));\n\n    return this;\n  }\n\n  /**\n   * @method Func#lockContext\n   * @public\n   * @param {*} context - Context to lock.\n   * @returns {Func} Returns this.\n   * @description Locks context if it's not already locked.\n   *\n   * @example\n   * const func = new Func(function () {\n   *   return this.a;\n   * }).lockContext({ a: 1 });\n   *\n   * func(); // 1\n   *\n   * func.lockContext({ a: 2 });\n   *\n   * func(); // 1\n   */\n  lockContext(context) {\n    const func = this.$$;\n\n    if (!func.contextLocked) {\n      func.context = context;\n      func.contextLocked = true;\n    }\n\n    return this;\n  }\n\n  /**\n   * @method Func#timing\n   * @public\n   * @param {String} mark - Argument that is passed to console.time() and console.timeEnd().\n   * By default name of the original function, or if it's not present, 'anonymous' is used.\n   * @returns {Func} Returns this.\n   * @description Built-in before and after middlewares for noting calling time.\n   * In case of asynchronous functions it notes time between calling function and resolving or rejecting the result.\n   *\n   * @example\n   * const func = new Func((a) => a + 1)\n   *   .timing('plus 1');\n   *\n   * func(2); // plus 1: 0.010ms\n   *\n   * const async = new Func(() => new Promise(() => {\n   *     setTimeout(resolve, 1000);\n   *   }))\n   *   .async()\n   *   .timing();\n   *\n   * async();\n   * // After 1 second...\n   * // anonymous: 1000.010ms\n   */\n  timing(mark) {\n    mark = arguments.length ? String(mark) : this.$.name || 'anonymous';\n\n    this.before((args) => {\n      console.time(mark);\n\n      return args;\n    }, false);\n\n    this.after((ret) => {\n      console.timeEnd(mark);\n\n      return ret;\n    }, false);\n\n    return this;\n  }\n\n  toString() {\n    return (() => {}).toString.call(this.$);\n  }\n\n  /**\n   * @method Func#unbind\n   * @public\n   * @returns {Func} Returns this.\n   * @description Composition of {@link Func#unbindContext} and {@link Func#unbindArgs}.\n   *\n   * @example\n   * const func = new Func(function (a) {\n   *   return this.foo + ' & ' +  a;\n   * }).bind({ foo: 2 }, 1);\n   *\n   * func(); // '2 & 1'\n   *\n   * func.unbind();\n   *\n   * func(); // 'undefined & undefined'\n   */\n  unbind() {\n    return this\n      .unbindContext()\n      .unbindArgs();\n  }\n\n  /**\n   * @method Func#unbindArgs\n   * @public\n   * @returns {Func} Returns this.\n   * @description Erases all bound arguments.\n   *\n   * @example\n   * const func = new Func((...args) => {\n   *   let sum = 0;\n   *\n   *   for (let i = 0; i < args.length; i++) {\n   *     sum += args[i];\n   *   }\n   *\n   *   return sum;\n   * }).bindArgs([4, 5]);\n   *\n   * func(1, 2, 3); // 15\n   *\n   * func.unbindArgs();\n   *\n   * func(1, 2, 3); // 6\n   */\n  unbindArgs() {\n    const func = this.$$;\n\n    func.args = func.argsLocked;\n\n    return this;\n  }\n\n  /**\n   * @method Func#unbindContext\n   * @public\n   * @returns {Func} Returns this.\n   * @description Erases context if it's not locked.\n   *\n   * @example\n   * const func = new Func(function () {\n   *   return this.foo;\n   * }).bindContext({ foo: 1 });\n   *\n   * func(); // 1\n   *\n   * func.unbindArgs();\n   *\n   * func(); // undefined\n   */\n  unbindContext() {\n    const func = this.$$;\n\n    if (!func.contextLocked) {\n      func.context = null;\n    }\n\n    return this;\n  }\n}\n\ndefineProperties(Func.prototype, {\n  [Symbol.toStringTag]: 'Func'\n});\n\nconstructors[1].push({\n  check: isFunction,\n  cls: Func\n});\n\n/**\n * @function method\n * @public\n * @param {String} method - Method to call.\n * @param {(Array|Arguments|*)} args - Arguments to call the method with.\n * @returns {Function} Function that calls stated method with given arguments.\n * @description Function that returns the function\n * that calls stated method of its first argument with given arguments.\n *\n * @example\n * [1.2345, 2.789, 3.14].map(method('toFixed', [2])); // ['1.23', '2.79', '3.14']\n */\nexport function method(method, args = []) {\n  return (x) => x[method].apply(x, toArray(args));\n}\n\n/**\n * @function noop\n * @public\n * @returns {void}\n * @description Empty function.\n */\nexport function noop() {}\n\n/**\n * @function self\n * @public\n * @returns {*} First argument itself.\n * @description Function that returns the first argument.\n *\n * @example\n * [1, 2].map(self);                     // [1, 2]\n * [1, 3, NaN, 0, 7, null].filter(self); // [1, 3, 7]\n */\nexport function self() {\n  return arguments[0];\n}\n\nexport default Func;\n","/**\n * @module Num\n * @private\n * @mixin\n * @description Exports Num class.\n */\n\nimport Super from './Super';\nimport Func from './Func';\nimport Promise from './Promise';\nimport constructors from './constants/constructors';\nimport {\n  isNumber, isFinite, toArray,\n  defineProperties, validate, Symbol\n} from './helpers';\n\nconst toRadian = Math.PI / 180;\nconst toDegree = 180 / Math.PI;\nconst ln2 = Math.LN2;\nconst ln10 = Math.LN10;\n\n/**\n * @class Num\n * @extends Super\n * @public\n * @param {Number} [number = 0] - A number to wrap.\n * @returns {Num} Instance of Num.\n * @description Wrap of a number.\n *\n * @example\n * const num = new Num(1);\n */\nexport class Num extends Super {\n  constructor(number = 0) {\n    super(number);\n\n    /**\n     * @member Num#$\n     * @type {Number}\n     * @public\n     * @description Original number.\n     */\n  }\n\n  /**\n   * @member Num#abs\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/abs\n   * @description Synonym for\n   * [Math.abs]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/abs}.\n   *\n   * @example\n   * new Num(1).abs;  // 1\n   * new Num(-1).abs; // 1\n   */\n  get abs() {\n    return Math.abs(this.$);\n  }\n\n  /**\n   * @method Num#acos\n   * @public\n   * @param {Boolean|*} [toDegrees = false] If it is truthy the return value is transformed into degrees.\n   * @returns {Number} Arccosine of the number.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/acos\n   * @description Synonym for\n   * [Math.acos]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/acos}.\n   */\n  acos(toDegrees) {\n    return (toDegrees ? toDegree : 1) * Math.acos(this.$);\n  }\n\n  /**\n   * @member Num#acosh\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/acosh\n   * @description Synonym for\n   * [Math.acosh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/acosh}.\n   */\n  get acosh() {\n    const number = this.$;\n\n    return Math.log(number + Math.sqrt(number * number - 1));\n  }\n\n  /**\n   * @member Num#asinh\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/asinh\n   * @description Synonym for\n   * [Math.asinh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/asinh}.\n   */\n  get asinh() {\n    const number = this.$;\n\n    return Math.log(number + Math.sqrt(number * number + 1));\n  }\n\n  /**\n   * @method Num#asin\n   * @public\n   * @param {Boolean|*} [toDegrees = false] If it is truthy the return value is transformed into degrees.\n   * @returns {Number} Arcsine of the number.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/asin\n   * @description Synonym for\n   * [Math.asin]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/asin}.\n   */\n  asin(toDegrees) {\n    return (toDegrees ? toDegree : 1) * Math.asin(this.$);\n  }\n\n  /**\n   * @method Num#atan\n   * @public\n   * @param {Boolean|*} [toDegrees = false] If it is truthy the return value is transformed into degrees.\n   * @returns {Number} Arcsine of the number.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/atan\n   * @description Synonym for\n   * [Math.atan]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/atan}.\n   */\n  atan(toDegrees) {\n    return (toDegrees ? toDegree : 1) * Math.atan(this.$);\n  }\n\n  /**\n   * @member Num#atanh\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/atanh\n   * @description Synonym for\n   * [Math.atanh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/atanh}.\n   */\n  get atanh() {\n    const number = this.$;\n\n    return Math.log((1 + number) / (1 - number)) / 2;\n  }\n\n  /**\n   * @member Num#cbrt\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cbrt\n   * @description Synonym for\n   * [Math.cbrt]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cbrt}.\n   */\n  get cbrt() {\n    const cbrt = Math.pow(Math.abs(this.$), 1 / 3);\n\n    return this.$ > 0 ? cbrt : -cbrt;\n  }\n\n  /**\n   * @member Num#ceil\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil\n   * @description Synonym for\n   * [Math.ceil]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil}.\n   *\n   * @example\n   * new Num(1.1).ceil;  // 2\n   * new Num(-1.1).ceil; // -1\n   */\n  get ceil() {\n    return Math.ceil(this.$);\n  }\n\n  /**\n   * @method Num#cos\n   * @public\n   * @param {Boolean|*} [asDegrees = false] If it is truthy the number is treated as a degree value.\n   * @returns {Number} Cosine of the number.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cos\n   * @description Synonym for\n   * [Math.cos]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cos}.\n   */\n  cos(asDegrees) {\n    return Math.cos((asDegrees ? toRadian : 1) * this.$);\n  }\n\n  /**\n   * @member Num#cosh\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cosh\n   * @description Synonym for\n   * [Math.cosh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cosh}.\n   */\n  get cosh() {\n    const exp = this.exp;\n\n    return (exp + 1 / exp) / 2;\n  }\n\n  /**\n   * @member Num#cube\n   * @type {Number}\n   * @public\n   * @readonly\n   * @description Cube of the number.\n   *\n   * @example\n   * new Num(2).cube;  // 8\n   * new Num(-3).ceil; // -27\n   */\n  get cube() {\n    return this.$ * this.$ * this.$;\n  }\n\n  /**\n   * @member Num#exp\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/exp\n   * @description Synonym for\n   * [Math.exp]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/exp}.\n   */\n  get exp() {\n    return Math.exp(this.$);\n  }\n\n  /**\n   * @member Num#floor\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/floor\n   * @description Synonym for\n   * [Math.floor]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/floor}.\n   *\n   * @example\n   * new Num(1.1).floor;  // 1\n   * new Num(-1.1).floor; // -2\n   */\n  get floor() {\n    return Math.floor(this.$);\n  }\n\n  /**\n   * @method Num#interval\n   * @public\n   * @param {Function} func - Function that is called every <number> milliseconds.\n   * @param {Array} [args] - Arguments passed to the function.\n   * @returns {Function} Function that aborts the interval. The context of the function (if it's not already bound)\n   * is the object with the abort method.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/setInterval\n   * @description Analogue of the\n   * [setInterval]{@link https://developer.mozilla.org/en/docs/Web/API/WindowTimers/setInterval}.\n   *\n   * @example\n   * const times = 0;\n   * new Num(50).interval(function () {\n   *   if (++times === 10) {\n   *     this.abort();\n   *   }\n   * });\n   */\n  interval(func, args = []) {\n    validate([func], ['function'], 'Num#interval');\n\n    func = new Func(func).bindContext({ abort });\n    args = toArray(args);\n\n    const number = this.$;\n\n    let timeout;\n    let aborted;\n\n    setTimeout(function interval() {\n      func.apply(null, args);\n\n      if (!aborted) {\n        timeout = setTimeout(interval, number);\n      }\n    }, 0);\n\n    return abort;\n\n    function abort() {\n      aborted = true;\n\n      return clearTimeout(timeout);\n    }\n  }\n\n  /**\n   * @member Num#ln\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log\n   * @description Synonym for\n   * [Math.log]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log}.\n   */\n  get ln() {\n    return Math.log(this.$);\n  }\n\n  /**\n   * @method Num#log\n   * @public\n   * @param {Number} number - Number to get logarithm of.\n   * @returns {Number} Logarithm of the argument number to the number base.\n   * @description Returns the logarithm of the argument number to the number base.\n   *\n   * @example\n   * new Num(2).log(16);  // 4\n   * new Num(3).log(243); // 5\n   */\n  log(number) {\n    return Math.log(number) / Math.log(this.$);\n  }\n\n  /**\n   * @member Num#log2\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log2\n   * @description Synonym for\n   * [Math.log2]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log2}.\n   */\n  get log2() {\n    return this.ln / ln2;\n  }\n\n  /**\n   * @member Num#log10\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log10\n   * @description Synonym for\n   * [Math.log10]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log10}.\n   */\n  get log10() {\n    return this.ln / ln10;\n  }\n\n  /**\n   * @method Num#pow\n   * @public\n   * @param {Number} power - Power the number should be raised to.\n   * @returns {Number} The number to the <power> power.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/pow\n   * @description Synonym for\n   * [Math.pow]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/pow}.\n   *\n   * @example\n   * new Num(4).pow(.5); // 2\n   * new Num(3).pow(2);  // 9\n   */\n  pow(power) {\n    return Math.pow(this.$, power);\n  }\n\n  /**\n   * @method Num#root\n   * @public\n   * @param {Number} power - Power the number should be raised to.\n   * @returns {Number} The <power> root of the number.\n   * @description Synonym for number.pow(1 / power);\n   *\n   * @example\n   * new Num(4).root(2);   // 0.5\n   * new Num(243).root(5); // 3\n   */\n  root(power) {\n    return Math.pow(this.$, 1 / power);\n  }\n\n  /**\n   * @member Num#round\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/round\n   * @description Synonym for\n   * [Math.round]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/round}.\n   *\n   * @example\n   * new Num(1.1).floor;  // 1\n   * new Num(-1.1).floor; // -1\n   * new Num(1.5).floor;  // 2\n   */\n  get round() {\n    return Math.round(this.$);\n  }\n\n  /**\n   * @member Num#sign\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n   * @description Synonym for\n   * [Math.sign]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sign}.\n   */\n  get sign() {\n    const number = this.$;\n\n    if (!number) {\n      return number;\n    }\n\n    return number > 0 ? 1 : -1;\n  }\n\n  /**\n   * @method Num#sin\n   * @public\n   * @param {Boolean|*} [asDegrees = false] If it is truthy the number is treated as a degree value.\n   * @returns {Number} Sine of the number.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sin\n   * @description Synonym for\n   * [Math.sin]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sin}.\n   */\n  sin(asDegrees) {\n    return Math.sin((asDegrees ? toRadian : 1) * this.$);\n  }\n\n  /**\n   * @member Num#sinh\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sinh\n   * @description Synonym for\n   * [Math.sinh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sinh}.\n   */\n  get sinh() {\n    const exp = this.exp;\n\n    return (exp - 1 / exp) / 2;\n  }\n\n  /**\n   * @member Num#sq\n   * @type {Number}\n   * @public\n   * @readonly\n   * @description The square of the number.\n   *\n   * @example\n   * new Num(2).sq;  // 4\n   * new Num(-3).sq; // 9\n   */\n  get sq() {\n    return this.$ * this.$;\n  }\n\n  /**\n   * @member Num#sqrt\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sqrt\n   * @description Synonym for\n   * [Math.sqrt]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sqrt}.\n   */\n  get sqrt() {\n    return Math.sqrt(this.$);\n  }\n\n  /**\n   * @method Num#tan\n   * @public\n   * @param {Boolean|*} [asDegrees = false] If it is truthy the number is treated as a degree value.\n   * @returns {Number} Tangent of the number.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/tan\n   * @description Synonym for\n   * [Math.tan]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/tan}.\n   */\n  tan(asDegrees) {\n    return Math.tan((asDegrees ? toRadian : 1) * this.$);\n  }\n\n  /**\n   * @member Num#tanh\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/tanh\n   * @description Synonym for\n   * [Math.tanh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/tanh}.\n   */\n  get tanh() {\n    const number = this.$;\n\n    if (!isFinite(number)) {\n      return this.sign;\n    }\n\n    const exp = Math.exp(2 * number);\n\n    return (exp - 1) / (exp + 1);\n  }\n\n  /**\n   * @method Num#timeout\n   * @public\n   * @param {*} [value] - Value to be resolved by the promise.\n   * @returns {Promise} Promise that could be aborted.\n   * @see https://developer.mozilla.org/en/docs/Web/API/WindowTimers/setTimeout\n   * @description Promise-based analogue of\n   * [setTimeout]{@link https://developer.mozilla.org/en/docs/Web/API/WindowTimers/setTimeout}.\n   *\n   * @example\n   * new Num(50).timeout('resolved').then((value) => {\n   *   console.log(value); // 'resolved'\n   * });\n   *\n   * const promise = new Num(50).timeout();\n   * promise.abort();\n   */\n  timeout(value) {\n    let timeout;\n    let reject;\n\n    const promise = new Promise((resolve, rej) => {\n      reject = rej;\n      timeout = setTimeout(resolve, this.$, value);\n    });\n\n    promise.abort = function abort() {\n      clearTimeout(timeout);\n\n      reject(new Error('Timeout was aborted'));\n\n      return this;\n    };\n\n    return promise;\n  }\n\n  /**\n   * @method Num#toBase\n   * @public\n   * @param {Number} [base = 10] - Base that the number should inverted to.\n   * @returns {String} A string representation of the number in <base> base.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toString\n   * @description Synonym for\n   * [Number#toString]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toString}.\n   *\n   * @example\n   * new Num(4).toBase(2); // 100\n   * new Num(3).toBase();  // 3\n   */\n  toBase(base = 10) {\n    return this.$.toString(base);\n  }\n\n  /**\n   * @method Num#toExponential\n   * @public\n   * @param {Number} [fractionDigits] - See the link.\n   * @returns {String} A string representation of the number in the exponential format.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential\n   * @description Synonym for\n   * [Number#toExponential]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential}.\n   */\n  toExponential(fractionDigits) {\n    return this.$.toExponential(fractionDigits);\n  }\n\n  /**\n   * @method Num#toFixed\n   * @public\n   * @param {Number} [digits = 0] - See the link.\n   * @returns {String} Fixed-point formatted number.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed\n   * @description Synonym for\n   * [Number#toFixed]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed}.\n   */\n  toFixed(digits) {\n    return this.$.toFixed(digits);\n  }\n\n  /**\n   * @method Num#toPrecision\n   * @public\n   * @param {Number} [precision] - See the link.\n   * @returns {String} A string representation of the number to the specified precision.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toPrecision\n   * @description Synonym for\n   * [Number#toPrecision]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toPrecision}.\n   */\n  toPrecision(precision) {\n    return this.$.toPrecision(precision);\n  }\n\n  valueOf() {\n    return Number(this.$);\n  }\n}\n\ndefineProperties(Num.prototype, {\n  [Symbol.toStringTag]: 'Num'\n});\n\nconstructors[1].push({\n  check: isNumber,\n  cls: Num\n});\n\n/**\n * @function rand\n * @public\n * @param {Number} [start = 0] - Start of the range.\n * @param {Number} [end = 1] - End of the range.\n * @returns {Number} Random number.\n * @description Returns a random number in the range specified by the arguments.\n *\n * @example\n * rand(1, 5); // 2.315\n * rand(1, 5); // 4.356763\n */\nexport function rand(start = 0, end = 1) {\n  return start + (end - start) * Math.random();\n}\n\n/**\n * @function random\n * @public\n * @param {Integer} start - Start of the range.\n * @param {Integer} end - End of the range.\n * @returns {Number} Random integer.\n * @description Returns a random integer number in the range specified by the arguments.\n *\n * @example\n * random(1, 5); // 3\n * random(1, 5); // 1\n */\nexport function random(start, end) {\n  validate([start, end], ['intLike', 'intLike'], 'random');\n\n  if (end <= start) {\n    throw new Error('The second argument must be greater than the first!', 'random');\n  }\n\n  return Math.floor(rand(start, end + 1));\n}\n\nexport default Num;\n","/**\n * @module Str\n * @private\n * @mixin\n * @description Exports Str class.\n */\n\nimport D from './D';\nimport Super from './Super';\nimport constructors from './constants/constructors';\nimport regexpSpecialCharacters from './constants/regexpSpecialCharacters';\nimport {\n  isFunction, isNumberLike, isObject, isString,\n  validate, Symbol, defineProperties, iterate\n} from './helpers';\n\nconst htmlSpecials = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;'\n};\nconst regexpSpecialsRegexp = new RegExp(\n  new Super(regexpSpecialCharacters)\n    .word((x) => `\\\\${ x }|`)\n    .replace(/\\|$/, ''),\n  'g'\n);\n\n/**\n * @class Str\n * @extends Super\n * @public\n * @param {String} [string = ''] - A string to wrap.\n * @returns {Str} Instance of Str.\n * @description Wrap of a string.\n *\n * @example\n * const s = new Num('1');\n */\nexport class Str extends Super {\n  constructor(string = '') {\n    super(string);\n\n    /**\n     * @member Str#$\n     * @type {String}\n     * @public\n     * @description Original string.\n     */\n  }\n\n  /**\n   * @method Str#capitalizeFirst\n   * @public\n   * @returns {Str} Capitalized string.\n   * @description Method capitalizing the first symbol.\n   *\n   * @example\n   * new Str('foo').capitalizeFirst().$; // 'Foo'\n   */\n  capitalizeFirst() {\n    const string = this.$;\n\n    return new Str(string.slice(0, 1).toUpperCase() + string.slice(1));\n  }\n\n  /**\n   * @method Str#endsWith\n   * @public\n   * @param {String} searchString - See the link.\n   * @param {Number} [position = string.length] - See the link.\n   * @returns {Boolean} If the string ends with the argument string.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n   * @description Synonym for\n   * [String#endsWith]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith}.\n   */\n  endsWith(searchString, position) {\n    if (arguments.length < 2) {\n      position = this.$.length;\n    }\n\n    return this\n      .slice(0, position)\n      .revert()\n      .startsWith(new Str(searchString).revert().$);\n  }\n\n  /**\n   * @method Str#escapeHTML\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Methods escaping \"&\", \"<\" and \">\" symbols.\n   *\n   * @example\n   * new Str('\"1 < 2\" & \"7 > 4\" are true expressions.').escapeHTML().$;\n   * // '\"1 &lt; 2\" &amp \"7 &gt; 2\" are true expressions.'\n   */\n  escapeHTML() {\n    let string = this.$;\n\n    iterate(htmlSpecials, (escaped, symbol) => {\n      string = string.replace(new RegExp(symbol, 'g'), escaped);\n    });\n\n    return new Str(string);\n  }\n\n  /**\n   * @method Str#escapeRegExp\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Method escaping RegExp special characters.\n   *\n   * @example\n   * new Str('(213.98 - [] {})').escapeRegExp().$; // '\\(213\\.98 \\- \\[\\] \\{\\}\\)'\n   */\n  escapeRegExp() {\n    return this.replace(regexpSpecialsRegexp, '\\\\$&');\n  }\n\n  /**\n   * @method Str#in\n   * @public\n   * @param {*} object - Object to check the string as a property in.\n   * @returns {Boolean} If it is in the object or not.\n   * @description Returns string in object.\n   *\n   * @example\n   * new Str('a').in({ a: 1 }); // true\n   * new Str('toFixed').in(1);  // false\n   * new Str('a').in(null);     // false\n   */\n  in(object) {\n    if (!isObject(object)) {\n      return false;\n    }\n\n    return this.$ in object;\n  }\n\n  /**\n   * @method Str#indexOf\n   * @public\n   * @param {String} searchValue - See the link.\n   * @param {Number} [fromIndex = 0] - See the link.\n   * @returns {Number} Found index or -1.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf\n   * @description Synonym for\n   * [String#indexOf]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf}.\n   */\n  indexOf(searchValue, fromIndex) {\n    return this.$.indexOf.apply(this.$, arguments);\n  }\n\n  /**\n   * @method Str#lastIndexOf\n   * @public\n   * @param {String} searchValue - See the link.\n   * @param {Number} [fromIndex = string.length] - See the link.\n   * @returns {Number} Found index or -1.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf\n   * @description Synonym for\n   * [String#lastIndexOf]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf}.\n   */\n  lastIndexOf(searchValue, fromIndex) {\n    return this.$.lastIndexOf.apply(this.$, arguments);\n  }\n\n  /**\n   * @member Str#length\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/length\n   * @description Synonym for\n   * [String#length]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/length}.\n   */\n  get length() {\n    return this.$.length;\n  }\n\n  /**\n   * @method Str#match\n   * @public\n   * @returns {Arr|Super} D-Wrap of found match.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/match\n   * @description Synonym for\n   * [String#match]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/match}.\n   */\n  match(regexp) {\n    return D(this.$.match.apply(this.$, arguments));\n  }\n\n  /**\n   * @method Str#repeat\n   * @public\n   * @param {Integer} times - Times to repeat the string.\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n   * @description Synonym for\n   * [String#repeat]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/repeat}.\n   *\n   * @example\n   * new Str('123').repeat(2).$; // '123123'\n   * new Str('123').repeat(0).$; // ''\n   */\n  repeat(times) {\n    validate([times], [['intLike', '>=0']], 'Str#repeat');\n\n    times = +times;\n\n    const string = this.$;\n\n    let s = '';\n\n    for (let i = 0; i < times; i++) {\n      s += string;\n    }\n\n    return new Str(s);\n  }\n\n  /**\n   * @method Str#replace\n   * @public\n   * @param {RegExp|String} regexp - See the link.\n   * @param {String|Function} [replacer = ''] - See the link.\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/replace\n   * @description Synonym for\n   * [String#replace]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/replace}\n   * besides that replacer has a default value of ''.\n   */\n  replace(regexp, replacer = '') {\n    return new Str(this.$.replace(regexp, replacer));\n  }\n\n  /**\n   * @method Str#replaceString\n   * @public\n   * @param {String} string - String to replace.\n   * @param {String} [replacer = ''] - String to replace with.\n   * @returns {Str} New instance of Str.\n   * @description Method for global string replaceing.\n   *\n   * @example\n   * new Str('123123').replaceString('1', '4').$; // '423423'\n   * new Str('123123').replaceString('1').$;      // '2323'\n   */\n  replaceString(string, replacer = '') {\n    string = new Super(string).$;\n\n    validate([string], ['string'], 'Str#replaceString');\n\n    return new Str(this.$.split(string).join(replacer));\n  }\n\n  /**\n   * @method Str#revert\n   * @public\n   * @returns {Str} New instance of string.\n   * @description Method for reverting a string.\n   *\n   * @example\n   * new Str('1234').revert().$; // '4321'\n   */\n  revert() {\n    const string = this.$;\n    let str = '';\n\n    for (let i = string.length - 1; i >= 0; i--) {\n      str += string[i];\n    }\n\n    return new Str(str);\n  }\n\n  /**\n   * @method Str#search\n   * @public\n   * @param {RegExp} regexp - See the link.\n   * @returns {Number} Index of the first match, if found, and -1 if not.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/search\n   * @description Synonym for\n   * [String#search]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/search}.\n   */\n  search(regexp) {\n    validate([regexp], ['regexp']);\n\n    return this.$.search.apply(this.$, arguments);\n  }\n\n  /**\n   * @method Str#slice\n   * @public\n   * @param {Number} [beginSlice = 0] - See the link.\n   * @param {Number} [endSlice = string.length] - See the link.\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/slice\n   * @description Synonym for\n   * [String#slice]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/slice}.\n   */\n  slice(beginSlice, endSlice) {\n    return new Str(this.$.slice.apply(this.$, arguments));\n  }\n\n  /**\n   * @method Str#split\n   * @public\n   * @param {RegExp|String} [separator] - See the link.\n   * @returns {Arr|Super} D-Wrap of the array.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/split\n   * @description Synonym for\n   * [String#split]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/split}.\n   */\n  split(separator) {\n    return D(this.$.split.apply(this.$, arguments));\n  }\n\n  /**\n   * @method Str#startsWith\n   * @public\n   * @param {String} searchString - See the link.\n   * @param {Number} [position = 0] - See the link.\n   * @returns {Boolean} If the string ends with the argument string.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n   * @description Synonym for\n   * [String#startsWith]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith}.\n   */\n  startsWith(searchString, position = 0) {\n    return this.$.indexOf.apply(this.$, arguments) === position;\n  }\n\n  /**\n   * @method Str#substr\n   * @public\n   * @param {Number} [start = 0] - See the link.\n   * @param {Number} [length = string.length] - See the link.\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/substr\n   * @description Synonym for\n   * [String#substr]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/substr}.\n   */\n  substr(start, length) {\n    return new Str(this.$.substr.apply(this.$, arguments));\n  }\n\n  /**\n   * @method Str#substring\n   * @public\n   * @param {Number} [indexStart = 0] - See the link.\n   * @param {Number} [indexEnd = string.length] - See the link.\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/substring\n   * @description Synonym for\n   * [String#substring]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/substring}.\n   */\n  substring(indexStart, indexEnd) {\n    return new Str(this.$.substring.apply(this.$, arguments));\n  }\n\n  /**\n   * @method Str#toCamelCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Removes following regexp /\\s\\-_\\./ making the string camel cased.\n   *\n   * @example\n   * new Str('spinal-case').toCamelCase().$;  // 'spinalCase'\n   * new Str('_snake_case_').toCamelCase().$; // 'snakeCase'\n   */\n  toCamelCase() {\n    return new Str(trim(this.$)\n      .replace(/[\\s\\-_\\.]+/g, '-')\n      .replace(/\\-[^\\-]/g, (match) => match[1].toUpperCase())\n      .replace(/^[\\S]/, (match) => match.toLowerCase())\n    );\n  }\n\n  /**\n   * @method Str#toCapitalCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Removes following regexp /\\-_\\./ making the string capital letter cased.\n   *\n   * @example\n   * new Str('spinal-case').toCapitalCase().$;  // 'Spinal Case'\n   * new Str('_snake_case_').toCapitalCase().$; // 'Snake Case'\n   */\n  toCapitalCase() {\n    return new Str(trim(this.$)\n      .replace(/[\\s\\-_\\.]+/g, ' ')\n      .replace(/[\\S]/g, (match) => (\n        match.toLowerCase() === match ? match : ` ${ match }`\n      ))\n      .replace(/\\s[\\S]/g, (match) => match.toUpperCase())\n      .replace(/\\s+/g, ' ')\n      .replace(/^\\s/, '')\n      .replace(/^[\\S]/, (match) => match.toUpperCase())\n    );\n  }\n\n  /**\n   * @method Str#toDotCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Removes following regexp /\\-_\\./ making the string dot cased.\n   *\n   * @example\n   * new Str('spinal-case').toDotCase().$;  // 'spinal.case'\n   * new Str('_snake_case_').toDotCase().$; // 'snake.case'\n   */\n  toDotCase() {\n    return new Str(trim(this.$)\n      .replace(/[\\s\\-_\\.]+/g, '.')\n      .replace(/[^\\.]/g, (match) => (\n        match.toLowerCase() === match ? match : `.${ match }`\n      ))\n      .replace(/\\.+/g, '.')\n      .replace(/^\\./, '')\n      .toLowerCase()\n    );\n  }\n\n  /**\n   * @method Str#toHyphenCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Removes following regexp /\\s\\-_\\./ making the string camel cased.\n   *\n   * @example\n   * new Str('camelCase').toSpinalCase().$;    // 'camel-case'\n   * new Str('_snake_case_').toSpinalCase().$; // 'snake-case'\n   */\n  toHyphenCase() {\n    return new Str(trim(this.$)\n      .replace(/[\\s\\-_\\.]+/g, '-')\n      .replace(/[^\\-]/g, (match) => (\n        match.toLowerCase() === match ? match : `-${ match }`\n      ))\n      .replace(/\\-+/g, '-')\n      .replace(/^\\-/, '')\n      .toLowerCase()\n    );\n  }\n\n  /**\n   * @method Str#toLowerCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase\n   * @description Synonym for\n   * [String#toLowerCase]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase}.\n   *\n   * @example\n   * new Str('UPPER-CASE').toLowerCase().$;  // 'upper-case'\n   */\n  toLowerCase() {\n    return new Str(this.$.toLowerCase());\n  }\n\n  /**\n   * @method Str#toSnakeCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Removes following regexp /\\s\\-\\./ making the string spinal cased.\n   *\n   * @example\n   * new Str('spinal-case').toSnakeCase().$; // 'spinal_case'\n   * new Str('camelCase').toSnakeCase().$;   // 'camel_case'\n   */\n  toSnakeCase() {\n    return new Str(trim(this.$)\n      .replace(/[\\s\\-_\\.]+/g, '_')\n      .replace(/[^_]/g, (match) => (\n        match.toLowerCase() === match ? match : `_${ match }`\n      ))\n      .replace(/_+/g, '_')\n      .replace(/^_/, '')\n      .toLowerCase()\n    );\n  }\n\n  /**\n   * @method Str#toSpaceCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Removes following regexp /\\-_\\./ making the string space cased.\n   *\n   * @example\n   * new Str('spinal-case').toSpaceCase().$;  // 'spinal case'\n   * new Str('_snake_case_').toSpaceCase().$; // 'snake case'\n   */\n  toSpaceCase() {\n    return new Str(trim(this.$)\n      .replace(/[\\s\\-_\\.]+/g, ' ')\n      .replace(/[\\S]/g, (match) => (\n        match.toLowerCase() === match ? match : ` ${ match }`\n      ))\n      .replace(/\\s+/g, ' ')\n      .replace(/^\\s/, '')\n      .toLowerCase()\n    );\n  }\n\n  toString() {\n    return this.$;\n  }\n\n  /**\n   * @method Str#toUpperCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase\n   * @description Synonym for\n   * [String#toUpperCase]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase}.\n   *\n   * @example\n   * new Str('lower-case').toUpperCase().$;  // 'LOWER-CASE'\n   */\n  toUpperCase() {\n    return new Str(this.$.toUpperCase());\n  }\n\n  /**\n   * @method Str#trim\n   * @public\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trim\n   * @description Synonym for\n   * [String#trim]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trim}.\n   */\n  trim() {\n    return new Str(this.$.replace(/^[\\s\\ufeff\\u00a0]+|[\\s\\ufeff\\u00a0]+$/g, ''));\n  }\n\n  /**\n   * @method Str#trimLeft\n   * @public\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trimLeft\n   * @description Synonym for\n   * [String#trimLeft]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trimLeft}.\n   */\n  trimLeft() {\n    return new Str(this.$.replace(/^[\\s\\ufeff\\u00a0]+/, ''));\n  }\n\n  /**\n   * @method Str#trimRight\n   * @public\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trimRight\n   * @description Synonym for\n   * [String#trimRight]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trimRight}.\n   */\n  trimRight() {\n    return new Str(this.$.replace(/[\\s\\ufeff\\u00a0]+$/, ''));\n  }\n}\n\ndefineProperties(Str.prototype, {\n  [Symbol.toStringTag]: 'Str'\n});\n\nfunction trim(string) {\n  return string.replace(/^[\\s\\-_\\.]+|[\\s\\-_\\.]+$/g, '');\n}\n\n/**\n * @function parseJSON\n * @public\n * @param {String} [json = null] - String to parse.\n * @param {Object} [options] - Options.\n * @param {Boolean|*} [options.numbers] - If it is needed to parse number-like strings as numbers.\n * @param {Boolean|*} [options.dates] - If it is needed to parse date-like string as dates.\n * Date-like string is considered to match ^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d\\.\\d\\d\\dZ?$\n * @param {JSONCallback} [callback] - Callback that called on every iteration.\n * @returns {DWrap} D-Wrap of found match.\n * @description Method for parsing json.\n *\n * @example\n * parseJSON('{ \"a\": 1 }').$;                                           // { a: 1 }\n * parseJSON('{ \"a\": \"1\" }', { numbers: true }).$;                      // { numbers: true }\n * parseJSON('{ \"a\": \"1999-12-31T23:59:59.999Z\" }', { dates: true }).$; // { a: Date {...} }\n */\nexport function parseJSON(json = null, options = {}, callback) {\n  if (arguments.length <= 1) {\n    return D(JSON.parse(json));\n  }\n\n  if (isFunction(options)) {\n    callback = options;\n    options = {};\n  }\n\n  const { numbers, dates } = options;\n  const parsed = JSON.parse(json, function (key, value) {\n    if (dates && /^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d\\.\\d\\d\\dZ?$/.test(value)) {\n      value = new Date(value);\n    } else if (numbers && isNumberLike(value) && isString(value)) {\n      value = Number(value);\n    }\n\n    return callback ? callback.apply(this, arguments) : value;\n  });\n\n  return D(parsed);\n}\n\nconstructors[2].push({\n  check: isString,\n  cls: Str\n});\n\nexport default Str;\n","/**\n * @module constants/formats\n * @private\n * @description Exports different types of formatting for {@link Date#format}.\n */\n\nimport Super from '../Super';\nimport Str from '../Str';\n\nconst zero = new Str('0');\nconst daysOfTheWeekNames = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday'\n];\nconst daysOfTheWeekAliases = new Super(daysOfTheWeekNames).map((value) => value.slice(0, 3)).$;\nconst monthsNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'Jule',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\nconst monthsAliases = new Super(monthsNames).map((value) => value.slice(0, 3)).$;\n\n/**\n * @callback module:constants/formats~matchCallback\n * @param {Dat} date - D-wrap of a date to apply format to.\n * @param {String} string - Matched applied expression.\n */\n\n/**\n * @typedef {Object} module:constants/formats~formatExpr\n * @property {String} format - Matched format.\n * @property {module:constants/formats~matchCallback} match - Callback if there was a match.\n */\n\n/**\n * @type {module:constants/formats~formatExpr[]}\n * @description Array of different formats.\n */\nexport default [\n  {\n    format: 'ccc',\n    match: (date, utc) => round(date[utc]('c'), 3)\n  },\n  {\n    format: 'c',\n    match: (date, utc) => date[utc]('c')\n  },\n  {\n    format: 'ss',\n    match: (date, utc) => round(date[utc]('s'), 2)\n  },\n  {\n    format: 's',\n    match: (date, utc) => date[utc]('s')\n  },\n  {\n    format: 'mm',\n    match: (date, utc) => round(date[utc]('m'), 2)\n  },\n  {\n    format: 'm',\n    match: (date, utc) => date[utc]('m')\n  },\n  {\n    format: 'hh',\n    match: (date, utc) => round(date[utc]('h'), 2)\n  },\n  {\n    format: 'h',\n    match: (date, utc) => date[utc]('h')\n  },\n  {\n    format: 'dddd',\n    match: (date, utc) => daysOfTheWeekNames[date[utc]('dw')]\n  },\n  {\n    format: 'ddd',\n    match: (date, utc) => daysOfTheWeekAliases[date[utc]('dw')]\n  },\n  {\n    format: 'dd',\n    match: (date, utc) => round(date[utc]('d'), 2)\n  },\n  {\n    format: 'd',\n    match: (date, utc) => date[utc]('d')\n  },\n  {\n    format: 'MMMM',\n    match: (date, utc) => monthsNames[date[utc]('M') - 1]\n  },\n  {\n    format: 'MMM',\n    match: (date, utc) => monthsAliases[date[utc]('M') - 1]\n  },\n  {\n    format: 'MM',\n    match: (date, utc) => round(date[utc]('M'), 2)\n  },\n  {\n    format: 'M',\n    match: (date, utc) => date[utc]('M')\n  },\n  {\n    format: 'yyyy',\n    match: (date, utc) => round(date[utc]('y'), 4)\n  },\n  {\n    format: 'yy',\n    match: (date, utc) => String(date[utc]('y')).slice(-2)\n  },\n  {\n    format: 'y',\n    match: (date, utc) => date[utc]('y')\n  }\n];\n\n/**\n * @function round\n * @private\n * @param {Number} number - Number to round.\n * @param {Number} digits - Number of the digits of the output.\n * @returns {String} String with necessary additional starting zeroes.\n */\nfunction round(number, digits) {\n  const string = String(number);\n  let zeroes = digits - string.length;\n\n  zeroes = zeroes < 0 ? 0 : zeroes;\n\n  return zero.repeat(zeroes).$ + string;\n}\n","/**\n * @module Dat\n * @private\n * @mixin\n * @description Exports Dat class.\n */\n\nimport Super from './Super';\nimport Num from './Num';\nimport Str from './Str';\nimport { switcher } from './Switcher';\nimport constructors from './constants/constructors';\nimport formats from './constants/formats';\nimport { isDate, iterate, Symbol, defineProperties } from './helpers';\n\n/**\n * @typedef {*} DateLike\n * @public\n */\n\n/**\n * @typedef {'c'|'s'|'m'|'h'|'d'|'w'|'M'|'y'} AddPeriod\n * @public\n */\n\n/**\n * @typedef {'c'|'s'|'m'|'h'|'d'|'dw'|'M'|'y'} GetPeriod\n * @public\n */\n\n/**\n * @typedef {'c'|'s'|'m'|'h'|'d'|'M'|'y'} OfOnePeriod\n * @public\n */\n\n/**\n * @typedef {'c'|'s'|'m'|'h'|'d'|'M'|'y'} SetPeriod\n * @public\n */\n\n/**\n * @typedef {'ccc'|'c'|'ss'|'s'|'mm'|'m'|'hh'|'h'|'dddd'|'ddd'|'dd'|'d'|'MMMM'|'MMM'|'MM'|'M'|'yyyy'|'yy'|'y'} Format\n * @public\n */\n\nconst coeffs = {\n  c: 1,\n  s: 1000,\n  m: 60000,\n  h: 3600000,\n  d: 86400000,\n  w: 604800000,\n  M: 2592000000,\n  y: 31536000000\n};\n\nconst getSwitcher = switcher({\n  c: (date, utc) => date[`${ utc }Milliseconds`](),\n  s: (date, utc) => date[`${ utc }Seconds`](),\n  m: (date, utc) => date[`${ utc }Minutes`](),\n  h: (date, utc) => date[`${ utc }Hours`](),\n  d: (date, utc) => date[`${ utc }Date`](),\n  dw: (date, utc) => date[`${ utc }Day`](),\n  M: (date, utc) => date[`${ utc }Month`]() + 1,\n  y: (date, utc) => date[`${ utc }FullYear`]()\n}, 'equals', NaN);\nconst setSwitcher = switcher({\n  c: (date, value, utc) => date[`${ utc }Milliseconds`](value),\n  s: (date, value, utc) => date[`${ utc }Seconds`](value),\n  m: (date, value, utc) => date[`${ utc }Minutes`](value),\n  h: (date, value, utc) => date[`${ utc }Hours`](value),\n  d: (date, value, utc) => date[`${ utc }Date`](value),\n  M: (date, value, utc) => date[`${ utc }Month`](value - 1),\n  y: (date, value, utc) => date[`${ utc }FullYear`](value)\n});\n\n/**\n * @class Dat\n * @extends Super\n * @public\n * @param {Date} [date = new Date()] - A date to wrap.\n * @returns {Dat} Instance of Dat.\n * @description Wrap of a date.\n *\n * @example\n * const date = new Dat(new Date());\n */\nexport class Dat extends Super {\n  constructor(date = new Date()) {\n    super(date);\n\n    /**\n     * @member Dat#$\n     * @type {Date}\n     * @public\n     * @description Original date.\n     */\n  }\n\n  /**\n   * @method Dat#add\n   * @public\n   * @param {AddPeriod|Object.<AddPeriod, Number>} what - What to add.\n   * @param {Number} [number] - Number of what to add if the first argument is a period string.\n   * @returns {Dat} Returns this.\n   * @description Method for adding amounts of time to the date. Returns new instance of Dat.\n   *\n   * @example\n   * new Dat(new Date('1999-12-31T23:59:59.999Z')).add('c', 2).toISOString();         // '2000-01-01T00:00:00.001Z'\n   * new Dat(new Date('1999-12-31T23:59:59.999Z')).add({ c: 2, d: 5 }).toISOString(); // '2000-01-06T00:00:00.001Z'\n   */\n  add(what, number) {\n    if (arguments.length >= 2) {\n      what = { [what]: number };\n    }\n\n    return this.time(this.time() + new Super(what).sum((value, what) => coeffs[what] * value));\n  }\n\n  /**\n   * @method Dat#expires\n   * @public\n   * @param {*} [value = this] - Value to resolve after the date expires.\n   * @returns {Promise} New instance of Promise.\n   * @description Method for defining when the date expires.\n   *\n   * @example\n   * new Dat().add('c', 500).expires('Expired').then((value) => {\n   *   // After 500 milliseconds\n   *   console.log(value); // 'Expired'\n   * });\n   */\n  expires(value) {\n    if (!arguments.length) {\n      value = this;\n    }\n\n    return new Num(this.$ - now()).timeout(value);\n  }\n\n  /**\n   * @method Dat#format\n   * @public\n   * @param {String} string - Template for the output.\n   * @param {String} [prefix = ''] - If needed [all special strings]{@link Format}\n   * are treated as they should be prefix with prefix.\n   * @returns {String} Formatted string.\n   * @description Method for creating formatted output based on a string.\n   *\n   * @example\n   * new Dat('1999-12-31T23:59:59.999Z').format('Seconds: $ss, milliseconds: $ccc.', '$');\n   * // 'Seconds: 59, milliseconds: 999.'\n   */\n  format(string, prefix = '') {\n    string = new Str(new Super(string).$);\n    prefix = String(new Super(prefix).$);\n\n    iterate(formats, (format) => {\n      string = string.replaceString(prefix + format.format, format.match(this, 'get'));\n    });\n\n    return string.$;\n  }\n\n  /**\n   * @method Dat#formatUTC\n   * @public\n   * @param {String} string - See {@link Dat#format}.\n   * @param {String} [prefix = ''] - See {@link Dat#format}.\n   * @returns {String} Formatted string.\n   * @description UTC version of {@link Dat#format}.\n   *\n   * @example\n   * new Dat('1999-07-07T03:09:09.099Z').formatUTC(\n   *   `\n   *     Milliseconds: $ccc|$c.\n   *     Seconds:      $ss|$s.\n   *     Minutes:      $mm|$m.\n   *     Hours:        $hh|$h.\n   *     Day:          $dddd|$ddd|$dd|$d.\n   *     Month:        $MMMM|$MMM|$MM|$M.\n   *     Year:         $yyyy|$yy|$y.\n   *   `,\n   *   '$'\n   * );\n   * // Milliseconds: 099|99.\n   * // Seconds:      09|9.\n   * // Minutes:      09|9.\n   * // Hours:        03|3.\n   * // Day:          Friday|Fri|07|7.\n   * // Month:        July|Jul|07|7.\n   * // Year:         1999|99|1999.\n   */\n  formatUTC(string, prefix = '') {\n    string = new Str(new Super(string).$);\n    prefix = String(new Super(prefix).$);\n\n    iterate(formats, (format) => {\n      string = string.replaceString(prefix + format.format, format.match(this, 'getUTC'));\n    });\n\n    return string.$;\n  }\n\n  /**\n   * @method Dat#get\n   * @public\n   * @param {GetPeriod} what - What to get.\n   * @returns {Number} Number of what to get.\n   * @description Method for getting values such as seconds or minutes.\n   *\n   * @example\n   * new Dat(new Date('1999-12-31T23:59:59.999Z')).get('s'); // 59\n   */\n  get(what) {\n    return getSwitcher(what, [this.$, 'get']);\n  }\n\n  /**\n   * @method Dat#getUTC\n   * @public\n   * @param {GetPeriod} what - See {@link Dat#get}.\n   * @returns {Number} Number of what to get.\n   * @description UTC version of {@link Dat#get}.\n   *\n   * @example\n   * const date = new Dat(new Date('1999-12-31T23:59:59.999Z'));\n   *\n   * date.getUTC('c');  // 999\n   * date.getUTC('s');  // 59\n   * date.getUTC('m');  // 59\n   * date.getUTC('h');  // 23\n   * date.getUTC('d');  // 31\n   * date.getUTC('dw'); // 5\n   * date.getUTC('M');  // 12\n   * date.getUTC('y');  // 1999\n   */\n  getUTC(what) {\n    return getSwitcher(what, [this.$, 'getUTC']);\n  }\n\n  /**\n   * @method Dat#isAfter\n   * @public\n   * @param {DateLike} date - Date to be compared to this date.\n   * @returns {Boolean} If this date is after the argument one.\n   * @description Finds out if this date is after the argument one.\n   *\n   * @example\n   * new Dat(new Date(333)).isAfter(new Date(334)); // false\n   * new Dat(new Date(333)).isAfter(new Date(332)); // true\n   */\n  isAfter(date) {\n    date = new Date(new Super(date).$);\n\n    return date.getTime() < this.$.getTime();\n  }\n\n  /**\n   * @method Dat#isBefore\n   * @public\n   * @param {DateLike} date - Date to be compared to this date.\n   * @returns {Boolean} If this date is before the argument one.\n   * @description Finds out if this date is before the argument one.\n   *\n   * @example\n   * new Dat(new Date(333)).isBefore(new Date(334)); // true\n   * new Dat(new Date(333)).isBefore(new Date(332)); // false\n   */\n  isBefore(date) {\n    date = new Date(new Super(date).$);\n\n    return date.getTime() > this.$.getTime();\n  }\n\n  /**\n   * @method Dat#isBetween\n   * @public\n   * @param {DateLike} date1 - Start of the range.\n   * @param {DateLike} date2 - End of the range.\n   * @returns {Boolean} If this date is after date1 and before date2.\n   * @description Finds out if this date is after date1 and before date2.\n   *\n   * @example\n   * new Dat(new Date(333)).isBetween(new Date(332), new Date(334)); // true\n   * new Dat(new Date(333)).isBetween(new Date(334), new Date(332)); // false\n   */\n  isBetween(date1, date2) {\n    const time = this.$.getTime();\n\n    date1 = new Date(new Super(date1).$);\n    date2 = new Date(new Super(date2).$);\n\n    return time > date1.getTime() && time < date2.getTime();\n  }\n\n  /**\n   * @method Dat#isInvalid\n   * @public\n   * @returns {Boolean} If the date is invalid.\n   * @description Returns if the date is invalid.\n   *\n   * @example\n   * new Dat(new Date('a')).isInvalid(); // true\n   * new Dat(new Date(1)).isInvalid();   // false\n   */\n  isInvalid() {\n    return this.$.toString() === 'Invalid Date';\n  }\n\n  /**\n   * @method Dat#isPassed\n   * @public\n   * @returns {Boolean} If the date is passed.\n   * @description Returns if the date is passed.\n   *\n   * @example\n   * new Dat(new Date(1)).isPassed(); // true\n   */\n  isPassed() {\n    return this.isBefore(now());\n  }\n\n  /**\n   * @method Dat#ofOne\n   * @public\n   * @param {OfOnePeriod} what - Period to check.\n   * @param {DateLike} date - Date to check.\n   * @returns {Boolean} If two dates are of one second, minute or something else.\n   * @description Returns if two dates are of one second, minute or something else.\n   *\n   * @example\n   * new Dat(new Date('1999-12-31T23:59:59.000Z')).ofOne('s', new Date(1999-12-31T23:59:59.333Z')); // true\n   * new Dat(new Date('1999-12-31T23:59:59.000Z')).ofOne('s', new Date(1999-12-31T23:59:58.999Z')); // false\n   */\n  ofOne(what, date) {\n    if (!(what in coeffs) || what === 'w') {\n      return false;\n    }\n\n    date = new Dat(new Date(date));\n\n    let started;\n\n    return iterate(coeffs, (coeff, w) => {\n      if (w === what) {\n        started = true;\n      }\n\n      if (!started || w === 'w') {\n        return;\n      }\n\n      if (started && this.get(w) !== date.get(w)) {\n        return false;\n      }\n    }) !== false;\n  }\n\n  /**\n   * @method Dat#set\n   * @public\n   * @param {SetPeriod|Object.<SetPeriod, Number>} what - What to add.\n   * @param {Number} [number] - Number of what to set if the first argument is a period string.\n   * @returns {Dat} Returns this.\n   * @description Method for setting values such as seconds or minutes.\n   *\n   * @example\n   * new Dat(new Date('1999-12-31T23:59:59.999Z')).set('s', 58).get('s');           // 58\n   * new Dat(new Date('1999-12-31T23:59:59.999Z')).set({ c: 998, s: 58 }).get('c'); // 998\n   */\n  set(what, number) {\n    const date = this.$;\n\n    if (arguments.length >= 2) {\n      what = { [what]: number };\n    }\n\n    what = new Super(what).$;\n\n    iterate(what, (value, what) => {\n      setSwitcher(what, [date, value, 'set']);\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Dat#setUTC\n   * @public\n   * @param {SetPeriod|Object.<SetPeriod, Number>} what - See {@link Dat#set}.\n   * @param {Number} [number] - See {@link Dat#set}.\n   * @returns {Dat} Returns this.\n   * @description UTC version of {@link Dat#set}.\n   *\n   * @example\n   * const date = new Dat(new Date('1999-12-31T23:59:59.999Z'));\n   *\n   * date.setUTC('ccc', 998).getUTC('ccc'); // 998\n   * date.setUTC({\n   *   s: 58,\n   *   m: 58,\n   *   h: 22\n   * });\n   *\n   * date.getUTC('s'); // 58\n   * date.getUTC('m'); // 58\n   * date.getUTC('h'); // 23\n   */\n  setUTC(what, number) {\n    const date = this.$;\n\n    if (arguments.length >= 2) {\n      what = { [what]: number };\n    }\n\n    what = new Super(what).$;\n\n    iterate(what, (value, what) => {\n      setSwitcher(what, [date, value, 'setUTC']);\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Dat#setUTC\n   * @public\n   * @param {Number} [time] - Time to set.\n   * @returns {Dat|Number} - If the time argument is present this is returned otherwise the time is returned.\n   * @description Synonym for both\n   * [Date#getTime]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime} and\n   * [Date#setTime]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/setTime}.\n   */\n  time(time) {\n    const date = this.$;\n\n    if (arguments.length) {\n      date.setTime(time);\n    }\n\n    return date.getTime();\n  }\n\n  toISOString() {\n    return this.$.toISOString();\n  }\n\n  toLocaleString() {\n    return this.$.toLocaleString();\n  }\n\n  toString() {\n    return this.$.toString();\n  }\n\n  valueOf() {\n    return this.$.valueOf();\n  }\n}\ndefineProperties(Dat.prototype, {\n  [Symbol.toStringTag]: 'Dat'\n});\n\nconstructors[1].push({\n  check: isDate,\n  cls: Dat\n});\n\n/**\n * @function now\n * @public\n * @returns {Number} Number of milliseconds.\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/now\n * @description Synonym for\n * [Date.now]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/now}.\n */\nexport function now() {\n  return Date.now();\n}\n\n/**\n * @function date\n * @public\n * @param {DateLike} [date = new Date()] - Date-like value that is passed to the Date constructor.\n * @returns {Dat} New instance of Dat.\n * @description Synonym for new Dat(new Date(date));\n */\nexport function date(date) {\n  if (!arguments.length) {\n    return new Dat(new Date(now()));\n  }\n\n  date = new Super(date).$;\n\n  return new Dat(new Date(date));\n}\n\nexport default Dat;\n","/**\n * @module helpers/constructURL\n * @private\n * @description Exports constructURL method.\n */\n\nimport Arr from '../Arr';\nimport Str from '../Str';\nimport { switcher } from '../Switcher';\nimport { isArray, isObject, isPlainObject } from './checkTypes';\nimport { iterate } from './iterate';\n\n/**\n * @type {RegExp}\n * @description Absolute URL pattern.\n */\nconst absoluteURLRegexp = /^(([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\/|data:[a-z]+\\/[a-z]+;base64,)/i;\nconst querySwitcher = switcher('call', () => new Arr([]))\n  .case(isArray, (prefix, query) => {\n    let queryParams = new Arr([]);\n\n    iterate(query, (value) => {\n      if (isPlainObject(value) || isArray(value)) {\n        queryParams = queryParams.concat(querySwitcher(value, [`${ prefix }[]`]));\n\n        return;\n      }\n\n      queryParams.push({\n        param: `${ prefix }[]`,\n        value\n      });\n    });\n\n    return queryParams.$;\n  })\n  .case(isPlainObject, (prefix, query) => {\n    let queryParams = new Arr([]);\n\n    iterate(query, (value, param) => {\n      if (isPlainObject(value) || isArray(value)) {\n        queryParams = queryParams.concat(querySwitcher(value, [prefix ? `${ prefix }[${ param }]` : param]));\n\n        return;\n      }\n\n      queryParams.push({\n        param: prefix ? `${ prefix }[${ param }]` : param,\n        value: isObject(value) ? JSON.stringify(value) : String(value)\n      });\n    });\n\n    return queryParams.$;\n  });\n\n/**\n * @function constructURL\n * @param {String} baseURL - BaseURL of the output URL.\n * @param {String} url - Main part of the output URL.\n * @param {Object} params - Params to replace in the url expressions like \":param\".\n * @param {Object} query - Object with query params.\n * @param {Object} [hash = ''] - URL hash.\n * @param {Object} [encodeOptions = {}] - If you need to encode something.\n * @param {Object} [encodeOptions.params = true] - If you need to encode params.\n * @param {Object} [encodeOptions.query = true] - If you need to encode query params.\n * @returns {String} Constructed URL.\n * @description Function for constructing URL from the base URL, URL, params and query params.\n */\nexport default (baseURL, url, params, query, hash = '', encodeOptions = {}) => {\n  const {\n    params: encodeParams = true,\n    query: encodeQuery = true\n  } = encodeOptions;\n  let URL = isAbsolute(url)\n    ? url\n    : `${ String(baseURL).replace(/\\/+$/, '') }/${ String(url).replace(/^\\/+/, '') }`;\n\n  iterate(params, (value, param) => {\n    URL = new Str(URL).replaceString(`:${ param }`, encode(value, encodeParams)).$;\n  });\n\n  const queryParams = querySwitcher(query, ['']);\n\n  if (queryParams.length) {\n    URL += (URL.indexOf('?') === -1 ? '?' : '&') + queryParams\n      .map(({ param, value }) => `${ encode(param, encodeQuery) }=${ encode(value, encodeQuery) }`)\n      .join('&');\n  }\n\n  return `${ URL }${ hash ? `#${ hash }` : '' }`;\n};\n\n/**\n * @function isAbsolute\n * @param {String} url - URL to check if it is absolute or not.\n * @returns {Boolean} If the argument URL is absolute or not.\n */\nfunction isAbsolute(url) {\n  return absoluteURLRegexp.test(url);\n}\n\n/**\n * @function encode\n * @param {String} string - String to encode using encodeURIComponent.\n * @param {Boolean} isEncoded - If the string should be encoded.\n * @returns {String} Encoded string.\n */\nfunction encode(string, isEncoded) {\n  return isEncoded ? encodeURIComponent(string) : string;\n}\n","/**\n * @module Fetch\n * @private\n * @mixin\n * @description Exports Fetch class.\n */\n\nimport Promise from './Promise';\nimport Super from './Super';\nimport Arr from './Arr';\nimport Str from './Str';\nimport {\n  isArray, isFunction, isString,\n  assign, Symbol, validate, iterate, defineProperties\n} from './helpers';\nimport constructURL from './helpers/constructURL';\nimport parseHeaders from './helpers/parseHeaders';\nimport transformData from './helpers/transformData';\n\n/**\n * @typedef {'get'|'post'|'delete'|'head'|'put'|'patch'} FetchMethod\n * @public\n */\n\n/**\n * @typedef {Object} FetchConfig\n * @public\n * @property {Array.<AfterMiddleware|FetchErrorAfterMiddleware>} [after]\n * @property {Object} [auth]\n * @property {String} [auth.username]\n * @property {String} [auth.password]\n * @property {String} [baseURL]\n * @property {Array.<BeforeMiddleware|FetchErrorBeforeMiddleware>} [before]\n * @property {*} [data]\n * @property {Object.<String, String[]>} [headers]\n * @property {FetchMethod} [method]\n * @property {Object} [params]\n * @property {Object} [query]\n * @property {String} [responseType]\n * @property {Number} [timeout]\n * @property {String} [url]\n * @property {Boolean} [withCredentials]\n */\n\n/**\n * @typedef {Object} FetchResponse\n * @public\n * @property {FetchConfig} config\n * @property {*} data\n * @property {Object.<String, String>} headers\n * @property {Number} status\n * @property {String} statusText\n * @property {XMLHttpRequest} xhr\n */\n\n/**\n * @callback FetchAfterMiddleware\n * @public\n * @param {FetchResponse} config - Fetch response.\n */\n\n/**\n * @callback FetchErrorAfterMiddleware\n * @public\n * @param {Error|*} err - Thrown error.\n * @param {FetchResponse} config - Fetch response.\n */\n\n/**\n * @callback FetchBeforeMiddleware\n * @public\n * @param {FetchConfig} config - Fetch config.\n */\n\n/**\n * @callback FetchErrorBeforeMiddleware\n * @public\n * @param {Error|*} err - Thrown error.\n * @param {FetchConfig} config - Fetch config.\n */\n\n/**\n * @callback FetchConfigFunction\n * @public\n * @param {FetchConfig} config\n */\n\nconst defaults = {\n  after: [],\n  auth: {\n    username: '',\n    password: ''\n  },\n  baseURL: global.location.origin,\n  before: [],\n  data: null,\n  headers: {},\n  method: 'get',\n  params: {},\n  query: {},\n  responseType: '',\n  timeout: 0,\n  url: '',\n  withCredentials: false\n};\nconst uploadMethods = new Arr(['post', 'put']);\n\n/**\n * @class Fetch\n * @extends Function\n * @public\n * @param {FetchConfig} [config = {}] - A number to wrap.\n * @returns {Fetch} Instance of Fetch.\n * An instance of Fetch is a function that simply calls #request with the same arguments.\n * @description Class for fetching data.\n *\n * @example\n * const fetch = new Fetch();\n *\n * fetch('/data').then((res) => {\n *   console.log(res);\n * });\n */\nexport class Fetch extends Function {\n  constructor(config = {}) {\n    super();\n\n    function fetch() {\n      return fetch.request.apply(fetch, arguments);\n    }\n\n    const conf = new Super({}).deepAssign(defaults, config).$;\n\n    if (conf.before.indexOf(fetchBeforeMiddleware) === -1) {\n      conf.before.push(fetchBeforeMiddleware);\n    }\n\n    /**\n     * @member {FetchConfig} Fetch#$$\n     * @type {FetchConfig}\n     * @public\n     * @description Fetch config.\n     */\n    Object.defineProperty(fetch, '$$', { value: conf });\n    Object.setPrototypeOf(fetch, Fetch.prototype);\n\n    return fetch;\n  }\n\n  /**\n   * @method Fetch#after\n   * @public\n   * @param {FetchAfterMiddleware|FetchErrorAfterMiddleware} middleware - Middleware to add.\n   * @param {Boolean|*} [afterAll = true] - Boolean parameter where to put the middleware.\n   * Truthy parameter stands for \"to the end\" and falsey for \"to the beginning\".\n   * @returns {Fetch} Returns this.\n   * @description Middleware that is called after the request.\n   * If the middleware has 2 or less arguments it's treated as success middleware otherwise as an error one.\n   * If the middleware returns a promise it becomes a part of the middleware chain.\n   *\n   * @example\n   * const fetch = new Fetch()\n   *   .after((err, res) => {\n   *     console.log(err);\n   *\n   *     throw err;\n   *   })\n   *   .after((res) => {\n   *     res.json = D(res.data).parseJSON():\n   *   });\n   */\n  after(middleware, afterAll = true) {\n    validate([middleware], ['function'], 'Fetch#after');\n\n    const { after } = this.$$;\n\n    if (afterAll) {\n      after.push(middleware);\n    } else {\n      after.unshift(middleware);\n    }\n\n    return this;\n  }\n\n  /**\n   * @method Fetch#before\n   * @public\n   * @param {FetchBeforeMiddleware|FetchErrorBeforeMiddleware} middleware - Middleware to add.\n   * @param {Boolean|*} [beforeAll = true] - Boolean parameter where to put the middleware.\n   * Truthy parameter stands for \"to the beginning\" and falsey for \"to the end\".\n   * @returns {Fetch} Returns this.\n   * @description Middleware that is called before the request.\n   * If the middleware has 2 or less arguments it's treated as success middleware otherwise as an error one.\n   * If the middleware returns a promise it becomes a part of the middleware chain.\n   *\n   * @example\n   * const fetch = new Fetch()\n   *   .before((err, req) => {\n   *     console.log(err);\n   *\n   *     throw err;\n   *   })\n   *   .before((req) => {\n   *     if (req.url === '/veryLongRequest') {\n   *       req.timeout = 30000;\n   *     }\n   *   });\n   */\n  before(middleware, beforeAll = true) {\n    validate([middleware], ['function'], 'Fetch#before');\n\n    const { before } = this.$$;\n\n    if (beforeAll) {\n      before.unshift(middleware);\n    } else {\n      before.push(middleware);\n    }\n\n    return this;\n  }\n\n  /**\n   * @method Fetch#config\n   * @public\n   * @param {String|FetchConfig|FetchConfigFunction} [property] - If it's a function\n   * it's called with the fetch config argument, if it's a string the value argument\n   * is used for assigning this property to the fetch config\n   * otherwise it's assigned to the fetch config.\n   * @param {*} [value] - See the property argument.\n   * @returns {Fetch|FetchConfig} If the argument is present this is returned otherwise the fetch config is returned.\n   * @description Method for getting and setting config.\n   *\n   * @example\n   * const fetch = new Fetch();\n   *\n   * fetch.config({ baseURL: 5000 });\n   * fetch.config().timeout; // 5000\n   *\n   * fetch.config((config) => {\n   *   config.baseURL += '/api';\n   * });\n   */\n  config(property, value) {\n    const conf = this.$$;\n\n    if (!arguments.length) {\n      return conf;\n    }\n\n    if (isFunction(property)) {\n      property(conf);\n    } else {\n      if (arguments.length >= 2) {\n        property = { [property]: value };\n      }\n\n      new Super(conf).deepAssign(property);\n    }\n\n    return this;\n  }\n\n  /**\n   * @method Fetch#delete\n   * @public\n   * @param {String} [url] - See {@link Fetch#request}.\n   * @param {FetchConfig} [config] - See {@link Fetch#request}.\n   * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\n   * @description Shorthand for #request for delete requests.\n   *\n   * @example\n   * new Fetch().delete('/data').then((res) => {\n   *   console.log(res);\n   * });\n   */\n  delete(url, config = {}) {\n    if (!isString(url)) {\n      config = url;\n      url = undefined;\n    }\n\n    return this.request(url, assign({ method: 'delete' }, config));\n  }\n\n  /**\n   * @method Fetch#get\n   * @public\n   * @param {String} [url] - See {@link Fetch#request}.\n   * @param {FetchConfig} [config] - See {@link Fetch#request}.\n   * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\n   * @description Shorthand for #request for get requests.\n   *\n   * @example\n   * new Fetch().get('/data').then((res) => {\n   *   console.log(res);\n   * });\n   */\n  get(url, config = {}) {\n    if (!isString(url)) {\n      config = url;\n      url = undefined;\n    }\n\n    return this.request(url, assign({ method: 'get' }, config));\n  }\n\n  /**\n   * @method Fetch#head\n   * @public\n   * @param {String} [url] - See {@link Fetch#request}.\n   * @param {FetchConfig} [config] - See {@link Fetch#request}.\n   * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\n   * @description Shorthand for #request for head requests.\n   *\n   * @example\n   * new Fetch().head('/data').then((res) => {\n   *   console.log(res);\n   * });\n   */\n  head(url, config = {}) {\n    if (!isString(url)) {\n      config = url;\n      url = undefined;\n    }\n\n    return this.request(url, assign({ method: 'head' }, config));\n  }\n\n  /**\n   * @method Fetch#headers\n   * @public\n   * @param {String|Object.<String, String|String[]>} header - A header string or an object of the following format:\n   * { [header]: [value1, value2, ...] }.\n   * @param {String|String[]} [value] - Header value. If the first argument is a string\n   * this has to be a header value or an array of header values.\n   * @returns {Fetch} Returns this.\n   * @description Method for setting request headers.\n   *\n   * @example\n   * const fetch = new Fetch()\n   *   .headers('Header1', 'Value')\n   *   .headers('Header2', ['Value1', 'Value2'])\n   *   .headers({\n   *     Header3: ['Value1', 'Value2']\n   *   });\n   */\n  headers(header, value) {\n    const { headers } = this.$$;\n\n    if (arguments.length >= 2) {\n      header = { [header]: value };\n    }\n\n    iterate(header, (value, header) => {\n      const array = headers[header] || [];\n      const toPush = isArray(value) ? value : [value];\n\n      (headers[header] = array).push.apply(array, toPush);\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Fetch#instance\n   * @public\n   * @param {FetchConfig} [config] - New config if needed.\n   * @returns {Fetch} New instance of Fetch.\n   * @description Method for creating new fetch instances based on already existent.\n   *\n   * @example\n   * const mainFetch = new Fetch({\n   *   baseURL: '//other.domain.com/api',\n   *   withCredentials: true\n   * });\n   *\n   * const longFetch = mainFetch.instance({\n   *   timeout: 10000\n   * });\n   */\n  instance(config = {}) {\n    const dataConfig = new Super(config).hasOwn('data')\n      ? { data: config.data }\n      : {};\n\n    delete config.data;\n\n    const conf = new Super({})\n      .deepAssign(this.$$, config)\n      .assign(dataConfig)\n      .$;\n\n    return new Fetch(conf);\n  }\n\n  /**\n   * @method Fetch#patch\n   * @public\n   * @param {String} [url] - See {@link Fetch#request}.\n   * @param {*} [data] - Additional parameter for uploading data.\n   * @param {FetchConfig} [config] - See {@link Fetch#request}.\n   * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\n   * @description Shorthand for #request for head requests.\n   *\n   * @example\n   * new Fetch().patch('/data', { user: 'John' }).then((res) => {\n   *   console.log(res);\n   * });\n   */\n  patch(url, data = {}, config = {}) {\n    if (arguments.length && !isString(url)) {\n      config = data;\n      data = url;\n      url = undefined;\n    }\n\n    return this.request(url, assign({ method: 'patch', data }, config));\n  }\n\n  /**\n   * @method Fetch#post\n   * @public\n   * @param {String} [url] - See {@link Fetch#request}.\n   * @param {*} [data] - Additional parameter for uploading data.\n   * @param {FetchConfig} [config] - See {@link Fetch#request}.\n   * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\n   * @description Shorthand for #request for head requests.\n   *\n   * @example\n   * new Fetch().post('/data', { user: 'John' }).then((res) => {\n   *   console.log(res);\n   * });\n   */\n  post(url, data = {}, config = {}) {\n    if (arguments.length && !isString(url)) {\n      config = data;\n      data = url;\n      url = undefined;\n    }\n\n    return this.request(url, assign({ method: 'post', data }, config));\n  }\n\n  /**\n   * @method Fetch#put\n   * @public\n   * @param {String} [url] - See {@link Fetch#request}.\n   * @param {*} [data] - Additional parameter for uploading data.\n   * @param {FetchConfig} [config] - See {@link Fetch#request}.\n   * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\n   * @description Shorthand for #request for head requests.\n   *\n   * @example\n   * new Fetch().put('/data', { user: 'John' }).then((res) => {\n   *   console.log(res);\n   * });\n   */\n  put(url, data = {}, config = {}) {\n    if (arguments.length && !isString(url)) {\n      config = data;\n      data = url;\n      url = undefined;\n    }\n\n    return this.request(url, assign({ method: 'put', data }, config));\n  }\n\n  /**\n   * @method Fetch#request\n   * @public\n   * @param {String} [url] - URL for the request.\n   * @param {FetchConfig} [config] - Additional config for this particular request.\n   * @returns {Promise.<FetchResponse, Error>} Promise that is resolved with the request response.\n   * @description Main function for making requests. All request methods call this method\n   * including the fetch instance itself.\n   *\n   * @example\n   * const fetch = new Fetch();\n   *\n   * fetch.request('/data', { timeout: 1000 }).then((res) => {\n   *   console.log(res);\n   * });\n   *\n   * fetch.request({ timeout: 1000 }).then((res) => {\n   *   console.log(res);\n   * });\n   *\n   * fetch.request().then((res) => {\n   *   console.log(res);\n   * });\n   */\n  request(url, config = {}) {\n    if (arguments.length === 1 && !isString(url)) {\n      config = url;\n    }\n\n    const dataConfig = new Super(config).hasOwn('data')\n      ? { data: config.data }\n      : {};\n    const urlConfig = isString(url)\n      ? { url }\n      : {};\n\n    delete config.data;\n\n    const conf = new Super(this.$$)\n      .deepClone()\n      .deepAssign(urlConfig, config)\n      .assign(dataConfig)\n      .$;\n\n    let xhr;\n    let promise = Promise.resolve();\n\n    iterate(conf.before, (middleware) => {\n      promise = promise.then(() => {\n        if (middleware.length >= 2) {\n          return Promise.resolve();\n        }\n\n        return new Promise((resolve) => {\n          resolve(middleware(conf));\n        });\n      }, (err) => {\n        if (middleware.length < 2) {\n          return Promise.reject(err);\n        }\n\n        return new Promise((resolve) => {\n          resolve(middleware(err, conf));\n        });\n      });\n    });\n\n    promise = promise.then(() => new Promise((resolve, reject) => {\n      const {\n        after,\n        auth: {\n          username,\n          password\n        },\n        data,\n        headers,\n        method,\n        onprogress,\n        responseType,\n        timeout,\n        url,\n        withCredentials\n      } = conf;\n\n      xhr = new XMLHttpRequest();\n\n      xhr.open(method, url, true, username, password);\n\n      iterate(headers, (value, header) => {\n        xhr.setRequestHeader(header, value);\n      });\n\n      if (onprogress) {\n        if (uploadMethods.indexOfStrict(method) === -1) {\n          xhr.onprogress = onprogress;\n        } else {\n          xhr.upload.onprogress = onprogress;\n        }\n      }\n\n      xhr.onabort = () => {\n        reject(new Error('Request was aborted'));\n\n        xhr = null;\n      };\n\n      xhr.onerror = () => {\n        reject(new Error('Network error'));\n\n        xhr = null;\n      };\n\n      xhr.ontimeout = () => {\n        reject(new Error('Request time exceeded'));\n\n        xhr = null;\n      };\n\n      xhr.onreadystatechange = () => {\n        if (!xhr || !xhr.status || xhr.readyState !== 4) {\n          return;\n        }\n\n        const response = {\n          config: conf,\n          data: !responseType || responseType === 'text' ? xhr.responseText : xhr.response,\n          headers: parseHeaders(xhr.getAllResponseHeaders()),\n          status: xhr.status === 1223 ? 204 : xhr.status,\n          statusText: xhr.status === 1223 ? 'No Content' : xhr.statusText,\n          xhr\n        };\n\n        let promise = Promise.resolve();\n\n        iterate(after, (middleware) => {\n          promise = promise.then(() => {\n            if (middleware.length >= 2) {\n              return Promise.resolve();\n            }\n\n            return new Promise((resolve) => {\n              resolve(middleware(response));\n            });\n          }, (err) => {\n            if (middleware.length < 2) {\n              return Promise.reject(err);\n            }\n\n            return new Promise((resolve) => {\n              resolve(middleware(err, response));\n            });\n          });\n        });\n\n        resolve(promise\n          .then(() => response)\n          .catch((err) => {\n            try {\n              err.response = response;\n            } catch (e) {\n              throw err;\n            }\n\n            throw err;\n          })\n        );\n      };\n\n      xhr.responseType = responseType;\n      xhr.timeout = Number(timeout) || 0;\n      xhr.withCredentials = !!withCredentials;\n\n      xhr.send(data);\n    }));\n\n    promise.abort = function abort() {\n      if (xhr) {\n        xhr.abort();\n      }\n\n      return this;\n    };\n\n    return promise;\n  }\n}\n\ndefineProperties(Fetch.prototype, {\n  [Symbol.toStringTag]: 'Fetch'\n});\n\n/**\n * @function fetchBeforeMiddleware\n * @private\n * @param {FetchConfig} config\n * @description Built-in before middleware for url, data, method, headers construction.\n */\nfunction fetchBeforeMiddleware(config) {\n  const {\n    baseURL,\n    data,\n    headers,\n    method,\n    params,\n    query,\n    url\n  } = config;\n  const METHOD = method.toUpperCase();\n\n  config.method = METHOD;\n  config.url = constructURL(baseURL, url, params, query);\n  config.data = transformData(data, METHOD, headers);\n  config.headers = new Super(headers).object((headers, values, header) => {\n    header = new Str(header)\n      .toCapitalCase()\n      .replace(/\\s+/g, '-')\n      .$;\n\n    headers[header] = values.join(', ');\n  }).$;\n}\n\n/**\n * @const {Fetch} fetch\n * @type {Fetch}\n * @public\n * @description Empty instance of Fetch.\n */\nexport const fetch = new Fetch();\n\nexport default Fetch;\n","/**\n * @module Elem\n * @private\n * @mixin\n * @description Exports Elem class.\n */\n\nimport Super from './Super';\nimport Arr, { array } from './Arr';\nimport { blob } from './BlobObject';\nimport Fetch from './Fetch';\nimport { method } from './Func';\nimport Promise from './Promise';\nimport Str from './Str';\nimport { switcher } from './Switcher';\nimport constructors from './constants/constructors';\nimport appliedRegExps from './constants/appliedRegExps';\nimport elements from './constants/elements';\nimport { canvasGetMethods, canvasRestMethods } from './constants/canvasMethods';\nimport {\n  isArray, isArrayLike, isElement, isFunction,\n  isInteger, isNumber, isNull, isString,\n  assign, dynamicDefineProperties, defineProperties, toArray,\n  validate, toStringTag, iterate, Symbol\n} from './helpers';\n\n/**\n * @typedef {String} ElemEventString\n * @public\n * @description A string containing events separated by a comma with zero or more spaces or just spaces.\n */\n\n/**\n * @callback ElemValueCallback\n * @public\n * @param {String} value - Old value.\n * @param {Elem} elem - Current element.\n * @param {Number} index - Index in the set of the elements.\n */\n\n/**\n * @callback ElemSetOfCallback\n * @public\n * @param {Element} created - Created element.\n * @param {*} value - Value of the iterated element in the object.\n * @param {Key} key - Key of the iterated element in the object.\n * @param {*} object - Object that is iterated over.\n * @param {Element} elem - Current element.\n * @param {Number} index - Index of the current element.\n */\n\n/**\n * @callback ValidateCallback\n * @public\n * @param {*} value - Element value.\n * @param {Element} elem - Element to validate.\n * @param {Number} index - Index of the element.\n */\n\n/**\n * @callback CtxCallback\n * @public\n * @param {CanvasRenderingContext2D} ctx - Canvas rendering context.\n */\n\n/**\n * @callback ElemListener\n * @public\n * @param {Event} e - Fired event.\n * @param {Element} elem - Element on which the listener was called.\n * @param {Number} index - Index of the element on which the listener was called.\n */\n\n/**\n * @callback ElemRemoveListeners\n * @public\n * @param {...ElemEventString} events - If at least one argument present only removes event listeners specified\n * by the events in the arguments.\n */\n\nconst nativeDocument = global.document;\nconst emptyDiv = nativeDocument.createElement('div');\nconst eventSeparator = /, *| +/;\nconst textProperty = new Super(Node.prototype).propertyDescriptor('textContent') ? 'textContent' : 'innerText';\nconst classes = {};\nconst attrs = {};\nconst windowsDwayneData = new Arr([]);\nconst inputElements = 'input, select, textarea, datalist, keygen, output';\nconst dataURLFetch = new Fetch({ responseType: 'arraybuffer' });\nconst click = method('click');\nconst refSwitcher = switcher('strictEquals', 'href')\n  .case(\n    ['img', 'script', 'iframe', 'audio', 'video'],\n    'src'\n  )\n  .case(\n    'form',\n    'action'\n  );\nconst filterSwitcher = switcher('call', (selector) => selector)\n  .case(\n    isString,\n    (selector) =>\n      (elem) => new Elem(elem).is(selector)\n  )\n  .case(\n    [isArray, isElem],\n    (elems) => {\n      elems = new Arr(elems);\n\n      return (elem) => elems.indexOf(elem) !== -1;\n    }\n  );\nconst innerSwitcher = switcher('strictEquals', 0)\n  .case('padding-box', (paddings) => paddings)\n  .case('border-box', (paddings, borders) => paddings + borders);\nconst outerSwitcher = switcher('strictEquals', (borders, paddings) => borders + paddings)\n  .case('padding-box', (borders) => borders)\n  .case('border-box', 0);\n\n/**\n * @class Elem\n * @extends Arr\n * @public\n * @param {Element|Element[]} [elem = []] - An element or an array of elements to wrap.\n * @returns {Elem} Instance of Elem.\n * @description Wrap of an elements set. Also has all methods from from\n * [CanvasRenderingContext2D]{@link https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D}.\n * Getters methods return the same as methods from CanvasRenderingContext2D and the rest return this.\n * Work for the first canvas element in the set.\n *\n * @example\n * new Elem(document.body);\n * new Elem(document.querySelectorAll('.cls'));\n * new Elem(document.getElementsByClassName('cls'));\n */\nexport class Elem extends Arr {\n  constructor(elem = []) {\n    super((() => {\n      let element = elem;\n\n      if (isArrayLike(element) && (\n        isWindow(element) ||\n        isHTMLDocument(element) ||\n        isElement(element)\n      )) {\n        element = [element];\n      }\n\n      return new Arr(toArray(new Super(element).$, true)).object((elems, elem) => {\n        if ((isElement(elem) || isWindow(elem) || isHTMLDocument(elem) || toStringTag(elem) === 'CSSStyleRule') && elems.indexOf(elem) === -1) {\n          return elems.push(elem);\n        }\n\n        if (isElem(elem)) {\n          elems.push.apply(elems, elem.$);\n        }\n      }, []).$;\n    })());\n\n    this.$$ = elem;\n\n    this.forEach(addDwayneData);\n\n    /**\n     * @member {Element[]} Elem#$\n     * @type {Element[]}\n     * @public\n     * @description Constructed element set.\n     */\n\n    /**\n     * @member {*} Elem#$$\n     * @type {*}\n     * @public\n     * @description Initial element set.\n     */\n  }\n\n  /**\n   * @method Elem#add\n   * @public\n   * @param {...(String|Elem|Element|Element[])} elements - Each argument is a selector, or Elem, or Element, or array of Elements.\n   * @returns {Elem} Returns this.\n   * @description Method for adding new elements to the set.\n   *\n   * @example\n   *\n   */\n  add(...elements) {\n    iterate(arguments, (elem) => {\n      toFind(elem).forEach((elem) => {\n        if (this.indexOf(elem) === -1) {\n          this.push(elem);\n        }\n      });\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Elem#addClass\n   * @public\n   * @param {...String} classes - Classes to add.\n   * @returns {Elem} Returns this.\n   * @description Method for adding classes to the all the elements in the set.\n   *\n   * @example\n   * elem.addClass('red', 'round');\n   */\n  addClass(...classes) {\n    return this.forEach((elem) => {\n      const list = elem.classList;\n\n      iterate(arguments, (cls) => list.add(cls));\n    });\n  }\n\n  /**\n   * @method Elem#addHTML\n   * @public\n   * @param {String} html - HTML to add.\n   * @returns {Elem} Returns this.\n   * @description Method for adding HTML to the all elements in the set.\n   *\n   * @example\n   * elem.addHTML('&lt;div&gt;1&lt;/div&gt;');\n   */\n  addHTML(html) {\n    return this.forEach((elem) => {\n      elem.innerHTML += html;\n    });\n  }\n\n  /**\n   * @method Elem#addRule\n   * @public\n   * @param {String} name - Name of the rule.\n   * @param {String} selector - Selector for the rule\n   * @param {Object.<String, String>} style - Style for the selector.\n   * @returns {Elem} Returns this.\n   * @description Method for adding css styles into the first style tag in the set.\n   * Note: style element should be inside the document.\n   *\n   * @example\n   * style.addRule('img-size', 'img.square', {\n   *   width: '40px !important',\n   *   height: '40px !important'\n   * });\n   */\n  addRule(name, selector, style) {\n    this.some((elem) => {\n      if (getName(elem) === 'style') {\n        const { sheet } = elem;\n        const { length } = sheet.cssRules;\n        const rules = new Super(style).word((value, property) => (\n          `${ new Str(property).toHyphenCase() }: ${ value };\\n`\n        ));\n\n        sheet.insertRule(\n          `${ selector } {${ rules && '\\n' }${ rules }}`,\n          length\n        );\n        sheet.cssRules[length].dwayneData = { name };\n\n        return true;\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Elem#addText\n   * @public\n   * @param {String} text - Text to add.\n   * @returns {Elem} Returns this.\n   * @description Method for adding text to the all elements in the set.\n   *\n   * @example\n   * elem.addText('123');\n   */\n  addText(text) {\n    return this.forEach((elem) => {\n      elem.appendChild(nativeDocument.createTextNode(text));\n    });\n  }\n\n  /**\n   * @method Elem#apply\n   * @public\n   * @param {...String} strings - Strings to apply.\n   * @returns {Elem} Returns this.\n   * @description Method that is a shorthand for many other methods.\n   * All shorthands can be separated with space and written within one string.\n   *\n   * @example\n   * elem.apply(\n   *   '#id .c1 .c2 @border(1px solid black) $disabled $attr(some value) *(Click me!)'\n   * );\n   * // shorthand for\n   * // elem\n   * //   .id('id')\n   * //   .addClass('c1', 'c2')\n   * //   .border('1px solid black')\n   * //   .disabled()\n   * //   .attr('attr', 'some value')\n   * //   .text('Click me!');\n   * // There is a full list of possible types of syntax below...\n   *\n   * elem.apply('#id');                         // shorthand for elem.id('id');\n   * elem.apply('.c1 .c2');                     // shorthand for elem.addClass('c1', 'c2');\n   * elem.apply('-.c1 -.c2');                   // shorthand for elem.removeClass('c1', 'c2');\n   * elem.apply('-@float -@display');           // shorthand for elem.removeCSS('float', 'display');\n   * elem.apply('-$a1 -$a2');                   // shorthand for elem.removeAttr('a1', 'a2');\n   * elem.apply('*(some text)');                // shorthand for elem.text('set text');\n   * elem.apply('&(&lt;div&gt;1&lt;/div&gt;)'); // shorthand for elem.html('&lt;div&gt;1&lt;/div&gt;');\n   * elem.apply('@float(right)');               // shorthand for elem.css('float', 'right');\n   * elem.apply('@transform(scale(5px))');      // shorthand for elem.css('float', 'right');\n   * elem.apply('@margin(2px 2px)');            // shorthand for elem.css('margin', '2px 2px');\n   * elem.apply('@marginLeft(2px)');            // shorthand for elem.css('marginLeft', '2px 2px');\n   * elem.apply('@margin-left(2px)');           // shorthand for elem.css('margin-left', '2px 2px');\n   * elem.apply('$attr(some value)');           // shorthand for elem.attr('attr', 'some value');\n   * elem.apply('$attr');                       // shorthand for elem.attr('attr', '');\n   */\n  apply(...strings) {\n    let applied;\n    let setApplied;\n    let callback;\n    let name;\n    let np1;\n    let slice;\n\n    new Str(new Arr(arguments).join(' '))\n      .split(/(\\s+)/)\n      .forEach((string) => {\n        if (!applied) {\n          np1 = string.slice(0, 1);\n          callback = appliedRegExps[np1];\n          slice = 1;\n\n          if (callback && !isFunction(callback)) {\n            callback = callback[string.slice(1, 2)];\n            slice = 2;\n          }\n\n          if (/^\\s+$/.test(string) || !callback) {\n            return;\n          }\n\n          name = string.slice(slice).match(/^[^()]+/);\n\n          if (!name && (np1 !== '*' && np1 !== '&')) {\n            return;\n          }\n\n          applied = {\n            name: name ? name[0] : '',\n            args: string.slice(slice + (name ? name[0] : '').length),\n            callback\n          };\n\n          setApplied = true;\n        }\n\n        if (!setApplied) {\n          applied.args += string;\n        }\n\n        if (!applied.args || /^\\([\\s\\S]+\\)$/.test(applied.args)) {\n          applied.callback(this, applied.name, applied.args.replace(/^\\(|\\)$/g, ''));\n          applied = null;\n        }\n\n        setApplied = false;\n      });\n\n    return this;\n  }\n\n  /**\n   * @method Elem#attr\n   * @public\n   * @param {String|Object.<String, String|ElemValueCallback>} [attr] - Name of the attribute to get or\n   * an object of the format { [attrName]: value, ... } to set attributes.\n   * @param {String|ElemValueCallback} [value] - If the first argument is a string\n   * it should be a value to set for that attribute.\n   * @returns {Super|String|Elem} If no arguments passed, D-Wrap of attributes of the first element in the set\n   * returned, if 1 string argument is passed the value of the attribute of the first element in the set\n   * returned otherwise returns this.\n   * @description Method for getting/setting attributes.\n   *\n   * @example\n   * elem.attr('attr1', 'value1'); // attribute attr1 set to 'value1' and this returned\n   * elem.attr('attr1');           // 'value1'\n   * elem.attr({\n   *   attr1: 'value3',            // attribute attr1 set to 'value3'\n   *   attr2: 'value2'             // attribute attr2 set to 'value2'\n   * });                           // this returned\n   * elem.attr().$;                // { attr1: 'value3', attr2: 'value2' }\n   */\n  attr(attr, value) {\n    const elem = getElem(this);\n\n    if (!arguments.length) {\n      return new Super(elem.attributes).object((o, attr) => {\n        o[attr.name] = attr.value;\n      });\n    }\n\n    if (arguments.length <= 1 && isString(attr)) {\n      return elem.getAttribute(attr);\n    }\n\n    if (arguments.length >= 2) {\n      attr = { [attr]: value };\n    }\n\n    return this.forEach((elem, index) => {\n      new Super(attr).forEach((value, key) => {\n        elem.setAttribute(key, isFunction(value) ? value(elem.getAttribute(key), elem, index) : value);\n      });\n    });\n  }\n\n  /**\n   * @method Elem#blob\n   * @public\n   * @param {Object} [options = {}] - Options that are passed into {@link blob}.\n   * @returns {Promise.<BlobObject>} New instance of promise.\n   * @description Returns a {@link BlobObject} Promise. Works with image or canvas first element.\n   *\n   * @example\n   * image.blob().then((blob) => console.log(blob));  // BlobObject\n   * canvas.blob().then((blob) => console.log(blob)); // BlobObject\n   */\n  blob(options = {}) {\n    // TODO: write using ArrayBuffer\n\n    return new Promise((resolve, reject) => {\n      const elem = this.first();\n      const { name } = elem;\n\n      if (name !== 'img' && name !== 'canvas') {\n        reject(new Error('First element in the set isn\\'t an image or a canvas! (Elem#blob)'));\n      }\n\n      if (name === 'canvas') {\n        return resolve(elem);\n      }\n\n      elem\n        .load()\n        .then(() => {\n          if (elem.isBroken()) {\n            return reject(new Error('The image is broken! (Elem#blob)'));\n          }\n\n          const canvas = new Elem(nativeDocument).canvas();\n          const width = elem.width();\n          const height = elem.height();\n\n          canvas\n            .width(width)\n            .height(height)\n            .drawImage(elem.$[0], 0, 0);\n\n          resolve(canvas);\n        });\n    })\n      .then((canvas) => dataURLFetch(canvas.dataURL()))\n      .then(({ data: ab }) => blob(ab, options));\n  }\n\n  /**\n   * @method Elem#blur\n   * @returns {Elem} Returns this.\n   * @see https://developer.mozilla.org/en/docs/Web/API/HTMLElement/blur\n   * @description Synonym for\n   * [HTMLElement#blur]{@link https://developer.mozilla.org/en/docs/Web/API/HTMLElement/blur}.\n   */\n  blur() {\n    return this.forEach((elem) => {\n      elem.blur();\n    });\n  }\n\n  /**\n   * @method Elem#calcCSS\n   * @param {String} [pseudo] - See the link.\n   * @returns {CSSStyleDeclaration} See the link.\n   * @see https://developer.mozilla.org/en/docs/Web/API/Window/getComputedStyle\n   * @description Synonym for\n   * [getComputedStyle]{@link https://developer.mozilla.org/en/docs/Web/API/Window/getComputedStyle}.\n   * Returns computed style for the first element in the set or undefined.\n   */\n  calcCSS(pseudo = null) {\n    return getComputedStyle(getElem(this), pseudo);\n  }\n\n  /**\n   * @method Elem#changeRule\n   * @public\n   * @param {String} name - Name of the rule.\n   * @param {Object.<String, String>} style - Style for the selector.\n   * @returns {Elem} Returns this.\n   * @description Method for changing css styles in the first style tag in the set.\n   * Note: style element should be inside the document.\n   *\n   * @example\n   * style.changeRule('img-size', {\n   *   width: '50px !important',\n   *   height: '50px !important'\n   * });\n   */\n  changeRule(name, style) {\n    this.some((elem) => {\n      if (getName(elem) === 'style') {\n        const { value: rule } = new Arr(elem.sheet.cssRules).find((rule) => rule.dwayneData && rule.dwayneData.name === name) || {};\n\n        if (rule) {\n          new Elem(rule).css(style);\n\n          return true;\n        }\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Elem#child\n   * @public\n   * @param {Number|String|Elem|Element|Element[]} element - If the argument is a number a wrap of the set of the children\n   * of this index of each element in the set returned otherwise an element to put into this element, a collection\n   * or a selector of it.\n   * @returns {Elem} Returns a wrap of children or inserted elements.\n   * @description Method is similar to\n   * [Node#appendChild]{@link https://developer.mozilla.org/en/docs/Web/API/Node/appendChild}.\n   *\n   * @example\n   * const child = elem.child(1);\n   *\n   * elem.child(elem2);\n   * elem.child(document.getElementById('id'));\n   * elem.child('#id div.c1');\n   */\n  child(element) {\n    if (isInteger(element) && element >= 0) {\n      return this.children().elem(element);\n    }\n\n    return toFind(element).into(this);\n  }\n\n  /**\n   * @method Elem#children\n   * @public\n   * @returns {Elem} D-Wrap of the children of the first element in the set.\n   * @description Method for getting element's children.\n   *\n   * @example\n   * const children = elem.children();\n   */\n  children() {\n    return new Elem(this.length ? this.$[0].children : []);\n  }\n\n  /**\n   * @method Elem#class\n   * @public\n   * @param {String} [cls] - If it's present it has to contain class attribute to set.\n   * @returns {Arr|Elem} If the argument is present this returned otherwise a wrap of the classes array returned.\n   * @description Method for getting/setting classes.\n   *\n   * @example\n   * elem.class('c1 c2'); // class set to 'c1 c2'\n   * elem.class().$;      // ['c1', 'c2']\n   */\n  class(cls) {\n    if (!arguments.length) {\n      return new Arr(getElem(this).className.split(' '));\n    }\n\n    return this.forEach((elem) => {\n      elem.className = cls;\n    });\n  }\n\n  /**\n   * @method Elem#click\n   * @returns {Elem} Returns this.\n   * @see https://developer.mozilla.org/en/docs/Web/API/HTMLElement/click\n   * @description Synonym for\n   * [HTMLElement#click]{@link https://developer.mozilla.org/en/docs/Web/API/HTMLElement/click}.\n   */\n  click() {\n    return this.forEach(click);\n  }\n\n  /**\n   * @method Elem#clone\n   * @public\n   * @param {Boolean|*} [deep = false] - See thee link.\n   * @returns {Elem} New instance of Elem.\n   * @see https://developer.mozilla.org/en/docs/Web/API/Node/cloneNode\n   * @description Synonym for\n   * [Node#cloneNode]{@link https://developer.mozilla.org/en/docs/Web/API/Node/cloneNode}.\n   */\n  clone(deep = false) {\n    return this.object((elems, elem) => {\n      elems.add(elem.cloneNode(!!deep));\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#closest\n   * @public\n   * @param {String} selector - See the link.\n   * @returns {Elem} Set of the closest elements.\n   * @description Synonym for\n   * [Element#closest]{@link https://developer.mozilla.org/en/docs/Web/API/Element/closest}.\n   */\n  closest(selector) {\n    return this.object((elems, elem) => {\n      while (elem) {\n        if (new Elem(elem).is(selector)) {\n          return elems.add(elem);\n        }\n\n        elem = elem.parentElement;\n      }\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#contains\n   * @public\n   * @param {String|Elem|Element} element - Element to find out if it's within the first element\n   * in the set or a selector of it.\n   * @returns {Boolean} Returns if the argument within this element.\n   * @description Method is extension for\n   * [Node#contains]{@link https://developer.mozilla.org/en/docs/Web/API/Node/contains}.\n   *\n   * @example\n   * elem1.contains(elem2);   // true|false\n   * elem.contains(selector); // true|false\n   */\n  contains(element) {\n    element = toFind(element);\n\n    return getElem(this).contains(getElem(element));\n  }\n\n  /**\n   * @method Elem#create\n   * @public\n   * @param {String} type - Type of created element.\n   * @param {...String} appliedExpressions - Strings that are passed into {@link Elem#apply}.\n   * @returns {Elem} New instance of Elem - wrap of the created element.\n   * @description Method for creating elements inside this element. If this element is a document it's just created.\n   *\n   * @example\n   * elem.create('div', '#id .c1 .c2 *Some text*');\n   *\n   * // also there are shorthands for almost every HTML-element\n   * elem.div();\n   * elem.input('$type(checkbox) $name(country)');\n   */\n  create(type, ...appliedExpressions) {\n    return this.object((elems, elem) => {\n      const element = new Elem(nativeDocument.createElement(type));\n\n      if (elem !== nativeDocument) {\n        element.into(elem);\n      }\n\n      elems.add(element.apply.apply(element, appliedExpressions));\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#css\n   * @public\n   * @param {String|Object.<String, String|ElemValueCallback>} [property] - Name of the property to get or\n   * an object of the format { [property]: value, ... } to set styles.\n   * @param {String|ElemValueCallback} [value] - If the first argument is a string it should be a value to set for that property.\n   * @returns {Super|String|Elem} If no arguments passed, D-Wrap of css styles of the element returned,\n   * if 1 string argument is passed the value of the property returned otherwise returns this.\n   * @description Method for getting/setting styles. Supports !important.\n   *\n   * @example\n   * elem.css('display', 'none'); // display set to 'none' and this returned\n   * elem.css('display');         // 'none'\n   * elem.css({\n   *   display: 'inline',         // display set to 'inline'\n   *   cursor: 'pointer'          // cursor set to 'pointer'\n   * });                          // this returned\n   * elem.css().$;                // { display: 'none', cursor: 'pointer' }\n   */\n  css(property, value) {\n    const style = getElem(this).style;\n\n    if (!arguments.length) {\n      return new Str(style.cssText)\n        .split(/; ?/)\n\n        .object((o, value) => {\n          if (value) {\n            property = value.split(/: /);\n\n            o[new Str(property[0]).toCamelCase().$] = property[1];\n          }\n        });\n    }\n\n    if (arguments.length <= 1 && isString(property)) {\n      property = new Str(property).toHyphenCase().$;\n\n      return style.getPropertyValue(property) + (style.getPropertyPriority(property) ? ' !important' : '');\n    }\n\n    if (arguments.length >= 2) {\n      property = { [property]: value };\n    }\n\n    return this.forEach((elem, index) => {\n      new Super(property).forEach((value, property) => {\n        property = new Str(property).toHyphenCase().$;\n\n        if (isFunction(value)) {\n          value = value(new Elem(elem).css(property), elem, index);\n        }\n\n        elem.style.removeProperty(property);\n        elem.style.setProperty(\n          property,\n          value.replace(/ ?!important$/, ''),\n          /!important$/.test(value) ? 'important' : ''\n        );\n      });\n    });\n  }\n\n  /**\n   * @method Elem#ctx\n   * @public\n   * @param {String|Object|CtxCallback} [property] - If present and object\n   * it's assigned to the canvas rendering context, if function\n   * it's called with canvas rendering context argument, if string\n   * the value from the second argument is used for assigning\n   * this property to canvas rendering context and if not present\n   * canvas rendering context returned.\n   * @param {*} [value] - See the property argument.\n   * @returns {CanvasRenderingContext2D|Elem}\n   * @description Rendering context of the first canvas in the set.\n   *\n   * @example\n   * canvas.ctx; // CanvasRenderingContext2D\n   */\n  ctx(property, value) {\n    let ctx;\n\n    this.some((elem) => {\n      if (getName(elem) === 'canvas') {\n        ctx = elem.dwayneData.ctx;\n\n        return true;\n      }\n    });\n\n    if (!arguments.length) {\n      return ctx;\n    }\n\n    if (isFunction(property)) {\n      property(ctx);\n    } else {\n      if (arguments.length >= 2) {\n        property = { [property]: value };\n      }\n\n      assign(ctx, property);\n    }\n\n    return this;\n  }\n\n  /**\n   * @method Elem#data\n   * @public\n   * @param {String|Object.<String, String|ElemValueCallback>} [key] - Name of the data attribute (without data- prefix)\n   * to get or an object of the format { [attrName]: value, ... } to set attributes.\n   * @param {String|ElemValueCallback} [value] - If the first argument is a string it should be a value to set for that attribute.\n   * @returns {Super|String|Elem} If no arguments passed, D-Wrap of dataset of the element returned,\n   * if 1 string argument is passed the value of the data attribute returned otherwise returns this.\n   * @description Method for getting/setting data attributes. See\n   * [HTMLElement#dataset]{@link https://developer.mozilla.org/en/docs/Web/API/HTMLElement/dataset}.\n   *\n   * @example\n   * elem.data('someKey1', 'value'); // attribute data-some-key1 set to 'value1' and this returned\n   * elem.data('someKey1');          // 'value1'\n   * elem.data({\n   *   someKey1: 'value3',           // attribute data-some-key1 set to 'value3'\n   *   someKey2: 'value2'            // attribute data-some-key2 set to 'value2'\n   * });                             // this returned\n   * elem.data().$;                  // { someKey1: 'value3', someKey2: 'value2' }\n   */\n  data(key, value) {\n    const dataset = getElem(this).dataset;\n\n    if (!arguments.length) {\n      return new Super(dataset).object((o, value, key) => {\n        o[key] = value;\n      });\n    }\n\n    if (arguments.length === 1 && isString(key)) {\n      return dataset[key];\n    }\n\n    if (arguments.length >= 2) {\n      key = { [key]: value };\n    }\n\n    iterate(key, (value, key) => {\n      this.forEach((elem, index) => {\n        elem.dataset[key] = isFunction(value) ? value(elem.dataset[key], elem, index) : value;\n      });\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Elem#dataURL\n   * @param {String} [type = 'image/png'] - See the link\n   * @param {Number} [encoderOptions = 0.92] - See the link.\n   * @returns {String} Data URL for the first canvas element in the set.\n   * @see https://developer.mozilla.org/en/docs/Web/API/HTMLCanvasElement/toDataURL\n   * @description Synonym for\n   * [HTMLCanvasElement#toDataURL]{@link https://developer.mozilla.org/en/docs/Web/API/HTMLCanvasElement/toDataURL}.\n   *\n   * @example\n   * canvas.dataURL();\n   */\n  dataURL(type, encoderOptions) {\n    const ctx = this.ctx();\n\n    if (!ctx) {\n      return '';\n    }\n\n    return ctx.canvas.toDataURL.apply(ctx.canvas, arguments);\n  }\n\n  /**\n   * @method Elem#deleteRule\n   * @public\n   * @param {String} name - Name of the rule.\n   * @returns {Elem} Returns this.\n   * @description Method for deleting css styles in a style tag.\n   * Note: style element should be inside the document.\n   *\n   * @example\n   * style.deleteRule('img-size');\n   */\n  deleteRule(name) {\n    this.some((elem) => {\n      if (getName(elem) === 'style') {\n        const rule = new Arr(elem.sheet.cssRules).find((rule) => rule.dwayneData && rule.dwayneData.name === name);\n\n        if (rule) {\n          elem.sheet.deleteRule(rule.key);\n\n          return true;\n        }\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Elem#dispatch\n   * @public\n   * @param {String|Event} event - Event or a string (new Event(event) is created).\n   * @param {Object} [eventInit = {}] - See the link.\n   * @param {Boolean} [eventInit.bubbles = true] - See the link.\n   * @param {Boolean} [eventInit.cancelable = true] - See the link.\n   * @param {Object} [details = {}] - Object that is assigned to the event.\n   * @returns {Elem} Returns this.\n   * @see https://developer.mozilla.org/en/docs/Web/API/Event/Event\n   * @description Synonym for\n   * [EventTarget#dispatchEvent]{@link https://developer.mozilla.org/en/docs/Web/API/EventTarget/dispatchEvent}.\n   *\n   * @example\n   * elem.dispatch('click');\n   * elem.dispatch('click', { bubbles: false, cancellable: false });\n   * elem.dispatch(new CustomEvent('custom-event'));\n   */\n  dispatch(event, eventInit = {}, details = {}) {\n    const { bubbles = true, cancelable = true } = eventInit || {};\n    let finalEvent = event;\n\n    if (!/Event$/.test(toStringTag(finalEvent))) {\n      try {\n        finalEvent = new Event(finalEvent, { bubbles, cancelable });\n      } catch (err) {\n        finalEvent = nativeDocument.createEvent('Event');\n        finalEvent.initEvent(event, bubbles, cancelable);\n      }\n\n      assign(finalEvent, details);\n    }\n\n    return this.forEach((elem) => {\n      elem.dispatchEvent(finalEvent);\n    });\n  }\n\n  /**\n   * @method Elem#elem\n   * @public\n   * @param {Number} [index = 0] - Index of the element of the set to get. Negative index means elem.length + index.\n   * @returns {Elem} New instance of Elem.\n   *\n   * @example\n   * elem.elem(1); // a wrap of the element in the set that has index 1\n   * elem.elem();  // a wrap of the element in the set that has index 0\n   */\n  elem(index = 0) {\n    if (index < 0) {\n      index = this.length + index;\n    }\n\n    return new Elem(this.$[index]);\n  }\n\n  /**\n   * @method Elem#filter\n   * @public\n   * @param {String|Function|Element[]|Elem} [selector = Boolean] - If it's a string the method filters elements with the selector\n   * otherwise super.filter is called.\n   * @returns {Elem} New instance of Elem.\n   * @description Method for filtering elements.\n   *\n   * @example\n   * elem.filter((elem) => new Elem(elem).closest('.parent'));\n   * elem.filter(elemsInArray);\n   * elem.filter(elemsInElem);\n   * elem.filter('.child');\n   */\n  filter(selector = Boolean) {\n    return new Elem(super.filter(filterSwitcher(selector)));\n  }\n\n  /**\n   * @method Elem#find\n   * @public\n   * @param {String|Function} selector - Selector to find.\n   * @returns {Elem|{ key: Key, value: * }|null} New instance of Elem if selector is a string\n   * otherwise super.find is called.\n   * @description Synonym for\n   * [Element#querySelectorAll]{@link https://developer.mozilla.org/en/docs/Web/API/Element/querySelectorAll}.\n   */\n  find(selector) {\n    if (!isString(selector)) {\n      return super.find(selector);\n    }\n\n    return this.object((elems, elem) => {\n      elems.add(find(selector, elem));\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#first\n   * @public\n   * @returns {Elem} New instance of Elem.\n   * @description Synonym for elem.elem(0).\n   */\n  first() {\n    return this.elem(0);\n  }\n\n  /**\n   * @method Elem#first\n   * @public\n   * @param {String} [selector = null] - If present, finds first child in every elem that matches the selector.\n   * If not, finds first child of each element in the set.\n   * @returns {Elem} New instance of Elem.\n   * @description Method for finding first children of each element in the set.\n   *\n   * @example\n   * elem.first();       // finds first child of each element in the elem set\n   * elem.first('.foo'); // find first child that has foo class of each element in the set\n   */\n  firstChild(selector = null) {\n    return this.object((elems, elem) => {\n      const { value: found } = new Arr(elem.children).find((elem) => new Elem(elem).is(selector)) || {};\n\n      elems.add(found);\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#focus\n   * @returns {Elem} Returns this.\n   * @see https://developer.mozilla.org/en/docs/Web/API/HTMLElement/focus\n   * @description Synonym for\n   * [HTMLElement#focus]{@link https://developer.mozilla.org/en/docs/Web/API/HTMLElement/focus}.\n   */\n  focus() {\n    return this.forEach((elem) => {\n      elem.focus();\n    });\n  }\n\n  /**\n   * @method Elem#getRule\n   * @public\n   * @param {String} name - Name of the rule.\n   * @returns {{ selector: (String|void), rules: Object }} Set of the css rules.\n   * @description Method for getting set of the rules under the name.\n   * Note: style element should be inside the document.\n   *\n   * @example\n   * style.addRule('img-size', 'img.square', {\n   *   width: '40px',\n   *   height: '40px'\n   * });\n   * style.getRule('img-size');\n   * // {\n   * //   selector: 'img.square',\n   * //   rules: {\n   * //     width: '40px',\n   * //     height: '40px'\n   * //   }\n   * // }\n   */\n  getRule(name) {\n    let found = {\n      selector: undefined,\n      rules: {}\n    };\n\n    this.some((elem) => {\n      if (getName(elem) === 'style') {\n        const { value: rule } = new Arr(elem.sheet.cssRules).find((rule) => rule.dwayneData && rule.dwayneData.name === name) || {};\n\n        if (rule) {\n          found = {\n            selector: rule.selectorText,\n            rules: new Elem(rule).css().$\n          };\n\n          return true;\n        }\n      }\n    });\n\n    return found;\n  }\n\n  /**\n   * @method Elem#hasAttr\n   * @public\n   * @param {String} attr - Name of the attribute.\n   * @returns {Boolean} If the first element in the set has the attribute.\n   * @description Method that returns if the first element in the set has the attribute or not.\n   *\n   * @example\n   * elem.attr('attr', 'value').hasAttr('attr'); // true\n   * elem.removeAttr('attr').hasAttr('attr');    // false\n   */\n  hasAttr(attr) {\n    return getElem(this).hasAttribute(attr);\n  }\n\n  /**\n   * @method Elem#hasClass\n   * @public\n   * @param {String} cls - Name of the class.\n   * @returns {Boolean} If the first element in the set has the class.\n   * @description Method that returns if the first element in the set has the class or not.\n   *\n   * @example\n   * elem.addClass('cls').hasClass('cls');    // true\n   * elem.removeClass('cls').hasClass('cls'); // false\n   */\n  hasClass(cls) {\n    return getElem(this).classList.contains(cls);\n  }\n\n  /**\n   * @method Elem#height\n   * @public\n   * @param {*|ElemValueCallback} [height] - Height to set.\n   * @returns {Elem|String} If no arguments passed height of the first element in the set returned.\n   * Otherwise all elements heights in the set are set to the height argument.\n   * @description Gets or sets height.\n   *\n   * @example\n   * elem.height(123);\n   * elem.height(); // 123\n   */\n  height(height) {\n    return this.prop.apply(this, new Arr(arguments).unshift('height').$);\n  }\n\n  /**\n   * @method Elem#hide\n   * @public\n   * @returns {Elem} Returns this.\n   * @description Hides all elements in the set.\n   *\n   * @example\n   * elem.hide();\n   */\n  hide() {\n    return this.forEach((elem) => {\n      elem = new Elem(elem);\n\n      const currentDisplay = elem.css('display');\n\n      if (currentDisplay.indexOf('none')) {\n        elem.prop('dwayneData').previousDisplay = currentDisplay;\n      }\n\n      elem.css('display', 'none !important');\n    });\n  }\n\n  /**\n   * @method Elem#html\n   * @public\n   * @param {String|ElemValueCallback|*} [html] - HTML to write instead of current HTML.\n   * @returns {Elem|String} If no arguments passed HTML of the first element in the set returned.\n   * Otherwise all elements HTML in the set are set to the html argument.\n   * @description Gets or sets HTML.\n   *\n   * @example\n   * elem.html('&lt;div&gt;1&lt;/div&gt;');\n   * elem.html(); // '&lt;div&gt;1&lt;/div&gt;'\n   */\n  html(html) {\n    if (!arguments.length) {\n      return getElem(this).innerHTML;\n    }\n\n    return this.forEach((elem, index) => {\n      elem.innerHTML = isFunction(html) ? html(elem.innerHTML, elem, index) : html;\n    });\n  }\n\n  /**\n   * @method Elem#id\n   * @public\n   * @param {String|*} [id] - Id to set.\n   * @returns {Elem|String} If no arguments passed id of the first element in the set returned.\n   * Otherwise all elements ids in the set are set to the id argument.\n   * @description Gets id or sets ids.\n   *\n   * @example\n   * elem.id('unique');\n   * elem.id(); // 'unique'\n   */\n  id(id) {\n    if (!arguments.length) {\n      return getElem(this).id;\n    }\n\n    return this.forEach((elem) => {\n      elem.id = id;\n    });\n  }\n\n  /**\n   * @member {Number} Elem#innerHeight\n   * @type {Number}\n   * @public\n   * @readonly\n   * @description Method for finding how much height content of the first element can be.\n   *\n   * @example\n   * elem.css({\n   *   boxSizing: 'border-box',\n   *   height: '200px',\n   *   paddingTop: '2px',\n   *   paddingBottom: '3px',\n   *   borderTop: '1px solid black',\n   *   borderBottom: '4px solid black'\n   * }).innerHeight; // 190\n   * elem\n   *   .css('box-sizing', 'content-box')\n   *   .innerHeight; // 200\n   * elem\n   *   .css('box-sizing', 'padding-box')\n   *   .innerHeight; // 195\n   */\n  get innerHeight() {\n    const elem = this.$[0];\n\n    if (!elem) {\n      return 0;\n    }\n\n    if (isWindow(elem)) {\n      return elem.innerHeight;\n    }\n\n    const {\n      borderTopWidth,\n      borderBottomWidth,\n      boxSizing,\n      height,\n      paddingTop,\n      paddingBottom\n    } = this.calcCSS();\n    const borders = px(borderTopWidth) + px(borderBottomWidth);\n    const paddings = px(paddingTop) + px(paddingBottom);\n\n    return px(height) - innerSwitcher(boxSizing, [paddings, borders]);\n  }\n\n  /**\n   * @member {Number} Elem#innerWidth\n   * @type {Number}\n   * @public\n   * @readonly\n   * @description Method for finding how much width content of the first element can be.\n   *\n   * @example\n   * elem.css({\n   *   boxSizing: 'border-box',\n   *   width: '200px',\n   *   paddingLeft: '2px',\n   *   paddingRight: '3px',\n   *   borderLeft: '1px solid black',\n   *   borderRight: '4px solid black'\n   * }).innerWidth; // 190\n   * elem\n   *   .css('box-sizing', 'content-box')\n   *   .innerWidth; // 200\n   * elem\n   *   .css('box-sizing', 'padding-box')\n   *   .innerWidth; // 195\n   */\n  get innerWidth() {\n    const elem = this.$[0];\n\n    if (!elem) {\n      return 0;\n    }\n\n    if (isWindow(elem)) {\n      return elem.innerWidth;\n    }\n\n    const {\n      borderLeftWidth,\n      borderRightWidth,\n      boxSizing,\n      paddingLeft,\n      paddingRight,\n      width\n    } = this.calcCSS();\n    const borders = px(borderLeftWidth) + px(borderRightWidth);\n    const paddings = px(paddingLeft) + px(paddingRight);\n\n    return px(width) - innerSwitcher(boxSizing, [paddings, borders]);\n  }\n\n  /**\n   * @method Elem#insertAfter\n   * @public\n   * @param {String|Elem|Element} element - Element to insert this element after or a selector of it.\n   * @returns {Elem} Returns this.\n   * @description Puts the elements from the set after the element specified by the argument.\n   * The elements remain in the same order.\n   *\n   * @example\n   * elem.insertAfter(elem2);\n   * elem.insertAfter(document.getElementById('id'));\n   * elem.insertAfter('#id div.c1');\n   */\n  insertAfter(element) {\n    element = toFind(element).first();\n\n    let parent = element.parent();\n\n    if (!parent.length) {\n      return this;\n    }\n\n    element = element.next().$[0];\n    parent = parent.$[0];\n\n    return this.forEach((elem) => {\n      if (element) {\n        parent.insertBefore(elem, element);\n\n        element = elem;\n      } else {\n        parent.appendChild(elem);\n      }\n    });\n  }\n\n  /**\n   * @method Elem#insertBefore\n   * @public\n   * @param {String|Elem|Element} element - Element to insert this element before or a selector of it.\n   * @returns {Elem} Returns this.\n   * @description Puts the elements from the set before the element specified by the argument.\n   * The elements remain in the same order.\n   *\n   * @example\n   * elem.insertBefore(elem2);\n   * elem.insertBefore(document.getElementById('id'));\n   * elem.insertBefore('#id div.c1');\n   */\n  insertBefore(element) {\n    element = toFind(element).first();\n\n    let parent = element.parent();\n\n    if (!parent.length) {\n      return this;\n    }\n\n    element = element.$[0];\n    parent = parent.$[0];\n\n    return this.forEach((elem) => {\n      parent.insertBefore(elem, element);\n    });\n  }\n\n  /**\n   * @method Elem#into\n   * @public\n   * @param {String|Elem|Element} element - Element to put this elements into or a selector of it.\n   * @returns {Elem} Returns this.\n   * @description Method is similar to\n   * [Node#appendChild]{@link https://developer.mozilla.org/en/docs/Web/API/Node/appendChild}.\n   *\n   * @example\n   * elem.into(elem2);\n   * elem.into(document.getElementById('id'));\n   * elem.into('#id div.c1');\n   */\n  into(element) {\n    element = toFind(element).$[0];\n\n    if (!element) {\n      return this;\n    }\n\n    return this.forEach((elem) => {\n      element.appendChild(elem);\n    });\n  }\n\n  /**\n   * @method Elem#is\n   * @public\n   * @param {String} selector\n   * @returns {Boolean} If the first element in the set matches the selector.\n   * If the selector is undefined or null always returns true.\n   * @description Synonym for\n   * [Element#matches]{@link https://developer.mozilla.org/en/docs/Web/API/Element/matches}.\n   *\n   * @example\n   * elem.addClass('cls');\n   * elem.is('.cls');         // true\n   *\n   * elem.removeClass('cls');\n   * elem.is('.cls');         // false\n   */\n  is(selector) {\n    if (isNull(selector)) {\n      return true;\n    }\n\n    const elem = getElem(this);\n    const matches = elem.matches ||\n      elem.matchesSelector ||\n      elem.webkitMatchesSelector ||\n      elem.mozMatchesSelector ||\n      elem.msMatchesSelector ||\n      elem.oMatchesSelector;\n\n    try {\n      return matches.call(elem, selector);\n    } catch (err) {\n      console.error(`Selector '${ selector }' is not a valid selector (Elem#is)`);\n\n      return false;\n    }\n  }\n\n  /**\n   * @method Elem#isBroken\n   * @public\n   * @returns {Boolean} If the first image in the set is broken.\n   * @description Returns if the first element in the set is broken. Not image and not loaded image is considered proper.\n   *\n   * @example\n   * const img = elem.img().on({\n   *   'load': onload,\n   *   'error': onload\n   * });\n   *\n   * onload = () => {\n   *   console.log(img.isBroken()); // true\n   * };\n   *\n   * img.ref('/some/non-existent/site/not-found.png');\n   */\n  isBroken() {\n    let isBroken = false;\n\n    this.some((elem) => {\n      if (getName(elem) === 'img') {\n        isBroken = !!(elem.complete && (!elem.naturalWidth || !elem.naturalHeight));\n\n        return true;\n      }\n    });\n\n    return isBroken;\n  }\n\n  /**\n   * @method Elem#isWithinDocument\n   * @public\n   * @returns {Boolean} Returns if the first element in the set is within the document or not.\n   * @description Returns if the first element in the set is within the document or not.\n   *\n   * @example\n   * new Elem(document.body).isWithinDocument();  // true\n   * new Elem(document).div().isWithinDocument(); // false\n   */\n  isWithinDocument() {\n    return this.first().closest('html').length !== 0;\n  }\n\n  /**\n   * @method Elem#last\n   * @public\n   * @returns {Elem} New instance of Elem.\n   * @description Synonym for elem.elem(-1).\n   */\n  last() {\n    return this.elem(-1);\n  }\n\n  /**\n   * @method Elem#last\n   * @public\n   * @param {String} [selector = null] - If present, finds last child in every elem that matches the selector.\n   * If not, finds last child of each element in the set.\n   * @returns {Elem} New instance of Elem.\n   * @description Method for finding last children of each element in the set.\n   *\n   * @example\n   * elem.last();       // finds last child of each element in the elem set\n   * elem.last('.foo'); // find last child that has 'foo' class of each element in the set\n   */\n  lastChild(selector = null) {\n    return this.object((elems, elem) => {\n      const { value: found } = new Arr(elem.children)\n        .reverse()\n        .find((elem) => new Elem(elem).is(selector)) || {};\n\n      elems.add(found);\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#load\n   * @public\n   * @returns {Promise.<{ proper: Elem, broken: Elem }>} Promise with broken and proper images.\n   * @description Loads each image in the set and puts it to the proper or broken array.\n   *\n   * @example\n   * images.load().then(({ broken }) => {\n   *   broken.filter('img').ref('/fallback.png');\n   * });\n   */\n  load() {\n    const images = {\n      proper: new Elem(),\n      broken: new Elem()\n    };\n\n    return Promise.all(\n      this\n        .filter((elem) => getName(elem) === 'img')\n        .map((elem) => {\n          const $elem = new Elem(elem);\n\n          if (elem.complete) {\n            images[$elem.isBroken() ? 'broken' : 'proper'].push(elem);\n\n            return;\n          }\n\n          return new Promise((resolve) => {\n            const removeListeners = $elem.on({\n              load() {\n                images.proper.add(elem);\n\n                removeListeners();\n                resolve();\n              },\n              error() {\n                images.broken.add(elem);\n\n                removeListeners();\n                resolve();\n              }\n            });\n          });\n        })\n        .$\n    ).then(() => images);\n  }\n\n  /**\n   * @method Elem#moveAttr\n   * @public\n   * @param {String} attr - Attribute to move to the first element.\n   * @param {String} [value = ''] - Value to set for the attribute. If not set attribute of the previous element or '' used.\n   * @returns {Elem} Returns this.\n   * @description Method for moving an attribute from previous element to the next one (first element in this set).\n   *\n   * @example\n   * elem1.moveAttr('attr', 'value');     // attribute 'attr' set to 'value' on elem1\n   * elem2.moveAttr('attr');              // attribute 'attr' removed from elem1. set to 'value' on elem2\n   * elem3.moveAttr('attr', 'new value'); // attribute 'attr' removed from elem2. set to 'new value' on elem3\n   */\n  moveAttr(attr, value = '') {\n    const prev = attrs[attr];\n    const elem = this.elem();\n\n    if (prev && elem.length) {\n      if (arguments.length < 2) {\n        value = prev.attr(attr);\n      }\n\n      prev.removeAttr(attr);\n    }\n\n    if (elem.length) {\n      attrs[attr] = elem.attr(attr, value);\n    }\n\n    return this;\n  }\n\n  /**\n   * @method Elem#moveClass\n   * @public\n   * @param {String} cls - Class to move to the first element.\n   * @returns {Elem} Returns this.\n   * @description Method for moving a class from previous element to the next one (first element in this set).\n   *\n   * @example\n   * elem1.moveClass('cls'); // class 'cls' added to elem1\n   * elem2.moveClass('cls'); // class 'cls' removed from elem1. added to elem1\n   */\n  moveClass(cls) {\n    const prev = classes[cls];\n    const elem = this.elem();\n\n    if (prev && elem.length) {\n      prev.removeClass(cls);\n    }\n\n    if (elem.length) {\n      classes[cls] = elem.addClass(cls);\n    }\n\n    return this;\n  }\n\n  /**\n   * @member Elem#name\n   * @type {String}\n   * @public\n   * @readonly\n   * @description tagName (lowercased) of the first element in the set.\n   *\n   * @example\n   * const elem1 = elem.create('div');\n   * elem1.name // 'div'\n   */\n  get name() {\n    return getName(this.$[0]);\n  }\n\n  /**\n   * @method Elem#next\n   * @public\n   * @param {String} [selector = null] - If present, finds next element to every elem that matches the selector.\n   * If not, finds next element to each element in the set.\n   * @returns {Elem} New instance of Elem.\n   * @description Method for finding next element to each element in the set.\n   *\n   * @example\n   * elem.next();       // finds next element to each element in the set\n   * elem.next('.foo'); // finds next element to each element that has 'foo' class\n   */\n  next(selector = null) {\n    return this.object((elems, elem) => {\n      /* eslint no-cond-assign: 0 */\n      while (elem = elem.nextElementSibling) {\n        if (isNull(selector) || new Elem(elem).is(selector)) {\n          return elems.add(elem);\n        }\n      }\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#off\n   * @public\n   * @param {...ElemEventString} events - Events to remove.\n   * @returns {Elem} Returns this.\n   * @description Method that removes all the listeners from each element in the set specified by the events arguments.\n   *\n   * @example\n   * elem.off('click');\n   * elem.off('click, input');\n   * elem.off('click, input', 'focus');\n   */\n  off(...events) {\n    return this.forEach((elem) => {\n      const { listeners } = elem.dwayneData;\n\n      iterate(arguments, (event) => {\n        iterate(event.split(eventSeparator), (event) => {\n          (listeners[event] || new Super()).forEach(({ removeListener }) => removeListener());\n        });\n      });\n    });\n  }\n\n  /**\n   * @method Elem#on\n   * @public\n   * @param {ElemEventString|Object.<ElemEventString|ElemListener>} event - Either a {@link ElemEventString} string\n   * or an object with event keys (a key is also ElemEventString) and listeners values.\n   * @param {String} [selector = null] - Selector to filter event targets.\n   * @param {ElemListener} [listener] - If the first argument is a string it must be a listener function for\n   * specified event(s).\n   * @returns {ElemRemoveListeners} Function that takes optional event argument.\n   * @description Adds event listeners for all the elements in the set.\n   * For debugging: If you need to know what listeners are in work (and what selectors filter targets)\n   * you can look at the base property of the only dwayne listener that listens for the event\n   * and find all working listeners in listener.base.dwayneData.listeners[event].$.\n   *\n   * @example\n   * elem.on(\n   *   'change, input',\n   *   'input, select, textarea, datalist, keygen, output',\n   *   (e, elem, index) => console.log(elem.value)\n   * );\n   * elem.on(\n   *   'change, input',\n   *   (e, elem, index) => console.log(elem.value)\n   * );\n   * elem.on(\n   *   {\n   *     'change, input': (e, elem, index) => console.log(elem.value),\n   *     'blur': console.log('blur')\n   *   },\n   *   'input, select, textarea, datalist, keygen, output'\n   * );\n   *\n   * const removeListeners = elem.on({\n   *   'change, input': (e, elem, index) => console.log(elem.value),\n   *   'blur': console.log('blur')\n   * });\n   *\n   * removeListeners('click');\n   * removeListeners('blur, change');\n   * removeListeners('blur, change', 'input');\n   * removeListeners();\n   */\n  on(event, selector = null, listener) {\n    const allListeners = new Super({});\n\n    if (isFunction(selector)) {\n      listener = selector;\n      selector = null;\n    }\n\n    if (isString(event)) {\n      event = { [event]: listener };\n    }\n\n    event = new Super(event).object((listeners, listener, event) => {\n      iterate(event.split(eventSeparator), (event) => {\n        listeners[event] = listener;\n      });\n    });\n\n    this.forEach((elem) => {\n      const { listeners } = (windowsDwayneData.find(({ element }) => element === elem) || {}).value || elem.dwayneData;\n\n      event.forEach((listener, event) => {\n        const removeEventListeners = listeners[event] = listeners[event] || new Super({}).define('index', {\n          value: 0,\n          configurable: true,\n          writable: true\n        });\n        const index = removeEventListeners.prop('index');\n\n        if (!removeEventListeners.has('listener')) {\n          const newListener = (e) => {\n            removeEventListeners.forEach(({ selector, listener }) => {\n              if (new Elem(e.target).is(selector)) {\n                listener.call(elem, e, elem, index);\n              }\n            });\n          };\n\n          newListener.base = elem;\n\n          elem.addEventListener(event, newListener, false);\n          removeEventListeners.define('listener', {\n            value: newListener,\n            configurable: true,\n            writable: true\n          });\n        }\n\n        const removeListener = () => {\n          removeEventListeners.delete(index);\n\n          if (!removeEventListeners.count) {\n            elem.removeEventListener(event, removeEventListeners.prop('listener'), false);\n            removeEventListeners.delete('listener');\n          }\n        };\n\n        allListeners.prop(event, (allListeners.prop(event) || new Arr()).push(removeListener));\n\n        removeEventListeners.assign({\n          index: index + 1,\n          [index]: {\n            selector,\n            listener,\n            removeListener\n          }\n        });\n      });\n    });\n\n    return function removeEventListeners(event) {\n      if (arguments.length) {\n        iterate(arguments, (event) => {\n          iterate(event.split(eventSeparator), (event) => {\n            if (allListeners.has(event)) {\n              allListeners.prop(event).forEach((removeListener) => removeListener());\n              allListeners.delete(event);\n            }\n          });\n        });\n\n        return;\n      }\n\n      allListeners.forEach((removeListeners) => {\n        removeListeners.forEach((removeListener) => removeListener());\n      });\n    };\n  }\n\n  /**\n   * @member {Number} Elem#outerWidth\n   * @type {Number}\n   * @public\n   * @readonly\n   * @description Method for finding how much height the element actually is.\n   *\n   * @example\n   * elem.css({\n   *   boxSizing: 'border-box',\n   *   height: '200px',\n   *   paddingTop: '2px',\n   *   paddingBottom: '3px',\n   *   borderTop: '1px solid black',\n   *   borderBottom: '4px solid black'\n   *   marginTop: '0px',\n   *   marginBottom: '5px'\n   * }).outerHeight; // 205\n   * elem\n   *   .css('box-sizing', 'content-box')\n   *   .outerHeight; // 215\n   * elem\n   *   .css('box-sizing', 'padding-box')\n   *   .outerHeight; // 210\n   */\n  get outerHeight() {\n    const elem = this.$[0];\n\n    if (!elem) {\n      return 0;\n    }\n\n    if (isWindow(elem)) {\n      return elem.outerHeight;\n    }\n\n    const {\n      borderTopWidth,\n      borderBottomWidth,\n      boxSizing,\n      height,\n      marginTop,\n      marginBottom,\n      paddingTop,\n      paddingBottom\n    } = this.calcCSS();\n    const borders = px(borderTopWidth) + px(borderBottomWidth);\n    const paddings = px(paddingTop) + px(paddingBottom);\n\n    return px(height) + px(marginTop) + px(marginBottom) + outerSwitcher(boxSizing, [borders, paddings]);\n  }\n\n  /**\n   * @member {Number} Elem#outerWidth\n   * @type {Number}\n   * @public\n   * @readonly\n   * @description Method for finding how much width the element actually is.\n   *\n   * @example\n   * elem.css({\n   *   boxSizing: 'border-box',\n   *   width: '200px',\n   *   paddingLeft: '2px',\n   *   paddingRight: '3px',\n   *   borderLeft: '1px solid black',\n   *   borderRight: '4px solid black'\n   *   marginLeft: '0px',\n   *   marginRight: '5px'\n   * }).outerWidth; // 205\n   * elem\n   *   .css('box-sizing', 'content-box')\n   *   .outerWidth; // 215\n   * elem\n   *   .css('box-sizing', 'padding-box')\n   *   .outerWidth; // 210\n   */\n  get outerWidth() {\n    const elem = this.$[0];\n\n    if (!elem) {\n      return 0;\n    }\n\n    if (isWindow(elem)) {\n      return elem.outerWidth;\n    }\n\n    const {\n      borderLeftWidth,\n      borderRightWidth,\n      boxSizing,\n      marginLeft,\n      marginRight,\n      paddingLeft,\n      paddingRight,\n      width\n    } = this.calcCSS();\n    const borders = px(borderLeftWidth) + px(borderRightWidth);\n    const paddings = px(paddingLeft) + px(paddingRight);\n\n    return px(width) + px(marginLeft) + px(marginRight) + outerSwitcher(boxSizing, [borders, paddings]);\n  }\n\n  /**\n   * @method Elem#parent\n   * @public\n   * @returns {Elem} New instance of Elem.\n   * @description Method returns wrap of the set of the parent elements of each element in the set.\n   */\n  parent() {\n    return this.object((elems, elem) => elems.add(elem.parentElement), new Elem());\n  }\n\n  /**\n   * @method Elem#parentTree\n   * @public\n   * @returns {Elem} New instance of Elem.\n   * @description Returns wrap of all parents of each element in the set.\n   *\n   * @example\n   * elem.parentTree(); // Elem\n   */\n  parentTree() {\n    return this.object((elems, elem) => {\n      while (elem = elem.parentNode) {\n        elems.add(elem);\n      }\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#prev\n   * @public\n   * @param {String} [selector = null] - If present, finds previous element to every elem that matches the selector.\n   * If not, finds previous element to each element in the set.\n   * @returns {Elem} New instance of Elem.\n   * @description Method for finding previous element to each element in the set.\n   *\n   * @example\n   * elem.next();       // finds previous element to each element in the set\n   * elem.next('.foo'); // finds previous element to each element that has 'foo' class\n   */\n  prev(selector = null) {\n    return this.object((elems, elem) => {\n      /* eslint no-cond-assign: 0 */\n      while (elem = elem.previousElementSibling) {\n        if (isNull(selector) || new Elem(elem).is(selector)) {\n          return elems.add(elem);\n        }\n      }\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#prop\n   * @public\n   * @param {String|Object.<String, ElemValueCallback|*>} property - Either a string of a property or an assigned object.\n   * @param {ElemValueCallback|*} [value] - If a property parameter is a string\n   * this has to be an assigned value if it's present.\n   * @returns {Elem|*} Returns this if it's setter or a value if getter.\n   * @description Method that is either a property getter for the first element in the set\n   * or a setter for every element in the set.\n   *\n   * @example\n   * elem.prop('draggable', false);\n   * elem.prop('draggable'); // false\n   */\n  prop(property, value) {\n    if (arguments.length <= 1 && isString(property)) {\n      return this.$[0] ? this.$[0][property] : undefined;\n    }\n\n    if (arguments.length >= 2) {\n      property = { [property]: value };\n    }\n\n    return this.forEach((elem, index) => {\n      iterate(property, (value, prop) => {\n        elem[prop] = isFunction(value) ? value(elem[prop], elem, index) : value;\n      });\n    });\n  }\n\n  /**\n   * @method Elem#ref\n   * @public\n   * @param {String|ElemValueCallback} [link] - If it's present link to a resource.\n   * @returns {Elem|String} If the link argument isn't present it's a getter of the 'src' attribute\n   * for the one of following elements: img, script, iframe, audio, video; of the 'action' attribute\n   * for a form element and of the 'href' attribute for the rest. If it's present it's a setter\n   * of the same attribute for all the element in the set.\n   * @description Method for getting resources links and setting them.\n   *\n   * @example\n   * elem.ref('/some/cool/image.png');\n   * elem.ref(); // '/some/cool/image.png'\n   */\n  ref(link) {\n    if (!arguments.length) {\n      return this.attr(refSwitcher(this.name));\n    }\n\n    return this.forEach((elem) => {\n      elem = new Elem(elem);\n\n      elem.attr(refSwitcher(elem.name), link);\n    });\n  }\n\n  /**\n   * @method Elem#remove\n   * @public\n   * @returns {Elem} Returns this.\n   * @description Removes all the elements from the set from the document.\n   * Note: it doesn't remove them from the set so watch out for the memory leaks.\n   *\n   * @example\n   * elem.remove();\n   */\n  remove() {\n    return this.forEach((elem) => {\n      const parent = elem.parentElement;\n\n      if (parent) {\n        parent.removeChild(elem);\n      }\n    });\n  }\n\n  /**\n   * @method Elem@removeAttr\n   * @public\n   * @param {...String} attributes - Attributes to remove.\n   * @returns {Elem} Returns this.\n   * @description Removes all the attributes from arguments from all the elements in the set.\n   *\n   * @example\n   * elem.removeAttr('foo', 'bar', 'baz');\n   */\n  removeAttr(...attributes) {\n    return this.forEach((elem) => {\n      iterate(arguments, (attr) => {\n        elem.removeAttribute(attr);\n      });\n    });\n  }\n\n  /**\n   * @method Elem#removeClass\n   * @public\n   * @param {...String} classes - Classes to remove.\n   * @returns {Elem} Returns this.\n   * @description Removes all the classes from arguments from all the elements in the set.\n   *\n   * @example\n   * elem.removeClass('foo', 'bar', 'baz');\n   */\n  removeClass(...classes) {\n    return this.forEach((elem) => {\n      const list = elem.classList;\n\n      iterate(arguments, (cls) => list.remove(cls));\n    });\n  }\n\n  /**\n   * @method Elem#removeCSS\n   * @public\n   * @param {...String} props - CSS properties to remove.\n   * @returns {Elem} Returns this.\n   * @description Removes all the CSS properties from arguments from all the elements in the set.\n   *\n   * @example\n   * elem.removeCSS('display', 'position', 'margin');\n   */\n  removeCSS(...props) {\n    return this.forEach((elem) => {\n      iterate(arguments, (css) => {\n        elem.style.removeProperty(css);\n      });\n    });\n  }\n\n  /**\n   * @method Elem#replace\n   * @public\n   * @param {String|Elem|Element} element - Element to replace the first element in the set\n   * with a set of elements specified by the argument (Element, set of elements or a selector of them).\n   * @returns {Elem} Returns this.\n   * @description Method is similar to\n   * [Node#replaceChild]{@link https://developer.mozilla.org/en/docs/Web/API/Node/replaceChild}.\n   *\n   * @example\n   * elem.replace(elem2);\n   * elem.replace(document.getElementById('id'));\n   * elem.replace('#id div.c1');\n   */\n  replace(element) {\n    element = toFind(element);\n\n    const parent = this.first().parent();\n\n    if (!parent.length) {\n      return this;\n    }\n\n    let elem = parent;\n    let method = 'into';\n    const next = this.next().first().$[0];\n    const prev = this.prev().first().$[0];\n\n    if (next) {\n      elem = next;\n      method = 'insertBefore';\n    } else if (prev) {\n      elem = prev;\n      method = 'insertAfter';\n    }\n\n    this.first().remove();\n\n    element[method](elem);\n  }\n\n  /**\n   * @method Elem#setOf\n   * @public\n   * @param {String} type - HTML element type.\n   * @param {Number|Object|*[]} iterator - A number (how many elements to create inside each element),\n   * an object or an array to iterate over.\n   * @param {ElemSetOfCallback} callback\n   * @returns {Elem} New instance of Elem.\n   * @description Function for creating set of elements inside each element in the set based on an array or an object.\n   *\n   * @example\n   * table.setOf('tr', [[1, 2], [3, 4], [5, 6]], (row, array) => {\n   *   D(row).setOf('td', array, (col, number) => {\n   *     D(col).text(number);\n   *   });\n   * });\n   */\n  setOf(type, iterator, callback) {\n    validate({ 2: callback }, { 2: ['function'] }, 'Elem#setOf');\n\n    iterator = new Super(iterator).$;\n\n    if (isNumber(iterator)) {\n      try {\n        validate({ 1: iterator }, { 1: ['intLike', '>=0'] }, 'Elem#setOf');\n      } catch (e) {\n        throw new Error('2nd argument must be either or non-negative integer, or object! (at Elem#setOf)');\n      }\n\n      iterator = array(iterator).$;\n    }\n\n    return this.object((elems, elem, index) => {\n      iterate(iterator, (value, key) => {\n        const created = new Elem(elem).create(type);\n\n        callback(created.$[0], value, key, iterator, elem, index);\n\n        elems.add(created);\n      });\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#show\n   * @public\n   * @returns {Elem} Returns this.\n   * @description Shows all elements in the set.\n   * If an element was hidden using {@link Elem#hide} previous display is set.\n   *\n   * @example\n   * elem.show();\n   */\n  show() {\n    return this.forEach((elem) => {\n      const { dwayneData } = elem;\n\n      elem = new Elem(elem);\n\n      if (elem.css('display').indexOf('none') === 0) {\n        elem.css('display', dwayneData.previousDisplay);\n      }\n\n      dwayneData.previousDisplay = '';\n    });\n  }\n\n  /**\n   * @method Elem#text\n   * @public\n   * @param {String|ElemValueCallback|*} [text] - Text to write instead of current text.\n   * @returns {Elem|String} If no arguments passed text of the first element in the set returned.\n   * Otherwise all elements texts in the set are set to the text argument.\n   * @description Gets or sets text.\n   *\n   * @example\n   * elem.text('123');\n   * elem.text(); // '123'\n   */\n  text(text) {\n    if (!arguments.length) {\n      return this.prop(textProperty);\n    }\n\n    return this.forEach((elem, index) => {\n      const txt = elem[textProperty];\n\n      new Elem(elem)\n        .html('')\n        .addText(\n          isFunction(text)\n            ? text(txt, elem, index)\n            : text\n        );\n    });\n  }\n\n  /**\n   * @method Elem#toggleAttr\n   * @public\n   * @param {String} attr - Attribute to toggle.\n   * @param {Boolean|*} [condition] - If present and the condition is truthy method adds the attribute\n   * with the '' value and if falsey method removes the attribute. If not present method adds\n   * the attribute if it doesn't exist and removes if it does.\n   * @returns {Elem} Returns this.\n   * @description Method for toggling attributes.\n   *\n   * @example\n   * elem.toggleAttr('attr');\n   * elem.toggleAttr('attr', someCondition);\n   */\n  toggleAttr(attr, condition) {\n    return this.forEach((elem) => {\n      elem = new Elem(elem);\n\n      if (arguments.length < 2 ? !elem.hasAttr(attr) : condition) {\n        elem.attr(attr, '');\n      } else {\n        elem.removeAttr(attr);\n      }\n    });\n  }\n\n  /**\n   * @method Elem#toggleAttr\n   * @public\n   * @param {String} cls - Class to toggle.\n   * @param {Boolean|*} [condition] - If present and the condition is truthy method adds the class\n   * and if falsey method removes the class. If not present method adds\n   * the class if it doesn't exist and removes if it does.\n   * @returns {Elem} Returns this.\n   * @description Method for toggling classes.\n   *\n   * @example\n   * elem.toggleClass('cls');\n   * elem.toggleClass('cls', someCondition);\n   */\n  toggleClass(cls, condition) {\n    return (arguments.length < 2 ? !this.hasClass(cls) : condition)\n      ? this.addClass(cls)\n      : this.removeClass(cls);\n  }\n\n  get toStringTag() {\n    return toStringTag(this.$$);\n  }\n\n  /**\n   * @method Elem#up\n   * @param {Integer} [level = 1] - What level up along the tree should be the parent.\n   * @returns {Elem} New instance of Elem.\n   * @description Creates a collection of parents of level &lt;level&gt;.\n   *\n   * @example\n   * elem.up();\n   * elem.up(2);\n   */\n  up(level = 1) {\n    validate([level], [['intLike', '>=0']], 'Elem#up');\n\n    level = Number(level);\n\n    return this.object((elems, elem) => {\n      let n = level;\n\n      while (n-- && elem) {\n        elem = elem.parentElement;\n      }\n\n      elems.add(elem);\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#validate\n   * @public\n   * @param {ValidateCallback} [validator] - If present, function that validates inputs.\n   * @returns {Elem|Object.<String, Error|*>|{ form: Error?, inputs: <Object.<String, Error>>|null }|null}\n   * If a callback argument provided returns this. If no arguments provided returns either an object\n   * with input names keys and errors values or null if no errors found.\n   * @description If a callback argument provided adds it to the element validators list.\n   * If no arguments provided validates every input element in the set with its own functions.\n   * If an element is a form it validates all input elements inside it. After the validation\n   * fires 'validate' event with 'valid' and 'error' (if form it's errors) properties.\n   *\n   * @example\n   * form.on('input change', 'input', (value, input) => {\n   *   const $input = D(input);\n   *\n   *   if (Number(value) %3) {\n   *     $input.attr('invalid', '');\n   *\n   *     throw new Error('The value should be divided by 3!');\n   *   }\n   *\n   *   $input.removeAttr('invalid');\n   * });\n   */\n  validate(validator) {\n    validate([validator], ['function||!'], 'Elem#validate');\n\n    if (validator) {\n      return this.forEach(({ dwayneData }) => {\n        dwayneData.validators.push(validator);\n      });\n    }\n\n    const errors = new Super({ errors: null });\n\n    this\n      .filter(`${ inputElements }, form`)\n      .forEach((elem, index) => {\n        if (getName(elem) === 'form') {\n          let formErrors = { errors: null };\n          const form = new Elem(elem);\n          const inputs = form.find(inputElements);\n\n          inputs.forEach((input, index) => {\n            validatorWrap(input, index, formErrors);\n          });\n\n          errors.deepAssign(formErrors);\n\n          formErrors = formErrors.errors;\n\n          form.dispatch('validate', {}, {\n            valid: !formErrors,\n            errors: formErrors\n          });\n\n          return inputs.forEach((input) => {\n            const inputError = (formErrors || {})[input.name];\n\n            new Elem(input).dispatch('validate', {}, {\n              valid: !inputError,\n              error: inputError || null\n            });\n          });\n        }\n\n        let inputError = { errors: null };\n\n        validatorWrap(elem, index, inputError);\n        errors.deepAssign(inputError);\n\n        inputError = (inputError.errors || {})[elem.name];\n\n        new Elem(elem).dispatch('validate', {}, {\n          valid: !inputError,\n          error: inputError || null\n        });\n      });\n\n    function validatorWrap(input, index, errors) {\n      try {\n        if (input.validity && !input.validity.valid) {\n          throw new Error(input.validationMessage);\n        }\n\n        input.dwayneData.validators.forEach((validator) => {\n          validator(input.value, input, index);\n        });\n      } catch (err) {\n        (errors.errors = errors.errors || {})[input.name] = err;\n      }\n    }\n\n    if (errors.every((error) => isNull(error))) {\n      return null;\n    }\n\n    return errors.$.errors;\n  }\n\n  /**\n   * @method Elem#width\n   * @public\n   * @param {*|ElemValueCallback} [width] - Width to set.\n   * @returns {Elem|String} If no arguments passed width of the first element in the set returned.\n   * Otherwise all elements widths in the set are set to the width argument.\n   * @description Gets or sets width.\n   *\n   * @example\n   * elem.width(123);\n   * elem.width(); // 123\n   */\n  width(width) {\n    return this.prop.apply(this, new Arr(arguments).unshift('width').$);\n  }\n}\n\ndefineProperties(Elem.prototype, {\n  [Symbol.toStringTag]: 'Elem'\n});\n\n/**\n * @const {Elem} win\n * @type {Elem}\n * @public\n * @description Elem instance of window.\n */\nexport const win = new Elem(global);\n\n/**\n * @const {Elem} doc\n * @type {Elem}\n * @public\n * @description Elem instance of document.\n */\nexport const doc = new Elem(nativeDocument);\n\n/**\n * @const {Elem} html\n * @type {Elem}\n * @public\n * @description Elem instance of document.documentElement.\n */\nexport const html = new Elem(nativeDocument.documentElement);\n\n/**\n * @const {Elem} body\n * @type {Elem}\n * @public\n * @description Elem instance of document.body.\n */\nexport const body = new Elem(nativeDocument.body);\n\n/**\n * @const {Elem} head\n * @type {Elem}\n * @public\n * @description Elem instance of document.head.\n */\nexport const head = new Elem(nativeDocument.head);\n\ndynamicDefineProperties(Elem.prototype, elements, (elem) => function () {\n  return this.create.apply(this, new Arr(arguments).unshift(elem).$);\n});\n\ndynamicDefineProperties(Elem.prototype, canvasGetMethods, (method) => function () {\n  const ctx = this.ctx();\n\n  if (ctx) {\n    return ctx[method].apply(ctx, arguments);\n  }\n});\n\ndynamicDefineProperties(Elem.prototype, canvasRestMethods, (method) => function () {\n  const ctx = this.ctx();\n\n  if (ctx) {\n    ctx[method].apply(ctx, arguments);\n  }\n\n  return this;\n});\n\n/**\n * @function toFind\n * @private\n * @param {Element|Elem|String} elem - Element, selector of Elements or Elem.\n * @returns {Elem} Instance of Elem.\n */\nfunction toFind(elem) {\n  if (isString(elem)) {\n    elem = find(elem);\n  }\n\n  return new Elem(elem);\n}\n\n/**\n * @function isElem\n * @private\n * @param {*} value - Value to check if it's Elem.\n * @returns {Boolean} If the value is Elem.\n * @description Returns if the value is Elem or not.\n */\nfunction isElem(value) {\n  return value instanceof Elem;\n}\n\n/**\n * @function isWindow\n * @private\n * @param {*} value - Value to check if it's Window.\n * @returns {Boolean} If the value is Window.\n * @description Returns if the value is Window or not.\n */\nfunction isWindow(value) {\n  return toStringTag(value) === 'Window';\n}\n\n/**\n * @function isHTMLDocument\n * @private\n * @param {*} value - Value to check if it's HTMLDocument.\n * @returns {Boolean} If the value is HTMLDocument.\n * @description Returns if the value is HTMLDocument or not.\n */\nfunction isHTMLDocument(value) {\n  return toStringTag(value) === 'HTMLDocument';\n}\n\n/**\n * @function getElem\n * @private\n * @param {Elem} elem - Element to check.\n * @returns {Element} The argument or a fallback if needed.\n */\nfunction getElem(elem) {\n  return elem.$[0] || emptyDiv;\n}\n\n/**\n * @function getName\n * @private\n * @param {Element} [elem] - Element which name is needed to know.\n * @returns {String} Elements name\n */\nfunction getName(elem) {\n  return (elem && elem.tagName && elem.tagName.toLowerCase()) || '';\n}\n\n/**\n * @function addDwayneData\n * @private\n * @param {Element} elem - Element to add dwayneData to.\n * @returns {void}\n */\nfunction addDwayneData(elem) {\n  if (!{}.hasOwnProperty.call(elem, 'dwayneData') && !isWindow(elem)) {\n    /**\n     * @member Element#dwayneData\n     * @type {Object}\n     * @protected\n     * @property {String} previousDisplay - Parameter used for hiding/showing elements.\n     * @property {Object.<String, Super>} removeListeners - Parameter used for remove event listeners.\n     * @property {CanvasRenderingContext2D} [ctx] - Canvas rendering context.\n     * @property {Arr} validators - Validators assigned to element.\n     * @description D data.\n     */\n    Object.defineProperty(elem, 'dwayneData', {\n      value: {\n        previousDisplay: '',\n        listeners: {},\n        ctx: getName(elem) === 'canvas' && elem.getContext('2d'),\n        validators: new Arr([])\n      }\n    });\n  } else if (!windowsDwayneData.some(({ element }) => element === elem)) {\n    windowsDwayneData.push({\n      element: elem,\n      listeners: {}\n    });\n  }\n}\n\nconstructors[2].push({\n  check: (elem) => (\n    isElement(elem) ||\n    isWindow(elem) ||\n    isHTMLDocument(elem) ||\n    /^(HTMLCollection|NodeList)$/.test(toStringTag(elem))\n  ),\n  cls: Elem\n});\n\n/**\n * @function find\n * @public\n * @param {String} selector - Selector to find.\n * @param {Element} [base = document] - Base to find in.\n * @returns {Elem} New instance of Elem.\n * @description Synonym for\n * [Document#querySelectorAll]{@link https://developer.mozilla.org/en/docs/Web/API/Document/querySelectorAll}.\n */\nexport function find(selector, base = nativeDocument) {\n  return new Elem(base.querySelectorAll(String(selector)));\n}\n\n/**\n * @function parseHTML\n * @public\n * @param {String} html - HTML to parse.\n * @returns {Elem} New instance of Elem.\n * @description Parses HTML and returns the contents.\n *\n * @example\n * parseHTML('&lt;div&gt;123&lt;/div&gt;'); // Elem\n */\nexport function parseHTML(html) {\n  return doc\n    .div()\n    .html(html)\n    .children();\n}\n\n/**\n * @function px\n * @public\n * @param {String|Number} size - String containing pixels value or a number.\n * @returns {Number} Number of pixels.\n * @description Function for parsing pixel strings.\n *\n * @example\n * px('0px');  // 0\n * px('42px'); // 42\n */\nexport function px(size) {\n  return Number(String(size).replace(/px$/, ''));\n}\n\nexport default Elem;\n","/**\n * @module Router\n * @private\n * @mixin\n * @description Exports Router class.\n */\n\nimport Arr from './Arr';\nimport Elem, { find, win } from './Elem';\nimport Func from './Func';\nimport Promise from './Promise';\nimport Str from './Str';\nimport Super from './Super';\nimport { switcher } from './Switcher';\nimport {\n  isArray, isFunction, isNull, isNullOrUndefined, isRegExp, isString,\n  assign, iterate, defineProperties\n} from './helpers';\nimport constructURL from './helpers/constructURL';\nimport resolveURL from './helpers/resolveURL';\n\n/**\n * @typedef {Object} URLOptions\n * @public\n * @property {Object} [params = {}] - URL params.\n * @property {Object} [query = {}] - Query params.\n * @property {String} [hash = ''] - Hash.\n */\n\n/**\n * @event Router#event\n * @public\n * @description Router event.\n */\n\n/**\n * @method Router#event#pause\n * @public\n * @description Method that pauses the event propagation. Only {@link Router#event:beforeLeave} and\n * {@link Router#event:beforeLoad} can be paused.\n *\n * @example\n * event.pause();\n */\n\n/**\n * @method Router#event#continue\n * @public\n * @description Method that continues the event propagation. Only {@link Router#event:beforeLeave} and\n * {@link Router#event:beforeLoad} can be paused therefore continued.\n *\n * @example\n * event.continue();\n */\n\n/**\n * @method Router#event#stop\n * @public\n * @description Method that stops the event propagation. Only {@link Router#event:beforeLeave} and\n * {@link Router#event:beforeLoad} can be stopped.\n *\n * @example\n * event.stop();\n */\n\n/**\n * @method Router#event#go\n * @public\n * @description Method that prevents Router from loading the default state forcing the page\n * going directly to another URL.\n *\n * @example\n * event.go('/login');\n */\n\n/**\n * @method Router#event#redirectTo\n * @public\n * @description Method that prevents Router from loading the default state forcing the page\n * going directly to another URL.\n *\n * @example\n * event.go('/login');\n */\n\n/**\n * @event Router#event:init\n * @public\n * @property {String} type - 'init' string.\n * @description Router init event. Is fired on Router once after Router.init has been called\n * and Router initialization. It cannot be [paused]{@link Router#event#pause}\n * or [stopped]{@link Router#event#stop}.\n */\n\n/**\n * @event Router#event:beforeLeave\n * @public\n * @property {String} type - 'beforeLeave' string.\n * @property {Router} state - Initial state.\n * @property {String} toURL - URL the redirect goes to.\n * @description Router beforeLeave event. Is fired when an attempt to leave the state happened\n * (or it bubbled to the parent state). It can be [paused]{@link Router#event#pause}\n * and [stopped]{@link Router#event#stop}.\n */\n\n/**\n * @event Router#event:leave\n * @public\n * @property {String} type - 'leave' string.\n * @property {Router} state - Initial state.\n * @property {String} toURL - URL the redirect goes to.\n * @description Router leave event. Is fired right after {@link Router#event:beforeLeave} has been fired.\n * It cannot be [paused]{@link Router#event#pause} or [stopped]{@link Router#event#stop}.\n */\n\n/**\n * @event Router#event:reload\n * @public\n * @property {String} type - 'reload' string.\n * @description Router reload event. Is fired only on Router during {@link reload} is called.\n */\n\n/**\n * @event Router#event:beforeLoad\n * @public\n * @property {String} type - 'beforeLoad' string.\n * @property {Router} state - Eventual state.\n * @description Router beforeLoad event. Is fired when the URL has been already changed after\n * {@link Router#event:leave} has been fired, after the only {@link Router#event:init}\n * has been fired and after browser back or forward buttons has been pressed.\n * It can be [paused]{@link Router#event#pause} and [stopped]{@link Router#event#stop}\n * preventing the state from loading and causing going to the next matched state.\n * Is fired from the Router state down to the loading state.\n */\n\n/**\n * @event Router#event:load\n * @public\n * @property {String} type - 'leave' string.\n * @property {Router} state - Eventual state.\n * @description Router load event. Is fired right after {@link Router#event:beforeLoad} has been fired.\n * It cannot be [paused]{@link Router#event#pause} or [stopped]{@link Router#event#stop}.\n * Is fired from the Router state down to the loading state.\n */\n\n/**\n * @event Router#event:render\n * @public\n * @property {String} type - 'render' string.\n * @property {Router} state - Eventual state.\n * @property {Router} renderingState - Constructor of current rendering state.\n * @description Router load event. Is fired right after {@link Router#event:beforeLoad} has been fired.\n * It cannot be [paused]{@link Router#event#pause} or [stopped]{@link Router#event#stop}.\n * In order to render the state there should be an element with the \"dwayne-router-state\" attribute\n * set to the state name. States are rendered from the Router down to the current state.\n */\n\n/**\n * @callback RouterListener\n * @public\n * @param {Router#event} e - Fired event.\n */\n\n/**\n * @callback RouterRemoveListeners\n * @public\n * @param {String} [event] - If not specified all listeners are removed.\n * Otherwise only specified by the name are to be removed.\n */\n\nconst extendLink = 'https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes#Sub_classing_with_extends';\nconst stateAttrName = 'dwayne-router-state';\nconst isPrototypeOf = {}.isPrototypeOf;\nconst {\n  history,\n  location,\n  location: {\n    origin,\n    href\n  }\n} = global;\nconst stoppable = new Arr(['beforeLeave', 'beforeLoad']);\nconst states = new Arr([]);\nconst pathSwitcher = switcher('call', () => {\n  throw new Error('State path must be a string, a regular expression or undefined! (at registerState)');\n})\n  .case(isRegExp, (path) => ({\n    path: path.source.replace(/\\\\\\//g, '/'),\n    url: path,\n    params: {}\n  }))\n  .case(isNullOrUndefined, () => ({\n    path: '/',\n    url: '/',\n    params: {}\n  }))\n  .case(isString, (path) => {\n    if (path.indexOf('/')) {\n      throw new Error('If state path is a string it must start with \"/\"! (at registerState)');\n    }\n\n    const index = path.indexOf('?');\n    const params = new Super({});\n    let newURL = '';\n    const newPath = new Str(path)\n      .slice(0, index === -1 ? path.length : index)\n      .replace(/^\\/|\\/$/g)\n      .split(/\\//)\n      .map((part, i, array) => {\n        if (!part && array.length > 1) {\n          throw new Error('If state path is a string it must not contain \"//\" or end with \"/\"! (at registerState)');\n        }\n\n        const index = part.indexOf(':');\n\n        if (index > 0) {\n          throw new Error('If state path is a string resource part must be either a string or an URL parameter! (at registerState)');\n        }\n\n        if (index === -1) {\n          return {\n            url: part,\n            value: part\n          };\n        }\n\n        const {\n          name,\n          regexp = /[^\\/]*/\n        } = resolveParameter(\n          part.slice(1),\n          'URL parameter must not be an empty string or contain characters besides \"a-zA-Z_$\"! (at registerState)',\n          'URL parameter regexp validator must be within parentheses (e.g. :userId(\\\\d+) and not contain ones)! (at registerState)'\n        );\n\n        params.$[name] = params.count;\n\n        return {\n          type: 'param',\n          url: `:${ name }`,\n          value: regexp\n        };\n      })\n      .word(({ type, url, value }) => {\n        let newPath;\n\n        if (type === 'param') {\n          newPath = `(${ value.source.replace(/\\\\\\//g, '/') })`;\n        } else {\n          newPath = new Str(value).escapeRegExp().$;\n        }\n\n        newURL += `/${ url }`;\n\n        return `/${ newPath }`;\n      });\n\n    return {\n      path: newPath,\n      url: newURL,\n      params: params.$\n    };\n  });\nconst selectorMatchesSwitcher = switcher('call', (selector) => (name) => name === selector)\n  .case(isNull, (selector) => (name) => true)\n  .case(isRegExp, (selector) => (name) => selector.test(name))\n  .case(isArray, (selector) => (name) => selector.indexOf(name) !== -1);\n\nlet eventPromise = Promise.resolve();\nlet pushed;\nlet initialized;\nlet routerLoaded;\nlet router;\nlet pageTitle;\nlet pageIcon;\nlet defaultState;\nlet currentState;\nlet currentTitle;\nlet currentIcon;\nlet initTitle;\nlet initIcon;\nlet initHTML;\n\n/**\n * @class Router\n * @public\n * @param {Object} props - Always pass props to the super constructor from the Router subclasses.\n * @returns {Router} New instance of Router state.\n * @description Wrap of an array.\n *\n * @example\n * Class for routing the app. It uses [History API]{@link https://developer.mozilla.org/en/docs/Web/API/History_API}.\n * You can redirect and go to parts of your app not reloading the page (changing the URL).\n * URLs and queries can be validates. There can hooks (such as {@link Router#event:beforeLoad},\n * {@link Router#event:load}, {@link Router#event:beforeLeave}, {@link Router#event:leave}\n * and {@link Router#event:render}). Don't try to call new <YourState>() or new Router().\n * All following examples contain proposed syntax for class properties.\n */\nexport class Router {\n  /**\n   * @member {Object} Router.$$\n   * @type {Object}\n   * @protected\n   * @property {Object} listeners - State listeners.\n   * @property {Arr} [states] - All states. Only Router has this property.\n   * @property {Router} [state] - Current state. Only Router has this property.\n   * @description Config object.\n   */\n  static $$ = {\n    listeners: {},\n    state: null,\n    states\n  };\n\n  /**\n   * @member {Router} Router.parent\n   * @type {Router}\n   * @protected\n   * @description Parent state.\n   */\n  static parent = null;\n\n  /**\n   * @member {Arr} Router.children\n   * @type {Arr}\n   * @protected\n   * @description Children states.\n   */\n  static children = new Arr([]);\n\n  /**\n   * @member {RegExp} Router.validatePath\n   * @type {RegExp}\n   * @protected\n   * @description Regexp to validate the URL. Created during the router initialization.\n   */\n  static validatePath = /^\\/$/;\n\n  /**\n   * @member {String} Router.url\n   * @type {String}\n   * @protected\n   * @description State matching URL. Generated during the router initialization.\n   */\n  static url = '/';\n\n  /**\n   * @member {String} Router.relativePath\n   * @type {String}\n   * @protected\n   * @description State matching relative path. Generated during the state registration.\n   */\n  static relativePath = '/';\n\n  /**\n   * @member {String|RegExp} Router.relativeURL\n   * @type {String|RegExp}\n   * @protected\n   * @description State matching relative URL. Generated during the state registration.\n   */\n  static relativeURL = '/';\n\n  /**\n   * @member {Object} Router.params\n   * @type {Object}\n   * @protected\n   * @description State URL params. Generated during the state registration.\n   */\n  static params = {};\n\n  /**\n   * @member {Object} Router.query\n   * @type {Object}\n   * @protected\n   * @description State query params. Generated during the state registration.\n   */\n  static query = {};\n\n  /**\n   * @member {Boolean} Router.abstract\n   * @type {Boolean}\n   * @public\n   * @description If the states should be abstract or not. Abstract state cannot be current state.\n   * This field is not required and defaults to false.\n   */\n  static abstract = false;\n\n  /**\n   * @member {String} Router.stateName\n   * @type {String}\n   * @public\n   * @description A unique name bound to state. Required.\n   */\n  static stateName = null;\n\n  /**\n   * @member {String|RegExp} Router.path\n   * @type {String|RegExp}\n   * @public\n   * @description State path relative to the parent state. Must begin with \"/\" if present.\n   * Not required and defaults to \"/\".\n   */\n  static path = '/';\n\n  /**\n   * @member {String|Function} Router.template\n   * @type {String|Function}\n   * @public\n   * @description State template. Can be either a static string template\n   * or a generated function from your javascript templates provider.\n   * Not required and defaults to \"\".\n   */\n  static template = '';\n\n  /**\n   * @member {Object} Router.templateParams\n   * @type {Object}\n   * @public\n   * @description State template params (for javascript templates).\n   * During the Router initialization are inherited from the parent state template params.\n   * Not required and defaults to {}.\n   */\n  static templateParams = {};\n\n  /**\n   * @member {Boolean} Router.encodeParams\n   * @type {Boolean}\n   * @public\n   * @description If the URL params should be encoded during the URL building (see {@link Router.buildURL}).\n   * Not required and inherited from the parent state. Router default value is true.\n   */\n  static encodeParams = true;\n\n  /**\n   * @member {Boolean} Router.decodeParams\n   * @type {Boolean}\n   * @public\n   * @description If the URL params should be decoded during the state initialization.\n   * Not required and inherited from the parent state. Router default value is true.\n   */\n  static decodeParams = true;\n\n  /**\n   * @member {Boolean} Router.encodeQuery\n   * @type {Boolean}\n   * @public\n   * @description If the query params should be encoded during the URL building (see {@link Router.buildURL}).\n   * Not required and inherited from the parent state. Router default value is true.\n   */\n  static encodeQuery = true;\n\n  /**\n   * @member {Boolean} Router.decodeQuery\n   * @type {Boolean}\n   * @public\n   * @description If the query params should be decoded during the state initialization.\n   * Not required and inherited from the parent state. Router default value is true.\n   */\n  static decodeQuery = true;\n\n  /**\n   * @member {Boolean} Router.icon\n   * @type {String}\n   * @public\n   * @description URL to the state icon (one within the tab). To set icons you should create a link element\n   * with \"dwayne-router-icon\" id. Router will set href itself.\n   * Not required and inherited from the parent state. Router default value is null.\n   */\n  static icon = null;\n\n  /**\n   * @member {Boolean} Router.title\n   * @type {String}\n   * @public\n   * @description App title (one within the tab). To set title you should create a title element\n   * with \"dwayne-router-title\" id. Router will set the value itself.\n   * Not required and inherited from the parent state. Router default value is null.\n   */\n  static title = null;\n\n  /**\n   * @member {Router} Router.default\n   * @type {Router}\n   * @public\n   * @description Works with Router only. Default Router state.\n   */\n  static get default() {\n    return defaultState;\n  }\n  // noinspection JSAnnotator\n  static set default(state) {\n    if (states.indexOf(state) === -1) {\n      throw new Error('State must be registered! (Router.default)');\n    }\n\n    const {\n      abstract,\n      path,\n      params,\n      query\n    } = state;\n\n    if (abstract) {\n      throw new Error('Default state must not be abstract! (Router.default)');\n    }\n\n    if (isRegExp(path)) {\n      throw new Error('Default state must not have regexp path! (Router.default)');\n    }\n\n    if (new Super(params).count || new Super(query).count) {\n      throw new Error('Default state must not have URL or query params! (Router.default)');\n    }\n\n    defaultState = state;\n  }\n\n  /**\n   * @method Router.buildURL\n   * @public\n   * @param {URLOptions} [options = {}] - URL options.\n   * @returns {String} Built URL.\n   * @description Method for building URLs that guaranteed to be matched by this state.\n   * Works properly only after {@link Router#event:init} has been fired.\n   *\n   * @example\n   * class MyState extends Router {\n   *   static stateName = 'myState';\n   *   static path = '/user/:userId';\n   * }\n   *\n   * registerState(MyState);\n   *\n   * Router.on('init', () => {\n   *   MyState.buildURL({\n   *     params: {\n   *       userId: 42\n   *     },\n   *     query: {\n   *       param: 'value'\n   *     }\n   *   }); // '<yourOrigin>/user/42?param=value'\n   * });\n   */\n  static buildURL(options = {}) {\n    const { url } = this;\n\n    if (isRegExp(url)) {\n      throw new Error('URL can be built only from the string URLs! (Router.buildURL)');\n    }\n\n    const {\n      params = {},\n      query = {},\n      hash = ''\n    } = options;\n\n    return constructURL(origin, url, params, query, hash, {\n      params: this.encodeParams,\n      query: this.encodeQuery\n    });\n  }\n\n  /**\n   * @method Router.go\n   * @public\n   * @fires Router#event:beforeLeave\n   * @param {URLOptions} [options = {}] - URL options.\n   * @description Method combines {@link Router#buildURL} and {@link go}.\n   *\n   * @example\n   * class MyState extends Router {\n   *   static stateName = 'myState';\n   *   static path = '/user/:userId';\n   * }\n   *\n   * registerState(MyState);\n   *\n   * Router.on('init', () => {\n   *   MyState.go({\n   *     params: {\n   *       userId: 42\n   *     },\n   *     query: {\n   *       param: 'value'\n   *     }\n   *   });\n   * });\n   */\n  static go(options) {\n    if (this.abstract) {\n      throw new Error('Cannot go to an abstract state! (at Router.go)');\n    }\n\n    go(this.buildURL(options));\n  }\n\n  /**\n   * @method Router.redirect\n   * @public\n   * @fires Router#event:beforeLeave\n   * @param {URLOptions} [options = {}] - URL options.\n   * @description Method combines {@link Router#buildURL} and {@link redirectTo}.\n   *\n   * @example\n   * class MyState extends Router {\n   *   static stateName = 'myState';\n   *   static path = '/user/:userId';\n   * }\n   *\n   * registerState(MyState);\n   *\n   * Router.on('init', () => {\n   *   MyState.redirect({\n   *     params: {\n   *       userId: 42\n   *     },\n   *     query: {\n   *       param: 'value'\n   *     }\n   *   });\n   * });\n   */\n  static redirect(options) {\n    if (this.abstract) {\n      throw new Error('Cannot go to an abstract state! (at Router.go)');\n    }\n\n    redirectTo(this.buildURL(options));\n  }\n\n  /**\n   * @method Router.init\n   * @public\n   * @fires Router#event:init\n   * @description Method for initializing Router.\n   * Note that method like {@link Router.buildURL} and {@link Router.go}\n   * don't work properly until the 'init' event is fired. In order to initialize Router\n   * there should be an element with the \"dwayne-router\" id (content of the Router states).\n   *\n   * @example\n   * Router.init();\n   */\n  static init() {\n    initialized = true;\n\n    initialize();\n  }\n\n  /**\n   * @method Router.on\n   * @public\n   * @listens Router#event\n   * @param {String|Object.<String|Listener>} event - Either a event string\n   * or an object with event keys and listeners values.\n   * @param {String|String[]|RegExp} selector - String, array of strings or\n   * a regular expression to filter states by the state name. Render event is treated\n   * the special way: current rendering state name is compared to the selector.\n   * @param {RouterListener} [listener] - If the first argument is a string it must be\n   * a listener function for specified event.\n   * @returns {RouterRemoveListeners} Function that can remove listeners that has just been set.\n   * @description Method for listening to all events you want. beforeLeave\n   */\n  static on(event, selector = null, listener) {\n    if (isFunction(selector)) {\n      listener = selector;\n      selector = null;\n    }\n\n    if (isString(event)) {\n      event = { [event]: listener };\n    }\n\n    const { listeners } = this.$$;\n    const allListeners = {};\n    const matchesSelector = selectorMatchesSwitcher(selector);\n\n    iterate(event, (listener, event) => {\n      const array = listeners[event] || new Arr([]);\n      const newListener = (e) => {\n        let name = e.state && e.state.name;\n\n        if (e.renderingState) {\n          name = e.renderingState.stateName;\n        }\n\n        if (matchesSelector(name)) {\n          listener.call(this, e);\n        }\n      };\n\n      newListener.toString = () => listener.toString();\n\n      allListeners[event] = newListener;\n      (listeners[event] = array).push(newListener);\n    });\n\n    return function removeEventListeners(event) {\n      let actualListeners = allListeners;\n\n      if (allListeners[event]) {\n        actualListeners = { [event]: allListeners[event] };\n      }\n\n      iterate(actualListeners, (listener, event) => {\n        const eventListeners = listeners[event];\n\n        const found = eventListeners.find((l) => l === listener);\n\n        if (found) {\n          eventListeners.splice(found.key);\n        }\n      });\n    };\n  }\n\n  // TODO: Router#store\n\n  /**\n   * @member {Elem} Router#base\n   * @type {Elem}\n   * @public\n   * @description State rendering base node.\n   * Created before firing {@link Router#event:render}.\n   */\n  base = router;\n\n  /**\n   * @member {String} Router#name\n   * @type {String}\n   * @public\n   * @description State name (inherited from the constructor).\n   * Created during state initialization.\n   */\n  name = null;\n\n  /**\n   * @member {Object} Router#params\n   * @type {Object}\n   * @public\n   * @description State URL params.\n   * Created during state initialization.\n   */\n  params = {};\n\n  /**\n   * @member {Object} Router#query\n   * @type {Object}\n   * @public\n   * @description State query params.\n   * Created during state initialization.\n   */\n  query = {};\n\n  /**\n   * @member {String} Router#hash\n   * @type {String}\n   * @public\n   * @description State query params.\n   * Created during state initialization.\n   */\n  hash = '';\n\n  /**\n   * @member {Object} Router#templateParams\n   * @type {Object}\n   * @public\n   * @description State template params. Inherited from the constructor template params.\n   * Can be changed before rendering in beforeLoad or load event listeners.\n   * Created during state initialization.\n   */\n  templateParams = new Super(new Super(this).proto().$.constructor.templateParams).create().$;\n\n  constructor(props = {}) {\n    assign(this, props);\n  }\n\n  /**\n   * @method Router#onBeforeLeave\n   * @public\n   * @listens Router#event:beforeLeave\n   * @param {Router#event:beforeLeave} event - Fired event.\n   * @description Called on beforeLeave event. Called after the listeners.\n   */\n  onBeforeLeave() {}\n\n  /**\n   * @method Router#onBeforeLoad\n   * @public\n   * @listens Router#event:beforeLoad\n   * @param {Router#event:beforeLoad} event - Fired event.\n   * @description Called on beforeLoad event. Called after the listeners.\n   */\n  onBeforeLoad() {}\n\n  /**\n   * @method Router#onInit\n   * @public\n   * @listens Router#event:init\n   * @param {Router#event:init} event - Fired event.\n   * @description Called on init event. Called after the listeners.\n   */\n  onInit() {}\n\n  /**\n   * @method Router#onLeave\n   * @public\n   * @listens Router#event:leave\n   * @param {Router#event:leave} event - Fired event.\n   * @description Called on leave event. Called after the listeners.\n   */\n  onLeave() {}\n\n  /**\n   * @method Router#onLoad\n   * @public\n   * @listens Router#event:load\n   * @param {Router#event:load} event - Fired event.\n   * @description Called on load event. Called after the listeners.\n   */\n  onLoad() {}\n\n  /**\n   * @method Router#onRender\n   * @public\n   * @listens Router#event:render\n   * @param {Router#event:render} event - Fired event.\n   * @description Called on render event. Called after the listeners.\n   */\n  onRender() {}\n}\n\nconst MainState = Router.prototype;\n\ndefaultState = Router;\n\nclass RouterError {}\n\nconst stopError = new RouterError();\n\n/**\n * @function redirect\n * @private\n * @param {String} newURL - New URL to go to.\n * @param {Boolean} [push] - If it's need to push state or rather replace it.\n */\nfunction redirect(newURL, push) {\n  eventPromise = eventPromise\n    .then(() => beforeLeave(newURL))\n    .then(() => {\n      (currentState ? currentState.base : new Elem([]))\n        .hide()\n        .html('');\n\n      changeHistory(newURL, push);\n    })\n    .then(() => {\n      currentState = Router.$$.state = null;\n    })\n    .then(beforeLoad)\n    .catch(printError);\n}\n\n/**\n * @function beforeLeave\n * @private\n * @param {String} newURL - New URL to go to.\n * @returns {Promise}\n */\nfunction beforeLeave(newURL) {\n  return Promise.resolve()\n    .then(() => dispatchNewEvent('beforeLeave'))\n    .then(() => dispatchNewEvent('leave'));\n\n  function dispatchNewEvent(type) {\n    return dispatchEvent(type, {\n      type,\n      state: currentState,\n      toURL: newURL\n    });\n  }\n}\n\n/**\n * @function beforeLoad\n * @private\n * @returns {Promise}\n */\nfunction beforeLoad() {\n  const { hash } = resolveURL(Router.decodeQuery);\n  let newState;\n\n  return Promise.resolve()\n    .then(() => loadStatesByOne())\n    .then(() => {\n      currentState = Router.$$.state = newState;\n\n      return dispatchNewEvent('load');\n    })\n    .then(() => {\n      const proto = new Super(newState).proto().$.constructor;\n      const renderStates = new Arr([proto]);\n      const {\n        stateName,\n        templateParams\n      } = newState;\n      const {\n        title,\n        icon\n      } = proto;\n      const ownTemplateParams = new Super(templateParams).clone();\n      let state = proto;\n      let promise = Promise.resolve();\n\n      while (!getStateBase(state).length && (state = state.parent)) {\n        renderStates.unshift(state);\n      }\n\n      find(`[${ stateAttrName }]`).forEach((elem) => {\n        elem = new Elem(elem);\n\n        const stateNameFromAttr = elem.attr(stateAttrName);\n        const { value: foundState } = states.find(({ stateName }) => stateName === stateNameFromAttr) || {};\n\n        if (!foundState || (stateNameFromAttr !== stateName && !(newState instanceof foundState))) {\n          elem\n            .hide()\n            .html('');\n        }\n      });\n\n      renderStates.forEach((state) => {\n        const {\n          template,\n          templateParams: parentTemplateParams\n        } = state;\n        const templateParams = new Super(parentTemplateParams)\n          .create()\n          .assign(ownTemplateParams)\n          .$;\n\n        promise = promise.then(() => {\n          const base = getStateBase(state)\n            .first()\n            .show();\n\n          try {\n            base.html(isFunction(template) ? template(templateParams) : template);\n          } catch (err) {\n            console.error('%s %o', 'Render error:', err);\n          }\n\n          base\n            .find(`[${ stateAttrName }]`)\n            .hide();\n\n          if (state === proto) {\n            newState.base = base;\n\n            if (!isNull(title) && title !== currentTitle) {\n              pageTitle.text(currentTitle = title);\n            }\n\n            if (!isNull(icon) && icon !== currentIcon) {\n              pageIcon.ref(currentIcon = icon);\n            }\n          }\n\n          return dispatchNewEvent('render', state);\n        });\n      });\n\n      return promise;\n    })\n    .catch(printError);\n\n  function dispatchNewEvent(type, renderingState) {\n    return dispatchEvent(type, {\n      type,\n      state: newState\n    }, renderingState);\n  }\n\n  function loadStatesByOne() {\n    let promise = Promise.reject(stopError);\n\n    findStatesByURL().forEach(({ state, params, query }) => {\n      promise = promise.catch((err) => {\n        if (err instanceof RouterError && err.type === 'redirect') {\n          throw err;\n        }\n\n        printError(err);\n\n        newState = new state({\n          name: state.stateName,\n          params,\n          query,\n          hash\n        });\n\n        return dispatchNewEvent('beforeLoad');\n      });\n    });\n\n    return promise.catch((err) => {\n      if (err instanceof RouterError && err.type === 'redirect') {\n        changeHistory(err.url, err.push);\n\n        return loadStatesByOne();\n      }\n\n      throw err;\n    });\n  }\n}\n\n/**\n * @function changeHistory\n * @private\n * @param {String} url - URL to go to.\n * @param {Boolean} push - If the state is needed to be pushed or replaced.\n * @description Function for manipulating history.\n */\nfunction changeHistory(url, push) {\n  try {\n    history[push ? 'pushState' : 'replaceState'](null, null, url);\n    pushed = true;\n  } catch (err) {\n    location.href = url;\n  }\n}\n\n/**\n * @function decode\n * @private\n * @param {String} string - String to decode.\n * @param {Boolean} decodeParams - If the string should be decoded in the first place.\n * @returns {String} Decoded string.\n */\nfunction decode(string, decodeParams) {\n  return decodeParams\n    ? decodeURIComponent(string)\n    : string;\n}\n\n/**\n * @function printError\n * @private\n * @param {Error} err - Error to log.\n */\nfunction printError(err) {\n  if (!(err instanceof RouterError)) {\n    console.error('%s %o', 'Uncaught (in event listener)', err);\n  }\n}\n\n/**\n * @function getStateBase\n * @param {Router} state - State to find the base of.\n * @returns {Elem} State base.\n */\nfunction getStateBase(state) {\n  return state === Router ? router : find(`[${ stateAttrName }=\"${ state.stateName }\"]`);\n}\n\n/**\n * @function isInstanceOfRouterState\n * @param {Router} state - State to find out if it extends Router.\n * @returns {Boolean} If the state extends Router.\n */\nfunction isInstanceOfRouterState(state) {\n  return isPrototypeOf.call(Router, state) || isPrototypeOf.call(MainState, state.prototype);\n}\n\n/**\n * @function resolveParameter\n * @private\n * @param {String} param - Param to resolve.\n * @param {String} nameErrorName - Name error description.\n * @param {String} valueErrorName - Name error description.\n * @returns {{ name: String, regexp: RegExp|undefined }}\n */\nfunction resolveParameter(param, nameErrorName, valueErrorName) {\n  const nameMatch = param.match(/^[a-z_\\$]+/i);\n\n  if (!nameMatch) {\n    throw new Error(nameErrorName);\n  }\n\n  const name = nameMatch[0];\n  const value = param.slice(name.length);\n  let regexp;\n\n  if (value && (value.indexOf('(') || value.indexOf(')') !== value.length - 1)) {\n    throw new Error(valueErrorName);\n  }\n\n  if (value) {\n    regexp = new RegExp(value.slice(1, -1));\n  }\n\n  return {\n    name,\n    regexp\n  };\n}\n\n/**\n * @function findStatesByURL\n * @private\n * @returns {Arr} Arr of matching states.\n */\nfunction findStatesByURL() {\n  const pathname = location.pathname || '/';\n  const search = location.search || '';\n  const eventualStates = states.object((states, state) => {\n    if (state.abstract) {\n      return;\n    }\n\n    const {\n      url: stateURL,\n      validatePath,\n      params,\n      query: requiredQuery,\n      decodeParams,\n      decodeQuery\n    } = state;\n    const query = new Super(resolveURL(decodeQuery).query);\n    const eventualParams = {};\n    const match = (\n      (pathname.replace(/\\/$/, '') || '/') +\n      (isRegExp(stateURL) ? search : '')\n    ).match(validatePath);\n\n    if (!match) {\n      return false;\n    }\n\n    /* eslint guard-for-in: 0 */\n    for (const param in requiredQuery) {\n      if (!query.hasOwn(param) || !requiredQuery[param].test(query.$[param])) {\n        return;\n      }\n    }\n\n    match.shift();\n\n    for (const param in params) {\n      eventualParams[param] = decode(match[params[param]], decodeParams);\n    }\n\n    states.push({\n      state,\n      params: eventualParams,\n      query: query.$\n    });\n  }, new Arr([]));\n\n  if (eventualStates.every(({ state }) => state !== defaultState)) {\n    eventualStates.push({\n      state: defaultState,\n      params: {},\n      query: resolveURL(defaultState.decodeQuery).query\n    });\n  }\n\n  return eventualStates;\n}\n\n/**\n * @function dispatchEvent\n * @private\n * @param {String} event - Event to be fired.\n * @param {Object} [assigned] - Properties to be assigned to the event.\n * @param {Router} [renderingState] - Current state.\n */\nfunction dispatchEvent(event, assigned, renderingState) {\n  const eventualEvent = new Super({})\n    .value({\n      type: event\n    })\n    .value(assigned || {})\n    .$;\n  const {\n    type,\n    state\n  } = eventualEvent;\n  const isStoppable = stoppable.indexOfStrict(type) !== -1 && state && (\n    new Super(state).proto().$.constructor !== defaultState ||\n    type !== 'beforeLoad'\n  );\n\n  let paused;\n  let stopped;\n  let continuePropagation = () => {};\n  let stopPropagation = () => {};\n  let redirect = () => {};\n  let promise = Promise.resolve();\n  let currentState;\n\n  new Super(eventualEvent)\n    .get('renderingState', () => currentState)\n    .value({\n      continue() {\n        if (isStoppable) {\n          paused = false;\n          continuePropagation();\n        }\n      },\n      pause() {\n        if (isStoppable) {\n          paused = true;\n        }\n      },\n      stop() {\n        if (isStoppable) {\n          stopped = true;\n          stopPropagation();\n        }\n      },\n      go(url) {\n        if (isStoppable && type === 'beforeLoad') {\n          redirect(url, true);\n        }\n      },\n      redirectTo(url) {\n        if (isStoppable && type === 'beforeLoad') {\n          redirect(url);\n        }\n      }\n    });\n\n  getListeners(state, type, renderingState).forEach(({ renderingState, listener }) => {\n    promise = promise.then(() => new Promise((resolve, reject) => {\n      currentState = renderingState;\n\n      let finished = false;\n\n      continuePropagation = () => {\n        if (finished) {\n          resolve();\n        }\n      };\n\n      redirect = (url, push) => {\n        const err = new RouterError();\n\n        err.type = 'redirect';\n        err.push = push;\n        err.url = url;\n\n        reject(err);\n      };\n\n      stopPropagation = () => {\n        reject(stopError);\n      };\n\n      listener(eventualEvent);\n\n      finished = true;\n\n      if (stopped) {\n        return reject(stopError);\n      }\n\n      if (!paused) {\n        resolve();\n      }\n    }));\n  });\n\n  return promise.catch((err) => {\n    if (isStoppable) {\n      throw err;\n    }\n\n    printError(err);\n  });\n}\n\n/**\n * @function getListeners\n * @private\n * @param {Router} state - State to get listeners from.\n * @param {String} type - Event type.\n * @param {Router} [renderingState] - If the type is \"render\" then it's current rendering state.\n */\nfunction getListeners(state = new Super(MainState).create().$, type, renderingState) {\n  const tree = new Arr([]);\n  const desc = /leave/i.test(type);\n  const method = desc ? 'push' : 'unshift';\n  const listenerName = `on${ new Str(type).capitalizeFirst() }`;\n  let proto = new Super(state).proto().$.constructor;\n\n  while (proto) {\n    if (!renderingState || isPrototypeOf.call(proto, renderingState) || renderingState === proto) {\n      tree[method](proto);\n    }\n\n    proto = proto.parent;\n  }\n\n  return tree\n    .object((listeners, {\n      $$: {\n        listeners: ownListeners\n      },\n      prototype: proto\n    }) => {\n      if (new Super(proto).hasOwn(listenerName)) {\n        listeners.push({\n          renderingState,\n          listener: new Func(proto[listenerName]).bindContext(state)\n        });\n      }\n\n      listeners.push.apply(listeners, (ownListeners[type] || new Arr([])).map((listener) => ({\n        renderingState,\n        listener\n      })).$);\n    }, new Arr([]));\n}\n\n/**\n * @function initialize\n * @private\n */\nfunction initialize() {\n  if (!initialized || routerLoaded) {\n    return;\n  }\n\n  routerLoaded = true;\n  pageTitle = find('#dwayne-router-title').first();\n  pageIcon = find('#dwayne-router-icon').first();\n  router = find('#dwayne-router').first();\n  initHTML = router.html() || '';\n  initTitle = pageTitle.text() || '';\n  initIcon = pageIcon.ref() || '';\n\n  find(`[${ stateAttrName }]`).hide();\n\n  defineProperties(MainState, {\n    base: router\n  });\n\n  win.on('click', (e) => {\n    const target = new Elem(e.target);\n\n    if (target.name === 'a' && target.attr('target') !== '_blank') {\n      e.preventDefault();\n\n      redirect(target.attr('href') || '', true);\n    }\n  });\n\n  states.forEach((state) => {\n    const {\n      parent: {\n        children,\n        params: parentParams,\n        query: parentQuery,\n        templateParams: parentTemplateParams\n      },\n      params,\n      query,\n      templateParams,\n      relativeURL,\n      relativePath\n    } = state;\n    let proto = state;\n    let count = 0;\n    let newPath = relativePath;\n    let newURL = '';\n\n    while (proto = proto.parent) {\n      count += new Super(proto.params).count;\n      newPath = proto.relativePath + newPath;\n      newURL = proto.relativeURL + newURL;\n    }\n\n    newPath = new RegExp(`^${ newPath.replace(/\\/+/g, '/').replace(/\\/$/, '') || '/' }$`);\n    newURL = isRegExp(relativeURL)\n      ? newPath\n      : (newURL + relativeURL).replace(/\\/+/g, '/').replace(/\\/$/, '') || '/';\n\n    children.push(state);\n\n    new Super(templateParams).proto(parentTemplateParams);\n    new Super(query).proto(parentQuery);\n    new Super(params)\n      .proto(parentParams)\n      .forEach((value, key, params) => {\n        params[key] += count;\n      });\n\n    defineProperties(state, {\n      url: newURL,\n      validatePath: newPath\n    });\n  });\n\n  eventPromise = eventPromise\n    .then(() => dispatchEvent('init'))\n    .then(() => beforeLoad())\n    .then(() => {\n      win.on('popstate', () => {\n        if (location.href !== href) {\n          pushed = true;\n        }\n\n        if (pushed) {\n          eventPromise = eventPromise.then(() => beforeLoad());\n        }\n      });\n    });\n}\n\n/**\n * @function go\n * @public\n * @fires Router#event:beforeLeave\n * @param {String} url - URL to go to.\n * @returns {void}\n * @description Function for directing to an URL. Can be external one or inner one.\n *\n * @example\n * go('/user/56');\n */\nexport function go(url) {\n  redirect(url, true);\n}\n\n/**\n * @function redirectTo\n * @public\n * @fires Router#event:beforeLeave\n * @param {String} url - URL to go to.\n * @returns {void}\n * @description Function for redirecting to an URL. Can be external one or inner one.\n *\n * @example\n * redirectTo('/user/56');\n */\nexport function redirectTo(url) {\n  redirect(url);\n}\n\n/**\n * @function reload\n * @public\n * @fires Router#event:beforeLeave\n * @returns {void}\n * @description Fires {@link Router#event:beforeLeave}, {@link Router#event:leave}\n * as usual, then resets router content, page title and icon to initial content,\n * fires {@link Router#event:reload} and then loads page like if it was the first time.\n */\nexport function reload() {\n  eventPromise = eventPromise\n    .then(() => beforeLeave(location.href))\n    .then(() => {\n      router.html(initHTML);\n      pageTitle.text(initTitle);\n      pageIcon.ref(initIcon);\n    })\n    .then(() => {\n      currentState = Router.$$.state = null;\n    })\n    .then(() => dispatchEvent('reload'))\n    .then(beforeLoad)\n    .catch(printError);\n}\n\n/**\n * @function registerState\n * @public\n * @param {Router} state - State to register.\n * @returns {void}\n * @description Function for registering states.\n *\n * @example\n * class MyState extends Router {\n *   static stateName = 'myState';\n *   static path = '/user/:userId';\n * }\n *\n * registerState(MyState);\n */\nexport function registerState(state) {\n  if (states.indexOf(state) !== -1) {\n    return;\n  }\n\n  if (!isInstanceOfRouterState(state)) {\n    throw new Error(`State must extend (${ extendLink }) Router! (at registerState)`);\n  }\n\n  const { stateName } = state;\n\n  if (!new Super(state).hasOwn('stateName') || states.find(({ stateName: n }) => n === stateName)) {\n    throw new Error('State must have unique stateName! (at registerState)');\n  }\n\n  const proto = Object.getPrototypeOf(state);\n\n  if (isRegExp(proto.url)) {\n    throw new Error('URL regexp state cannot be extended! (at registerState)');\n  }\n\n  const $state = new Super(state);\n  const path = $state.hasOwn('path')\n    ? state.path\n    : '';\n  const {\n    url: relativeURL,\n    path: relativePath,\n    params\n  } = pathSwitcher(path);\n\n  defineProperties(state, {\n    $$: {\n      listeners: {}\n    },\n\n    stateName,\n    parent: proto,\n    children: new Arr([]),\n    template: $state.hasOwn('template')\n      ? state.template\n      : '',\n    relativeURL,\n    relativePath,\n    params,\n    abstract: $state.hasOwn('abstract') && !!state.abstract,\n    templateParams: $state.hasOwn('templateParams')\n      ? state.templateParams\n      : {},\n    query: {}\n  });\n\n  const { query } = state;\n  const index = isString(path) ? path.indexOf('?') : -1;\n\n  if (index !== -1) {\n    new Str(path)\n      .replace(/&$/)\n      .slice(index + 1)\n      .split('&')\n      .forEach((param) => {\n        const {\n          name,\n          regexp = /[\\s\\S]*/\n        } = resolveParameter(\n          param,\n          'Query parameter must not be an empty string or contain characters besides \"a-zA-Z_$\"! (at registerState)',\n          'Query parameter regexp validator must be within parentheses (e.g. :userId(\\\\d+)) and not contain them! (at registerState)'\n        );\n\n        query[name] = new RegExp(`^${ regexp.source.replace(/\\\\\\//g, '/') }$`);\n      });\n  }\n\n  states.push(state);\n}\n","/* eslint no-nested-ternary: 0 */\n/* eslint no-negated-condition: 0 */\nexport default typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n","/**\n * @module helpers/Symbol\n * @private\n * @description Exports Symbol class.\n */\n\nexport const Symbol = global.Symbol || {\n  toStringTag: 'Symbol.toStringTag',\n  iterator: Math.random().toString(36)\n};\n","/**\n * @module constants/validateCheckExpressions\n * @private\n * @description Exports different types of validate expressions for {@link module:helpers/validate}.\n */\n\nimport * as methods from '../helpers/checkTypes';\n\n/**\n * @callback checkValidityCallback\n * @private\n * @param {*} value - Value to check.\n */\n\n/**\n * @typedef {Object} validateExpr\n * @private\n * @property {String} text - Text of the thrown error.\n * @property {Error} error - Type of the thrown error.\n * @property {checkValidityCallback} check - Callback for checking value.\n */\n\n/**\n * @type {validateExpr[]}\n * @private\n * @description Object of different types of validation.\n */\nexport default {\n  '>0': {\n    check: (n) => n > 0,\n    text: '$n argument must be positive!',\n    error: RangeError\n  },\n  '>=0': {\n    check: (n) => n >= 0,\n    text: '$n argument must be non-negative!',\n    error: RangeError\n  },\n  '<0': {\n    check: (n) => n < 0,\n    text: '$n argument must be negative!',\n    error: RangeError\n  },\n  '<=0': {\n    check: (n) => n <= 0,\n    text: '$n argument must be non-positive!',\n    error: RangeError\n  },\n  '!!': {\n    check: methods.isNullOrUndefined,\n    text: '$n argument must be not null or undefined!',\n    error: TypeError\n  },\n  array: {\n    check: methods.isArray,\n    text: '$n argument must be an array!',\n    error: TypeError\n  },\n  'array||!': {\n    check: (a) => methods.isArray(a) || methods.isNullOrUndefined(a),\n    text: '$n argument must be an array, or undefined, or null!',\n    error: TypeError\n  },\n  arrayLike: {\n    check: methods.isArrayLike,\n    text: '$n argument must be array-like!',\n    error: TypeError\n  },\n  'arrayLike||!': {\n    check: (a) => methods.isArrayLike(a) || methods.isNullOrUndefined(a),\n    text: '$n argument must be array-like, or undefined, or null!',\n    error: TypeError\n  },\n  date: {\n    check: methods.isDate,\n    text: '$n argument must be a date!',\n    error: TypeError\n  },\n  'date||!': {\n    check: (d) => methods.isDate(d) || methods.isNullOrUndefined(d),\n    text: '$n argument must be a date, or undefined, or null!',\n    error: TypeError\n  },\n  dateLike: {\n    check: methods.isDateLike,\n    text: '$n argument must be date-like!',\n    error: TypeError\n  },\n  'dateLike||!': {\n    check: (d) => methods.isDateLike(d) || methods.isNullOrUndefined(d),\n    text: '$n argument must be date-like, or undefined, or null!',\n    error: TypeError\n  },\n  function: {\n    check: methods.isFunction,\n    text: '$n argument must be a function!',\n    error: TypeError\n  },\n  'function||!': {\n    check: (f) => methods.isFunction(f) || methods.isNullOrUndefined(f),\n    text: '$n argument must be a function, or undefined, or null!',\n    error: TypeError\n  },\n  int: {\n    check: methods.isInteger,\n    text: '$n argument must be an integer!',\n    error: TypeError\n  },\n  'int||!': {\n    check: (i) => methods.isInteger(i) || methods.isNullOrUndefined(i),\n    text: '$n argument must be an integer, or undefined, or null!',\n    error: TypeError\n  },\n  intLike: {\n    check: methods.isIntegerLike,\n    text: '$n argument must be integer-like!',\n    error: TypeError\n  },\n  'intLike||!': {\n    check: (i) => methods.isIntegerLike(i) || methods.isNullOrUndefined(i),\n    text: '$n argument must be integer-like, or undefined, or null!',\n    error: TypeError\n  },\n  number: {\n    check: methods.isNumber,\n    text: '$n argument must be a number!',\n    error: TypeError\n  },\n  'number||!': {\n    check: (n) => methods.isNumber(n) || methods.isNullOrUndefined(n),\n    text: '$n argument must be a number, or undefined, or null!',\n    error: TypeError\n  },\n  numberLike: {\n    check: methods.isNumberLike,\n    text: '$n argument must be number-like!',\n    error: TypeError\n  },\n  'numberLike||!': {\n    check: (n) => methods.isNumberLike(n) || methods.isNullOrUndefined(n),\n    text: '$n argument must be number-like, or undefined, or null!',\n    error: TypeError\n  },\n  object: {\n    check: methods.isObject,\n    text: '$n argument must be an object!',\n    error: TypeError\n  },\n  'object||!': {\n    check: (o) => methods.isObject(o) || methods.isNullOrUndefined(o),\n    text: '$n argument must be an object, or undefined, or null!',\n    error: TypeError\n  },\n  regexp: {\n    check: methods.isRegExp,\n    text: '$n argument must be a regular expression!',\n    error: TypeError\n  },\n  'regexp||!': {\n    check: (r) => methods.isRegExp(r) || methods.isNullOrUndefined(r),\n    text: '$n argument must be a regular expression, or undefined, or null!',\n    error: TypeError\n  },\n  string: {\n    check: methods.isString,\n    text: '$n argument must be a string!',\n    error: TypeError\n  },\n  'string||!': {\n    check: (s) => methods.isString(s) || methods.isNullOrUndefined(s),\n    text: '$n argument must be a string, or undefined, or null!',\n    error: TypeError\n  }\n};\n","/**\n * @module Promise\n * @private\n * @mixin\n * @description Exports Promise class.\n */\n\nimport { isFunction, defineProperties, Symbol } from './helpers';\n\nconst secret = {};\nconst iterator = Symbol.iterator;\n\nexport class Promise {\n  constructor(executor) {\n    if (!isFunction(executor)) {\n      throw new TypeError(`Promise resolver ${ {}.toString.call(executor) } is not a function`);\n    }\n\n    let hiddenStatus;\n    let hiddenValue;\n\n    const\tonFulfill = [];\n    const onReject = [];\n    const realPromise = this;\n    const hiddenPromise = {\n      handled: false,\n      get status() {\n        return hiddenStatus;\n      },\n      set status(value) {\n        hiddenStatus = value;\n        realPromise.status = value;\n      },\n      get value() {\n        return hiddenValue;\n      },\n      set value(val) {\n        hiddenValue = val;\n        realPromise.value = val;\n      }\n    };\n\n    hiddenPromise.status = 'pending';\n    hiddenPromise.value = undefined;\n\n    /**\n     * @typedef {Object} hiddenPromise\n     * @private\n     * @property {Boolean|Object} handled - If the promise is handled or not.\n     * @property {'pending'|'fulfilled'|'rejected'} status - Status of the promise.\n     * @property {*} value - Value of the promise.\n     */\n\n    /**\n     * @member {Function} hiddenPromise#handle\n     * @private\n     * @param {('reject'|'resolve')} event - Type of the event to handle.\n     * @param {Function} handler - Handler itself.\n     * @param {Function} resolve - Resolve function.\n     * @param {Function} reject - Reject function.\n     * @param {Object} secret - Secret.\n     * @description Private method for handling promises.\n     */\n\n    /**\n     * @member {hiddenPromise} Promise#$$\n     * @protected\n     */\n    defineProperties(this.$$ = {}, {\n      'get/set handled': {\n        get() {\n          return hiddenPromise.handled;\n        },\n        set(key) {\n          if (key === secret) {\n            hiddenPromise.handled = true;\n          }\n        }\n      },\n      handle(status, f, resolve, reject, key) {\n        if (key === secret) {\n          const proxy = isFunction(f) ? (value) => {\n            try {\n              resolve(f(value));\n            } catch (err) {\n              return reject(err);\n            }\n          } : null;\n\n          if (status === 'resolve') {\n            onFulfill.push(proxy || ((value) => resolve(value)));\n          } else if (status === 'reject') {\n            onReject.push(proxy || ((err) => reject(err)));\n          }\n        }\n      },\n      'get status'() {\n        return hiddenPromise.status;\n      },\n      'get value'() {\n        return hiddenPromise.value;\n      }\n    });\n\n    try {\n      executor(resolve, reject);\n    } catch (err) {\n      reject(err);\n    }\n\n    function reject(err) {\n      if (hiddenPromise.status === 'pending') {\n        hiddenPromise.status = 'rejected';\n        hiddenPromise.value = err;\n\n        for (let i = 0, length = onReject.length; i < length; i++) {\n          hiddenPromise.handled = true;\n\n          onReject[i](err);\n        }\n\n        setTimeout(() => {\n          if (!hiddenPromise.handled) {\n            console.error('%s %o', 'Uncaught (in promise)', err);\n          }\n        }, 1);\n      }\n    }\n\n    function resolve(value) {\n      if (hiddenPromise.status === 'pending') {\n        if (value && isFunction(value.then)) {\n          return value.then((value) => {\n            resolve(value);\n          }, (err) => {\n            reject(err);\n          });\n        }\n\n        hiddenPromise.status = 'fulfilled';\n        hiddenPromise.value = value;\n\n        for (let i = 0, length = onFulfill.length; i < length; i++) {\n          hiddenPromise.handled = true;\n\n          onFulfill[i](value);\n        }\n      }\n    }\n  }\n\n  static all(iterable) {\n    const array = [];\n\n    let toResolve = 0;\n\n    if (iterable[iterator]) {\n      iterable = iterable[iterator]();\n\n      return new Promise((resolve, reject) => {\n        let next;\n        let i = 0;\n\n        while (!(next = iterable.next()).done) {\n          const promise = Promise.resolve(next.value);\n\n          toResolve++;\n\n          ((i) => {\n            promise.then((value) => {\n              toResolve--;\n              array[i] = value;\n\n              setTimeout(() => {\n                if (next.done && !toResolve) {\n                  resolve(array);\n                }\n              }, 1);\n            }, reject);\n          })(i++);\n        }\n\n        if (!i) {\n          return Promise.resolve([]);\n        }\n      });\n    }\n\n    const length = iterable.length;\n\n    if (!length) {\n      return Promise.resolve([]);\n    }\n\n    toResolve = length;\n\n    return new Promise((resolve, reject) => {\n      for (let i = 0; i < length; i++) {\n        const promise = Promise.resolve(iterable[i]);\n\n        promise.then((value) => {\n          toResolve--;\n          array[i] = value;\n\n          if (!toResolve) {\n            resolve(array);\n          }\n        }, reject);\n      }\n    });\n  }\n\n  static race(iterable) {\n    if (iterable[iterator]) {\n      iterable = iterable[iterator]();\n\n      return new Promise((resolve, reject) => {\n        let next;\n\n        while (!(next = iterable.next()).done) {\n          next.value.then(resolve, reject);\n        }\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      for (let i = 0, length = iterable.length; i < length; i++) {\n        iterable[i].then(resolve, reject);\n      }\n    });\n  }\n\n  static reject(value) {\n    return new Promise((resolve, reject) => {\n      reject(value);\n    });\n  }\n\n  static resolve(value) {\n    if (value && isFunction(value.then)) {\n      return value;\n    }\n\n    return new Promise((resolve) => {\n      resolve(value);\n    });\n  }\n\n  abort() {}\n\n  catch(onRejected) {\n    return this.then(null, onRejected);\n  }\n\n  then(onFulfilled, onRejected) {\n    const promise = this.$$;\n\n    if (promise.status === 'pending') {\n      return new Promise((resolve, reject) => {\n        promise.handle('reject', onRejected, resolve, reject, secret);\n        promise.handle('resolve', onFulfilled, resolve, reject, secret);\n      });\n    }\n\n    promise.handled = secret;\n\n    const { value } = promise;\n\n    let method;\n    let handler;\n\n    if (promise.status === 'fulfilled') {\n      method = 'resolve';\n      handler = onFulfilled;\n    } else {\n      method = 'reject';\n      handler = onRejected;\n    }\n\n    if (!isFunction(handler)) {\n      return Promise[method](value);\n    }\n\n    try {\n      return Promise.resolve(handler(value));\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n}\n\ndefineProperties(Promise.prototype, {\n  [Symbol.toStringTag]: 'Promise'\n});\n\nexport default Promise;\n","/**\n * @module constants/regexpSpecialCharacters\n * @private\n * @description Exports special characters for RegExp.\n */\n\n/**\n * @const\n * @name module:constants/regexpSpecialCharacters~regexpSpecialCharacters\n * @type {String[]}\n */\nexport default [\n  '.',\n  '+', '*', '?',\n  '(', ')',\n  '[', ']',\n  '{', '}',\n  '<', '>',\n  '^', '$',\n  '!',\n  '=',\n  ':',\n  '-',\n  '|',\n  ',',\n  '\\\\'\n];\n","/**\n * @module helpers/parseHeaders\n * @private\n * @description Exports parseHeaders method.\n */\n\nimport Str from '../Str';\nimport { iterate } from './iterate';\n\n/**\n * @function parseHeaders\n * @param {String} rawHeaders - Raw headers.\n * @returns {Object} Headers object\n * @description Function for parsing raw headers.\n */\nexport default (rawHeaders) => {\n  const headers = {};\n\n  iterate((rawHeaders || '').split('\\n'), (value) => {\n    const index = value.indexOf(':');\n    const key = new Str(value.substring(0, index))\n      .trim()\n      .toCamelCase().$;\n    const val = new Str(value.substring(index + 1)).trim().$;\n\n    if (key) {\n      headers[key] = (headers[key] ? `${ headers[key] }, ` : '') + val;\n    }\n  });\n\n  return headers;\n};\n","/**\n * @module helpers/transformData\n * @private\n * @description Exports transformData method.\n */\n\nimport Arr from '../Arr';\nimport Super from '../Super';\nimport { isObject, toStringTag } from './';\n\nconst notToTransform = new Arr(['FormData', 'File', 'Blob', 'ArrayBuffer', 'String', 'Number']);\nconst withoutBody = new Arr(['DELETE', 'GET', 'HEAD']);\n\n/**\n * @function transformData\n * @param {*} data - Data to transform\n * @param {String} method - HTTP method.\n * @param {Object} headers - Object with headers.\n * @returns {*} - Transformed data.\n */\nexport default (data, method, headers) => {\n  data = new Super(data).$;\n\n  if (withoutBody.indexOfStrict(method) !== -1) {\n    return null;\n  }\n\n  if (isObject(data) && notToTransform.indexOfStrict(toStringTag(data)) === -1) {\n    if (!headers.contentType) {\n      headers.contentType = ['application/json;charset=utf-8'];\n    }\n\n    return new Super(data).json();\n  }\n\n  return data;\n};\n","/**\n * @module constants/appliedRegExps\n * @private\n * @description Exports different types of syntax for {@link Elem#apply}.\n */\n\n/**\n * @callback matchAppliedExprCallback\n * @param {Elem} elem - D-elem of an element to apply expression to.\n * @param {String} string - Matched applied name.\n * @param {String} arg - Argument within the parentheses.\n */\n\n/**\n * @type {Object.<String, matchAppliedExprCallback|Object.<String, matchAppliedExprCallback>>}\n * @description Object of different types of syntax.\n */\n\nexport default {\n  '#'(elem, id) {\n    elem.id(id);\n  },\n  '.'(elem, cls) {\n    elem.addClass(cls);\n  },\n  $(elem, attr, value) {\n    elem.attr(attr, value);\n  },\n  '@'(elem, prop, value) {\n    elem.css(prop, value);\n  },\n  '&'(elem, name, html) {\n    elem.html(html);\n  },\n  '*'(elem, name, text) {\n    elem.text(text);\n  },\n  '-': {\n    '.'(elem, cls) {\n      elem.removeClass(cls);\n    },\n    $(elem, attr) {\n      elem.removeAttr(attr);\n    },\n    '@'(elem, prop) {\n      elem.removeCSS(prop);\n    }\n  }\n};\n","/**\n * @module constants/elements\n * @private\n * @description Exports methods for {@link Elem} for creating html-elements.\n */\n\n/**\n * @const\n * @type {String[]}\n */\nexport default [\n  /**\n   * @member {Function} Elem#a\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'a',\n\n  /**\n   * @member {Function} Elem#abbr\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'abbr',\n\n  /**\n   * @member {Function} Elem#address\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'address',\n\n  /**\n   * @member {Function} Elem#area\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'area',\n\n  /**\n   * @member {Function} Elem#article\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'article',\n\n  /**\n   * @member {Function} Elem#audio\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'audio',\n\n  /**\n   * @member {Function} Elem#b\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'b',\n\n  /**\n   * @member {Function} Elem#base\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'base',\n\n  /**\n   * @member {Function} Elem#bdi\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'bdi',\n\n  /**\n   * @member {Function} Elem#bdo\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'bdo',\n\n  /**\n   * @member {Function} Elem#blockquote\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'blockquote',\n\n  /**\n   * @member {Function} Elem#body\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'body',\n\n  /**\n   * @member {Function} Elem#br\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'br',\n\n  /**\n   * @member {Function} Elem#button\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'button',\n\n  /**\n   * @member {Function} Elem#canvas\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'canvas',\n\n  /**\n   * @member {Function} Elem#caption\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'caption',\n\n  /**\n   * @member {Function} Elem#cite\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'cite',\n\n  /**\n   * @member {Function} Elem#code\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'code',\n\n  /**\n   * @member {Function} Elem#col\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'col',\n\n  /**\n   * @member {Function} Elem#colgroup\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'colgroup',\n\n  /**\n   * @member {Function} Elem#content\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'content',\n\n  /**\n   * @member {Function} Elem#datalist\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'datalist',\n\n  /**\n   * @member {Function} Elem#dd\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'dd',\n\n  /**\n   * @member {Function} Elem#del\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'del',\n\n  /**\n   * @member {Function} Elem#details\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'details',\n\n  /**\n   * @member {Function} Elem#dfn\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'dfn',\n\n  /**\n   * @member {Function} Elem#dialog\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'dialog',\n\n  /**\n   * @member {Function} Elem#div\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'div',\n\n  /**\n   * @member {Function} Elem#dl\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'dl',\n\n  /**\n   * @member {Function} Elem#dt\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'dt',\n\n  /**\n   * @member {Function} Elem#element\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'element',\n\n  /**\n   * @member {Function} Elem#em\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'em',\n\n  /**\n   * @member {Function} Elem#embed\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'embed',\n\n  /**\n   * @member {Function} Elem#fieldset\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'fieldset',\n\n  /**\n   * @member {Function} Elem#figcaption\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'figcaption',\n\n  /**\n   * @member {Function} Elem#figure\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'figure',\n\n  /**\n   * @member {Function} Elem#footer\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'footer',\n\n  /**\n   * @member {Function} Elem#form\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'form',\n\n  /**\n   * @member {Function} Elem#h1\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'h1',\n\n  /**\n   * @member {Function} Elem#h2\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'h2',\n\n  /**\n   * @member {Function} Elem#h3\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'h3',\n\n  /**\n   * @member {Function} Elem#h4\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'h4',\n\n  /**\n   * @member {Function} Elem#h5\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'h5',\n\n  /**\n   * @member {Function} Elem#h6\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'h6',\n\n  /**\n   * @member {Function} Elem#head\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'head',\n\n  /**\n   * @member {Function} Elem#header\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'header',\n\n  /**\n   * @member {Function} Elem#hgroup\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'hgroup',\n\n  /**\n   * @member {Function} Elem#hr\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'hr',\n\n  /**\n   * @member {Function} Elem#i\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'i',\n\n  /**\n   * @member {Function} Elem#iframe\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'iframe',\n\n  /**\n   * @member {Function} Elem#img\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'img',\n\n  /**\n   * @member {Function} Elem#input\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'input',\n\n  /**\n   * @member {Function} Elem#ins\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'ins',\n\n  /**\n   * @member {Function} Elem#kbd\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'kbd',\n\n  /**\n   * @member {Function} Elem#label\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'label',\n\n  /**\n   * @member {Function} Elem#legend\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'legend',\n\n  /**\n   * @member {Function} Elem#li\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'li',\n\n  /**\n   * @member {Function} Elem#link\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'link',\n\n  /**\n   * @member {Function} Elem#main\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'main',\n\n  /**\n   * @member {Function} Elem#mark\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'mark',\n\n  /**\n   * @member {Function} Elem#menu\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'menu',\n\n  /**\n   * @member {Function} Elem#menuitem\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'menuitem',\n\n  /**\n   * @member {Function} Elem#meta\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'meta',\n\n  /**\n   * @member {Function} Elem#meter\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'meter',\n\n  /**\n   * @member {Function} Elem#nav\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'nav',\n\n  /**\n   * @member {Function} Elem#noscript\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'noscript',\n\n  /**\n   * @member {Function} Elem#null\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'null',\n\n  /**\n   * @member {Function} Elem#ol\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'ol',\n\n  /**\n   * @member {Function} Elem#optgroup\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'optgroup',\n\n  /**\n   * @member {Function} Elem#option\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'option',\n\n  /**\n   * @member {Function} Elem#output\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'output',\n\n  /**\n   * @member {Function} Elem#p\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'p',\n\n  /**\n   * @member {Function} Elem#param\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'param',\n\n  /**\n   * @member {Function} Elem#pre\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'pre',\n\n  /**\n   * @member {Function} Elem#progress\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'progress',\n\n  /**\n   * @member {Function} Elem#q\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'q',\n\n  /**\n   * @member {Function} Elem#rp\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'rp',\n\n  /**\n   * @member {Function} Elem#rt\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'rt',\n\n  /**\n   * @member {Function} Elem#rtc\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'rtc',\n\n  /**\n   * @member {Function} Elem#ruby\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'ruby',\n\n  /**\n   * @member {Function} Elem#s\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  's',\n\n  /**\n   * @member {Function} Elem#samp\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'samp',\n\n  /**\n   * @member {Function} Elem#script\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'script',\n\n  /**\n   * @member {Function} Elem#section\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'section',\n\n  /**\n   * @member {Function} Elem#select\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'select',\n\n  /**\n   * @member {Function} Elem#shadow\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'shadow',\n\n  /**\n   * @member {Function} Elem#small\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'small',\n\n  /**\n   * @member {Function} Elem#source\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'source',\n\n  /**\n   * @member {Function} Elem#span\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'span',\n\n  /**\n   * @member {Function} Elem#strong\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'strong',\n\n  /**\n   * @member {Function} Elem#style\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'style',\n\n  /**\n   * @member {Function} Elem#sub\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'sub',\n\n  /**\n   * @member {Function} Elem#summary\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'summary',\n\n  /**\n   * @member {Function} Elem#sup\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'sup',\n\n  /**\n   * @member {Function} Elem#table\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'table',\n\n  /**\n   * @member {Function} Elem#tbody\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'tbody',\n\n  /**\n   * @member {Function} Elem#td\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'td',\n\n  /**\n   * @member {Function} Elem#template\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'template',\n\n  /**\n   * @member {Function} Elem#textarea\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'textarea',\n\n  /**\n   * @member {Function} Elem#tfoot\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'tfoot',\n\n  /**\n   * @member {Function} Elem#th\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'th',\n\n  /**\n   * @member {Function} Elem#thead\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'thead',\n\n  /**\n   * @member {Function} Elem#time\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'time',\n\n  /**\n   * @member {Function} Elem#title\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'title',\n\n  /**\n   * @member {Function} Elem#tr\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'tr',\n\n  /**\n   * @member {Function} Elem#track\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'track',\n\n  /**\n   * @member {Function} Elem#u\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'u',\n\n  /**\n   * @member {Function} Elem#ul\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'ul',\n\n  /**\n   * @member {Function} Elem#var\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'var',\n\n  /**\n   * @member {Function} Elem#video\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'video',\n\n  /**\n   * @member {Function} Elem#wbr\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'wbr'\n];\n","/**\n * @module constants/elements\n * @private\n * @description Exports different canvas methods for {@link Elem} for creating html-elements.\n */\n\n/**\n * @const\n * @type {String[]}\n */\nexport const canvasGetMethods = [\n  /**\n   * @member {Function} Elem#createImageData\n   * @type {Function}\n   * @param {...*} args\n   * @returns {ImageData|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/createImageData\n   */\n  'createImageData',\n\n  /**\n   * @member {Function} Elem#createLinearGradient\n   * @type {Function}\n   * @param {...*} args\n   * @returns {CanvasGradient|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/createLinearGradient\n   */\n  'createLinearGradient',\n\n  /**\n   * @member {Function} Elem#createPattern\n   * @type {Function}\n   * @param {...*} args\n   * @returns {CanvasPattern|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/createPattern\n   */\n  'createPattern',\n\n  /**\n   * @member {Function} Elem#createRadialGradient\n   * @type {Function}\n   * @param {...*} args\n   * @returns {CanvasGradient|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/createRadialGradient\n   */\n  'createRadialGradient',\n\n  /**\n   * @member {Function} Elem#getImageData\n   * @type {Function}\n   * @param {...*} args\n   * @returns {ImageData|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/getImageData\n   */\n  'getImageData',\n\n  /**\n   * @member {Function} Elem#getLineDash\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Number[]|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/getLineDash\n   */\n  'getLineDash',\n\n  /**\n   * @member {Function} Elem#isPointInPath\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Boolean|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/isPointInPath\n   */\n  'isPointInPath',\n\n  /**\n   * @member {Function} Elem#isPointInStroke\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Boolean|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/isPointInStroke\n   */\n  'isPointInStroke',\n\n  /**\n   * @member {Function} Elem#measureText\n   * @type {Function}\n   * @param {...*} args\n   * @returns {TextMetrics|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/measureText\n   */\n  'measureText'\n];\n\nexport const canvasRestMethods = [\n  /**\n   * @member {Function} Elem#arc\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/arc\n   */\n  'arc',\n\n  /**\n   * @member {Function} Elem#arcTo\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/arcTo\n   */\n  'arcTo',\n\n  /**\n   * @member {Function} Elem#beginPath\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/beginPath\n   */\n  'beginPath',\n\n  /**\n   * @member {Function} Elem#bezierCurveTo\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/bezierCurveTo\n   */\n  'bezierCurveTo',\n\n  /**\n   * @member {Function} Elem#clearRect\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/clearRect\n   */\n  'clearRect',\n\n  /**\n   * @member {Function} Elem#clip\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/clip\n   */\n  'clip',\n\n  /**\n   * @member {Function} Elem#closePath\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/closePath\n   */\n  'closePath',\n\n  /**\n   * @member {Function} Elem#drawFocusIfNeeded\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/drawFocusIfNeeded\n   */\n  'drawFocusIfNeeded',\n\n  /**\n   * @member {Function} Elem#drawImage\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/drawImage\n   */\n  'drawImage',\n\n  /**\n   * @member {Function} Elem#ellipse\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/ellipse\n   */\n  'ellipse',\n\n  /**\n   * @member {Function} Elem#fill\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/fill\n   */\n  'fill',\n\n  /**\n   * @member {Function} Elem#fillRect\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/fillRect\n   */\n  'fillRect',\n\n  /**\n   * @member {Function} Elem#fillText\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/fillText\n   */\n  'fillText',\n\n  /**\n   * @member {Function} Elem#lineTo\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/lineTo\n   */\n  'lineTo',\n\n  /**\n   * @member {Function} Elem#moveTo\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/moveTo\n   */\n  'moveTo',\n\n  /**\n   * @member {Function} Elem#putImageData\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/putImageData\n   */\n  'putImageData',\n\n  /**\n   * @member {Function} Elem#quadraticCurveTo\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/quadraticCurveTo\n   */\n  'quadraticCurveTo',\n\n  /**\n   * @member {Function} Elem#rect\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/rect\n   */\n  'rect',\n\n  /**\n   * @member {Function} Elem#resetTransform\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/resetTransform\n   */\n  'resetTransform',\n\n  /**\n   * @member {Function} Elem#restore\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/restore\n   */\n  'restore',\n\n  /**\n   * @member {Function} Elem#rotate\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/rotate\n   */\n  'rotate',\n\n  /**\n   * @member {Function} Elem#save\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/save\n   */\n  'save',\n\n  /**\n   * @member {Function} Elem#scale\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/scale\n   */\n  'scale',\n\n  /**\n   * @member {Function} Elem#setLineDash\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/setLineDash\n   */\n  'setLineDash',\n\n  /**\n   * @member {Function} Elem#setTransform\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/setTransform\n   */\n  'setTransform',\n\n  /**\n   * @member {Function} Elem#stroke\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/stroke\n   */\n  'stroke',\n\n  /**\n   * @member {Function} Elem#strokeRect\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/strokeRect\n   */\n  'strokeRect',\n\n  /**\n   * @member {Function} Elem#strokeText\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/strokeText\n   */\n  'strokeText',\n\n  /**\n   * @member {Function} Elem#transform\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/transform\n   */\n  'transform',\n\n  /**\n   * @member {Function} Elem#translate\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/translate\n   */\n  'translate'\n];\n","/**\n * @module helpers/resolveURL\n * @private\n * @description Exports Object.assign-like method.\n */\n\nimport Str from '../Str';\n\nconst { location } = global;\n\nexport default (decodeQuery) => {\n  const {\n    search: query,\n    hash\n  } = location;\n  const params = {\n    query: {},\n    hash: hash.replace(/^#/, '')\n  };\n\n  if (!query) {\n    return params;\n  }\n\n  new Str(query.replace(/^\\?/, ''))\n    .split('&')\n    .forEach((rawParam) => {\n      let [param, value = ''] = rawParam.split('=');\n\n      param = decodeQuery ? decodeURIComponent(param) : param;\n      value = decodeQuery ? decodeURIComponent(value) : value;\n\n      if (!/^[^\\[]+/.test(param)) {\n        return;\n      }\n\n      let paramName;\n      let paramObject = params.query;\n\n      new Str(param)\n        .match(/^[^\\[\\]]*|\\[[^\\[\\]]*\\]/g)\n        .forEach((name) => {\n          if (name.indexOf('[')) {\n            paramName = name;\n\n            return;\n          }\n\n          name = name.slice(1, -1);\n\n          paramObject = paramObject[paramName] = paramObject[paramName] || (name ? {} : []);\n          paramName = name || paramObject.length;\n        });\n\n      paramObject[paramName] = value;\n    });\n\n  return params;\n};\n","import * as statics from './lib/browser';\nimport { assign } from './lib/helpers/assign';\n\nconst { D } = statics;\n\nassign(D, statics);\n\ndelete D.default;\ndelete D.D;\n\nglobal.D = D;\n"],"names":["toStringTag","object","toString","call","replace","isArray","value","isArrayLike","isFunction","length","isInteger","isBoolean","isDate","isDateLike","Date","isNaN","getTime","isElement","test","isFinite","isNumber","Number","Infinity","isIntegerLike","parseInt","isNull","isNullOrUndefined","isNumberLike","isObject","Object","isPlainObject","isPrimitive","proto","getPrototypeOf","constructor","isRegExp","isString","isSymbol","isUndefined","D","i","constructors","levelConstructors","k","len","cls","check","iterate","callback","array","iterated","key","hasOwnProperty","assign","target","arguments","source","index","dynamicDefineProperties","properties","propertyGenerator","name","defineProperty","defineProperties","method","undefined","get","set","toArray","createNewArray","push","validate","args","options","number","checker","checkExpressions","error","text","numbers","char","alphabet","string","ranges","split","range","Error","start","charCodeAt","end","String","fromCharCode","Alphabet","switcher","cases","mode","defaultValue","Switcher","when","condition","value1","value2","deepAssign","deepClone","clone","cloneSwitcher","deepEqual","o1","o2","strict","match","lastIndex","p1","p2","keys","deepEvery","n","tree","newTree","concat","deepFilter","nul","o","filtered","deepFind","result","deepFreeze","freeze","deepForEach","deepMap","deepReduce","IV","deepSome","asc","x","y","Arr","blob","blobParts","BlobObject","Blob","apply","noop","self","rand","Math","random","floor","trim","parseJSON","json","JSON","parse","dates","parsed","this","round","digits","zeroes","zero","repeat","$","now","date","Super","Dat","isAbsolute","url","absoluteURLRegexp","encode","isEncoded","encodeURIComponent","fetchBeforeMiddleware","config","baseURL","data","headers","params","query","METHOD","toUpperCase","constructURL","transformData","values","header","Str","toCapitalCase","join","toFind","elem","find","Elem","isElem","isWindow","isHTMLDocument","getElem","emptyDiv","getName","tagName","toLowerCase","addDwayneData","windowsDwayneData","some","element","getContext","selector","base","nativeDocument","querySelectorAll","parseHTML","html","doc","div","children","px","size","redirect","newURL","eventPromise","then","beforeLeave","currentState","hide","Router","$$","state","beforeLoad","catch","printError","dispatchNewEvent","type","dispatchEvent","Promise","resolve","renderingState","newState","loadStatesByOne","promise","reject","stopError","forEach","err","RouterError","stateName","resolveURL","decodeQuery","hash","renderStates","templateParams","title","icon","ownTemplateParams","getStateBase","parent","unshift","stateAttrName","stateNameFromAttr","attr","states","foundState","template","parentTemplateParams","create","first","show","currentTitle","currentIcon","ref","changeHistory","href","decode","decodeParams","decodeURIComponent","router","isInstanceOfRouterState","isPrototypeOf","MainState","prototype","resolveParameter","param","nameErrorName","valueErrorName","nameMatch","slice","regexp","indexOf","RegExp","findStatesByURL","pathname","location","search","eventualStates","abstract","stateURL","validatePath","requiredQuery","eventualParams","hasOwn","shift","every","defaultState","event","assigned","eventualEvent","isStoppable","stoppable","indexOfStrict","paused","stopped","continuePropagation","stopPropagation","listener","finished","getListeners","desc","listenerName","capitalizeFirst","listeners","ownListeners","Func","bindContext","map","initialize","initialized","routerLoaded","pageTitle","pageIcon","on","e","preventDefault","parentParams","parentQuery","relativeURL","relativePath","count","newPath","pushed","go","redirectTo","reload","initHTML","initTitle","initIcon","registerState","extendLink","$state","path","pathSwitcher","window","global","Symbol","RangeError","methods","TypeError","a","d","f","r","s","chars","word","token","def","default","ret","val","Case","case","eventualCases","setPrototypeOf","Function","deep","objects","sum","func","descriptors","Boolean","property","descriptor","props","getter","isFrozen","replacer","space","stringify","max","min","obj","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","isContextObject","startKey","setter","reduce","keyOf","keyOfStrict","separator","pop","reverse","randomIndex","begin","compareFunction","sort","deleteCount","items","splice","secret","iterator","executor","hiddenPromise","status","onReject","handled","onFulfill","hiddenStatus","hiddenValue","realPromise","proxy","onRejected","onFulfilled","handle","handler","iterable","toResolve","next","done","URL","progress","reader","FileReader","toReject","onprogress","onerror","onload","_this2","abort","anchor","document","createElement","dataURL","setAttribute","click","createObjectURL","called","canBeCalled","before","after","sync","contextLocked","context","middleware","afterAll","beforeAll","bindArgs","times","lockContext","lockArgs","argsLocked","mark","time","timeEnd","unbindContext","unbindArgs","toRadian","PI","toDegree","ln2","LN2","ln10","LN10","Num","toDegrees","acos","asin","atan","asDegrees","cos","clearTimeout","timeout","aborted","interval","setTimeout","log","power","pow","sin","tan","rej","fractionDigits","toExponential","toFixed","precision","toPrecision","abs","sqrt","cbrt","ceil","exp","ln","sign","htmlSpecials","regexpSpecialsRegexp","regexpSpecialCharacters","searchString","position","revert","startsWith","escaped","symbol","searchValue","fromIndex","lastIndexOf","str","beginSlice","endSlice","substr","indexStart","indexEnd","substring","daysOfTheWeekNames","daysOfTheWeekAliases","monthsNames","monthsAliases","utc","coeffs","getSwitcher","NaN","setSwitcher","what","prefix","formats","format","replaceString","date1","date2","isBefore","started","coeff","w","_this4","setTime","toISOString","toLocaleString","valueOf","querySwitcher","queryParams","encodeOptions","encodeParams","encodeQuery","rawHeaders","toCamelCase","notToTransform","withoutBody","contentType","defaults","origin","uploadMethods","Fetch","fetch","request","conf","toPush","dataConfig","urlConfig","xhr","auth","username","password","responseType","withCredentials","XMLHttpRequest","open","setRequestHeader","upload","onabort","ontimeout","onreadystatechange","readyState","response","responseText","parseHeaders","getAllResponseHeaders","statusText","send","id","addClass","prop","css","removeClass","removeAttr","removeCSS","canvasGetMethods","canvasRestMethods","eventSeparator","textProperty","Node","propertyDescriptor","classes","attrs","inputElements","dataURLFetch","refSwitcher","filterSwitcher","is","elems","innerSwitcher","paddings","borders","outerSwitcher","elements","list","classList","add","innerHTML","style","sheet","cssRules","rules","toHyphenCase","insertRule","dwayneData","appendChild","createTextNode","strings","applied","setApplied","np1","appliedRegExps","getAttribute","attributes","load","isBroken","canvas","width","height","drawImage","ab","blur","pseudo","getComputedStyle","rule","into","className","cloneNode","parentElement","contains","appliedExpressions","getPropertyValue","getPropertyPriority","removeProperty","setProperty","cssText","ctx","dataset","encoderOptions","toDataURL","deleteRule","eventInit","details","bubbles","cancelable","finalEvent","Event","createEvent","initEvent","found","focus","selectorText","hasAttribute","currentDisplay","previousDisplay","insertBefore","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","complete","naturalWidth","naturalHeight","closest","images","all","filter","$elem","removeListeners","proper","broken","prev","nextElementSibling","events","removeListener","allListeners","removeEventListeners","define","has","newListener","addEventListener","delete","removeEventListener","parentNode","previousElementSibling","link","removeChild","removeAttribute","remove","2","1","created","txt","addText","_arguments6","hasAttr","hasClass","level","validator","validatorWrap","input","errors","validity","valid","validationMessage","validators","formErrors","form","inputs","dispatch","inputError","innerHeight","calcCSS","borderTopWidth","borderBottomWidth","boxSizing","paddingTop","paddingBottom","innerWidth","borderLeftWidth","borderRightWidth","paddingLeft","paddingRight","outerHeight","marginTop","marginBottom","outerWidth","marginLeft","marginRight","win","documentElement","body","head","rawParam","paramName","paramObject","history","part","escapeRegExp","selectorMatchesSwitcher","buildURL","actualListeners","eventListeners","l","statics"],"mappings":"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","sourceRoot":"/source/"}