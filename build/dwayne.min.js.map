{"version":3,"sources":["webpack:///dwayne.min.js","webpack:///webpack/bootstrap b4be99cc5da3a354bc28","webpack:///./browser.js","webpack:///./D.js","webpack:///./lib/index.js","webpack:///./lib/D.js","webpack:///./lib/helpers/checkTypes.js","webpack:///./lib/helpers/toStringTag.js","webpack:///./lib/Alphabet.js","webpack:///./lib/helpers/index.js","webpack:///./lib/helpers/assign.js","webpack:///./lib/helpers/iterate.js","webpack:///./lib/helpers/crossClassMethods.js","webpack:///./lib/helpers/defineProperty.js","webpack:///./lib/helpers/Symbol.js","webpack:///./lib/helpers/toArray.js","webpack:///./lib/helpers/validate.js","webpack:///./lib/constants/validateCheckExpressions.js","webpack:///./lib/Arr.js","webpack:///./lib/Super.js","webpack:///./lib/Switcher.js","webpack:///./lib/BlobObject.js","webpack:///./lib/Promise.js","webpack:///./lib/Dat.js","webpack:///./lib/Num.js","webpack:///./lib/Func.js","webpack:///./lib/Str.js","webpack:///./lib/constants/regexpSpecialCharacters.js","webpack:///./lib/constants/formats.js","webpack:///./lib/Elem.js","webpack:///./lib/Fetch.js","webpack:///./lib/helpers/constructURL.js","webpack:///./lib/helpers/parseHeaders.js","webpack:///./lib/helpers/transformData.js","webpack:///./lib/constants/appliedRegExps.js","webpack:///./lib/constants/elements.js","webpack:///./lib/constants/canvasMethods.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","global","_interopRequireDefault","obj","__esModule","default","_D","_D2","D","top","this","_interopRequireWildcard","newObj","key","Object","prototype","hasOwnProperty","defineProperty","value","_lib","keys","forEach","enumerable","get","statics","_assign","assign","_Alphabet","_Arr","_BlobObject","_Dat","_Elem","_Fetch","_Func","_Num","_Promise","_Str","_Super","_Switcher","i","_constructors2","length","levelConstructors","k","len","_constructor","cls","check","_checkTypes","_constructors","isArray","_toStringTag","toStringTag","isArrayLike","isFunction","isInteger","isBoolean","isDate","isDateLike","Date","isNaN","getTime","isElement","test","isFinite","isNumber","Number","Infinity","isIntegerLike","parseInt","isNull","isNullOrUndefined","isNumberLike","isObject","_typeof","isPlainObject","isPrimitive","proto","getPrototypeOf","constructor","isRegExp","isString","isSymbol","isUndefined","Symbol","iterator","object","toString","replace","_defineProperty","configurable","writable","_classCallCheck","instance","Constructor","TypeError","char","_helpers","alphabet","string","validate","ranges","split","range","Error","start","charCodeAt","end","push","String","fromCharCode","Alphabet","undefined","_createClass","defineProperties","target","props","descriptor","protoProps","staticProps","arguments","a","_len","chars","Array","_key","$$","word","_len2","_key2","token","Math","floor","random","_crossClassMethods","_iterate","_Symbol","_toArray","_validate","iterate","source","index","callback","array","iterated","transformAnchor","htmlElement","elem","crossClassMethods","dynamicDefineProperties","properties","propertyGenerator","name","method","set","toArray","createNewArray","args","options","number","checker","_validateCheckExpressions2","error","text","numbers","_validateCheckExpressions","methods",">0","n","RangeError",">=0","<0","<=0","!!","array||!","arrayLike","arrayLike||!","date","date||!","d","dateLike","dateLike||!","function","function||!","f","int","int||!","intLike","intLike||!","number||!","numberLike","numberLike||!","object||!","o","regexp","regexp||!","r","string||!","s","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","asc","x","y","Arr","_Super2","_Super3","values","$","keyOf","keyOfStrict","separator","join","apply","pop","reverse","shift","randomIndex","begin","slice","compareFunction","sort","deleteCount","_len3","items","_key3","splice","_len4","_key4","unshift","_deepAssign","hasProperty","_deepClone","clone","cloneSwitcher","deepEqual","o1","o2","strict","Super","ignoreCase","multiline","sticky","unicode","lastIndex","p1","p2","_deepEvery","tree","newTree","concat","_deepFilter","nul","filtered","_deepFind","result","_deepFreeze","freeze","_deepForEach","_deepMap","_deepReduce","IV","_deepSome","switcher","deep","RegExp","flags","objects","sum","count","func","descriptors","Boolean","property","getter","isFrozen","replacer","space","JSON","stringify","val","max","min","_object","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","_proto","startKey","setter","reduce","_value","cases","mode","defaultValue","Function","bind","Switcher","when","condition","value1","value2","_Function","_switcher$$$","def","ret","_ref","Case","case","_ret","_this","eventualCases","_this2","_mode","blob","blobParts","BlobObject","Blob","_Promise2","buffer","binary","dataURL","URL","progress","reader","FileReader","toReject","onprogress","e","promise","resolve","reject","onerror","onload","_ref2","abort","anchor","document","createElement","href","setAttribute","click","createObjectURL","resolveOrReject","onResolved","onRejected","status","Promise","handle","secret","handled","handler","err","executor","hiddenPromise","onReject","setTimeout","console","then","onFulfill","hiddenStatus","hiddenValue","realPromise","get/set handled","proxy","get status","get value","onFulfilled","iterable","toResolve","next","_loop","done","_loop2","now","Dat","_Num2","_Str2","_formats","_formats2","coeffs","h","w","M","getSwitcher","utc","dw","NaN","setSwitcher","what","time","timeout","prefix","format","replaceString","match","_this3","date1","date2","isBefore","_this4","started","coeff","_time","setTime","toISOString","toLocaleString","valueOf","rand","Num","_Func2","toRadian","PI","toDegree","ln2","LN2","ln10","LN10","toDegrees","acos","asin","atan","asDegrees","cos","aborted","clearTimeout","bindContext","interval","log","power","pow","sin","tan","rej","base","fractionDigits","toExponential","digits","toFixed","precision","toPrecision","abs","sqrt","cbrt","ceil","exp","ln","round","sign","noop","Func","_arguments","called","canBeCalled","_ret3","_proxy$$$","before","after","sync","contextLocked","_proxy$$$2","context","middleware","v","_ret2","argsLocked","afterAll","beforeAll","bindArgs","times","lockContext","lockArgs","mark","timeEnd","unbindContext","unbindArgs","trim","parseJSON","json","parse","_options","dates","parsed","Str","_regexpSpecialCharacters","_regexpSpecialCharacters2","htmlSpecials","&","<",">","regexpSpecialsRegexp","toUpperCase","searchString","position","revert","startsWith","escaped","symbol","searchValue","fromIndex","indexOf","lastIndexOf","str","search","beginSlice","endSlice","substr","indexStart","indexEnd","substring","toLowerCase","zeroes","zero","repeat","daysOfTheWeekNames","daysOfTheWeekAliases","map","monthsNames","monthsAliases","toFind","_find","Elem","isElem","isWindow","isHTMLDocument","getElem","empty","getName","tagName","addDwayneData","windowsDwayneData","some","_ref14","element","listeners","previousDisplay","ctx","getContext","validators","_Arr3","selector","nativeDocument","querySelectorAll","parseHTML","html","div","children","px","size","find","head","body","window","_get","receiver","desc","parent","_Arr2","_Fetch2","_appliedRegExps","_appliedRegExps2","_elements","_elements2","_canvasMethods","eventSeparator","textProperty","Node","propertyDescriptor","classes","attrs","inputElements","dataURLFetch","responseType","refSwitcher","filterSwitcher","is","elems","formDataSwitcher","files","innerSwitcher","paddings","borders","outerSwitcher","elements","list","classList","add","innerHTML","style","sheet","cssRules","rules","toHyphenCase","insertRule","dwayneData","appendChild","createTextNode","strings","applied","setApplied","np1","_attr","getAttribute","attributes","attr","_this5","first","load","isBroken","canvas","width","height","drawImage","_ref3","ab","data","blur","pseudo","getComputedStyle","_ref4","rule","css","into","className","cloneNode","parentElement","contains","type","appliedExpressions","getPropertyValue","getPropertyPriority","setProperty","cssText","toCamelCase","_this6","dataset","encoderOptions","toDataURL","deleteRule","event","eventInit","details","_ref5","_ref5$bubbles","bubbles","_ref5$cancelable","cancelable","finalEvent","Event","createEvent","initEvent","dispatchEvent","_ref6","found","focus","input","_ref7","selectorText","hasAttribute","_height","prop","_html","_id","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","complete","naturalWidth","naturalHeight","_ref8","images","proper","broken","all","filter","$elem","removeListeners","on","prev","removeAttr","removeClass","addClass","nextElementSibling","_arguments2","_len5","events","_key6","_ref9","removeListener","listener","allListeners","_ref10","_ref12","removeEventListeners","define","has","newListener","_ref11","addEventListener","removeEventListener","parentNode","previousElementSibling","link","remove","_arguments3","_len6","_key7","removeAttribute","_arguments4","_len7","_key8","_arguments5","_len8","_key9","removeProperty","replaceChild","2","1","created","_elem","_text","addText","_arguments6","hasAttr","hasClass","level","validator","validatorWrap","validity","valid","validationMessage","errors","_ref13","_width","innerHeight","_calcCSS","calcCSS","borderTopWidth","borderBottomWidth","boxSizing","paddingTop","paddingBottom","innerWidth","_calcCSS2","borderLeftWidth","borderRightWidth","paddingLeft","paddingRight","outerHeight","_calcCSS3","marginTop","marginBottom","outerWidth","_calcCSS4","marginLeft","marginRight","documentElement","canvasGetMethods","canvasRestMethods","fetchBeforeMiddleware","config","baseURL","headers","params","query","url","METHOD","_constructURL2","_transformData2","header","toCapitalCase","fetch","Fetch","_constructURL","_parseHeaders","_parseHeaders2","_transformData","defaults","auth","username","password","location","origin","withCredentials","uploadMethods","request","conf","deepAssign","toPush","dataConfig","hasOwn","urlConfig","deepClone","xhr","_conf$auth","XMLHttpRequest","open","setRequestHeader","indexOfStrict","upload","onabort","ontimeout","onreadystatechange","readyState","response","responseText","getAllResponseHeaders","statusText","send","isAbsolute","absoluteURLRegexp","encode","encodeURIComponent","hash","param","queryParams","rawHeaders","_","notToTransform","withoutBody","contentType","#",".","@","*","-","removeCSS"],"mappings":"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","file":"dwayne.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar _D = __webpack_require__(1);\n\t\n\tvar _D2 = _interopRequireDefault(_D);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tglobal.D = _D2.default;\n\tglobal.top.D = _D2.default;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _lib = __webpack_require__(2);\n\t\n\tObject.keys(_lib).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _lib[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar statics = _interopRequireWildcard(_lib);\n\t\n\tvar _assign = __webpack_require__(9);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t(0, _assign.assign)(statics.default, statics);\n\t\n\tdelete statics.default.default;\n\t\n\texports.default = statics.default;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _D = __webpack_require__(3);\n\t\n\tObject.keys(_D).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _D[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _Alphabet = __webpack_require__(7);\n\t\n\tObject.keys(_Alphabet).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Alphabet[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _Arr = __webpack_require__(17);\n\t\n\tObject.keys(_Arr).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Arr[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _BlobObject = __webpack_require__(20);\n\t\n\tObject.keys(_BlobObject).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _BlobObject[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _Dat = __webpack_require__(22);\n\t\n\tObject.keys(_Dat).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Dat[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _Elem = __webpack_require__(28);\n\t\n\tObject.keys(_Elem).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Elem[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _Fetch = __webpack_require__(29);\n\t\n\tObject.keys(_Fetch).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Fetch[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _Func = __webpack_require__(24);\n\t\n\tObject.keys(_Func).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Func[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _Num = __webpack_require__(23);\n\t\n\tObject.keys(_Num).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Num[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _Promise = __webpack_require__(21);\n\t\n\tObject.keys(_Promise).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Promise[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _Str = __webpack_require__(25);\n\t\n\tObject.keys(_Str).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Str[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _Super = __webpack_require__(18);\n\t\n\tObject.keys(_Super).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Super[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _Switcher = __webpack_require__(19);\n\t\n\tObject.keys(_Switcher).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Switcher[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _D2 = _interopRequireDefault(_D);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = _D2.default;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _checkTypes = __webpack_require__(4);\n\t\n\tObject.keys(_checkTypes).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _checkTypes[key];\n\t    }\n\t  });\n\t});\n\texports.D = D;\n\t\n\tvar _constructors = __webpack_require__(6);\n\t\n\tvar _constructors2 = _interopRequireDefault(_constructors);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * @function D\n\t * @public\n\t * @param {*} [value] - Any value.\n\t * @returns {DWrap} Wrap of the argument.\n\t * @description Function for creating a D-wrap of an object.\n\t *\n\t * @example\n\t * D({});            // Super\n\t * D(() => {});      // Func\n\t * D([]);            // Arr\n\t * D(1);             // Num\n\t * D('1');           // Str\n\t * D(new Date());    // Dat\n\t * D(document.body); // Elem\n\t */\n\t/**\n\t * @module D\n\t * @private\n\t * @description Exports D function.\n\t */\n\t\n\tfunction D(value) {\n\t  for (var i = _constructors2.default.length - 1; i >= 0; i--) {\n\t    var levelConstructors = _constructors2.default[i];\n\t\n\t    for (var k = 0, len = levelConstructors.length; k < len; k++) {\n\t      var _constructor = levelConstructors[k];\n\t\n\t      if (value instanceof _constructor.cls) {\n\t        return value;\n\t      }\n\t\n\t      if (_constructor.check(value)) {\n\t        return new _constructor.cls(value);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\texports.default = D;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }; /**\r\n\t                                                                                                                                                                                                                                                   * @module helpers/checkTypes\r\n\t                                                                                                                                                                                                                                                   * @private\r\n\t                                                                                                                                                                                                                                                   * @mixin\r\n\t                                                                                                                                                                                                                                                   * @description Exports is<Type> methods.\r\n\t                                                                                                                                                                                                                                                   */\n\t\n\texports.isArray = isArray;\n\texports.isArrayLike = isArrayLike;\n\texports.isBoolean = isBoolean;\n\texports.isDate = isDate;\n\texports.isDateLike = isDateLike;\n\texports.isElement = isElement;\n\texports.isFinite = isFinite;\n\texports.isFunction = isFunction;\n\texports.isInteger = isInteger;\n\texports.isIntegerLike = isIntegerLike;\n\texports.isNaN = isNaN;\n\texports.isNull = isNull;\n\texports.isNullOrUndefined = isNullOrUndefined;\n\texports.isNumber = isNumber;\n\texports.isNumberLike = isNumberLike;\n\texports.isObject = isObject;\n\texports.isPlainObject = isPlainObject;\n\texports.isPrimitive = isPrimitive;\n\texports.isRegExp = isRegExp;\n\texports.isString = isString;\n\texports.isSymbol = isSymbol;\n\texports.isUndefined = isUndefined;\n\t\n\tvar _toStringTag = __webpack_require__(5);\n\t\n\t/**\r\n\t * @function isArray\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is an array.\r\n\t * @returns {Boolean} If the argument is an array or not.\r\n\t * \r\n\t * @example\r\n\t * isArray([]);                             // true\r\n\t * isArray(0);                              // true\r\n\t * isArray(document.querySelectorAll('*')); // false\r\n\t */\n\tfunction isArray(value) {\n\t  return (0, _toStringTag.toStringTag)(value) === 'Array';\n\t}\n\t\n\t/**\r\n\t * @function isArrayLike\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is array-like.\r\n\t * @returns {Boolean} If the argument is array-like or not.\r\n\t * @description Basically returns if the argument has non-negative integer \"length\" property and isn't a function.\r\n\t * \r\n\t * @example\r\n\t * isArrayLike([]);                             // true\r\n\t * isArrayLike('');                             // true\r\n\t * isArrayLike(() => {});                       // false\r\n\t * isArrayLike(document.querySelectorAll('*')); // true\r\n\t */\n\tfunction isArrayLike(value) {\n\t  if (!value || isFunction(value)) {\n\t    return false;\n\t  }\n\t\n\t  var length = value.length;\n\t\n\t  return isInteger(length) && length >= 0;\n\t}\n\t\n\t/**\r\n\t * @function isBoolean\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is a boolean.\r\n\t * @returns {Boolean} If the argument is a boolean or not.\r\n\t * \r\n\t * @example\r\n\t * isBoolean(true);               // true\r\n\t * isBoolean(new Boolean(false)); // true\r\n\t * isBoolean(null);               // false\r\n\t */\n\tfunction isBoolean(value) {\n\t  return (0, _toStringTag.toStringTag)(value) === 'Boolean';\n\t}\n\t\n\t/**\r\n\t * @function isDate\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is a date.\r\n\t * @returns {Boolean} If the argument is a date or not.\r\n\t * \r\n\t * @example\r\n\t * isDate(new Date());                 // true\r\n\t * isDate('1999-12-31T23:59:59.999Z'); // false\r\n\t */\n\tfunction isDate(value) {\n\t  return (0, _toStringTag.toStringTag)(value) === 'Date';\n\t}\n\t\n\t/**\r\n\t * @function isDateLike\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is date-like.\r\n\t * @returns {Boolean} If the argument is date-like or not.\r\n\t * @description Basically returns if new Date(argument) is not invalid date.\r\n\t * \r\n\t * @example\r\n\t * isDateLike(new Date());                 // true\r\n\t * isDateLike('1999-12-31T23:59:59.999Z'); // true\r\n\t * isDateLike(0);                          // true\r\n\t */\n\tfunction isDateLike(value) {\n\t  value = new Date(value);\n\t\n\t  return !isNaN(value.getTime());\n\t}\n\t\n\t/**\r\n\t * @function isElement\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is an element.\r\n\t * @returns {Boolean} If the argument is element or not.\r\n\t *\r\n\t * @example\r\n\t * isElement(document.querySelector('html')); // true\r\n\t */\n\tfunction isElement(value) {\n\t  return (/Element$/.test((0, _toStringTag.toStringTag)(value))\n\t  );\n\t}\n\t\n\t/**\r\n\t * @function isFinite\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is finite.\r\n\t * @returns {Boolean} If the argument is finite or not.\r\n\t * \r\n\t * @example\r\n\t * isFinite(0);        // true\r\n\t * isFinite('0');      // false\r\n\t * isFinite(Infinity); // false\r\n\t * isFinite(NaN);      // false\r\n\t */\n\tfunction isFinite(value) {\n\t  if (!isNumber(value)) {\n\t    return false;\n\t  }\n\t\n\t  value = Number(value);\n\t\n\t  return !isNaN(value) && value !== Infinity && value !== -Infinity;\n\t}\n\t\n\t/**\r\n\t * @function isFunction\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is a function.\r\n\t * @returns {Boolean} If the argument is a function or not.\r\n\t * \r\n\t * @example\r\n\t * isFunction(() => {});            // true\r\n\t * \r\n\t * const func = () => {};\r\n\t * Object.setPrototypeOf(func, {});\r\n\t * isFunction(func);                // true\r\n\t */\n\tfunction isFunction(value) {\n\t  return (0, _toStringTag.toStringTag)(value) === 'Function' || typeof value === 'function';\n\t}\n\t\n\t/**\r\n\t * @function isInteger\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is an integer.\r\n\t * @returns {Boolean} If the argument is an integer or not.\r\n\t *\r\n\t * @example\r\n\t * isInteger(0);             // true\r\n\t * isInteger(0.1);           // false\r\n\t * isInteger(new Number(0)); // true\r\n\t * isInteger('0');           // false\r\n\t * isInteger(Infinity);      // false\r\n\t * isInteger(NaN);           // false\r\n\t */\n\tfunction isInteger(value) {\n\t  return isNumber(value) && value % 1 === 0;\n\t}\n\t\n\t/**\r\n\t * @function isIntegerLike\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is integer-like.\r\n\t * @returns {Boolean} If the argument is integer-like or not.\r\n\t *\r\n\t * @example\r\n\t * isIntegerLike(0);             // true\r\n\t * isIntegerLike(new Number(0)); // true\r\n\t * isIntegerLike(0.1);           // false\r\n\t * isIntegerLike('0');           // true\r\n\t */\n\tfunction isIntegerLike(value) {\n\t  value = parseInt(Number(value));\n\t\n\t  return !!(value || value === 0);\n\t}\n\t\n\t/**\r\n\t * @function isNaN\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is NaN.\r\n\t * @returns {Boolean} If the argument is NaN or not.\r\n\t *\r\n\t * @example\r\n\t * isNaN(0);               // false\r\n\t * isNaN('NaN');           // false\r\n\t * isNaN(NaN);             // true\r\n\t * isNaN(new Number(NaN)); // true\r\n\t */\n\tfunction isNaN(value) {\n\t  if (!isNumber(value)) {\n\t    return false;\n\t  }\n\t\n\t  value = Number(value);\n\t\n\t  return value !== value;\n\t}\n\t\n\t/**\r\n\t * @function isNull\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is null.\r\n\t * @returns {Boolean} If the argument is null or not.\r\n\t *\r\n\t * @example\r\n\t * isNull(null);      // true\r\n\t * isNull(undefined); // false\r\n\t */\n\tfunction isNull(value) {\n\t  return value === null;\n\t}\n\t\n\t/**\r\n\t * @function isNullOrUndefined\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is null or undefined.\r\n\t * @returns {Boolean} If the argument is null or undefined or not.\r\n\t *\r\n\t * @example\r\n\t * isNullOrUndefined(null);      // true\r\n\t * isNullOrUndefined(undefined); // true\r\n\t * isNullOrUndefined(false);     // false\r\n\t */\n\tfunction isNullOrUndefined(value) {\n\t  return value === null || typeof value === 'undefined';\n\t}\n\t\n\t/**\r\n\t * @function isNumber\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is a number.\r\n\t * @returns {Boolean} If the argument is a number or not.\r\n\t *\r\n\t * @example\r\n\t * isNumber(0);             // true\r\n\t * isNumber(new Number(0)); // true\r\n\t * isNumber(NaN);           // true\r\n\t * isNumber('0');           // false\r\n\t */\n\tfunction isNumber(value) {\n\t  return (0, _toStringTag.toStringTag)(value) === 'Number';\n\t}\n\t\n\t/**\r\n\t * @function isNumberLike\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is number-like.\r\n\t * @returns {Boolean} If the argument is number-like or not.\r\n\t *\r\n\t * @example\r\n\t * isNumberLike(0);          // true\r\n\t * isNumberLike('0');        // true\r\n\t * isNumberLike('Infinity'); // true\r\n\t * isNumberLike('NaN');      // true\r\n\t * isNumberLike(NaN);        // true\r\n\t */\n\tfunction isNumberLike(value) {\n\t  if (isNaN(value) || value === 'NaN') {\n\t    return true;\n\t  }\n\t\n\t  value = Number(value);\n\t\n\t  return !!(value || value === 0);\n\t}\n\t\n\t/**\r\n\t * @function isObject\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is an object.\r\n\t * @returns {Boolean} If the argument is an object or not.\r\n\t *\r\n\t * @example\r\n\t * isObject({});   // true\r\n\t * isObject(1);    // false\r\n\t * isObject(null); // false\r\n\t */\n\tfunction isObject(value) {\n\t  return !!value && ((0, _toStringTag.toStringTag)(value) === 'Object' || (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' || value instanceof Object);\n\t}\n\t\n\t/**\r\n\t * @function isPlainObject\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is a plain object.\r\n\t * @returns {Boolean} If the argument is a plain object or not.\r\n\t *\r\n\t * @example\r\n\t * const obj = {};\r\n\t *\r\n\t * ifPlainObject(obj); // true\r\n\t *\r\n\t * Object.setPrototypeOf(object, null);\r\n\t *\r\n\t * ifPlainObject(obj); // true\r\n\t *\r\n\t * Object.setPrototypeOf(object, {});\r\n\t *\r\n\t * ifPlainObject(obj); // false\r\n\t */\n\tfunction isPlainObject(value) {\n\t  if (isPrimitive(value)) {\n\t    return false;\n\t  }\n\t\n\t  var proto = Object.getPrototypeOf(value);\n\t\n\t  if (isNull(proto)) {\n\t    return true;\n\t  }\n\t\n\t  var constructor = proto.constructor;\n\t\n\t  return isFunction(constructor) && constructor instanceof constructor && isNull(Object.getPrototypeOf(proto));\n\t}\n\t\n\t/**\r\n\t * @function isPrimitive\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is primitive.\r\n\t * @returns {Boolean} If the argument is primitive or not.\r\n\t *\r\n\t * @example\r\n\t * isPrimitive(1);             // true\r\n\t * isPrimitive({});            // false\r\n\t * isPrimitive('');            // true\r\n\t * isPrimitive(new Number(0)); // false\r\n\t * isPrimitive(true);          // true\r\n\t * isPrimitive(Symbol('foo')); // true\r\n\t * isPrimitive(null);          // true\r\n\t * isPrimitive(undefined);     // true\r\n\t */\n\tfunction isPrimitive(value) {\n\t  return isNull(value) || /^(number|string|boolean|symbol|undefined)$/.test(typeof value === 'undefined' ? 'undefined' : _typeof(value));\n\t}\n\t\n\t/**\r\n\t * @function isRegExp\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is a regular expression.\r\n\t * @returns {Boolean} If the argument is a regular expression or not.\r\n\t *\r\n\t * @example\r\n\t * isRegExp(/foo/);             // true\r\n\t * isRegExp('/foo/');           // false\r\n\t * isRegExp(new RegExp('foo')); // true\r\n\t */\n\tfunction isRegExp(value) {\n\t  return (0, _toStringTag.toStringTag)(value) === 'RegExp';\n\t}\n\t\n\t/**\r\n\t * @function isString\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is a string.\r\n\t * @returns {Boolean} If the argument is a string or not.\r\n\t *\r\n\t * @example\r\n\t * isString('0');             // true\r\n\t * isString(new String('0')); // true\r\n\t */\n\tfunction isString(value) {\n\t  return (0, _toStringTag.toStringTag)(value) === 'String';\n\t}\n\t\n\t/**\r\n\t * @function isSymbol\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is a symbol.\r\n\t * @returns {Boolean} If the argument is a symbol or not.\r\n\t *\r\n\t * @example\r\n\t * isSymbol(Symbol('1')); // true\r\n\t */\n\tfunction isSymbol(value) {\n\t  return (0, _toStringTag.toStringTag)(value) === 'Symbol';\n\t}\n\t\n\t/**\r\n\t * @function isUndefined\r\n\t * @public\r\n\t * @param {*} value - Value to check if it is undefined.\r\n\t * @returns {Boolean} If the argument is undefined or not.\r\n\t *\r\n\t * @example\r\n\t * isUndefined(null);      // false\r\n\t * isUndefined(undefined); // true\r\n\t */\n\tfunction isUndefined(value) {\n\t  return typeof value === 'undefined';\n\t}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.toStringTag = toStringTag;\n\t/**\n\t * @module helpers/toStringTag\n\t * @private\n\t * @description Exports toStringTag method.\n\t */\n\t\n\t/**\n\t * @function toStringTag\n\t * @param {*} object - Object to get toStringTag of.\n\t * @returns {String} Cut string.\n\t * @description Cut \"Type\" string from \"[object Type]\" string that gotten from {}.toString,call(object).\n\t */\n\tfunction toStringTag(object) {\n\t  return {}.toString.call(object).replace(/^\\[object |]$/g, '');\n\t}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\r\n\t * @module constants/constructors\r\n\t * @private\r\n\t * @description Exports constructors levels.\r\n\t */\n\t\n\t/**\r\n\t * @const\r\n\t * @type {Array[]}\r\n\t */\n\texports.default = [[], [], []];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Alphabet = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @module Alphabet\r\n\tprivate\r\n\tmixin\r\n\tdescription Exports Alphabet class.\r\n\tn\t\n\texports.alphabet = alphabet;\n\t\n\tvar _helpers = __webpack_require__(8);\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\r\n\t * @typedef {String} Char\r\n\t * @public\r\n\t * @description A string of one char.\r\n\t */\n\t\n\t/**\r\n\t * @class Alphabet\r\n\t * @public\r\n\t * @param {ArrayLike} alphabet - Alphabet to wrap.\r\n\t * @returns {Alphabet} Instance of Alphabet.\r\n\t * @description Class for alphabet manipulations: add, delete symbols, generate a token from an alphabet,\r\n\t * check if an alphabet contains a word.\r\n\t *\r\n\t * @example\r\n\t * new Alphabet(['a', 'b', 'c']);\r\n\t */\n\t\n\tvar Alphabet = exports.Alphabet = function () {\n\t  function Alphabet() {\n\t    var alphabet = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\t\n\t    _classCallCheck(this, Alphabet);\n\t\n\t    var a = {};\n\t\n\t    for (var i = 0, length = alphabet.length; i < length; i++) {\n\t      var char = alphabet[i];\n\t\n\t      if (!check(char)) {\n\t        throw new Error('Each element of an array must be a single char! (in Alphabet)');\n\t      }\n\t\n\t      a[char] = char;\n\t    }\n\t\n\t    /**\r\n\t     * @member {Object} Alphabet#$$\r\n\t     * @public\r\n\t     * @description The alphabet.\r\n\t     */\n\t    Object.defineProperty(this, '$$', { value: a });\n\t  }\n\t\n\t  /**\r\n\t   * @method Alphabet#add\r\n\t   * @public\r\n\t   * @param {...Char} chars - Chars to add.\r\n\t   * @returns {Alphabet} Returns this.\r\n\t   * @description Method for adding new letters to the alphabet.\r\n\t   *\r\n\t   * @example\r\n\t   * const alphabet = new Alphabet(['a', 'b', 'c']);\r\n\t   *\r\n\t   * alphabet.add('d', 'e');\r\n\t   *\r\n\t   * alphabet.get().$; // ['a', 'b', 'c', 'd', 'e']\r\n\t   */\n\t\n\t\n\t  _createClass(Alphabet, [{\n\t    key: 'add',\n\t    value: function add() {\n\t      for (var _len = arguments.length, chars = Array(_len), _key = 0; _key < _len; _key++) {\n\t        chars[_key] = arguments[_key];\n\t      }\n\t\n\t      for (var i = 0, length = chars.length; i < length; i++) {\n\t        var char = chars[i];\n\t\n\t        if (!check(char)) {\n\t          throw new Error('Each argument must be a single char! (in Alphabet#add)');\n\t        }\n\t\n\t        this.$$[char] = char;\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Alphabet#contains\r\n\t     * @public\r\n\t     * @param {String} word - Word to check if it is in the alphabet or not.\r\n\t     * @returns {Boolean} If the word in the alphabet or not.\r\n\t     * @description Method that returns if a word is in alphabet or not.\r\n\t     *\r\n\t     * @example\r\n\t     * const alphabet = new Alphabet(['f', 'b', 'o', 'a', 'r']);\r\n\t     *\r\n\t     * alphabet.contains('foo'); // true\r\n\t     * alphabet.contains('bar'); // true\r\n\t     * alphabet.contains('baz'); // false\r\n\t     */\n\t\n\t  }, {\n\t    key: 'contains',\n\t    value: function contains(word) {\n\t      (0, _helpers.validate)([word], ['string'], 'Alphabet#contains');\n\t\n\t      var alphabet = this.$$;\n\t\n\t      for (var i = 0, length = word.length; i < length; i++) {\n\t        if (!alphabet[word[i]]) {\n\t          return false;\n\t        }\n\t      }\n\t\n\t      return true;\n\t    }\n\t\n\t    /**\r\n\t     * @method Alphabet#delete\r\n\t     * @public\r\n\t     * @param {...Char} chars - Chars to delete.\r\n\t     * @returns {Alphabet} Returns this.\r\n\t     * @description Method for deleting letters from the alphabet.\r\n\t     *\r\n\t     * @example\r\n\t     * const alphabet = new Alphabet(['a', 'b', 'c', 'd']);\r\n\t     *\r\n\t     * alphabet.delete('a');\r\n\t     *\r\n\t     * alphabet.get().$; // ['b', 'c', 'd']\r\n\t     *\r\n\t     * alphabet.delete('b', 'd');\r\n\t     *\r\n\t     * alphabet.get().$; // ['c']\r\n\t     */\n\t\n\t  }, {\n\t    key: 'delete',\n\t    value: function _delete() {\n\t      for (var _len2 = arguments.length, chars = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t        chars[_key2] = arguments[_key2];\n\t      }\n\t\n\t      for (var i = 0, length = chars.length; i < length; i++) {\n\t        var char = chars[i];\n\t\n\t        if (!check(char)) {\n\t          throw new Error('Each argument must be a single char! (in Alphabet#delete)');\n\t        }\n\t\n\t        delete this.$$[char];\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Alphabet#get\r\n\t     * @returns {Array} Wrap of an array of alphabet letters.\r\n\t     * @description Method for getting array of alphabet letters.\r\n\t     *\r\n\t     * @example\r\n\t     * new Alphabet(['a', 'b', 'c']).get().$; // ['a', 'b', 'c']\r\n\t     */\n\t\n\t  }, {\n\t    key: 'get',\n\t    value: function get() {\n\t      return Object.keys(this.$$);\n\t    }\n\t\n\t    /**\r\n\t     * @method Alphabet#token\r\n\t     * @public\r\n\t     * @param {Number} length - Token length.\r\n\t     * @returns {String} Token.\r\n\t     * @description Method for generating random token with given length.\r\n\t     *\r\n\t     * @example\r\n\t     * new Alphabet(['a', 'b', 'c']).token(4); // 'abcb'\r\n\t     */\n\t\n\t  }, {\n\t    key: 'token',\n\t    value: function token(length) {\n\t      (0, _helpers.validate)([length], [['intLike', '>0']], 'Alphabet#token');\n\t\n\t      var alphabet = Object.keys(this.$$);\n\t      var len = alphabet.length;\n\t      var token = '';\n\t\n\t      for (var i = 0; i < length; i++) {\n\t        token += alphabet[Math.floor(Math.random() * len)];\n\t      }\n\t\n\t      return token;\n\t    }\n\t  }]);\n\t\n\t  return Alphabet;\n\t}();\n\t\n\t(0, _helpers.defineProperties)(Alphabet.prototype, _defineProperty({}, _helpers.Symbol.toStringTag, 'Alphabet'));\n\t\n\tfunction check(char) {\n\t  return (0, _helpers.isString)(char) && char.length === 1;\n\t}\n\t\n\t/**\r\n\t * @function alphabet\r\n\t * @public\r\n\t * @param {String} string - String to generate an alphabet from.\r\n\t * @returns {Alphabet} New instance of Alphabet.\r\n\t * @description Function for creating an alphabet from a string that has format like this:\r\n\t * '&lt;char1&gt;-&lt;char2&gt; &lt;char3&gt;-&lt;char4&gt;'\r\n\t *\r\n\t * @example\r\n\t * const a1 = alphabet('a-c 1-3');\r\n\t * const a2 = alphabet('5-5f-g');\r\n\t *\r\n\t * a1.get().$; // ['1', '2', '3', 'a', 'b', 'c']\r\n\t * a2.get().$; // ['5', 'f', 'g']\r\n\t */\n\tfunction alphabet(string) {\n\t  (0, _helpers.validate)([string], ['string']);\n\t\n\t  var ranges = string.split(/([\\s\\S]\\-+[\\s\\S])?/g);\n\t  var length = ranges.length;\n\t  var alphabet = [];\n\t\n\t  for (var i = 0; i < length; i++) {\n\t    var range = ranges[i];\n\t\n\t    if (!range || range === ' ') {\n\t      continue;\n\t    }\n\t\n\t    if (/\\-/.test(range) && !/[\\s\\S]\\-+[\\s\\S]/.test(range)) {\n\t      throw new Error('Wrong part of the string (' + range + ')! (in alphabet)');\n\t    }\n\t\n\t    if (/\\-/.test(range)) {\n\t      var start = range.charCodeAt(0);\n\t      var end = range.charCodeAt(2);\n\t\n\t      if (start > end) {\n\t        throw new Error('Start of the range must be before its end! (in alphabet)');\n\t      }\n\t\n\t      for (var k = 0, len = end - start + 1; k < len; k++) {\n\t        alphabet.push(String.fromCharCode(start + k));\n\t      }\n\t\n\t      continue;\n\t    }\n\t\n\t    if (range.length === 1) {\n\t      alphabet.push(range);\n\t    }\n\t  }\n\t\n\t  return new Alphabet(alphabet);\n\t}\n\t\n\texports.default = Alphabet;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _assign = __webpack_require__(9);\n\t\n\tObject.keys(_assign).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _assign[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _checkTypes = __webpack_require__(4);\n\t\n\tObject.keys(_checkTypes).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _checkTypes[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _crossClassMethods = __webpack_require__(11);\n\t\n\tObject.keys(_crossClassMethods).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _crossClassMethods[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _defineProperty = __webpack_require__(12);\n\t\n\tObject.keys(_defineProperty).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _defineProperty[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _iterate = __webpack_require__(10);\n\t\n\tObject.keys(_iterate).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _iterate[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _Symbol = __webpack_require__(13);\n\t\n\tObject.keys(_Symbol).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Symbol[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _toArray = __webpack_require__(14);\n\t\n\tObject.keys(_toArray).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _toArray[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _toStringTag = __webpack_require__(5);\n\t\n\tObject.keys(_toStringTag).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _toStringTag[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _validate = __webpack_require__(15);\n\t\n\tObject.keys(_validate).forEach(function (key) {\n\t  if (key === \"default\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _validate[key];\n\t    }\n\t  });\n\t});\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.assign = assign;\n\t\n\tvar _iterate = __webpack_require__(10);\n\t\n\t/**\n\t * @const\n\t * @function assign\n\t * @param {Object} target - Object to assign rest of arguments to.\n\t * @param {...Object} objects - Objects that are assigned to the target.\n\t * @returns {Object} Target.\n\t */\n\tfunction assign(target) {\n\t  (0, _iterate.iterate)(arguments, function (source, index) {\n\t    if (index) {\n\t      (0, _iterate.iterate)(source, function (value, key) {\n\t        target[key] = value;\n\t      });\n\t    }\n\t  });\n\t\n\t  return target;\n\t} /**\n\t   * @module helpers/assign\n\t   * @private\n\t   * @description Exports Object.assign-like method.\n\t   */\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.iterate = iterate;\n\t\n\tvar _checkTypes = __webpack_require__(4);\n\t\n\t/**\r\n\t * @callback IterationCallback\r\n\t * @param {*} value - Iteration value.\r\n\t * @param {String|Number} key - Iteration key.\r\n\t * @param {*} object - Initial iterable object.\r\n\t */\n\t\n\t/**\r\n\t * @function iterate\r\n\t * @param {(Object|Array|null|undefined)} object - Value to iterate over.\r\n\t * @param {IterationCallback} callback - Callback that is called on every iteration.\r\n\t * @returns {*} If callback returns not undefined then iterate returns this value.\r\n\t * @description Function for iterating over all types of values.\r\n\t */\n\tfunction iterate(object, callback) {\n\t  var array = (0, _checkTypes.isArrayLike)(object);\n\t\n\t  var iterated = 0;\n\t\n\t  for (var key in object) {\n\t    if ({}.hasOwnProperty.call(object, key)) {\n\t      if (array && iterated++ >= object.length) {\n\t        break;\n\t      }\n\t\n\t      var value = callback(object[key], array ? Number(key) : key, object);\n\t\n\t      if (!(0, _checkTypes.isUndefined)(value)) {\n\t        return value;\n\t      }\n\t    }\n\t  }\n\t} /**\r\n\t   * @module helpers/iterate\r\n\t   * @private\r\n\t   * @description Exports iterate method.\r\n\t   */\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.crossClassMethods = undefined;\n\t\n\tvar _D = __webpack_require__(3);\n\t\n\tvar _D2 = _interopRequireDefault(_D);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * @namespace\n\t * @private\n\t * @type {Object}\n\t */\n\tvar crossClassMethods = exports.crossClassMethods = {\n\t  transformAnchor: transformAnchor,\n\t  htmlElement: htmlElement\n\t};\n\t\n\t/**\n\t * @function transformAnchor\n\t * @abstract\n\t * @memberof module:helpers/crossClassMethods.crossClassMethods\n\t * @param {Elem} elem - Elem to transform.\n\t * @returns {void}\n\t * @description Function for transformation html-anchors by {@link Router}.\n\t */\n\t/**\n\t * @module helpers/crossClassMethods\n\t * @private\n\t * @description Exports crossClassMethods.\n\t */\n\t\n\tfunction transformAnchor() {}\n\t\n\t/**\n\t * @function htmlElement\n\t * @abstract\n\t * @memberof module:helpers/crossClassMethods.crossClassMethods\n\t * @param {Element} elem - Elem to wrap.\n\t * @returns {Elem} Instance of Elem or an Elem subclass.\n\t * @description Function for wrapping elements.\n\t */\n\tfunction htmlElement(elem) {\n\t  return (0, _D2.default)(elem);\n\t}\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.dynamicDefineProperties = dynamicDefineProperties;\n\texports.defineProperties = defineProperties;\n\t\n\tvar _iterate = __webpack_require__(10);\n\t\n\t/**\n\t * @callback propertyGeneratorCallback\n\t * @param {String} name - Name of the property.\n\t * @returns {*} Generated property.\n\t */\n\t\n\t/**\n\t * @function dynamicDefineProperties\n\t * @param {Object} target - Object to define properties for.\n\t * @param {Array} properties - Object which keys are properties.\n\t * @param {propertyGeneratorCallback} propertyGenerator - Callback for every property.\n\t * @returns {void}\n\t * @description Function for dynamic creating properties based on name of the method.\n\t */\n\tfunction dynamicDefineProperties(target, properties, propertyGenerator) {\n\t  (0, _iterate.iterate)(properties, function (name) {\n\t    Object.defineProperty(target, name, {\n\t      value: propertyGenerator(name),\n\t      writable: true,\n\t      enumerable: false,\n\t      configurable: true\n\t    });\n\t  });\n\t}\n\t\n\t/**\n\t * @function defineProperties\n\t * @param {Object} target - Target to define properties for.\n\t * @param {Object} properties - Object with properties needed to be assign to the target.\n\t * @returns {void}\n\t * @description Function for defining properties of an object.\n\t */\n\t/**\n\t * @module helpers/defineProperty\n\t * @private\n\t * @description Exports defineProperty and dynamicDefineProperties methods.\n\t */\n\t\n\tfunction defineProperties(target, properties) {\n\t  (0, _iterate.iterate)(properties, function (method, name) {\n\t    if (/^get /.test(name)) {\n\t      Object.defineProperty(target, name.replace(/^get /, ''), {\n\t        get: method,\n\t        set: undefined,\n\t        enumerable: false,\n\t        configurable: true\n\t      });\n\t\n\t      return;\n\t    }\n\t\n\t    if (/^set /.test(name)) {\n\t      Object.defineProperty(target, name.replace(/^set /, ''), {\n\t        set: method,\n\t        get: undefined,\n\t        enumerable: false,\n\t        configurable: true\n\t      });\n\t\n\t      return;\n\t    }\n\t\n\t    if (/^get\\/set /.test(name)) {\n\t      Object.defineProperty(target, name.replace(/^get\\/set /, ''), {\n\t        get: method.get,\n\t        set: method.set,\n\t        enumerable: false,\n\t        configurable: true\n\t      });\n\t\n\t      return;\n\t    }\n\t\n\t    if (name !== 'Symbol.toStringTag') {\n\t      Object.defineProperty(target, name, {\n\t        value: method,\n\t        writable: true,\n\t        enumerable: false,\n\t        configurable: true\n\t      });\n\t    }\n\t  });\n\t}\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * @module helpers/Symbol\n\t * @private\n\t * @description Exports Symbol class.\n\t */\n\t\n\tvar _Symbol = global.Symbol || {\n\t  toStringTag: 'Symbol.toStringTag',\n\t  iterator: Math.random().toString(36)\n\t};\n\texports.Symbol = _Symbol;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.toArray = toArray;\n\t\n\tvar _checkTypes = __webpack_require__(4);\n\t\n\tvar _iterate = __webpack_require__(10);\n\t\n\t/**\n\t * @function toArray\n\t * @param {*} value - Any value.\n\t * @param {Boolean} [createNewArray = false] - If it is needed to create new array.\n\t * @returns {Array} Create array.\n\t * @description Function for creating an array of any value.\n\t */\n\t/**\n\t * @module helpers/toArray\n\t * @private\n\t * @description Exports toArray method.\n\t */\n\t\n\tfunction toArray(value, createNewArray) {\n\t  if ((0, _checkTypes.isArray)(value) && !createNewArray) {\n\t    return value;\n\t  }\n\t\n\t  var array = [];\n\t\n\t  if ((0, _checkTypes.isArrayLike)(value) && !(0, _checkTypes.isString)(value)) {\n\t    (0, _iterate.iterate)(value, function (value) {\n\t      array.push(value);\n\t    });\n\t  } else {\n\t    array.push(value);\n\t  }\n\t\n\t  return array;\n\t}\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.validate = validate;\n\t\n\tvar _validateCheckExpressions = __webpack_require__(16);\n\t\n\tvar _validateCheckExpressions2 = _interopRequireDefault(_validateCheckExpressions);\n\t\n\tvar _iterate = __webpack_require__(10);\n\t\n\tvar _checkTypes = __webpack_require__(4);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar numbers = ['1st', '2nd', '3rd', '4th', '5th', '6th', '7th'];\n\t\n\t/**\n\t * @function validate\n\t * @private\n\t * @param {Object} args - Arguments of function.\n\t * @param {Object} options - Object with validate parameters.\n\t * @param {String} [name] - Name of the function what called validate.\n\t * @returns {void}\n\t * @description Function for checking arguments of other functions.\n\t */\n\t/**\n\t * @module helpers/validate\n\t * @private\n\t * @description Exports validate method.\n\t */\n\t\n\tfunction validate(args, options, name) {\n\t  (0, _iterate.iterate)(options, function (array, number) {\n\t    if (!(0, _checkTypes.isArray)(array)) {\n\t      array = [array];\n\t    }\n\t\n\t    (0, _iterate.iterate)(array, function (checker) {\n\t      checker = _validateCheckExpressions2.default[checker];\n\t\n\t      if (!checker.check(args[number])) {\n\t        throw new checker.error(checker.text.replace('$n', numbers[number]) + (name ? ' (in ' + name + ')' : ''));\n\t      }\n\t    });\n\t  });\n\t}\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _checkTypes = __webpack_require__(4);\n\t\n\tvar methods = _interopRequireWildcard(_checkTypes);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * @callback checkValidityCallback\n\t * @private\n\t * @param {*} value - Value to check.\n\t */\n\t\n\t/**\n\t * @typedef {Object} validateExpr\n\t * @private\n\t * @property {String} text - Text of the thrown error.\n\t * @property {Error} error - Type of the thrown error.\n\t * @property {checkValidityCallback} check - Callback for checking value.\n\t */\n\t\n\t/**\n\t * @type {validateExpr[]}\n\t * @private\n\t * @description Object of different types of validation.\n\t */\n\texports.default = {\n\t  '>0': {\n\t    check: function check(n) {\n\t      return n > 0;\n\t    },\n\t    text: '$n argument must be positive!',\n\t    error: RangeError\n\t  },\n\t  '>=0': {\n\t    check: function check(n) {\n\t      return n >= 0;\n\t    },\n\t    text: '$n argument must be non-negative!',\n\t    error: RangeError\n\t  },\n\t  '<0': {\n\t    check: function check(n) {\n\t      return n < 0;\n\t    },\n\t    text: '$n argument must be negative!',\n\t    error: RangeError\n\t  },\n\t  '<=0': {\n\t    check: function check(n) {\n\t      return n <= 0;\n\t    },\n\t    text: '$n argument must be non-positive!',\n\t    error: RangeError\n\t  },\n\t  '!!': {\n\t    check: methods.isNullOrUndefined,\n\t    text: '$n argument must be not null or undefined!',\n\t    error: TypeError\n\t  },\n\t  array: {\n\t    check: methods.isArray,\n\t    text: '$n argument must be an array!',\n\t    error: TypeError\n\t  },\n\t  'array||!': {\n\t    check: function check(a) {\n\t      return methods.isArray(a) || methods.isNullOrUndefined(a);\n\t    },\n\t    text: '$n argument must be an array, or undefined, or null!',\n\t    error: TypeError\n\t  },\n\t  arrayLike: {\n\t    check: methods.isArrayLike,\n\t    text: '$n argument must be array-like!',\n\t    error: TypeError\n\t  },\n\t  'arrayLike||!': {\n\t    check: function check(a) {\n\t      return methods.isArrayLike(a) || methods.isNullOrUndefined(a);\n\t    },\n\t    text: '$n argument must be array-like, or undefined, or null!',\n\t    error: TypeError\n\t  },\n\t  date: {\n\t    check: methods.isDate,\n\t    text: '$n argument must be a date!',\n\t    error: TypeError\n\t  },\n\t  'date||!': {\n\t    check: function check(d) {\n\t      return methods.isDate(d) || methods.isNullOrUndefined(d);\n\t    },\n\t    text: '$n argument must be a date, or undefined, or null!',\n\t    error: TypeError\n\t  },\n\t  dateLike: {\n\t    check: methods.isDateLike,\n\t    text: '$n argument must be date-like!',\n\t    error: TypeError\n\t  },\n\t  'dateLike||!': {\n\t    check: function check(d) {\n\t      return methods.isDateLike(d) || methods.isNullOrUndefined(d);\n\t    },\n\t    text: '$n argument must be date-like, or undefined, or null!',\n\t    error: TypeError\n\t  },\n\t  function: {\n\t    check: methods.isFunction,\n\t    text: '$n argument must be a function!',\n\t    error: TypeError\n\t  },\n\t  'function||!': {\n\t    check: function check(f) {\n\t      return methods.isFunction(f) || methods.isNullOrUndefined(f);\n\t    },\n\t    text: '$n argument must be a function, or undefined, or null!',\n\t    error: TypeError\n\t  },\n\t  int: {\n\t    check: methods.isInteger,\n\t    text: '$n argument must be an integer!',\n\t    error: TypeError\n\t  },\n\t  'int||!': {\n\t    check: function check(i) {\n\t      return methods.isInteger(i) || methods.isNullOrUndefined(i);\n\t    },\n\t    text: '$n argument must be an integer, or undefined, or null!',\n\t    error: TypeError\n\t  },\n\t  intLike: {\n\t    check: methods.isIntegerLike,\n\t    text: '$n argument must be integer-like!',\n\t    error: TypeError\n\t  },\n\t  'intLike||!': {\n\t    check: function check(i) {\n\t      return methods.isIntegerLike(i) || methods.isNullOrUndefined(i);\n\t    },\n\t    text: '$n argument must be integer-like, or undefined, or null!',\n\t    error: TypeError\n\t  },\n\t  number: {\n\t    check: methods.isNumber,\n\t    text: '$n argument must be a number!',\n\t    error: TypeError\n\t  },\n\t  'number||!': {\n\t    check: function check(n) {\n\t      return methods.isNumber(n) || methods.isNullOrUndefined(n);\n\t    },\n\t    text: '$n argument must be a number, or undefined, or null!',\n\t    error: TypeError\n\t  },\n\t  numberLike: {\n\t    check: methods.isNumberLike,\n\t    text: '$n argument must be number-like!',\n\t    error: TypeError\n\t  },\n\t  'numberLike||!': {\n\t    check: function check(n) {\n\t      return methods.isNumberLike(n) || methods.isNullOrUndefined(n);\n\t    },\n\t    text: '$n argument must be number-like, or undefined, or null!',\n\t    error: TypeError\n\t  },\n\t  object: {\n\t    check: methods.isObject,\n\t    text: '$n argument must be an object!',\n\t    error: TypeError\n\t  },\n\t  'object||!': {\n\t    check: function check(o) {\n\t      return methods.isObject(o) || methods.isNullOrUndefined(o);\n\t    },\n\t    text: '$n argument must be an object, or undefined, or null!',\n\t    error: TypeError\n\t  },\n\t  regexp: {\n\t    check: methods.isRegExp,\n\t    text: '$n argument must be a regular expression!',\n\t    error: TypeError\n\t  },\n\t  'regexp||!': {\n\t    check: function check(r) {\n\t      return methods.isRegExp(r) || methods.isNullOrUndefined(r);\n\t    },\n\t    text: '$n argument must be a regular expression, or undefined, or null!',\n\t    error: TypeError\n\t  },\n\t  string: {\n\t    check: methods.isString,\n\t    text: '$n argument must be a string!',\n\t    error: TypeError\n\t  },\n\t  'string||!': {\n\t    check: function check(s) {\n\t      return methods.isString(s) || methods.isNullOrUndefined(s);\n\t    },\n\t    text: '$n argument must be a string, or undefined, or null!',\n\t    error: TypeError\n\t  }\n\t}; /**\n\t    * @module constants/validateCheckExpressions\n\t    * @private\n\t    * @description Exports different types of validate expressions for {@link module:helpers/validate}.\n\t    */\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Arr = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.array = array;\n\texports.iterate = iterate;\n\t\n\tvar _Super2 = __webpack_require__(18);\n\t\n\tvar _Super3 = _interopRequireDefault(_Super2);\n\t\n\tvar _constructors = __webpack_require__(6);\n\t\n\tvar _constructors2 = _interopRequireDefault(_constructors);\n\t\n\tvar _helpers = __webpack_require__(8);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @module Arr\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @private\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @mixin\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @description Exports Arr class.\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\r\n\t * @typedef {Array|*} ArrayLike\r\n\t * @public\r\n\t * @description Array-like type.\r\n\t */\n\t\n\t/**\r\n\t * @callback ArrayCallback\r\n\t * @public\r\n\t * @param {Number} i - Iteration index.\r\n\t */\n\t\n\t/**\r\n\t * @callback IterateCallback\r\n\t * @public\r\n\t * @param {Number} i - Iteration index.\r\n\t */\n\t\n\t/**\r\n\t * @callback CompareFunction\r\n\t * @public\r\n\t * @param {*} x - First value to be compared.\r\n\t * @param {*} y - Second value to be compared.\r\n\t */\n\t\n\t/**\r\n\t * @class Arr\r\n\t * @extends Super\r\n\t * @public\r\n\t * @param {Array} [array = []] - An array to wrap.\r\n\t * @returns {Arr} Instance of Arr.\r\n\t * @description Wrap of an array.\r\n\t *\r\n\t * @example\r\n\t * new Arr([1, 2]);\r\n\t */\n\t\n\tvar Arr = exports.Arr = function (_Super) {\n\t  _inherits(Arr, _Super);\n\t\n\t  function Arr() {\n\t    var array = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\t\n\t    _classCallCheck(this, Arr);\n\t\n\t    return _possibleConstructorReturn(this, Object.getPrototypeOf(Arr).call(this, (0, _helpers.toArray)(array)));\n\t\n\t    /**\r\n\t     * @member Arr#$\r\n\t     * @type {Array}\r\n\t     * @public\r\n\t     * @description Made array.\r\n\t     */\n\t  }\n\t\n\t  /**\r\n\t   * @method Arr#concat\r\n\t   * @public\r\n\t   * @param {...(Array|*)} values - Arrays or any other values to concat the array with.\r\n\t   * @returns {Arr} New instance of Arr.\r\n\t   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\r\n\t   * @description Synonym for\r\n\t   * [Array#concat]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/concat}.\r\n\t   */\n\t\n\t\n\t  _createClass(Arr, [{\n\t    key: 'concat',\n\t    value: function concat() {\n\t      for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {\n\t        values[_key] = arguments[_key];\n\t      }\n\t\n\t      var array = (0, _helpers.toArray)(this.$, true);\n\t\n\t      (0, _helpers.iterate)(arguments, function (value) {\n\t        value = new _Super3.default(value).$;\n\t\n\t        if ((0, _helpers.isArrayLike)(value) && !(0, _helpers.isString)(value)) {\n\t          (0, _helpers.iterate)(value, function (value) {\n\t            array.push(value);\n\t          });\n\t\n\t          return;\n\t        }\n\t\n\t        array.push(value);\n\t      });\n\t\n\t      return new this.constructor(array);\n\t    }\n\t\n\t    /**\r\n\t     * @member Arr#first\r\n\t     * @type {*}\r\n\t     * @public\r\n\t     * @readonly\r\n\t     * @description Returns the first element of the array.\r\n\t     *\r\n\t     * @example\r\n\t     * new Arr([1, 2, 3]).first; // 1\r\n\t     * new Arr([]).first;        // undefined\r\n\t     */\n\t\n\t  }, {\n\t    key: 'indexOf',\n\t\n\t\n\t    /**\r\n\t     * @method Arr#indexOf\r\n\t     * @public\r\n\t     * @param {*} value - Value to search.\r\n\t     * @returns {Number} Index of the argument.\r\n\t     * @description Almost the same as {@link Super#keyOf}. The difference is that if the value is not found\r\n\t     * -1 returned instead of null and if found Number(key) returned.\r\n\t     *\r\n\t     * @example\r\n\t     * new Arr([1, 2, 3]).indexOf(1);       // 0\r\n\t     * new Arr([1, 2, 3]).indexOf('1');     // 0\r\n\t     * new Arr([1, 2, 3]).indexOf(3);       // -1\r\n\t     * new Arr([1, 2, NaN]).indexOf(NaN);   // 2\r\n\t     */\n\t    value: function indexOf(value) {\n\t      var key = this.keyOf(value);\n\t\n\t      return key === null ? -1 : Number(key);\n\t    }\n\t\n\t    /**\r\n\t     * @method Arr#indexOfStrict\r\n\t     * @public\r\n\t     * @param {*} value - Value to search.\r\n\t     * @returns {Number} Index of the argument.\r\n\t     * @description Almost the same as {@link Super#keyOfStrict}. The difference is that if the value is not found\r\n\t     * -1 returned instead of null and if found Number(key) returned.\r\n\t     *\r\n\t     * @example\r\n\t     * new Arr([1, 2, 3]).indexOfStrict(1);       // 0\r\n\t     * new Arr([1, 2, 3]).indexOfStrict('1');     // -1\r\n\t     * new Arr([1, 2, 3]).indexOfStrict(3);       // -1\r\n\t     * new Arr([1, 2, NaN]).indexOfStrict(NaN);   // 2\r\n\t     */\n\t\n\t  }, {\n\t    key: 'indexOfStrict',\n\t    value: function indexOfStrict(value) {\n\t      var key = this.keyOfStrict(value);\n\t\n\t      return key === null ? -1 : Number(key);\n\t    }\n\t\n\t    /**\r\n\t     * @method Arr#join\r\n\t     * @public\r\n\t     * @param {String} [separator = ','] - See the link.\r\n\t     * @returns {String} - String of joined array.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/join\r\n\t     * @description Synonym for\r\n\t     * [Array#join]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/join}.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'join',\n\t    value: function join(separator) {\n\t      return this.$.join.apply(this.$, arguments);\n\t    }\n\t\n\t    /**\r\n\t     * @member Arr#last\r\n\t     * @type {*}\r\n\t     * @public\r\n\t     * @readonly\r\n\t     * @description The last element of the array.\r\n\t     *\r\n\t     * @example\r\n\t     * new Arr([1, 2, 3]).last; // 3\r\n\t     * new Arr([]).last;        // undefined\r\n\t     */\n\t\n\t  }, {\n\t    key: 'pop',\n\t\n\t\n\t    /**\r\n\t     * @method Arr#pop\r\n\t     * @public\r\n\t     * @returns {*} Returns deleted element.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/pop\r\n\t     * @description Synonym for\r\n\t     * [Array#pop]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/pop}.\r\n\t     */\n\t    value: function pop() {\n\t      return this.$.pop();\n\t    }\n\t\n\t    /**\r\n\t     * @method Arr#push\r\n\t     * @public\r\n\t     * @param {...*} values See the link.\r\n\t     * @this {Arr}\r\n\t     * @returns {Arr} Returns this.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push\r\n\t     * @description Synonym for\r\n\t     * [Array#push]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push}\r\n\t     * besides returning this.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'push',\n\t    value: function push() {\n\t      for (var _len2 = arguments.length, values = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t        values[_key2] = arguments[_key2];\n\t      }\n\t\n\t      this.$.push.apply(this.$, arguments);\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Arr#reverse\r\n\t     * @public\r\n\t     * @returns {Arr} A wrap of the reversed array.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse\r\n\t     * @description Synonym for\r\n\t     * [Array#reverse]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse}.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'reverse',\n\t    value: function reverse() {\n\t      this.$.reverse();\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Arr#shift\r\n\t     * @public\r\n\t     * @returns {*} Returns deleted element.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/shift\r\n\t     * @description Synonym for\r\n\t     * [Array#shift]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/shift}.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'shift',\n\t    value: function shift() {\n\t      return this.$.shift();\n\t    }\n\t\n\t    /**\r\n\t     * @method Arr#shuffle\r\n\t     * @public\r\n\t     * @returns {Arr} Returns this.\r\n\t     * @description Method for shuffling.\r\n\t     *\r\n\t     * @example\r\n\t     * new Arr([1, 2, 3, 4]).shuffle().$; // [4, 2, 3, 1]\r\n\t     * new Arr([1, 2, 3, 4]).shuffle().$; // [1, 3, 4, 2]\r\n\t     */\n\t\n\t  }, {\n\t    key: 'shuffle',\n\t    value: function shuffle() {\n\t      var length = this.$.length;\n\t\n\t      return this.forEach(function (value, index, array) {\n\t        var randomIndex = index + Math.floor((length - index) * Math.random());\n\t\n\t        array[index] = array[randomIndex];\n\t        array[randomIndex] = value;\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Arr#slice\r\n\t     * @public\r\n\t     * @param {Number} [begin = 0] - See the link.\r\n\t     * @param {Number} [end = array.length] - See the link.\r\n\t     * @returns {Arr} A wrap of a sliced array.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\r\n\t     * @description Synonym for\r\n\t     * [Array#slice]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/slice}.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'slice',\n\t    value: function slice(begin, end) {\n\t      return new this.constructor(this.$.slice.apply(this.$, arguments));\n\t    }\n\t\n\t    /**\r\n\t     * @method Arr#sort\r\n\t     * @public\r\n\t     * @param {CompareFunction} [compareFunction] - See the link.\r\n\t     * @returns {Arr} Returns this.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\r\n\t     * @description Synonym for\r\n\t     * [Array#sort]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/sort}.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'sort',\n\t    value: function sort(compareFunction) {\n\t      (0, _helpers.validate)([compareFunction], ['function||!'], 'Arr#sort');\n\t\n\t      this.$.sort(compareFunction);\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Arr#sortAsc\r\n\t     * @public\r\n\t     * @returns {Arr} Returns this.\r\n\t     * @description Method for ascending sorting. Puts non-numbers first, then NaNs, then sorted values.\r\n\t     *\r\n\t     * @example\r\n\t     * new Arr([NaN, 1, -7, '100', 5]).sortAsc().$; // ['100', NaN, -7, 1, 5]\r\n\t     */\n\t\n\t  }, {\n\t    key: 'sortAsc',\n\t    value: function sortAsc() {\n\t      return this.sort(asc);\n\t    }\n\t\n\t    /**\r\n\t     * @method Arr#sortDesc\r\n\t     * @public\r\n\t     * @returns {Arr} Returns this.\r\n\t     * @description Method for descending sorting. Puts sorted values first, then NaNs, then non-numbers.\r\n\t     *\r\n\t     * @example\r\n\t     * new Arr([NaN, 1, -7, '100', 5]).sortDesc().$; // [5, 1, -7, NaN, '100']\r\n\t     */\n\t\n\t  }, {\n\t    key: 'sortDesc',\n\t    value: function sortDesc() {\n\t      return this.sort(function (y, x) {\n\t        return asc(x, y);\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Arr#splice\r\n\t     * @public\r\n\t     * @param {Number} [start] - See the link.\r\n\t     * @param {Number} [deleteCount] - See the link.\r\n\t     * @param {...*} [items] - See the link.\r\n\t     * @returns {Arr} A wrap of return value of #splice call.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\r\n\t     * @description Synonym for\r\n\t     * [Array#splice]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/splice}.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'splice',\n\t    value: function splice(start, deleteCount) {\n\t      for (var _len3 = arguments.length, items = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n\t        items[_key3 - 2] = arguments[_key3];\n\t      }\n\t\n\t      return new Arr(this.$.splice.apply(this.$, arguments));\n\t    }\n\t\n\t    /**\r\n\t     * @method Arr#string\r\n\t     * @public\r\n\t     * @returns {String} Concatenated array.\r\n\t     * @description Synonym for array.join('').\r\n\t     *\r\n\t     * @example\r\n\t     * new Arr([1, 2, 3]).string(); // '123'\r\n\t     */\n\t\n\t  }, {\n\t    key: 'string',\n\t    value: function string() {\n\t      return this.join('');\n\t    }\n\t\n\t    /**\r\n\t     * @method Arr#unshift\r\n\t     * @public\r\n\t     * @param {...*} [values] - See the link.\r\n\t     * @returns {Arr} Returns this.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift\r\n\t     * @description Synonym for\r\n\t     * [Array#unshift]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift}\r\n\t     * besides returning this.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'unshift',\n\t    value: function unshift() {\n\t      for (var _len4 = arguments.length, values = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n\t        values[_key4] = arguments[_key4];\n\t      }\n\t\n\t      this.$.unshift.apply(this.$, arguments);\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'first',\n\t    get: function get() {\n\t      return this.$[0];\n\t    }\n\t  }, {\n\t    key: 'last',\n\t    get: function get() {\n\t      var array = this.$;\n\t\n\t      return array[array.length - 1];\n\t    }\n\t\n\t    /**\r\n\t     * @member Arr#length\r\n\t     * @type {Number}\r\n\t     * @public\r\n\t     * @readonly\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/length\r\n\t     * @description Synonym for\r\n\t     * [Array#length]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/length}.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'length',\n\t    get: function get() {\n\t      return this.$.length;\n\t    }\n\t  }]);\n\t\n\t  return Arr;\n\t}(_Super3.default);\n\t\n\t(0, _helpers.defineProperties)(Arr.prototype, _defineProperty({}, _helpers.Symbol.toStringTag, 'Arr'));\n\t\n\t/**\r\n\t * @function asc\r\n\t * @private\r\n\t * @param {*} x - First value to be compared.\r\n\t * @param {*} y - Second value to be compared.\r\n\t * @returns {Number} Where to put the first element: before or after.\r\n\t */\n\tfunction asc(x, y) {\n\t  if (!(0, _helpers.isNumber)(x) && !(0, _helpers.isNumber)(y)) {\n\t    return 0;\n\t  }\n\t\n\t  if (!(0, _helpers.isNumber)(x)) {\n\t    return -1;\n\t  }\n\t\n\t  if (!(0, _helpers.isNumber)(y)) {\n\t    return 1;\n\t  }\n\t\n\t  if ((0, _helpers.isNaN)(x) && (0, _helpers.isNaN)(y)) {\n\t    return 0;\n\t  }\n\t\n\t  if ((0, _helpers.isNaN)(x)) {\n\t    return -1;\n\t  }\n\t\n\t  if ((0, _helpers.isNaN)(y)) {\n\t    return 1;\n\t  }\n\t\n\t  return x - y;\n\t}\n\t\n\t_constructors2.default[1].push({\n\t  check: _helpers.isArrayLike,\n\t  cls: Arr\n\t});\n\t\n\t/**\r\n\t * @function array\r\n\t * @public\r\n\t * @param {Number} number - Length of the array.\r\n\t * @param {ArrayCallback} [callback] - If it's present it has to be a function\r\n\t * that returns the element that is pushed to the new array.\r\n\t * @returns {Arr} New instance of Arr.\r\n\t * @description Method for creating new array from the length using optional callback.\r\n\t *\r\n\t * @example\r\n\t * array(3).$;               // [0, 1, 2]\r\n\t * array(3, (i) => i * 2).$; // [0, 2, 4]\r\n\t */\n\tfunction array(number, callback) {\n\t  (0, _helpers.validate)([number, callback], [['intLike', '>=0'], 'function||!'], 'array');\n\t\n\t  var array = [];\n\t\n\t  for (var i = 0; i < number; i++) {\n\t    array.push(callback ? callback(i) : i);\n\t  }\n\t\n\t  return new Arr(array);\n\t}\n\t\n\t/**\r\n\t * @function iterate\r\n\t * @public\r\n\t * @param {Number} number - Number of iterations.\r\n\t * @param {IterateCallback} callback - Callback that is called on each iteration with the iteration index.\r\n\t * @returns {void}\r\n\t * @description Method for replacing for (...) construction.\r\n\t *\r\n\t * @example\r\n\t * iterate();\r\n\t */\n\tfunction iterate(number, callback) {\n\t  (0, _helpers.validate)([number, callback], [['intLike', '>=0'], 'function'], 'iterate');\n\t\n\t  for (var i = 0; i < number; i++) {\n\t    callback(i);\n\t  }\n\t}\n\t\n\texports.default = Arr;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Super = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\r\n\tmodule Super\r\n\tprivate\r\n\tmixin\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @description Exports Super class.\r\n\tn\t\n\tvar _D = __webpack_require__(3);\n\t\n\tvar _D2 = _interopRequireDefault(_D);\n\t\n\tvar _Switcher = __webpack_require__(19);\n\t\n\tvar _constructors = __webpack_require__(6);\n\t\n\tvar _constructors2 = _interopRequireDefault(_constructors);\n\t\n\tvar _helpers = __webpack_require__(8);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\r\n\t * @typedef {Super|Arr|Func|Elem|Str|Num|Dat|BlobObject} DWrap\r\n\t * @public\r\n\t * @description Any kind of D-Wrap.\r\n\t */\n\t\n\t/**\r\n\t * @typedef {String|Number|null} Key\r\n\t * @public\r\n\t * @description Key type used in many methods.\r\n\t */\n\t\n\t/**\r\n\t * @typedef {TreeElement[]} Tree\r\n\t * @public\r\n\t */\n\t\n\t/**\r\n\t * @typedef {Object} TreeElement\r\n\t * @public\r\n\t * @property {Key} key - Tree element key.\r\n\t * @property {*} value - Tree element value.\r\n\t * @description {@link Tree} element.\r\n\t */\n\t\n\t/**\r\n\t * @callback DeepIterationCallback\r\n\t * @public\r\n\t * @param {*} value - Current iteration value.\r\n\t * @param {String|Number} key - Current iteration key/index.\r\n\t * @param {*} object - Iteration object.\r\n\t * @param {Tree} tree - Tree of { key, value } elements.\r\n\t */\n\t\n\t/**\r\n\t * @callback DeepReduceCallback\r\n\t * @public\r\n\t * @param {*} previousValue - Previous value.\r\n\t * @param {*} value - Current iteration value.\r\n\t * @param {String|Number} key - Current iteration key/index.\r\n\t * @param {*} object - Iteration object.\r\n\t * @param {Tree} tree - Tree of { key, value } elements.\r\n\t */\n\t\n\t/**\r\n\t * @callback IterationCallback\r\n\t * @public\r\n\t * @param {*} value - Current iteration value.\r\n\t * @param {String|Number} key - Current iteration key/index.\r\n\t * @param {*} object - Iteration object.\r\n\t */\n\t\n\t/**\r\n\t * @callback JSONCallback\r\n\t * @public\r\n\t * @param {String|null} key - Current value.\r\n\t * @param {*} value - Current key.\r\n\t * @param {Object} object - Iteration object.\r\n\t */\n\t\n\t/**\r\n\t * @callback ObjectCallback\r\n\t * @public\r\n\t * @param {Object} newObject - The new object.\r\n\t * @param {*} value - Current iteration value.\r\n\t * @param {String|Number} key - Current iteration key/index.\r\n\t * @param {*} object - Iteration object.\r\n\t */\n\t\n\t/**\r\n\t * @callback ReduceCallback\r\n\t * @public\r\n\t * @param {*} previousValue - Previous value.\r\n\t * @param {*} value - Current iteration value.\r\n\t * @param {String|Number} key - Current iteration key/index.\r\n\t * @param {*} object - Iteration object.\r\n\t */\n\t\n\t/**\r\n\t * @callback SuperMethod\r\n\t * @public\r\n\t * @this {DWrap}\r\n\t */\n\t\n\tvar cloneSwitcher = (0, _Switcher.switcher)('call', function (object) {\n\t  return object;\n\t}).case(function (object) {\n\t  return new Super(object) === object;\n\t}, function (object) {\n\t  return new (object.proto().constructor(object))();\n\t}).case(_helpers.isElement, function (object, deep) {\n\t  return object.clone(deep);\n\t}).case(_helpers.isDate, function (object) {\n\t  return new Date(object);\n\t}).case(_helpers.isRegExp, function (object) {\n\t  return new RegExp(object.source, object.flags);\n\t}).case(_helpers.isArray, function () {\n\t  return [];\n\t}).case(_helpers.isPlainObject, function () {\n\t  return {};\n\t});\n\t\n\t/**\r\n\t * @class Super\r\n\t * @public\r\n\t * @param {*} [object] - An object to wrap.\r\n\t * @returns {DWrap} Instance of Super.\r\n\t * @description Wrap of any value. And there is no way to create a nested wrap.\r\n\t *\r\n\t * @example\r\n\t * new Super({}); // Super\r\n\t */\n\t\n\tvar Super = function () {\n\t  function Super(object) {\n\t    _classCallCheck(this, Super);\n\t\n\t    if (object instanceof Super) {\n\t      return object;\n\t    }\n\t\n\t    /**\r\n\t     * @member Super#$\r\n\t     * @type {*}\r\n\t     * @public\r\n\t     * @description Wrapped object.\r\n\t     */\n\t    Object.defineProperty(this, '$', { value: object });\n\t  }\n\t\n\t  /**\r\n\t   * @method Super.addStaticProperties\r\n\t   * @public\r\n\t   * @param {String|Object} property - Either a string of a property or an object\r\n\t   * with properties keys and values values.\r\n\t   * @param {Object} [value] - If a property parameter is a string this has to be a property value.\r\n\t   * @returns {this} Returns this.\r\n\t   * @description Sets static properties for DWrap constructors.\r\n\t   *\r\n\t   * @example\r\n\t   * Super.addStaticProperties('cool', 42);\r\n\t   * Super.addStaticProperties('superCool', 42*42);\r\n\t   */\n\t\n\t\n\t  _createClass(Super, [{\n\t    key: 'assign',\n\t\n\t\n\t    /**\r\n\t     * @method Super#assign\r\n\t     * @public\r\n\t     * @param {...*} objects - Objects to be assigned to the object.\r\n\t     * @returns {DWrap} Returns this.\r\n\t     * @description Synonym for\r\n\t     * [Object.assign]\r\n\t     * {@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2 }).assign({ a: 3 }, { c: 3, d: 4 }, { d: 5 }).$; // { a: 3, b: 2, c: 3, d: 5 }\r\n\t     */\n\t    value: function assign() {\n\t      for (var _len = arguments.length, objects = Array(_len), _key = 0; _key < _len; _key++) {\n\t        objects[_key] = arguments[_key];\n\t      }\n\t\n\t      var object = this.$;\n\t\n\t      (0, _helpers.iterate)(object && arguments, function (o) {\n\t        (0, _helpers.iterate)(new Super(o).$, function (value, key) {\n\t          object[key] = value;\n\t        });\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#average\r\n\t     * @public\r\n\t     * @param {IterationCallback} [callback = null] - Callback that is passed to {@link Super#sum}.\r\n\t     * @returns {Number} Average value.\r\n\t     * @description Synonym for object.sum(callback) / object.count.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).average();                         // 2\r\n\t     * new Super({ a: 1, b: 2, c: 5 }).average((value) => value * value); // 10\r\n\t     */\n\t\n\t  }, {\n\t    key: 'average',\n\t    value: function average() {\n\t      var callback = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t\n\t      (0, _helpers.validate)([callback], ['function||!'], 'Super#average');\n\t\n\t      return this.sum(callback) / this.count;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#call\r\n\t     * @public\r\n\t     * @param {SuperMethod} func - Function to be called with this context.\r\n\t     * @param {...*} args - Arguments to be called with.\r\n\t     * @returns {*} Return of function call.\r\n\t     * @description Synonym for func.call(DObject, ...args);\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1 }).call(function (b, c) {\r\n\t     *   return this.a + b + c;\r\n\t     * }, 2, 3); // 6\r\n\t     */\n\t\n\t  }, {\n\t    key: 'call',\n\t    value: function call(func) {\n\t      (0, _helpers.validate)([func], ['function'], 'Super#call');\n\t\n\t      return func.apply(this, [].slice.call(arguments, 1));\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#clone\r\n\t     * @returns {DWrap} New object.\r\n\t     * @description Method assigns properties of the object to an empty one and returns the new one.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: { c: 2 } }).clone().$; // { a: 1, b: { c: 2 } }\r\n\t     */\n\t\n\t  }, {\n\t    key: 'clone',\n\t    value: function clone() {\n\t      var object = this.$;\n\t      var clone = cloneSwitcher(object, [object, false]);\n\t\n\t      if (clone !== object) {\n\t        (0, _helpers.iterate)(object, function (value, key) {\n\t          clone[key] = value;\n\t        });\n\t      }\n\t\n\t      return new this.constructor(clone);\n\t    }\n\t\n\t    /**\r\n\t     * @member Super#count\r\n\t     * @type {Number}\r\n\t     * @public\r\n\t     * @readonly\r\n\t     * @description Returns number of own enumerable keys of the object.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2 }).count; // 2\r\n\t     */\n\t\n\t  }, {\n\t    key: 'create',\n\t\n\t\n\t    /**\r\n\t     * @method Super#create\r\n\t     * @public\r\n\t     * @param {Object} [descriptors] - Descriptors passed to Object.create.\r\n\t     * @returns {DWrap} New instance of D-Wrap.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/create\r\n\t     * @description Synonym for\r\n\t     * [Object.create]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/create}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({}).create({\r\n\t     *   a: {\r\n\t     *     value: 1,\r\n\t     *     enumerable: false,\r\n\t     *     writable: true,\r\n\t     *     configurable: false\r\n\t     *   }\r\n\t     * }).$; // { a: 1 }\r\n\t     */\n\t    value: function create(descriptors) {\n\t      return (0, _D2.default)((0, _helpers.isPrimitive)(this.$) ? undefined : Object.create(this.$, descriptors));\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#deepAssign\r\n\t     * @public\r\n\t     * @param {...*} objects - Objects to be assigned to the object.\r\n\t     * @returns {DWrap} Returns this.\r\n\t     * @description Deep analogue of {@link Super#assign}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1 }).deepAssign(\r\n\t     *   {\r\n\t     *     b: {\r\n\t     *       c: 2\r\n\t     *     }\r\n\t     *   },\r\n\t     *   {\r\n\t     *     a: {\r\n\t     *       b: 1\r\n\t     *     }\r\n\t     *   },\r\n\t     *   {\r\n\t     *     a: {\r\n\t     *       c: {\r\n\t     *         d: 1\r\n\t     *       }\r\n\t     *     },\r\n\t     *     b: 2\r\n\t     *   },\r\n\t     *   null\r\n\t     * });\r\n\t     * // {\r\n\t     * //   a: {\r\n\t     * //     b: 1,\r\n\t     * //     c: {\r\n\t     * //       d: 1\r\n\t     * //     }\r\n\t     * //   },\r\n\t     * //   b: 2,\r\n\t     * // }\r\n\t     */\n\t\n\t  }, {\n\t    key: 'deepAssign',\n\t    value: function deepAssign() {\n\t      for (var _len2 = arguments.length, objects = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t        objects[_key2] = arguments[_key2];\n\t      }\n\t\n\t      var object = this.$;\n\t\n\t      if ((0, _helpers.isPrimitive)(object)) {\n\t        return this;\n\t      }\n\t\n\t      (0, _helpers.iterate)(arguments, function (o) {\n\t        _deepAssign(object, o);\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#deepClone\r\n\t     * @public\r\n\t     * @returns {DWrap} New instance of DWrap.\r\n\t     * @description Deep cloning method. Clones plain objects, arrays, regular expressions and elements, the rest stays the same.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: [2, 3], c: { d: 4 } }).deepClone().$;\r\n\t     * // {\r\n\t     * //   a: 1,\r\n\t     * //   b: [2, 3],\r\n\t     * //   c: { d: 4 }\r\n\t     * // }\r\n\t     */\n\t\n\t  }, {\n\t    key: 'deepClone',\n\t    value: function deepClone() {\n\t      return new this.constructor(_deepClone(this.$));\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#deepEquals\r\n\t     * @public\r\n\t     * @param {*} [object] - Object to compare to.\r\n\t     * @returns {Boolean} - If the objects are deep equal or not.\r\n\t     * @description Method for deep comparison of two objects.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1 }).deepEquals({ a: '1' }); // true\r\n\t     * new Super(/1/).deepEquals(/1/);             // true\r\n\t     */\n\t\n\t  }, {\n\t    key: 'deepEquals',\n\t    value: function deepEquals() {\n\t      var object = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t\n\t      return deepEqual(this.$, object, false);\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#deepEvery\r\n\t     * @public\r\n\t     * @param {DeepIterationCallback} [callback = Boolean] - Called on each iteration.\r\n\t     * If returns truthy iteration goes on and if falsey it stops.\r\n\t     * @param {Number} [n = Infinity] - Iteration depth.\r\n\t     * @returns {Boolean} If all the callback calls returned truthy value.\r\n\t     * @description Returns boolean if all the callback calls returned truthy value.\r\n\t     * Otherwise false. Deep analogue of {@link Super#every}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: { c: 2, d: 3 } }).deepEvery((value) => value < 4); // true\r\n\t     * new Super({ a: {}, b: {}, c: {} }).deepEvery(() => false);              // true\r\n\t     */\n\t\n\t  }, {\n\t    key: 'deepEvery',\n\t    value: function deepEvery(callback, n) {\n\t      if (arguments.length === 1 && !(0, _helpers.isFunction)(callback)) {\n\t        n = callback;\n\t        callback = Boolean;\n\t      } else if (arguments.length === 1) {\n\t        n = Infinity;\n\t      } else if (!arguments.length) {\n\t        n = Infinity;\n\t        callback = Boolean;\n\t      }\n\t\n\t      (0, _helpers.validate)([callback, n], ['function', ['numberLike', '>0']], 'Super#deepEvery');\n\t\n\t      n = Number(n);\n\t\n\t      return _deepEvery(this.$, callback, n, [{ key: null, value: this.$ }]);\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#deepFilter\r\n\t     * @public\r\n\t     * @param {DeepIterationCallback} [callback = Boolean] - Called on each iteration.\r\n\t     * If returns truthy the element is included and if falsey it's excluded.\r\n\t     * @param {Number} [n = Infinity] - Iteration depth.\r\n\t     * @returns {DWrap} New D-Wrap of filtered object.\r\n\t     * @description Returns filtered by the callback object. Deep analogue of {@link Super#filter}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: { c: 2, d: 3 } }).deepFilter((value) => value%2).$;     // { a: 1, b: { d: 3 } }\r\n\t     * new Super({ a: 1, b: { c: 2, d: 3 } }).deepFilter((value) => value === 1).$; // { a: 1 }\r\n\t     * new Super({ a: 1, b: { c: 2, d: 3 } }).deepFilter((value) => value > 3).$;   // {}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'deepFilter',\n\t    value: function deepFilter(callback, n) {\n\t      if (arguments.length === 1 && !(0, _helpers.isFunction)(callback)) {\n\t        n = callback;\n\t        callback = Boolean;\n\t      } else if (arguments.length === 1) {\n\t        n = Infinity;\n\t      } else if (!arguments.length) {\n\t        n = Infinity;\n\t        callback = Boolean;\n\t      }\n\t\n\t      (0, _helpers.validate)([callback, n], ['function', ['numberLike', '>0']], 'Super#deepFilter');\n\t\n\t      var filtered = _deepFilter(this.$, callback, n, [{ key: null, value: this.$ }]);\n\t\n\t      return (0, _D2.default)((0, _helpers.isNullOrUndefined)(filtered) ? filtered : filtered || {});\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#deepFind\r\n\t     * @public\r\n\t     * @param {DeepIterationCallback} [callback = Boolean] - Called on each iteration.\r\n\t     * If returns truthy iteration stops and if falsey it continues.\r\n\t     * @param {Number} [n = Infinity] - Iteration depth.\r\n\t     * @returns {Tree|null} Tree of { key, value } if something found and null if not.\r\n\t     * @description Returns tree of the elements if something found and null if nothing found.\r\n\t     * Deep analogue of {@link Super#find}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: { c: 2, d: 3 } }).deepFind((value) => value === 2);\r\n\t     * // [\r\n\t     * //   { key: 'c', value: 2 },\r\n\t     * //   { key: 'b', value: { c: 2, d: 3 } },\r\n\t     * //   { key: null, value: <initial object> }\r\n\t     * // ]\r\n\t     */\n\t\n\t  }, {\n\t    key: 'deepFind',\n\t    value: function deepFind(callback, n) {\n\t      if (arguments.length === 1 && !(0, _helpers.isFunction)(callback)) {\n\t        n = callback;\n\t        callback = Boolean;\n\t      } else if (arguments.length === 1) {\n\t        n = Infinity;\n\t      } else if (!arguments.length) {\n\t        n = Infinity;\n\t        callback = Boolean;\n\t      }\n\t\n\t      (0, _helpers.validate)([callback, n], ['function', ['numberLike', '>0']], 'Super#deepFind');\n\t\n\t      return _deepFind(this.$, callback, n, [{ key: null, value: this.$ }]);\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#deepForEach\r\n\t     * @public\r\n\t     * @param {DeepIterationCallback} callback - Called on each iteration.\r\n\t     * @param {Number} [n = Infinity] - Iteration depth.\r\n\t     * @returns {DWrap} Returns this.\r\n\t     * @description Method for iterating over any object. Deep analogue of {@link Super#forEach}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: { c: 2, d: 3 } }).deepForEach((value, key, object) => object[key] = value * value).$;\r\n\t     * // { a: 1, b: { c: 4, d: 9 } }\r\n\t     */\n\t\n\t  }, {\n\t    key: 'deepForEach',\n\t    value: function deepForEach(callback) {\n\t      var n = arguments.length <= 1 || arguments[1] === undefined ? Infinity : arguments[1];\n\t\n\t      (0, _helpers.validate)([callback, n], ['function', ['numberLike', '>0']], 'Super#deepForEach');\n\t\n\t      n = Number(n);\n\t\n\t      _deepForEach(this.$, callback, n, [{ key: null, value: this.$ }]);\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#deepFreeze\r\n\t     * @public\r\n\t     * @returns {DWrap} Returns this.\r\n\t     * @description Deep analogue of {@link Super#freeze}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: { c: 2, d: 3 } }).deepFreeze(); // Super\r\n\t     */\n\t\n\t  }, {\n\t    key: 'deepFreeze',\n\t    value: function deepFreeze() {\n\t      _deepFreeze(this.$);\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#deepMap\r\n\t     * @public\r\n\t     * @param {DeepIterationCallback} callback - Called on each iteration.\r\n\t     * Return value is used for creating a new object.\r\n\t     * @param {Number} [n = Infinity] - Iteration depth.\r\n\t     * @returns {DWrap} D-Wrap of the new object.\r\n\t     * @description Returns a wrap of a new object using the callback. Deep analogue of {@link Super#map}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: { c: 2, d: 3 } }).deepMap((value) => value * value).$;\r\n\t     * // { a: 1, b: { c: 4, d: 9 } }\r\n\t     */\n\t\n\t  }, {\n\t    key: 'deepMap',\n\t    value: function deepMap(callback) {\n\t      var n = arguments.length <= 1 || arguments[1] === undefined ? Infinity : arguments[1];\n\t\n\t      (0, _helpers.validate)([callback, n], ['function', ['numberLike', '>0']], 'Super#deepMap');\n\t\n\t      n = Number(n);\n\t\n\t      return (0, _D2.default)(_deepMap(this.$, callback, n, [{ key: null, value: this.$ }]));\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#deepReduce\r\n\t     * @public\r\n\t     * @param {DeepReduceCallback} callback - Called on each iteration.\r\n\t     * Return value is passed to the next callback call.\r\n\t     * @param {Number} [n = Infinity] - Iteration depth.\r\n\t     * @param {*} [IV = <first value>|undefined] - Initial value.\r\n\t     * @returns {*} Modified IV.\r\n\t     * @description Returns modified IV. Deep analogue of {@link Super#reduce}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: { c: 2, d: 3 } }).deepReduce((sum, value) => sum + value * value, Infinity, 0); // 14\r\n\t     */\n\t\n\t  }, {\n\t    key: 'deepReduce',\n\t    value: function deepReduce(callback) {\n\t      var n = arguments.length <= 1 || arguments[1] === undefined ? Infinity : arguments[1];\n\t      var IV = arguments[2];\n\t\n\t      (0, _helpers.validate)([callback, n], ['function', ['numberLike', '>0']], 'Super#deepReduce');\n\t\n\t      n = Number(n);\n\t\n\t      var object = this.$;\n\t      var tree = [{ key: null, value: this.$ }];\n\t\n\t      if (arguments.length < 3) {\n\t        return _deepReduce(object, callback, n, false, undefined, tree).IV;\n\t      }\n\t\n\t      return _deepReduce(object, callback, n, false, { IV: IV }, tree).IV;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#deepSome\r\n\t     * @public\r\n\t     * @param {DeepIterationCallback} [callback = Boolean] - Called on each iteration.\r\n\t     * If returns truthy iteration stops and if falsey it continues.\r\n\t     * @param {Number} [n = Infinity] - Iteration depth.\r\n\t     * @returns {Boolean} If all the callback calls returned truthy value.\r\n\t     * @description Returns true if some of the callback calls returned truthy value.\r\n\t     * Otherwise false. Deep analogue of {@link Super#some}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: { c: 2, d: 3 } }).deepSome((value) => value > 4); // false\r\n\t     * new Super({ a: {}, b: {}, c: {} }).deepSome(() => true);               // false\r\n\t     */\n\t\n\t  }, {\n\t    key: 'deepSome',\n\t    value: function deepSome(callback, n) {\n\t      if (arguments.length === 1 && !(0, _helpers.isFunction)(callback)) {\n\t        n = callback;\n\t        callback = Boolean;\n\t      } else if (arguments.length === 1) {\n\t        n = Infinity;\n\t      } else if (!arguments.length) {\n\t        n = Infinity;\n\t        callback = Boolean;\n\t      }\n\t\n\t      (0, _helpers.validate)([callback, n], ['function', ['numberLike', '>0']], 'Super#deepSome');\n\t\n\t      n = Number(n);\n\t\n\t      return _deepSome(this.$, callback, n, [{ key: null, value: this.$ }]);\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#deepStrictEquals\r\n\t     * @public\r\n\t     * @param {*} [object] - Object to compare to.\r\n\t     * @returns {Boolean} - If the objects are deep strict equal or not.\r\n\t     * @description Method for deep strict comparison of two objects.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1 }).deepStrictEquals({ a: '1' }); // false\r\n\t     * new Super(/1/).deepStrictEquals(/1/);             // true\r\n\t     */\n\t\n\t  }, {\n\t    key: 'deepStrictEquals',\n\t    value: function deepStrictEquals() {\n\t      var object = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t\n\t      return deepEqual(this.$, object, true);\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#define\r\n\t     * @param {String|Object} property - Either a string of a property or a descriptors object.\r\n\t     * @param {Object} [descriptor] - If a property parameter is a string this has to be a property descriptor.\r\n\t     * @returns {DWrap} Returns this.\r\n\t     * @description Synonym for both\r\n\t     * [Object.defineProperty]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty}\r\n\t     * and\r\n\t     * [Object.defineProperties]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({}).define('a', {\r\n\t     *   value: 1,\r\n\t     *   enumerable: false,\r\n\t     *   writable: true,\r\n\t     *   configurable: false\r\n\t     * }).$; // { a: 1 }\r\n\t     * new Super({}).define({\r\n\t     *   a: {\r\n\t     *     value: 1,\r\n\t     *     enumerable: false,\r\n\t     *     writable: true,\r\n\t     *     configurable: false\r\n\t     *   }\r\n\t     * }).$; // { a: 1 }\r\n\t     */\n\t\n\t  }, {\n\t    key: 'define',\n\t    value: function define(property, descriptor) {\n\t      if (arguments.length >= 2) {\n\t        property = _defineProperty({}, property, descriptor);\n\t      }\n\t\n\t      property = new Super(property).$;\n\t\n\t      if ((0, _helpers.isObject)(this.$)) {\n\t        Object.defineProperties(this.$, property);\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#delete\r\n\t     * @public\r\n\t     * @param {...String} props - List of properties to delete.\r\n\t     * @returns {DWrap} Returns this.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/delete\r\n\t     * @description Synonym for multiple\r\n\t     * [\"delete\" operator]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/delete}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).delete('c', 'a').$; // { b: 2 }\r\n\t     */\n\t\n\t  }, {\n\t    key: 'delete',\n\t    value: function _delete() {\n\t      var object = this.$;\n\t\n\t      for (var _len3 = arguments.length, props = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n\t        props[_key3] = arguments[_key3];\n\t      }\n\t\n\t      (0, _helpers.iterate)(object && props, function (property) {\n\t        delete object[property];\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#equals\r\n\t     * @public\r\n\t     * @param {*} [object] - Object to compare.\r\n\t     * @returns {Boolean} If the objects are equal or not.\r\n\t     * @description Returns true if objects are equal using '==' operator and false if not. NaNs are considered to be equal.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super(3).equals('3');   // true\r\n\t     * new Super(NaN).equals(NaN); // true\r\n\t     */\n\t\n\t  }, {\n\t    key: 'equals',\n\t    value: function equals(object) {\n\t      var o = this.$;\n\t\n\t      object = new Super(object).$;\n\t\n\t      /* eslint eqeqeq: 0 */\n\t      return o == object || (0, _helpers.isNaN)(o) && (0, _helpers.isNaN)(object);\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#every\r\n\t     * @public\r\n\t     * @param {IterationCallback} [callback = Boolean] - Called on each iteration.\r\n\t     * If returns truthy iteration goes on and if falsey it stops.\r\n\t     * @returns {Boolean} If all the callback calls returned truthy value.\r\n\t     * @description Returns boolean if all the callback calls returned truthy value.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).every((value) => value < 4); // true\r\n\t     * new Super({}).every(() => false);                            // true\r\n\t     */\n\t\n\t  }, {\n\t    key: 'every',\n\t    value: function every() {\n\t      var callback = arguments.length <= 0 || arguments[0] === undefined ? Boolean : arguments[0];\n\t\n\t      (0, _helpers.validate)([callback], ['function'], 'Super#every');\n\t\n\t      return (0, _helpers.iterate)(this.$, function (value, key, object) {\n\t        if (!callback(value, key, object)) {\n\t          return false;\n\t        }\n\t      }) !== false;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#filter\r\n\t     * @public\r\n\t     * @param {IterationCallback} [callback = Boolean] - Called on each iteration.\r\n\t     * If returns truthy the element is included and if falsey it's excluded.\r\n\t     * @returns {DWrap} New D-Wrap of filtered object.\r\n\t     * @description Returns filtered by the callback object.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).filter((value) => value%2).$; // { a: 1, c: 3 }\r\n\t     * new Super(null).filter((value) => value%2).$;                 // null\r\n\t     */\n\t\n\t  }, {\n\t    key: 'filter',\n\t    value: function filter() {\n\t      var callback = arguments.length <= 0 || arguments[0] === undefined ? Boolean : arguments[0];\n\t\n\t      (0, _helpers.validate)([callback], ['function'], 'Super#filter');\n\t\n\t      var object = this.$;\n\t      var array = (0, _helpers.isArrayLike)(object);\n\t\n\t      /* eslint no-nested-ternary: 0 */\n\t      var o = array ? [] : (0, _helpers.isNullOrUndefined)(object) ? object : {};\n\t\n\t      (0, _helpers.iterate)(object, function (value, key) {\n\t        if (callback(value, key, object)) {\n\t          if (array) {\n\t            o.push(value);\n\t          } else {\n\t            o[key] = value;\n\t          }\n\t        }\n\t      });\n\t\n\t      return (0, _D2.default)(o);\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#find\r\n\t     * @public\r\n\t     * @param {IterationCallback} [callback = Boolean] - Called on each iteration.\r\n\t     * If returns truthy iteration stops and if falsey it continues.\r\n\t     * @returns {{ key: Key, value: * }|null} { key, value } if found and null if not.\r\n\t     * @description Returns found { key, value } if something found and null if nothing found.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).find((value) => value === 2); // { key: 'b', value: 2 }\r\n\t     * new Super([1, 2, 3]).find((value) => value === 2);            // { key: 1, value: 2 }\r\n\t     */\n\t\n\t  }, {\n\t    key: 'find',\n\t    value: function find(callback) {\n\t      (0, _helpers.validate)([callback], ['function'], 'Super#find');\n\t\n\t      return (0, _helpers.iterate)(this.$, function (value, key, object) {\n\t        if (callback(value, key, object)) {\n\t          return { key: key, value: value };\n\t        }\n\t      }) || null;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#forEach\r\n\t     * @public\r\n\t     * @param {IterationCallback} callback - Called on each iteration.\r\n\t     * @returns {DWrap} Returns this.\r\n\t     * @description Method for iterating over any object.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).forEach((value, key, object) => {\r\n\t     *   object[key] = value * value;\r\n\t     * }).$; // { a: 1, b: { c: 4, d: 5 } }\r\n\t     */\n\t\n\t  }, {\n\t    key: 'forEach',\n\t    value: function forEach(callback) {\n\t      (0, _helpers.validate)([callback], ['function'], 'Super#forEach');\n\t\n\t      (0, _helpers.iterate)(this.$, function (value, key, object) {\n\t        callback(value, key, object);\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#freeze\r\n\t     * @public\r\n\t     * @returns {DWrap} Returns this.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\r\n\t     * @description Synonym for\r\n\t     * [Object.freeze]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).freeze(); // Super\r\n\t     */\n\t\n\t  }, {\n\t    key: 'freeze',\n\t    value: function freeze() {\n\t      Object.freeze(this.$);\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#get\r\n\t     * @public\r\n\t     * @param {String|Object.<String, Function>} property - Either a string of a property or a getters object.\r\n\t     * @param {Function} [getter] - If a property parameter is a string this has to be a getter function.\r\n\t     * @returns {DWrap} Returns this.\r\n\t     * @description Method for defining getters.\r\n\t     *\r\n\t     * @example\r\n\t     * const object1 = new Super({}).get('a', () => 1).$;\r\n\t     * object1.a; // 1\r\n\t     *\r\n\t     * const object2 = new Super({}).get({\r\n\t     *   a: () => 2\r\n\t     * }).$;\r\n\t     * object2.a; // 2\r\n\t     */\n\t\n\t  }, {\n\t    key: 'get',\n\t    value: function get(property, getter) {\n\t      if (arguments.length >= 2) {\n\t        property = _defineProperty({}, property, getter);\n\t      }\n\t\n\t      var object = this.$;\n\t\n\t      (0, _helpers.iterate)((0, _helpers.isObject)(object) && new Super(property).$, function (getter, property) {\n\t        Object.defineProperty(object, property, { get: getter });\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#has\r\n\t     * @public\r\n\t     * @param {String|*} key - Property to check.\r\n\t     * @returns {Boolean} Returns true if the object has the key and false if not.\r\n\t     * @see https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/in\r\n\t     * @description Synonym for\r\n\t     * [\"in\" operator]{@link https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/in}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).has('b'); // true\r\n\t     */\n\t\n\t  }, {\n\t    key: 'has',\n\t    value: function has(key) {\n\t      var object = this.$;\n\t\n\t      if (!(0, _helpers.isObject)(object)) {\n\t        return false;\n\t      }\n\t\n\t      return key in object;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#hasOwn\r\n\t     * @public\r\n\t     * @param {String|*} key - Property to check.\r\n\t     * @returns {Boolean} Returns true if the object has its own key and false if not.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\r\n\t     * @description Synonym for\r\n\t     * [Object#hasOwnProperty]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).hasOwn('b');              // true\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).hasOwn('hasOwnProperty'); // false\r\n\t     */\n\t\n\t  }, {\n\t    key: 'hasOwn',\n\t    value: function hasOwn(key) {\n\t      var object = this.$;\n\t\n\t      if (!(0, _helpers.isObject)(object)) {\n\t        return false;\n\t      }\n\t\n\t      return {}.hasOwnProperty.call(object, key);\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#instanceof\r\n\t     * @public\r\n\t     * @param {Function} constructor - Constructor to check.\r\n\t     * @returns {Boolean} If the object is an instance of constructor.\r\n\t     * @see https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/instanceof\r\n\t     * @description Synonym for\r\n\t     * [\"instanceof\" operator]{@link https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/instanceof}.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'instanceof',\n\t    value: function _instanceof(constructor) {\n\t      return this.$ instanceof constructor;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#isFrozen\r\n\t     * @public\r\n\t     * @returns {Boolean} If the object is frozen.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\r\n\t     * @description Synonym for\r\n\t     * [Object.isFrozen]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({}).freeze().isFrozen(); // true\r\n\t     */\n\t\n\t  }, {\n\t    key: 'isFrozen',\n\t    value: function isFrozen() {\n\t      return Object.isFrozen(this.$);\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#json\r\n\t     * @public\r\n\t     * @param {JSONCallback|String[]} [replacer] - See the link.\r\n\t     * @param {String|Number} [space] - See the link.\r\n\t     * @returns {String} JSON string.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\r\n\t     * @description Synonym for\r\n\t     * [JSON.stringify]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).json(); // '{\"a\":1,\"b\":2,\"c\":3}'\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).json('    ');\r\n\t     * // {\r\n\t     * //     \"a\": 1,\r\n\t     * //     \"b\": 2,\r\n\t     * //     \"c\": 3\r\n\t     * // }\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).json((key, value) => {\r\n\t     *   if (typeof value === 'number') {\r\n\t     *     return value%2 ? key + value0 : undefined;\r\n\t     *   }\r\n\t     *\r\n\t     *   return value;\r\n\t     * }, 2);\r\n\t     * // {\r\n\t     * //   \"a\": \"a1\",\r\n\t     * //   \"c\": \"c3\"\r\n\t     * // }\r\n\t     */\n\t\n\t  }, {\n\t    key: 'json',\n\t    value: function json(replacer, space) {\n\t      if (arguments.length === 1 && !(0, _helpers.isFunction)(replacer) && !(0, _helpers.isArray)(replacer)) {\n\t        [].unshift.call(arguments, null);\n\t      }\n\t\n\t      [].unshift.call(arguments, this.$);\n\t\n\t      return JSON.stringify.apply(JSON, arguments);\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#keyOf\r\n\t     * @public\r\n\t     * @param {*} value - Value to find.\r\n\t     * @returns {String|Number|null} A key or an index if found and null if not.\r\n\t     * @description Method for finding equal to the argument value in the object. NaNs are considered to be equal.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).keyOf(2);   // 'b'\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).keyOf('2'); // 'b'\r\n\t     */\n\t\n\t  }, {\n\t    key: 'keyOf',\n\t    value: function keyOf(value) {\n\t      var key = (0, _helpers.iterate)(this.$, function (val, key) {\n\t        if (val == value || (0, _helpers.isNaN)(val) && (0, _helpers.isNaN)(value)) {\n\t          return key;\n\t        }\n\t      });\n\t\n\t      return (0, _helpers.isUndefined)(key) ? null : key;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#keyOfStrict\r\n\t     * @public\r\n\t     * @param {*} value - Value to find.\r\n\t     * @returns {String|Number|null} A key or an index if found and null if not.\r\n\t     * @description Method for finding strict equal to the argument value in the object. NaNs are considered to be equal.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).keyOfStrict(2);   // 'b'\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).keyOfStrict('2'); // 'b'\r\n\t     */\n\t\n\t  }, {\n\t    key: 'keyOfStrict',\n\t    value: function keyOfStrict(value) {\n\t      var key = (0, _helpers.iterate)(this.$, function (val, key) {\n\t        if (val === value || (0, _helpers.isNaN)(val) && (0, _helpers.isNaN)(value)) {\n\t          return key;\n\t        }\n\t      });\n\t\n\t      return (0, _helpers.isUndefined)(key) ? null : key;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#keys\r\n\t     * @public\r\n\t     * @returns {DWrap} A wrap of the keys array.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\r\n\t     * @description Synonym for\r\n\t     * [Object.keys]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/keys}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).keys().$; // ['a', 'b', 'c']\r\n\t     * new Super(null).keys().$;                 // []\r\n\t     */\n\t\n\t  }, {\n\t    key: 'keys',\n\t    value: function keys() {\n\t      var object = this.$;\n\t\n\t      return (0, _D2.default)((0, _helpers.isObject)(object) ? Object.keys(object) : []);\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#map\r\n\t     * @public\r\n\t     * @param {IterationCallback} callback - Called on each iteration.\r\n\t     * Return value is used for creating a new object.\r\n\t     * @returns {DWrap} D-Wrap of the new object.\r\n\t     * @description Returns a wrap of a new object using the callback.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).map((value) => value * 2).$; // { a: 2, b: 4, c: 6 }\r\n\t     * new Super(null).map((value) => value * 2).$;                 // null\r\n\t     */\n\t\n\t  }, {\n\t    key: 'map',\n\t    value: function map(callback) {\n\t      (0, _helpers.validate)([callback], ['function'], 'Super#map');\n\t\n\t      var object = this.$;\n\t      var o = (0, _helpers.isArrayLike)(object) ? [] : (0, _helpers.isNull)(object) ? null : {};\n\t\n\t      (0, _helpers.iterate)(object, function (value, key) {\n\t        o[key] = callback(value, key, object);\n\t      });\n\t\n\t      return (0, _D2.default)(o);\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#max\r\n\t     * @public\r\n\t     * @param {IterationCallback} callback - Called on each iteration.\r\n\t     * Return value is used for comparison with the previous max value.\r\n\t     * @returns {{key: Key, value: Number}} Object with max value and key of the max value.\r\n\t     * @description Method for finding max value in the object.\r\n\t     * If no callback is present comparison is between values of the object.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).max();                     // { key: 'c', value: 3 }\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).max((value) => 4 - value); // { key: 'a', value: 3 }\r\n\t     * new Super({ a: 'a', b: 'b', c: 'c' }).max();               // { key: null, value: -Infinity }\r\n\t     */\n\t\n\t  }, {\n\t    key: 'max',\n\t    value: function max() {\n\t      var callback = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t\n\t      (0, _helpers.validate)([callback], ['function||!'], 'Super#max');\n\t\n\t      return this.object(function (max, value, key, object) {\n\t        var val = Number(callback ? callback(value, key, object) : value);\n\t\n\t        if (val > max.value) {\n\t          max.key = key;\n\t          max.value = val;\n\t        }\n\t      }, { key: null, value: -Infinity }).$;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#min\r\n\t     * @public\r\n\t     * @param {IterationCallback} callback - Called on each iteration.\r\n\t     * Return value is used for comparison with the previous min value.\r\n\t     * @returns {{key: Key, value: Number}} Object with min value and key of the min value.\r\n\t     * @description Method for finding min value in the object.\r\n\t     * If no callback is present comparison is between values of the object.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).min();                     // { key: 'a', value: 1 }\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).min((value) => 4 - value); // { key: 'c', value: 1 }\r\n\t     * new Super({ a: 'a', b: 'b', c: 'c' }).min();               // { key: null, value: Infinity }\r\n\t     */\n\t\n\t  }, {\n\t    key: 'min',\n\t    value: function min() {\n\t      var callback = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t\n\t      (0, _helpers.validate)([callback], ['function||!'], 'Super#min');\n\t\n\t      return this.object(function (min, value, key, object) {\n\t        var val = Number(callback ? callback(value, key, object) : value);\n\t\n\t        if (val < min.value) {\n\t          min.key = key;\n\t          min.value = val;\n\t        }\n\t      }, { key: null, value: Infinity }).$;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#object\r\n\t     * @public\r\n\t     * @param {ObjectCallback} callback - Called on each iteration.\r\n\t     * @param {Object|*} [object = {}] - Object that is passed to the callback.\r\n\t     * @returns {DWrap} Wrap of the new object.\r\n\t     * @description Type of {@link Super#reduce}.\r\n\t     * The object is passed as an argument into the callback. The output is this object.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2 }).object((object, value, key) => {\r\n\t     *   object[key] = value;\r\n\t     *   object[key + key] = value * 2;\r\n\t     * }).$; // { a: 1, aa: 2, b: 2, bb: 4 }\r\n\t     */\n\t\n\t  }, {\n\t    key: 'object',\n\t    value: function object(callback) {\n\t      var _object = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      (0, _helpers.validate)([callback], ['function'], 'Super#object');\n\t\n\t      (0, _helpers.iterate)(this.$, function (value, key, obj) {\n\t        callback(_object, value, key, obj);\n\t      });\n\t\n\t      return (0, _D2.default)(_object);\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#prop\r\n\t     * @public\r\n\t     * @param {String|Object.<String, *>} property - Either a string of a property or an assigned object.\r\n\t     * @param {*} [value] - If a property parameter is a string\r\n\t     * this has to be an assigned value if it's present.\r\n\t     * @returns {DWrap|*} Returns this if it's a setter or a value if getter.\r\n\t     * @description Method for getting and setting properties.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).prop('a');              // 1\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).prop('a', 7).$;         // { a: 7, b: 2, c: 3 }\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).prop({ a: 7, b: 8 }).$; // { a: 7, b: 8, c: 3 }\r\n\t     */\n\t\n\t  }, {\n\t    key: 'prop',\n\t    value: function prop(property, value) {\n\t      if (arguments.length <= 1 && (0, _helpers.isString)(property)) {\n\t        return this.$ ? this.$[property] : undefined;\n\t      }\n\t\n\t      if (arguments.length >= 2) {\n\t        property = _defineProperty({}, property, value);\n\t      }\n\t\n\t      return this.assign(property);\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#propertyDescriptor\r\n\t     * @public\r\n\t     * @param {String} property - Property of the object.\r\n\t     * @returns {Object|undefined} Property descriptor.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor\r\n\t     * @descriptor Synonym for\r\n\t     * [Object.getOwnPropertyDescriptor]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1 }).propertyDescriptor('a');\r\n\t     * // {\r\n\t     * //   value: 1,\r\n\t     * //   enumerable: true,\r\n\t     * //   writable: true,\r\n\t     * //   configurable: true\r\n\t     * // }\r\n\t     */\n\t\n\t  }, {\n\t    key: 'propertyDescriptor',\n\t    value: function propertyDescriptor(property) {\n\t      var object = this.$;\n\t\n\t      return (0, _helpers.isObject)(object) ? Object.getOwnPropertyDescriptor(object, property) : undefined;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#propertyNames\r\n\t     * @public\r\n\t     * @returns {DWrap} D-Wrap of the names array.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\r\n\t     * @descriptor Synonym for\r\n\t     * [Object.getOwnPropertyNames]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2 }).define('c', { value: 3 }).$; // ['a', 'b', 'c']\r\n\t     */\n\t\n\t  }, {\n\t    key: 'propertyNames',\n\t    value: function propertyNames() {\n\t      var object = this.$;\n\t\n\t      return (0, _D2.default)((0, _helpers.isObject)(object) ? Object.getOwnPropertyNames(object) : []);\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#propertySymbols\r\n\t     * @public\r\n\t     * @returns {DWrap} D-Wrap of the names array.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols\r\n\t     * @descriptor Synonym for\r\n\t     * [Object.getOwnPropertySymbols]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ [Symbol('foo')]: 1 }).define(Symbol('bar'), { value: 2 }).$; // [Symbol('foo'), Symbol('bar')]\r\n\t     */\n\t\n\t  }, {\n\t    key: 'propertySymbols',\n\t    value: function propertySymbols() {\n\t      var object = this.$;\n\t\n\t      return (0, _D2.default)((0, _helpers.isObject)(object) ? Object.getOwnPropertySymbols(object) : []);\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#proto\r\n\t     * @public\r\n\t     * @param {*} [proto] - If it's present it's set as a prototype to the object.\r\n\t     * @returns {DWrap|*} In getter mode returns prototype and in setter mode returns this.\r\n\t     * @description Synonym for both\r\n\t     * [Object.getPrototypeOf]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf}\r\n\t     * and\r\n\t     * [Object.setPrototypeOf]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf}.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'proto',\n\t    value: function proto(_proto) {\n\t      var object = this.$;\n\t\n\t      if (arguments.length) {\n\t        if ((0, _helpers.isObject)(object)) {\n\t          Object.setPrototypeOf(object, _proto);\n\t        }\n\t\n\t        return this;\n\t      }\n\t\n\t      return (0, _helpers.isObject)(object) ? Object.getPrototypeOf(object) : undefined;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#reduce\r\n\t     * @public\r\n\t     * @param {ReduceCallback} callback - Called on each iteration.\r\n\t     * Return value is passed to the next callback call.\r\n\t     * @param {*} [IV = <first value>|undefined] - Initial value.\r\n\t     * @returns {*} Modified IV.\r\n\t     * @description Returns modified IV. If the second argument is not present first value in the object is taken\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).reduce((sum, value) => sum + value * value, 0); // 14\r\n\t     */\n\t\n\t  }, {\n\t    key: 'reduce',\n\t    value: function reduce(callback, IV) {\n\t      (0, _helpers.validate)([callback], ['function'], 'Super#reduce');\n\t\n\t      var object = this.$;\n\t\n\t      var startKey = void 0;\n\t\n\t      if (arguments.length === 1) {\n\t        (0, _helpers.iterate)(object, function (value, key) {\n\t          startKey = key;\n\t          IV = value;\n\t\n\t          return true;\n\t        });\n\t      }\n\t\n\t      (0, _helpers.iterate)(object, function (value, key) {\n\t        if (key !== startKey) {\n\t          IV = callback(IV, value, key, object);\n\t        }\n\t      });\n\t\n\t      return IV;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#set\r\n\t     * @public\r\n\t     * @param {String|Object.<String, Function>} property - Either a string of a property or a setters object.\r\n\t     * @param {Function} [setter] - If a property parameter is a string this has to be a setter function.\r\n\t     * @returns {DWrap} Returns this.\r\n\t     * @description Method for defining setters.\r\n\t     *\r\n\t     * @example\r\n\t     * const object = new Super({})\r\n\t     *   .get('public', function () {\r\n\t     *     return this._private;\r\n\t     *   })\r\n\t     *   .set('public', function (value) {\r\n\t     *     if (typeof value === 'number') {\r\n\t     *       this._private = value;\r\n\t     *     }\r\n\t     *   });\r\n\t     * object.prop('public', '1').$; // { public: undefined }\r\n\t     * object.prop('public', 1).$;   // { public: 1, _private: 1 }\r\n\t     *\r\n\t     * new Super({}).set({\r\n\t     *   public(value) {\r\n\t     *     if (typeof value === 'number') {\r\n\t     *       this._private = value;\r\n\t     *     }\r\n\t     *   }\r\n\t     * });\r\n\t     */\n\t\n\t  }, {\n\t    key: 'set',\n\t    value: function set(property, setter) {\n\t      if (arguments.length >= 2) {\n\t        property = _defineProperty({}, property, setter);\n\t      }\n\t\n\t      var object = this.$;\n\t\n\t      (0, _helpers.iterate)((0, _helpers.isObject)(object) && new Super(property).$, function (setter, property) {\n\t        Object.defineProperty(object, property, { set: setter });\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#some\r\n\t     * @public\r\n\t     * @param {IterationCallback} [callback = Boolean] - Called on each iteration.\r\n\t     * If returns truthy iteration stops and if falsey it continues.\r\n\t     * @returns {Boolean} If all the callback calls returned truthy value.\r\n\t     * @description Returns true if some of the callback calls returned truthy value. Otherwise false.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).some((value) => value > 4); // false\r\n\t     * new Super({}).some(() => true);                             // false\r\n\t     */\n\t\n\t  }, {\n\t    key: 'some',\n\t    value: function some() {\n\t      var callback = arguments.length <= 0 || arguments[0] === undefined ? Boolean : arguments[0];\n\t\n\t      (0, _helpers.validate)([callback], ['function'], 'Super#some');\n\t\n\t      return (0, _helpers.iterate)(this.$, function (value, key, object) {\n\t        if (callback(value, key, object)) {\n\t          return true;\n\t        }\n\t      }) || false;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#strictEquals\r\n\t     * @public\r\n\t     * @param {*} [object] - Object to compare.\r\n\t     * @returns {Boolean} If the objects are equal or not.\r\n\t     * @description Returns true if objects are equal using '===' operator and false if not.\r\n\t     * NaNs are considered to be strict equal.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super(3).strictEquals('3');   // false\r\n\t     * new Super(NaN).strictEquals(NaN); // true\r\n\t     */\n\t\n\t  }, {\n\t    key: 'strictEquals',\n\t    value: function strictEquals(object) {\n\t      var o = this.$;\n\t\n\t      object = new Super(object).$;\n\t\n\t      return o === object || (0, _helpers.isNaN)(o) && (0, _helpers.isNaN)(object);\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#sum\r\n\t     * @public\r\n\t     * @param {IterationCallback} [callback = null] - Called on each iteration.\r\n\t     * @returns {Number} Sum.\r\n\t     * @description Type of {@link Super#reduce}.\r\n\t     * If the callback is present it's used for summing. If not the value is used.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).sum();                         // 6\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).sum((value) => value * value); // 14\r\n\t     */\n\t\n\t  }, {\n\t    key: 'sum',\n\t    value: function sum() {\n\t      var callback = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t\n\t      (0, _helpers.validate)([callback], ['function||!'], 'Super#sum');\n\t\n\t      return this.reduce(function (sum, value, key, object) {\n\t        return sum + Number(callback ? callback(value, key, object) : value);\n\t      }, 0);\n\t    }\n\t  }, {\n\t    key: 'toJSON',\n\t    value: function toJSON() {\n\t      return this.$;\n\t    }\n\t\n\t    /**\r\n\t     * @member Super#toStringTag\r\n\t     * @type {String}\r\n\t     * @public\r\n\t     * @readonly\r\n\t     * @description Returns toString tag of the object.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({}).toStringTag; // 'Object'\r\n\t     * new Super([]).toStringTag; // 'Array'\r\n\t     * new Super(1).toStringTag;  // 'Number'\r\n\t     */\n\t\n\t  }, {\n\t    key: 'value',\n\t\n\t\n\t    /**\r\n\t     * @method Super#value\r\n\t     * @public\r\n\t     * @param {String|Object.<String, *>} property - Either a string of a property or a values object.\r\n\t     * @param {Object.<String, *>} [value] - If a property parameter is a string this has to be a value to be set.\r\n\t     * @returns {DWrap} Returns this.\r\n\t     * @description Method for defining non-enumerable, non-writable, non-configurable values.\r\n\t     * Synonym for object.define(property, { value: value }).\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({}).value('a', 1).$; // { a: 1 }\r\n\t     * new Super({}).value({\r\n\t     *   a: 1\r\n\t     * }).$;                          // { a: 1 }\r\n\t     */\n\t    value: function value(property, _value) {\n\t      if (arguments.length >= 2) {\n\t        property = _defineProperty({}, property, _value);\n\t      }\n\t\n\t      var object = this.$;\n\t\n\t      (0, _helpers.iterate)((0, _helpers.isObject)(object) && new Super(property).$, function (value, property) {\n\t        Object.defineProperty(object, property, { value: value });\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#values\r\n\t     * @public\r\n\t     * @returns {DWrap} A wrap of the values array.\r\n\t     * @description Returns D-Wrap of the values array.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).values().$; // [1, 2, 3]\r\n\t     * new Super(null).values().$;                 // []\r\n\t     */\n\t\n\t  }, {\n\t    key: 'values',\n\t    value: function values() {\n\t      var array = [];\n\t\n\t      (0, _helpers.iterate)(this.$, function (value) {\n\t        array.push(value);\n\t      });\n\t\n\t      return (0, _D2.default)(array);\n\t    }\n\t\n\t    /**\r\n\t     * @method Super#word\r\n\t     * @public\r\n\t     * @param {IterationCallback} callback - Called on each iteration.\r\n\t     * @returns {String} Concatenated string.\r\n\t     * @description Type of {@link Super#reduce}.\r\n\t     * If the callback is present it's used for concatenating. If not the value is used.\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).word();                         // '123'\r\n\t     * new Super({ a: 1, b: 2, c: 3 }).word((value) => value + value); // '112233'\r\n\t     */\n\t\n\t  }, {\n\t    key: 'word',\n\t    value: function word() {\n\t      var callback = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t\n\t      (0, _helpers.validate)([callback], ['function||!'], 'Super#word');\n\t\n\t      return this.reduce(function (word, value, key, object) {\n\t        return word + String(callback ? callback(value, key, object) : value);\n\t      }, '');\n\t    }\n\t  }, {\n\t    key: 'count',\n\t    get: function get() {\n\t      var object = this.$;\n\t\n\t      if (!(0, _helpers.isObject)(object)) {\n\t        return 0;\n\t      }\n\t\n\t      return (0, _helpers.isArrayLike)(object) ? object.length : Object.keys(object).length;\n\t    }\n\t  }, {\n\t    key: 'toStringTag',\n\t    get: function get() {\n\t      return (0, _helpers.toStringTag)(this.$);\n\t    }\n\t\n\t    /**\r\n\t     * @member Super#type\r\n\t     * @type {String}\r\n\t     * @public\r\n\t     * @readonly\r\n\t     * @description Synonym for\r\n\t     * [\"typeof\" operator]{@link https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/instanceof}..\r\n\t     *\r\n\t     * @example\r\n\t     * new Super({}).type;   // 'object'\r\n\t     * new Super(1).type;    // 'number'\r\n\t     * new Super('1').type;  // 'string'\r\n\t     * new Super(true).type; // 'boolean'\r\n\t     */\n\t\n\t  }, {\n\t    key: 'type',\n\t    get: function get() {\n\t      return _typeof(this.$);\n\t    }\n\t  }], [{\n\t    key: 'addStaticProperties',\n\t    value: function addStaticProperties(property, value) {\n\t      if (arguments.length >= 2) {\n\t        property = _defineProperty({}, property, value);\n\t      }\n\t\n\t      (0, _helpers.defineProperties)(this, property);\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Super.addInstanceProperties\r\n\t     * @public\r\n\t     * @param {String|Object} property - Either a string of a property or an object\r\n\t     * with properties keys and values values.\r\n\t     * @param {Object} [value] - If a property parameter is a string this has to be a property value.\r\n\t     * @returns {this} Returns this.\r\n\t     * @description Sets static properties for DWrap prototypes.\r\n\t     *\r\n\t     * @example\r\n\t     * Super.addInstanceProperties('cool', 42);\r\n\t     * Super.addInstanceProperties('superCool', 42*42);\r\n\t     */\n\t\n\t  }, {\n\t    key: 'addInstanceProperties',\n\t    value: function addInstanceProperties(property, value) {\n\t      if (arguments.length >= 2) {\n\t        property = _defineProperty({}, property, value);\n\t      }\n\t\n\t      (0, _helpers.defineProperties)(this.prototype, property);\n\t\n\t      return this;\n\t    }\n\t  }]);\n\t\n\t  return Super;\n\t}();\n\t\n\texports.Super = Super;\n\t\n\t\n\t(0, _helpers.defineProperties)(Super.prototype, _defineProperty({}, _helpers.Symbol.toStringTag, 'Super'));\n\t\n\t/**\r\n\t * @function deepAssign\r\n\t * @private\r\n\t * @param {*} target - Object to assign properties to.\r\n\t * @param {*} object - Object to assign properties from.\r\n\t * @returns {void}\r\n\t */\n\tfunction _deepAssign(target, object) {\n\t  (0, _helpers.iterate)(object, function (value, key) {\n\t    if ((0, _helpers.isPrimitive)(value)) {\n\t      target[key] = value;\n\t\n\t      return;\n\t    }\n\t\n\t    var hasProperty = {}.hasOwnProperty.call(target, key);\n\t\n\t    if ((0, _helpers.isPrimitive)(target[key]) || !hasProperty) {\n\t      target[key] = _deepClone(value);\n\t\n\t      return;\n\t    }\n\t\n\t    _deepAssign(target[key], value);\n\t  });\n\t}\n\t\n\t/**\r\n\t * @function deepClone\r\n\t * @private\r\n\t * @param {*} object - Object to clone.\r\n\t * @description Does the deep cloning.\r\n\t */\n\tfunction _deepClone(object) {\n\t  var clone = cloneSwitcher(object, [object, true]);\n\t\n\t  if (clone !== object) {\n\t    (0, _helpers.iterate)(object, function (value, key) {\n\t      clone[key] = _deepClone(value);\n\t    });\n\t  }\n\t\n\t  return clone;\n\t}\n\t\n\t/**\r\n\t * @function deepEqual\r\n\t * @private\r\n\t * @param {*} o1 - First object to compare.\r\n\t * @param {*} o2 - Second object to compare.\r\n\t * @param {Boolean} strict - If comparison should be strict or not.\r\n\t * @returns {Boolean} - If the object are deep equal or not.\r\n\t */\n\tfunction deepEqual(o1, o2, strict) {\n\t  o1 = new Super(o1).$;\n\t  o2 = new Super(o2).$;\n\t\n\t  if (o1 === o2) {\n\t    return true;\n\t  }\n\t\n\t  if ((0, _helpers.isNaN)(o1) && (0, _helpers.isNaN)(o2) && (0, _helpers.isPrimitive)(o1) && (0, _helpers.isPrimitive)(o2)) {\n\t    return true;\n\t  }\n\t\n\t  if ((0, _helpers.isNaN)(o1) || (0, _helpers.isNaN)(o2)) {\n\t    return false;\n\t  }\n\t\n\t  if ((0, _helpers.isPrimitive)(o1) || (0, _helpers.isPrimitive)(o2)) {\n\t    return strict ? o1 === o2 : o1 == o2;\n\t  }\n\t\n\t  if ((0, _helpers.isDate)(o1) && (0, _helpers.isDate)(o2)) {\n\t    return o1.getTime() === o2.getTime();\n\t  }\n\t\n\t  if ((0, _helpers.isDate)(o1) || (0, _helpers.isDate)(o2)) {\n\t    return false;\n\t  }\n\t\n\t  if ((0, _helpers.isRegExp)(o1) && (0, _helpers.isRegExp)(o2)) {\n\t    return o1.source === o2.source && o1.global === o2.global && o1.ignoreCase === o2.ignoreCase && o1.multiline === o2.multiline && o1.sticky === o2.sticky && o1.unicode === o2.unicode && o1.lastIndex === o2.lastIndex;\n\t  }\n\t\n\t  if ((0, _helpers.isRegExp)(o1) || (0, _helpers.isRegExp)(o2)) {\n\t    return false;\n\t  }\n\t\n\t  if (!(0, _helpers.isPlainObject)(o1) && !(0, _helpers.isArray)(o1) || !(0, _helpers.isPlainObject)(o2) && !(0, _helpers.isArray)(o2)) {\n\t    return false;\n\t  }\n\t\n\t  var p1 = Object.getPrototypeOf(o1);\n\t  var p2 = Object.getPrototypeOf(o1);\n\t\n\t  if (Object.keys(o1).length !== Object.keys(o2).length) {\n\t    return false;\n\t  }\n\t\n\t  if (p1 && p2 && (0, _helpers.toStringTag)(p1.constructor) !== (0, _helpers.toStringTag)(p2.constructor)) {\n\t    return false;\n\t  }\n\t\n\t  return (0, _helpers.iterate)(o1, function (value, key) {\n\t    if (!(key in o2) || !deepEqual(value, o2[key], strict)) {\n\t      return false;\n\t    }\n\t  }) !== false;\n\t}\n\t\n\t/**\r\n\t * @function deepEvery\r\n\t * @private\r\n\t * @param {*} object - Object to iterate over.\r\n\t * @param {DeepIterationCallback} callback - Callback that is called on every element.\r\n\t * If returns truthy the iteration goes on and if not it stops.\r\n\t * @param {Number} n - Depth of iteration.\r\n\t * @param {Tree} tree - Tree of { key, value } objects of iteration.\r\n\t * @returns {Boolean} - If all the callback calls returned truthy value.\r\n\t */\n\tfunction _deepEvery(object, callback, n, tree) {\n\t  object = new Super(object).$;\n\t\n\t  var end = n === 1;\n\t\n\t  return (0, _helpers.iterate)(object, function (value, key, object) {\n\t    var newTree = [{ key: key, value: value }].concat(tree);\n\t\n\t    if (end || (0, _helpers.isPrimitive)(value) ? !callback(value, key, object, newTree) : !_deepEvery(value, callback, n - 1, newTree)) {\n\t      return false;\n\t    }\n\t  }) !== false;\n\t}\n\t\n\t/**\r\n\t * @function deepFilter\r\n\t * @private\r\n\t * @param {*} object - Object to iterate over.\r\n\t * @param {DeepIterationCallback} callback - Callback that is called on every element.\r\n\t * If returns truthy the element is included in the output and if not it's excluded.\r\n\t * @param {Number} n - Depth of iteration.\r\n\t * @param {Tree} tree - Tree of { key, value } objects of iteration.\r\n\t * @returns {*} Filtered object.\r\n\t */\n\tfunction _deepFilter(object, callback, n, tree) {\n\t  object = new Super(object).$;\n\t\n\t  var array = (0, _helpers.isArrayLike)(object);\n\t  var nul = (0, _helpers.isNullOrUndefined)(object);\n\t  var o = array ? [] : nul ? object : {};\n\t  var end = n === 1;\n\t\n\t  (0, _helpers.iterate)(object, function (value, key, object) {\n\t    var newTree = [{ key: key, value: value }].concat(tree);\n\t\n\t    if ((end || (0, _helpers.isPrimitive)(value)) && callback(value, key, object, newTree)) {\n\t      if (array) {\n\t        o.push(value);\n\t      } else {\n\t        o[key] = value;\n\t      }\n\t\n\t      return;\n\t    }\n\t\n\t    if (!end) {\n\t      var filtered = _deepFilter(value, callback, n - 1, newTree);\n\t\n\t      if (filtered) {\n\t        if (array) {\n\t          o.push(filtered);\n\t        } else {\n\t          o[key] = filtered;\n\t        }\n\t      }\n\t    }\n\t  });\n\t\n\t  if (array) {\n\t    return o.length ? o : undefined;\n\t  }\n\t\n\t  if (!nul) {\n\t    return Object.keys(o).length ? o : undefined;\n\t  }\n\t\n\t  return o;\n\t}\n\t\n\t/**\r\n\t * @function deepFind\r\n\t * @private\r\n\t * @param {*} object - Object to iterate over.\r\n\t * @param {DeepIterationCallback} callback - Callback that is called on every element.\r\n\t * If returns truthy the iteration stops and if not it continues.\r\n\t * @param {Number} n - Depth of iteration.\r\n\t * @param {Tree} tree - Tree of { key, value } objects of iteration.\r\n\t * @returns {Tree|null} - If found the whole tree is returned and if not it's null what's returned.\r\n\t */\n\tfunction _deepFind(object, callback, n, tree) {\n\t  object = new Super(object).$;\n\t\n\t  var end = n === 1;\n\t\n\t  return (0, _helpers.iterate)(object, function (value, key, object) {\n\t    var newTree = [{ key: key, value: value }].concat(tree);\n\t\n\t    if (end || (0, _helpers.isPrimitive)(value)) {\n\t      if (callback(value, key, object, newTree)) {\n\t        return newTree;\n\t      }\n\t\n\t      return;\n\t    }\n\t\n\t    var result = _deepFind(value, callback, n - 1, newTree);\n\t\n\t    if (result) {\n\t      return result;\n\t    }\n\t  }) || null;\n\t}\n\t\n\t/**\r\n\t * @function deepFreeze\r\n\t * @private\r\n\t * @param {*} object - Object to freeze.\r\n\t * @returns {void}\r\n\t */\n\tfunction _deepFreeze(object) {\n\t  Object.freeze(object);\n\t  (0, _helpers.iterate)(object, _deepFreeze);\n\t}\n\t\n\t/**\r\n\t * @function deepForEach\r\n\t * @private\r\n\t * @param {*} object - Object to iterate over.\r\n\t * @param {DeepIterationCallback} callback - Callback that is called on every element.\r\n\t * @param {Number} n - Depth of iteration.\r\n\t * @param {Tree} tree - Tree of { key, value } objects of iteration.\r\n\t * @returns {void}\r\n\t */\n\tfunction _deepForEach(object, callback, n, tree) {\n\t  object = new Super(object).$;\n\t\n\t  var end = n === 1;\n\t\n\t  (0, _helpers.iterate)(object, function (value, key, object) {\n\t    var newTree = [{ key: key, value: value }].concat(tree);\n\t\n\t    if (end || (0, _helpers.isPrimitive)(value)) {\n\t      callback(value, key, object, newTree);\n\t    } else {\n\t      _deepForEach(value, callback, n - 1, newTree);\n\t    }\n\t  });\n\t}\n\t\n\t/**\r\n\t * @function deepMap\r\n\t * @private\r\n\t * @param {*} object - Object to iterate over.\r\n\t * @param {DeepIterationCallback} callback - Callback that is called on every element.\r\n\t * Returned value is used to create to new object.\r\n\t * @param {Number} n - Depth of iteration.\r\n\t * @param {Tree} tree - Tree of { key, value } objects of iteration.\r\n\t * @returns {*} New object.\r\n\t */\n\tfunction _deepMap(object, callback, n, tree) {\n\t  object = new Super(object).$;\n\t\n\t  var o = (0, _helpers.isArrayLike)(object) ? [] : (0, _helpers.isNullOrUndefined)(object) ? object : {};\n\t  var end = n === 1;\n\t\n\t  (0, _helpers.iterate)(object, function (value, key, object) {\n\t    var newTree = [{ key: key, value: value }].concat(tree);\n\t\n\t    o[key] = end || (0, _helpers.isPrimitive)(value) ? callback(value, key, object, newTree) : _deepMap(value, callback, n - 1, newTree);\n\t  });\n\t\n\t  return o;\n\t}\n\t\n\t/**\r\n\t * @function deepReduce\r\n\t * @private\r\n\t * @param {*} object - Object to iterate over.\r\n\t * @param {DeepReduceCallback} callback - Callback that is called on every element.\r\n\t * Returned value is used to create to new object.\r\n\t * @param {Number} n - Depth of iteration.\r\n\t * @param {Boolean} start - If callback was called already or not.\r\n\t * @param {{ IV: * }|undefined} IV - If callback was called already or not.\r\n\t * @param {Tree} tree - Tree of { key, value } objects of iteration.\r\n\t * @returns {{ IV: * }} Transformed IV.\r\n\t */\n\tfunction _deepReduce(object, callback, n, start, IV, tree) {\n\t  object = new Super(object).$;\n\t\n\t  var end = n === 1;\n\t\n\t  (0, _helpers.iterate)(object, function (value, key, object) {\n\t    if (!IV && (end || (0, _helpers.isPrimitive)(value)) && !start) {\n\t      IV = { IV: value };\n\t      start = true;\n\t\n\t      return;\n\t    }\n\t\n\t    var newTree = [{ key: key, value: value }].concat(tree);\n\t\n\t    IV = end || (0, _helpers.isPrimitive)(value) ? { IV: callback(IV.IV, value, key, object, newTree) } : _deepReduce(value, callback, n - 1, start, IV, newTree);\n\t  });\n\t\n\t  return IV;\n\t}\n\t\n\t/**\r\n\t * @function deepSome\r\n\t * @private\r\n\t * @param {*} object - Object to iterate over.\r\n\t * @param {DeepIterationCallback} callback - Callback that is called on every element.\r\n\t * If returns truthy the iteration stops and if not it continues.\r\n\t * @param {Number} n - Depth of iteration.\r\n\t * @param {Tree} tree - Tree of { key, value } objects of iteration.\r\n\t * @returns {Boolean} - If some of the callback calls returned truthy value.\r\n\t */\n\tfunction _deepSome(object, callback, n, tree) {\n\t  object = new Super(object).$;\n\t\n\t  var end = n === 1;\n\t\n\t  return (0, _helpers.iterate)(object, function (value, key, object) {\n\t    var newTree = [{ key: key, value: value }].concat(tree);\n\t\n\t    if (end || (0, _helpers.isPrimitive)(value) ? callback(value, key, object, newTree) : _deepSome(value, callback, n - 1, newTree)) {\n\t      return true;\n\t    }\n\t  }) || false;\n\t}\n\t\n\t_constructors2.default[0].push({\n\t  check: function check() {\n\t    return true;\n\t  },\n\t  cls: Super\n\t});\n\t\n\texports.default = Super;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Switcher = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.switcher = switcher;\n\texports.when = when;\n\t\n\tvar _helpers = __webpack_require__(8);\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @module Switcher\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @private\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @mixin\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @description Exports Switcher class.\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\r\n\t * @typedef {'boolean'|'equals'|'strictEquals'|'call'} SwitcherMode\r\n\t * @public\r\n\t * @description Enum type of switcher modes.\r\n\t */\n\t\n\t/**\r\n\t * @callback SwitcherCallCallback\r\n\t * @public\r\n\t * @param {*} value - Switcher value.\r\n\t * @returns {Boolean|*} On what the callback returns depends if the case is a match (truthy for the match).\r\n\t */\n\t\n\t/**\r\n\t * @callback SwitcherMatchCallback\r\n\t * @public\r\n\t * @param {...*} args - Arguments from the second argument that switcher was called with.\r\n\t * @param {*} value - Switcher value.\r\n\t * @param {*} matched - Switcher matched case.\r\n\t */\n\t\n\t/**\r\n\t * @class Switcher\r\n\t * @public\r\n\t * @param {Object} [cases = {}] - Object of cases.\r\n\t * @param {SwitcherMode} [mode = 'equals'] - Switcher mode.\r\n\t * @param {*} [defaultValue] - Switcher default value.\r\n\t * @returns {Switcher} - Instance of Switcher.\r\n\t * @description Switcher class for creating functions working similar to switch (value) {} construction,\r\n\t * but with the value assignment. Switcher instance is a function that accepts a value argument and an optional\r\n\t * args argument. Args with additional switcher value and matched case\r\n\t * are passed into the function of the matched case (if it is a function).\r\n\t *\r\n\t * @example\r\n\t * const switcher = new Switcher();\r\n\t * const switcher = new Switcher({\r\n\t *   case1: 'value1',\r\n\t *   case2: 'value2'\r\n\t * });\r\n\t * const switcher = new Switcher('strictEquals');\r\n\t * const switcher = new Switcher({\r\n\t *   case1: 'value1',\r\n\t *   case2: 'value2'\r\n\t * }, 'strictEquals');\r\n\t * const switcher = new Switcher('strictEquals', 'defaultValue');\r\n\t * const switcher = new Switcher({\r\n\t *   case1: 'value1',\r\n\t *   case2: 'value2'\r\n\t * }, 'strictEquals', 'defaultValue');\r\n\t *\r\n\t * // See [switcher]{@link switcher} examples for more information.\r\n\t */\n\t\n\tvar Switcher = function (_Function) {\n\t  _inherits(Switcher, _Function);\n\t\n\t  function Switcher() {\n\t    var cases = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t    var mode = arguments.length <= 1 || arguments[1] === undefined ? 'equals' : arguments[1];\n\t\n\t    var _ret;\n\t\n\t    var defaultValue = arguments[2];\n\t\n\t    _classCallCheck(this, Switcher);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Switcher).call(this));\n\t\n\t    if ((0, _helpers.isString)(cases)) {\n\t      if (!(0, _helpers.isUndefined)(arguments[1])) {\n\t        defaultValue = mode;\n\t      }\n\t\n\t      mode = cases;\n\t      cases = {};\n\t    }\n\t\n\t    var eventualCases = [];\n\t\n\t    (0, _helpers.iterate)(cases, function (value, Case) {\n\t      eventualCases.push({ case: Case, value: value });\n\t    });\n\t\n\t    function switcher(value) {\n\t      var args = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n\t      var _switcher$$$ = switcher.$$;\n\t      var mode = _switcher$$$.mode;\n\t      var def = _switcher$$$.default;\n\t      var cases = _switcher$$$.cases;\n\t\n\t\n\t      var ret = (0, _helpers.iterate)(cases, function (_ref) {\n\t        var val = _ref.value;\n\t        var Case = _ref.case;\n\t\n\t        if (mode === 'boolean' && Case ||\n\t        /* eslint eqeqeq: 0 */\n\t        mode === 'equals' && Case == value || mode === 'strictEquals' && Case === value || mode === 'call' && Case(value)) {\n\t          return { case: Case, value: val };\n\t        }\n\t      });\n\t\n\t      if ((0, _helpers.isUndefined)(ret)) {\n\t        ret = { value: def };\n\t      }\n\t\n\t      if (!(0, _helpers.isFunction)(ret.value)) {\n\t        return ret.value;\n\t      }\n\t\n\t      args = (0, _helpers.toArray)(args, true);\n\t      args.push(value, ret.case);\n\t\n\t      return ret.value.apply(null, args);\n\t    }\n\t\n\t    /**\r\n\t     * @member Switcher#$$\r\n\t     * @type {Object}\r\n\t     * @protected\r\n\t     * @property {Array} cases - Array of cases.\r\n\t     * @property {SwitcherMode} mode - Switcher mode.\r\n\t     * @property {*} default - Switcher default value.\r\n\t     * @description Config parameters.\r\n\t     */\n\t    Object.defineProperty(switcher, '$$', {\n\t      value: {\n\t        cases: eventualCases,\n\t        mode: mode,\n\t        default: defaultValue\n\t      }\n\t    });\n\t    Object.setPrototypeOf(switcher, Switcher.prototype);\n\t\n\t    return _ret = switcher, _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\r\n\t   * @method Switcher#case\r\n\t   * @public\r\n\t   * @param {*|SwitcherCallCallback|Array.<*|SwitcherCallCallback>} cases - Case or an array of cases.\r\n\t   * @param {*|SwitcherMatchCallback} value - Value that has to be assigned or a function\r\n\t   * that is called with switcher value, if it's the case.\r\n\t   * @returns {Switcher} Returns this.\r\n\t   * @description Method for defining new cases.\r\n\t   *\r\n\t   * @example\r\n\t   * const sw = new Switcher()\r\n\t   *   .case(1, 'one')\r\n\t   *   .case(2, 'two');\r\n\t   *\r\n\t   * sw(1); // 'one'\r\n\t   * sw(2); // 'two'\r\n\t   */\n\t\n\t\n\t  _createClass(Switcher, [{\n\t    key: 'case',\n\t    value: function _case(cases, value) {\n\t      var _this2 = this;\n\t\n\t      if (!(0, _helpers.isArray)(cases)) {\n\t        cases = [cases];\n\t      }\n\t\n\t      (0, _helpers.iterate)(cases, function (Case) {\n\t        _this2.$$.cases.push({ case: Case, value: value });\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Switcher#default\r\n\t     * @public\r\n\t     * @param {*} def - New default value.\r\n\t     * @returns {Switcher} Returns this.\r\n\t     * @description Method for redefining default switcher value.\r\n\t     *\r\n\t     * @example\r\n\t     * const sw = new Switcher()\r\n\t     *   .case(1, 'one')\r\n\t     *   .default('three');\r\n\t     *\r\n\t     * sw(1); // 'one'\r\n\t     * sw(2); // 'three'\r\n\t     */\n\t\n\t  }, {\n\t    key: 'default',\n\t    value: function _default(def) {\n\t      this.$$.default = def;\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Switcher#mode\r\n\t     * @public\r\n\t     * @param {SwitcherMode} mode - New switcher mode.\r\n\t     * @returns {Switcher} Returns this.\r\n\t     * @description Method for redefining switcher mode.\r\n\t     *\r\n\t     * @example\r\n\t     * const sw = new Switcher()\r\n\t     *   .mode('strictEquals')\r\n\t     *   .case(1, 'number')\r\n\t     *   .case('1', 'string');\r\n\t     *\r\n\t     * sw(1);   // 'number'\r\n\t     * sw('1'); // 'string'\r\n\t     */\n\t\n\t  }, {\n\t    key: 'mode',\n\t    value: function mode(_mode) {\n\t      this.$$.mode = _mode;\n\t\n\t      return this;\n\t    }\n\t  }]);\n\t\n\t  return Switcher;\n\t}(Function);\n\t\n\texports.Switcher = Switcher;\n\t\n\t\n\t(0, _helpers.defineProperties)(Switcher.prototype, _defineProperty({}, _helpers.Symbol.toStringTag, 'Switcher'));\n\t\n\t/**\r\n\t * @function switcher\r\n\t * @public\r\n\t * @param {Object} [cases = {}] - Object of cases.\r\n\t * @param {SwitcherMode} [mode = 'equals'] - Switcher mode.\r\n\t * @param {*} [defaultValue] - Switcher default value.\r\n\t * @returns {Switcher} New instance of Switcher.\r\n\t * @description Simple wrap of [new Switcher(...)]{@link Switcher}.\r\n\t * \r\n\t * @example\r\n\t * const sw = switcher({\r\n\t *   1: 'foo',\r\n\t *   2: 'bar'\r\n\t * });\r\n\t * sw(1); // 'foo'\r\n\t * sw(2); // 'bar'\r\n\t * sw(3); // undefined\r\n\t * \r\n\t * @example\r\n\t * const sw = switcher()\r\n\t *   .case([1, 2], 'foo')\r\n\t *   .case(3, 'bar');\r\n\t *   \r\n\t * sw(1); // 'foo'\r\n\t * sw(2); // 'foo'\r\n\t * sw(3); // 'bar'\r\n\t * \r\n\t * @example\r\n\t * const sw = switcher('call')\r\n\t *   .case(isArray, 'array')\r\n\t *   .case(isString, 'string')\r\n\t *   .case(isNumber, 'number')\r\n\t *   .default('rest');\r\n\t *   \r\n\t * sw([]);    // 'array'\r\n\t * sw('foo'); // 'string'\r\n\t * sw(123);   // 'number'\r\n\t * sw({});    // 'rest'\r\n\t * \r\n\t * @example\r\n\t * const sw = switcher({\r\n\t *   1: (value) => {\r\n\t *     console.log(value + 1);\r\n\t *   },\r\n\t *   2: () => {\r\n\t *     console.log(value - 1);\r\n\t *   }\r\n\t * });\r\n\t * \r\n\t * sw(1); // 2\r\n\t * sw(2); // 1\r\n\t * \r\n\t * @example\r\n\t * const sw = switcher({\r\n\t *   first: (array) => array[0],\r\n\t *   last: (array) => array[array.length - 1]\r\n\t * }, 'equals', (array, index) => array[index]);\r\n\t * const array = [1, 2, 3, 4];\r\n\t * \r\n\t * sw('first', [array]); // 1\r\n\t * sw('last', [array]);  // 4\r\n\t * sw(1, [array]);       // 2\r\n\t * sw(2, [array]);       // 3\r\n\t */\n\tfunction switcher(cases, mode, defaultValue) {\n\t  return new (Function.prototype.bind.apply(Switcher, [null].concat(Array.prototype.slice.call(arguments))))();\n\t}\n\t\n\t/**\r\n\t * @function when\r\n\t * @public\r\n\t * @param {Boolean|*} condition - Condition used for returning the proper value.\r\n\t * @param {*} value1 - Value if the condition is truthy.\r\n\t * @param {*} value2 - Value if the condition is falsey.\r\n\t * @returns {*} value1 or value2.\r\n\t * @description Synonym for\r\n\t * [ternary operator]{@link https://developer.mozilla.org/nl/docs/Web/JavaScript/Reference/Operators/Conditional_Operator}.\r\n\t * \r\n\t * @example\r\n\t * when(true, 'true', 'false'); // 'true'\r\n\t */\n\tfunction when(condition, value1, value2) {\n\t  return condition ? value1 : value2;\n\t}\n\t\n\texports.default = Switcher;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.BlobObject = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.blob = blob;\n\t\n\tvar _Super2 = __webpack_require__(18);\n\t\n\tvar _Super3 = _interopRequireDefault(_Super2);\n\t\n\tvar _Promise = __webpack_require__(21);\n\t\n\tvar _Promise2 = _interopRequireDefault(_Promise);\n\t\n\tvar _constructors = __webpack_require__(6);\n\t\n\tvar _constructors2 = _interopRequireDefault(_constructors);\n\t\n\tvar _helpers = __webpack_require__(8);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @module BlobObject\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @private\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @mixin\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @description Exports BlobObject class.\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\r\n\t * @typedef {{ buffer: String, binary: String, dataURL: String, text: String }} methods\r\n\t * @private\r\n\t * @description List of read blob methods.\r\n\t */\n\tvar methods = {\n\t  buffer: 'ArrayBuffer',\n\t  binary: 'BinaryString',\n\t  dataURL: 'DataURL',\n\t  text: 'Text'\n\t};\n\tvar URL = global.URL;\n\t\n\t/**\r\n\t * @typedef {('buffer'|'binary'|'dataURL'|'text')} ReadBlobMethod\r\n\t * @public\r\n\t * @description Enum type of read blob methods.\r\n\t */\n\t\n\t/**\r\n\t * @typedef {ArrayBuffer|ArrayBufferView|Blob|String} BlobParts\r\n\t * @public\r\n\t * @description Allowed blob parts.\r\n\t */\n\t\n\t/**\r\n\t * @callback ReaderEventListener\r\n\t * @public\r\n\t * @param {Event} e - Fired event.\r\n\t * @param {FileReader} reader - FileReader.\r\n\t */\n\t\n\t/**\r\n\t * @class BlobObject\r\n\t * @extends Super\r\n\t * @public\r\n\t * @param {Blob} blob - Blob to wrap.\r\n\t * @returns {BlobObject} Instance of BlobObject.\r\n\t * @description Wrap of a blob.\r\n\t *\r\n\t * @example\r\n\t * new BlobObject(new Blob(['{\"foo\":\"bar\"}'], { type: 'application/json' }));\r\n\t */\n\t\n\tvar BlobObject = exports.BlobObject = function (_Super) {\n\t  _inherits(BlobObject, _Super);\n\t\n\t  function BlobObject() {\n\t    _classCallCheck(this, BlobObject);\n\t\n\t    return _possibleConstructorReturn(this, Object.getPrototypeOf(BlobObject).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BlobObject, [{\n\t    key: 'readAs',\n\t\n\t\n\t    /**\r\n\t     * @method BlobObject#readAs\r\n\t     * @public\r\n\t     * @param {ReadBlobMethod} method - Method that is used for reading from blob.\r\n\t     * @param {ReaderEventListener} [progress] - Progress listener.\r\n\t     * @returns {Promise} Promise that could be aborted.\r\n\t     * @description Method for reading from blobs.\r\n\t     *\r\n\t     * @example\r\n\t     * new BlobObject(new Blob(['{\"foo\":\"bar\"}'], { type: 'application/json' }))\r\n\t     *   .readAs('text')\r\n\t     *   .then((value) => {\r\n\t     *     console.log(value); // '{\"foo\":\"bar\"}'\r\n\t     *   });\r\n\t     */\n\t    value: function readAs(method, progress) {\n\t      var _this2 = this;\n\t\n\t      if (!methods[method]) {\n\t        throw new Error('1st argument must be one of following values: buffer, binary, dataURL, text');\n\t      }\n\t\n\t      var reader = new FileReader();\n\t      var toReject = void 0;\n\t\n\t      if ((0, _helpers.isFunction)(progress)) {\n\t        reader.onprogress = function (e) {\n\t          progress(e, this);\n\t        };\n\t      }\n\t\n\t      var promise = new _Promise2.default(function (resolve, reject) {\n\t        toReject = reject;\n\t\n\t        reader.onerror = function (_ref) {\n\t          var target = _ref.target;\n\t\n\t          if (reader) {\n\t            reject(target.error);\n\t          }\n\t        };\n\t\n\t        reader.onload = function (_ref2) {\n\t          var target = _ref2.target;\n\t\n\t          resolve(target.result);\n\t        };\n\t\n\t        reader['readAs' + methods[method]](_this2.$);\n\t      });\n\t\n\t      promise.abort = function abort() {\n\t        toReject(new Error('Reading was aborted'));\n\t\n\t        reader.abort();\n\t\n\t        reader = null;\n\t\n\t        return this;\n\t      };\n\t\n\t      return promise;\n\t    }\n\t\n\t    /**\r\n\t     * @method BlobObject#saveAs\r\n\t     * @public\r\n\t     * @param {String} [name] - Name that is used for saving file.\r\n\t     * @returns {BlobObject} Returns this.\r\n\t     * @description Method for saving blobs.\r\n\t     *\r\n\t     * @example\r\n\t     * new BlobObject(new Blob(['{\"foo\":\"bar\"}'], { type: 'application/json' }))\r\n\t     *   .saveAs('blob.json');\r\n\t     */\n\t\n\t  }, {\n\t    key: 'saveAs',\n\t    value: function saveAs() {\n\t      var name = arguments.length <= 0 || arguments[0] === undefined ? 'download' : arguments[0];\n\t\n\t      var anchor = document.createElement('a');\n\t\n\t      anchor.href = this.dataURL;\n\t      anchor.setAttribute('download', name);\n\t      anchor.click();\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'dataURL',\n\t\n\t    /**\r\n\t     * @member BlobObject#$\r\n\t     * @type {Blob}\r\n\t     * @public\r\n\t     * @description Original Blob.\r\n\t     */\n\t\n\t    /**\r\n\t     * @member {String} BlobObject#dataURL\r\n\t     * @type {String}\r\n\t     * @public\r\n\t     * @readonly\r\n\t     * @description Returns dataURL representation of the blob.\r\n\t     */\n\t    get: function get() {\n\t      return URL.createObjectURL(this.$);\n\t    }\n\t  }]);\n\t\n\t  return BlobObject;\n\t}(_Super3.default);\n\t\n\t(0, _helpers.defineProperties)(BlobObject.prototype, _defineProperty({}, _helpers.Symbol.toStringTag, 'BlobObject'));\n\t\n\t_constructors2.default[1].push({\n\t  check: function check(blob) {\n\t    return (/^(Blob|File)$/.test((0, _helpers.toStringTag)(blob))\n\t    );\n\t  },\n\t  cls: BlobObject\n\t});\n\t\n\t/**\r\n\t * @function blob\r\n\t * @public\r\n\t * @param {(BlobParts[]|BlobParts)} blobParts - Blob parts that are passed to\r\n\t * [Blob]{@link https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob} constructor.\r\n\t * @param {Object} [options] - Options that are passed to\r\n\t * [Blob]{@link https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob} constructor.\r\n\t * @returns {BlobObject} New instance of BlobObject.\r\n\t * @description Function for creating blobs not involving BlobObject and Blob constructors.\r\n\t */\n\tfunction blob(blobParts) {\n\t  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t  if (!(0, _helpers.isArray)(blobParts)) {\n\t    blobParts = [blobParts];\n\t  }\n\t\n\t  return new BlobObject(new Blob(blobParts, options));\n\t}\n\t\n\texports.default = BlobObject;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Promise = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\r\n\tmodule Promise\r\n\tprivate\r\n\tmixin\r\n\tdescription Exports Promise class.\r\n\tn\t\n\tvar _helpers = __webpack_require__(8);\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar secret = {};\n\tvar iterator = _helpers.Symbol.iterator;\n\t\n\tvar Promise = exports.Promise = function () {\n\t  function Promise(executor) {\n\t    _classCallCheck(this, Promise);\n\t\n\t    if (!(0, _helpers.isFunction)(executor)) {\n\t      throw new TypeError('Promise resolver ' + {}.toString.call(executor) + ' is not a function');\n\t    }\n\t\n\t    var hiddenStatus = void 0;\n\t    var hiddenValue = void 0;\n\t\n\t    var onFulfill = [];\n\t    var onReject = [];\n\t    var realPromise = this;\n\t    var hiddenPromise = {\n\t      handled: false,\n\t      get status() {\n\t        return hiddenStatus;\n\t      },\n\t      set status(value) {\n\t        hiddenStatus = value;\n\t        realPromise.status = value;\n\t      },\n\t      get value() {\n\t        return hiddenValue;\n\t      },\n\t      set value(val) {\n\t        hiddenValue = val;\n\t        realPromise.value = val;\n\t      }\n\t    };\n\t\n\t    hiddenPromise.status = 'pending';\n\t    hiddenPromise.value = undefined;\n\t\n\t    /**\r\n\t     * @typedef {Object} hiddenPromise\r\n\t     * @private\r\n\t     * @property {Boolean|Object} handled - If the promise is handled or not.\r\n\t     * @property {'pending'|'fulfilled'|'rejected'} status - Status of the promise.\r\n\t     * @property {*} value - Value of the promise.\r\n\t     */\n\t\n\t    /**\r\n\t     * @member {Function} hiddenPromise#handle\r\n\t     * @private\r\n\t     * @param {('reject'|'resolve')} event - Type of the event to handle.\r\n\t     * @param {Function} handler - Handler itself.\r\n\t     * @param {Function} resolve - Resolve function.\r\n\t     * @param {Function} reject - Reject function.\r\n\t     * @param {Object} secret - Secret.\r\n\t     * @description Private method for handling promises.\r\n\t     */\n\t\n\t    /**\r\n\t     * @member {hiddenPromise} Promise#$$\r\n\t     * @protected\r\n\t     */\n\t    (0, _helpers.defineProperties)(this.$$ = {}, {\n\t      'get/set handled': {\n\t        get: function get() {\n\t          return hiddenPromise.handled;\n\t        },\n\t        set: function set(key) {\n\t          if (key === secret) {\n\t            hiddenPromise.handled = true;\n\t          }\n\t        }\n\t      },\n\t      handle: function handle(status, f, resolve, reject, key) {\n\t        if (key === secret) {\n\t          var proxy = (0, _helpers.isFunction)(f) ? function (value) {\n\t            try {\n\t              resolve(f(value));\n\t            } catch (err) {\n\t              return reject(err);\n\t            }\n\t          } : null;\n\t\n\t          if (status === 'resolve') {\n\t            onFulfill.push(proxy || function (value) {\n\t              return resolve(value);\n\t            });\n\t          } else if (status === 'reject') {\n\t            onReject.push(proxy || function (err) {\n\t              return reject(err);\n\t            });\n\t          }\n\t        }\n\t      },\n\t      'get status': function getStatus() {\n\t        return hiddenPromise.status;\n\t      },\n\t      'get value': function getValue() {\n\t        return hiddenPromise.value;\n\t      }\n\t    });\n\t\n\t    try {\n\t      executor(resolve, reject);\n\t    } catch (err) {\n\t      reject(err);\n\t    }\n\t\n\t    function reject(err) {\n\t      if (hiddenPromise.status === 'pending') {\n\t        hiddenPromise.status = 'rejected';\n\t        hiddenPromise.value = err;\n\t\n\t        for (var i = 0, length = onReject.length; i < length; i++) {\n\t          hiddenPromise.handled = true;\n\t\n\t          onReject[i](err);\n\t        }\n\t\n\t        setTimeout(function () {\n\t          if (!hiddenPromise.handled) {\n\t            console.error('%s %o', 'Uncaught (in promise)', err);\n\t          }\n\t        }, 1);\n\t      }\n\t    }\n\t\n\t    function resolve(value) {\n\t      if (hiddenPromise.status === 'pending') {\n\t        if (value && (0, _helpers.isFunction)(value.then)) {\n\t          return value.then(function (value) {\n\t            resolve(value);\n\t          }, function (err) {\n\t            reject(err);\n\t          });\n\t        }\n\t\n\t        hiddenPromise.status = 'fulfilled';\n\t        hiddenPromise.value = value;\n\t\n\t        for (var i = 0, length = onFulfill.length; i < length; i++) {\n\t          hiddenPromise.handled = true;\n\t\n\t          onFulfill[i](value);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  _createClass(Promise, [{\n\t    key: 'abort',\n\t    value: function abort() {}\n\t  }, {\n\t    key: 'catch',\n\t    value: function _catch(onRejected) {\n\t      return resolveOrReject(this.$$, null, onRejected);\n\t    }\n\t  }, {\n\t    key: 'then',\n\t    value: function then(onFulfilled, onRejected) {\n\t      return resolveOrReject(this.$$, onFulfilled, onRejected);\n\t    }\n\t  }], [{\n\t    key: 'all',\n\t    value: function all(iterable) {\n\t      var array = [];\n\t\n\t      var toResolve = 0;\n\t\n\t      if (iterable[iterator]) {\n\t        iterable = iterable[iterator]();\n\t\n\t        return new Promise(function (resolve, reject) {\n\t          var next = void 0;\n\t          var i = 0;\n\t\n\t          var _loop = function _loop() {\n\t            var promise = Promise.resolve(next.value);\n\t\n\t            toResolve++;\n\t\n\t            (function (i) {\n\t              promise.then(function (value) {\n\t                toResolve--;\n\t                array[i] = value;\n\t\n\t                setTimeout(function () {\n\t                  if (next.done && !toResolve) {\n\t                    resolve(array);\n\t                  }\n\t                }, 1);\n\t              }, reject);\n\t            })(i++);\n\t          };\n\t\n\t          while (!(next = iterable.next()).done) {\n\t            _loop();\n\t          }\n\t\n\t          if (!i) {\n\t            return Promise.resolve([]);\n\t          }\n\t        });\n\t      }\n\t\n\t      var length = iterable.length;\n\t\n\t      if (!length) {\n\t        return Promise.resolve([]);\n\t      }\n\t\n\t      toResolve = length;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        var _loop2 = function _loop2(i) {\n\t          var promise = Promise.resolve(array[i]);\n\t\n\t          promise.then(function (value) {\n\t            toResolve--;\n\t            array[i] = value;\n\t\n\t            if (!toResolve) {\n\t              resolve(array);\n\t            }\n\t          }, reject);\n\t        };\n\t\n\t        for (var i = 0; i < length; i++) {\n\t          _loop2(i);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'race',\n\t    value: function race(iterable) {\n\t      var array = [];\n\t\n\t      if (iterable[iterator]) {\n\t        iterable = iterable[iterator]();\n\t\n\t        return new Promise(function (resolve, reject) {\n\t          var next = void 0;\n\t\n\t          while (!(next = iterable.next()).done) {\n\t            next.value.then(resolve, reject);\n\t          }\n\t        });\n\t      }\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        for (var i = 0, length = array.length; i < length; i++) {\n\t          array[i].then(resolve, reject);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'reject',\n\t    value: function reject(value) {\n\t      return new Promise(function (resolve, reject) {\n\t        reject(value);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'resolve',\n\t    value: function resolve(value) {\n\t      if (value && (0, _helpers.isFunction)(value.then)) {\n\t        return value;\n\t      }\n\t\n\t      return new Promise(function (resolve) {\n\t        resolve(value);\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return Promise;\n\t}();\n\t\n\t(0, _helpers.defineProperties)(Promise.prototype, _defineProperty({}, _helpers.Symbol.toStringTag, 'Promise'));\n\t\n\t/**\r\n\t * @function resolveOrReject\r\n\t * @private\r\n\t * @param {hiddenPromise} promise - Promise to resolve or reject.\r\n\t * @param {Function} [onResolved] - Resolve function.\r\n\t * @param {Function} [onRejected] - Reject function.\r\n\t * @returns {Promise} New instance of Promise.\r\n\t */\n\tfunction resolveOrReject(promise, onResolved, onRejected) {\n\t  if (promise.status === 'pending') {\n\t    return new Promise(function (resolve, reject) {\n\t      promise.handle('reject', onRejected, resolve, reject, secret);\n\t      promise.handle('resolve', onResolved, resolve, reject, secret);\n\t    });\n\t  }\n\t\n\t  promise.handled = secret;\n\t\n\t  var value = promise.value;\n\t\n\t\n\t  var method = void 0;\n\t  var handler = void 0;\n\t\n\t  if (promise.status === 'fulfilled') {\n\t    method = 'resolve';\n\t    handler = onResolved;\n\t  } else {\n\t    method = 'reject';\n\t    handler = onRejected;\n\t  }\n\t\n\t  if (!(0, _helpers.isFunction)(handler)) {\n\t    return Promise[method](value);\n\t  }\n\t\n\t  try {\n\t    return Promise.resolve(handler(value));\n\t  } catch (err) {\n\t    return Promise.reject(err);\n\t  }\n\t}\n\t\n\texports.default = Promise;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Dat = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.now = now;\n\texports.date = date;\n\t\n\tvar _Super2 = __webpack_require__(18);\n\t\n\tvar _Super3 = _interopRequireDefault(_Super2);\n\t\n\tvar _Num = __webpack_require__(23);\n\t\n\tvar _Num2 = _interopRequireDefault(_Num);\n\t\n\tvar _Str = __webpack_require__(25);\n\t\n\tvar _Str2 = _interopRequireDefault(_Str);\n\t\n\tvar _Switcher = __webpack_require__(19);\n\t\n\tvar _constructors = __webpack_require__(6);\n\t\n\tvar _constructors2 = _interopRequireDefault(_constructors);\n\t\n\tvar _formats = __webpack_require__(27);\n\t\n\tvar _formats2 = _interopRequireDefault(_formats);\n\t\n\tvar _helpers = __webpack_require__(8);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @module Dat\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @private\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @mixin\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @description Exports Dat class.\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\r\n\t * @typedef {*} DateLike\r\n\t * @public\r\n\t */\n\t\n\t/**\r\n\t * @typedef {'c'|'s'|'m'|'h'|'d'|'w'|'M'|'y'} AddPeriod\r\n\t * @public\r\n\t */\n\t\n\t/**\r\n\t * @typedef {'c'|'s'|'m'|'h'|'d'|'dw'|'M'|'y'} GetPeriod\r\n\t * @public\r\n\t */\n\t\n\t/**\r\n\t * @typedef {'c'|'s'|'m'|'h'|'d'|'M'|'y'} OfOnePeriod\r\n\t * @public\r\n\t */\n\t\n\t/**\r\n\t * @typedef {'c'|'s'|'m'|'h'|'d'|'M'|'y'} SetPeriod\r\n\t * @public\r\n\t */\n\t\n\t/**\r\n\t * @typedef {'ccc'|'c'|'ss'|'s'|'mm'|'m'|'hh'|'h'|'dddd'|'ddd'|'dd'|'d'|'MMMM'|'MMM'|'MM'|'M'|'yyyy'|'yy'|'y'} Format\r\n\t * @public\r\n\t */\n\t\n\tvar coeffs = {\n\t  c: 1,\n\t  s: 1000,\n\t  m: 60000,\n\t  h: 3600000,\n\t  d: 86400000,\n\t  w: 604800000,\n\t  M: 2592000000,\n\t  y: 31536000000\n\t};\n\t\n\tvar getSwitcher = (0, _Switcher.switcher)({\n\t  c: function c(date, utc) {\n\t    return date[utc + 'Milliseconds']();\n\t  },\n\t  s: function s(date, utc) {\n\t    return date[utc + 'Seconds']();\n\t  },\n\t  m: function m(date, utc) {\n\t    return date[utc + 'Minutes']();\n\t  },\n\t  h: function h(date, utc) {\n\t    return date[utc + 'Hours']();\n\t  },\n\t  d: function d(date, utc) {\n\t    return date[utc + 'Date']();\n\t  },\n\t  dw: function dw(date, utc) {\n\t    return date[utc + 'Day']();\n\t  },\n\t  M: function M(date, utc) {\n\t    return date[utc + 'Month']() + 1;\n\t  },\n\t  y: function y(date, utc) {\n\t    return date[utc + 'FullYear']();\n\t  }\n\t}, 'equals', NaN);\n\tvar setSwitcher = (0, _Switcher.switcher)({\n\t  c: function c(date, value, utc) {\n\t    return date[utc + 'Milliseconds'](value);\n\t  },\n\t  s: function s(date, value, utc) {\n\t    return date[utc + 'Seconds'](value);\n\t  },\n\t  m: function m(date, value, utc) {\n\t    return date[utc + 'Minutes'](value);\n\t  },\n\t  h: function h(date, value, utc) {\n\t    return date[utc + 'Hours'](value);\n\t  },\n\t  d: function d(date, value, utc) {\n\t    return date[utc + 'Date'](value);\n\t  },\n\t  M: function M(date, value, utc) {\n\t    return date[utc + 'Month'](value - 1);\n\t  },\n\t  y: function y(date, value, utc) {\n\t    return date[utc + 'FullYear'](value);\n\t  }\n\t});\n\t\n\t/**\r\n\t * @class Dat\r\n\t * @extends Super\r\n\t * @public\r\n\t * @param {Date} [date = new Date()] - A date to wrap.\r\n\t * @returns {Dat} Instance of Dat.\r\n\t * @description Wrap of a date.\r\n\t *\r\n\t * @example\r\n\t * const date = new Dat(new Date());\r\n\t */\n\t\n\tvar Dat = function (_Super) {\n\t  _inherits(Dat, _Super);\n\t\n\t  function Dat() {\n\t    var date = arguments.length <= 0 || arguments[0] === undefined ? new Date() : arguments[0];\n\t\n\t    _classCallCheck(this, Dat);\n\t\n\t    return _possibleConstructorReturn(this, Object.getPrototypeOf(Dat).call(this, date));\n\t\n\t    /**\r\n\t     * @member Dat#$\r\n\t     * @type {Date}\r\n\t     * @public\r\n\t     * @description Original date.\r\n\t     */\n\t  }\n\t\n\t  /**\r\n\t   * @method Dat#add\r\n\t   * @public\r\n\t   * @param {AddPeriod|Object.<AddPeriod, Number>} what - What to add.\r\n\t   * @param {Number} [number] - Number of what to add if the first argument is a period string.\r\n\t   * @returns {Dat} Returns this.\r\n\t   * @description Method for adding amounts of time to the date. Returns new instance of Dat.\r\n\t   *\r\n\t   * @example\r\n\t   * new Dat(new Date('1999-12-31T23:59:59.999Z')).add('c', 2).toISOString();         // '2000-01-01T00:00:00.001Z'\r\n\t   * new Dat(new Date('1999-12-31T23:59:59.999Z')).add({ c: 2, d: 5 }).toISOString(); // '2000-01-06T00:00:00.001Z'\r\n\t   */\n\t\n\t\n\t  _createClass(Dat, [{\n\t    key: 'add',\n\t    value: function add(what, number) {\n\t      if (arguments.length >= 2) {\n\t        what = _defineProperty({}, what, number);\n\t      }\n\t\n\t      return this.time(this.time() + new _Super3.default(what).sum(function (value, what) {\n\t        return coeffs[what] * value;\n\t      }));\n\t    }\n\t\n\t    /**\r\n\t     * @method Dat#expires\r\n\t     * @public\r\n\t     * @param {*} [value = this] - Value to resolve after the date expires.\r\n\t     * @returns {Promise} New instance of Promise.\r\n\t     * @description Method for defining when the date expires.\r\n\t     *\r\n\t     * @example\r\n\t     * new Dat().add('c', 500).expires('Expired').then((value) => {\r\n\t     *   // After 500 milliseconds\r\n\t     *   console.log(value); // 'Expired'\r\n\t     * });\r\n\t     */\n\t\n\t  }, {\n\t    key: 'expires',\n\t    value: function expires(value) {\n\t      if (!arguments.length) {\n\t        value = this;\n\t      }\n\t\n\t      return new _Num2.default(this.$ - now()).timeout(value);\n\t    }\n\t\n\t    /**\r\n\t     * @method Dat#format\r\n\t     * @public\r\n\t     * @param {String} string - Template for the output.\r\n\t     * @param {String} [prefix = ''] - If needed [all special strings]{@link Format}\r\n\t     * are treated as they should be prefix with prefix.\r\n\t     * @returns {String} Formatted string.\r\n\t     * @description Method for creating formatted output based on a string.\r\n\t     *\r\n\t     * @example\r\n\t     * new Dat('1999-12-31T23:59:59.999Z').format('Seconds: $ss, milliseconds: $ccc.', '$');\r\n\t     * // 'Seconds: 59, milliseconds: 999.'\r\n\t     */\n\t\n\t  }, {\n\t    key: 'format',\n\t    value: function format(string) {\n\t      var _this2 = this;\n\t\n\t      var prefix = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];\n\t\n\t      string = new _Str2.default(new _Super3.default(string).$);\n\t      prefix = String(new _Super3.default(prefix).$);\n\t\n\t      (0, _helpers.iterate)(_formats2.default, function (format) {\n\t        string = string.replaceString(prefix + format.format, format.match(_this2, 'get'));\n\t      });\n\t\n\t      return string.$;\n\t    }\n\t\n\t    /**\r\n\t     * @method Dat#formatUTC\r\n\t     * @public\r\n\t     * @param {String} string - See {@link Dat#format}.\r\n\t     * @param {String} [prefix = ''] - See {@link Dat#format}.\r\n\t     * @returns {String} Formatted string.\r\n\t     * @description UTC version of {@link Dat#format}.\r\n\t     *\r\n\t     * @example\r\n\t     * new Dat('1999-07-07T03:09:09.099Z').formatUTC(\r\n\t     *   `\r\n\t     *     Milliseconds: $ccc|$c.\r\n\t     *     Seconds:      $ss|$s.\r\n\t     *     Minutes:      $mm|$m.\r\n\t     *     Hours:        $hh|$h.\r\n\t     *     Day:          $dddd|$ddd|$dd|$d.\r\n\t     *     Month:        $MMMM|$MMM|$MM|$M.\r\n\t     *     Year:         $yyyy|$yy|$y.\r\n\t     *   `,\r\n\t     *   '$'\r\n\t     * );\r\n\t     * // Milliseconds: 099|99.\r\n\t     * // Seconds:      09|9.\r\n\t     * // Minutes:      09|9.\r\n\t     * // Hours:        03|3.\r\n\t     * // Day:          Friday|Fri|07|7.\r\n\t     * // Month:        July|Jul|07|7.\r\n\t     * // Year:         1999|99|1999.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'formatUTC',\n\t    value: function formatUTC(string) {\n\t      var _this3 = this;\n\t\n\t      var prefix = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];\n\t\n\t      string = new _Str2.default(new _Super3.default(string).$);\n\t      prefix = String(new _Super3.default(prefix).$);\n\t\n\t      (0, _helpers.iterate)(_formats2.default, function (format) {\n\t        string = string.replaceString(prefix + format.format, format.match(_this3, 'getUTC'));\n\t      });\n\t\n\t      return string.$;\n\t    }\n\t\n\t    /**\r\n\t     * @method Dat#get\r\n\t     * @public\r\n\t     * @param {GetPeriod} what - What to get.\r\n\t     * @returns {Number} Number of what to get.\r\n\t     * @description Method for getting values such as seconds or minutes.\r\n\t     *\r\n\t     * @example\r\n\t     * new Dat(new Date('1999-12-31T23:59:59.999Z')).get('s'); // 59\r\n\t     */\n\t\n\t  }, {\n\t    key: 'get',\n\t    value: function get(what) {\n\t      return getSwitcher(what, [this.$, 'get']);\n\t    }\n\t\n\t    /**\r\n\t     * @method Dat#getUTC\r\n\t     * @public\r\n\t     * @param {GetPeriod} what - See {@link Dat#get}.\r\n\t     * @returns {Number} Number of what to get.\r\n\t     * @description UTC version of {@link Dat#get}.\r\n\t     *\r\n\t     * @example\r\n\t     * const date = new Dat(new Date('1999-12-31T23:59:59.999Z'));\r\n\t     *\r\n\t     * date.getUTC('c');  // 999\r\n\t     * date.getUTC('s');  // 59\r\n\t     * date.getUTC('m');  // 59\r\n\t     * date.getUTC('h');  // 23\r\n\t     * date.getUTC('d');  // 31\r\n\t     * date.getUTC('dw'); // 5\r\n\t     * date.getUTC('M');  // 12\r\n\t     * date.getUTC('y');  // 1999\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getUTC',\n\t    value: function getUTC(what) {\n\t      return getSwitcher(what, [this.$, 'getUTC']);\n\t    }\n\t\n\t    /**\r\n\t     * @method Dat#isAfter\r\n\t     * @public\r\n\t     * @param {DateLike} date - Date to be compared to this date.\r\n\t     * @returns {Boolean} If this date is after the argument one.\r\n\t     * @description Finds out if this date is after the argument one.\r\n\t     *\r\n\t     * @example\r\n\t     * new Dat(new Date(333)).isAfter(new Date(334)); // false\r\n\t     * new Dat(new Date(333)).isAfter(new Date(332)); // true\r\n\t     */\n\t\n\t  }, {\n\t    key: 'isAfter',\n\t    value: function isAfter(date) {\n\t      date = new Date(new _Super3.default(date).$);\n\t\n\t      return date.getTime() < this.$.getTime();\n\t    }\n\t\n\t    /**\r\n\t     * @method Dat#isBefore\r\n\t     * @public\r\n\t     * @param {DateLike} date - Date to be compared to this date.\r\n\t     * @returns {Boolean} If this date is before the argument one.\r\n\t     * @description Finds out if this date is before the argument one.\r\n\t     *\r\n\t     * @example\r\n\t     * new Dat(new Date(333)).isBefore(new Date(334)); // true\r\n\t     * new Dat(new Date(333)).isBefore(new Date(332)); // false\r\n\t     */\n\t\n\t  }, {\n\t    key: 'isBefore',\n\t    value: function isBefore(date) {\n\t      date = new Date(new _Super3.default(date).$);\n\t\n\t      return date.getTime() > this.$.getTime();\n\t    }\n\t\n\t    /**\r\n\t     * @method Dat#isBetween\r\n\t     * @public\r\n\t     * @param {DateLike} date1 - Start of the range.\r\n\t     * @param {DateLike} date2 - End of the range.\r\n\t     * @returns {Boolean} If this date is after date1 and before date2.\r\n\t     * @description Finds out if this date is after date1 and before date2.\r\n\t     *\r\n\t     * @example\r\n\t     * new Dat(new Date(333)).isBetween(new Date(332), new Date(334)); // true\r\n\t     * new Dat(new Date(333)).isBetween(new Date(334), new Date(332)); // false\r\n\t     */\n\t\n\t  }, {\n\t    key: 'isBetween',\n\t    value: function isBetween(date1, date2) {\n\t      var time = this.$.getTime();\n\t\n\t      date1 = new Date(new _Super3.default(date1).$);\n\t      date2 = new Date(new _Super3.default(date2).$);\n\t\n\t      return time > date1.getTime() && time < date2.getTime();\n\t    }\n\t\n\t    /**\r\n\t     * @method Dat#isInvalid\r\n\t     * @public\r\n\t     * @returns {Boolean} If the date is invalid.\r\n\t     * @description Returns if the date is invalid.\r\n\t     *\r\n\t     * @example\r\n\t     * new Dat(new Date('a')).isInvalid(); // true\r\n\t     * new Dat(new Date(1)).isInvalid();   // false\r\n\t     */\n\t\n\t  }, {\n\t    key: 'isInvalid',\n\t    value: function isInvalid() {\n\t      return this.$.toString() === 'Invalid Date';\n\t    }\n\t\n\t    /**\r\n\t     * @method Dat#isPassed\r\n\t     * @public\r\n\t     * @returns {Boolean} If the date is passed.\r\n\t     * @description Returns if the date is passed.\r\n\t     *\r\n\t     * @example\r\n\t     * new Dat(new Date(1)).isPassed(); // true\r\n\t     */\n\t\n\t  }, {\n\t    key: 'isPassed',\n\t    value: function isPassed() {\n\t      return this.isBefore(now());\n\t    }\n\t\n\t    /**\r\n\t     * @method Dat#ofOne\r\n\t     * @public\r\n\t     * @param {OfOnePeriod} what - Period to check.\r\n\t     * @param {DateLike} date - Date to check.\r\n\t     * @returns {Boolean} If two dates are of one second, minute or something else.\r\n\t     * @description Returns if two dates are of one second, minute or something else.\r\n\t     *\r\n\t     * @example\r\n\t     * new Dat(new Date('1999-12-31T23:59:59.000Z')).ofOne('s', new Date(1999-12-31T23:59:59.333Z')); // true\r\n\t     * new Dat(new Date('1999-12-31T23:59:59.000Z')).ofOne('s', new Date(1999-12-31T23:59:58.999Z')); // false\r\n\t     */\n\t\n\t  }, {\n\t    key: 'ofOne',\n\t    value: function ofOne(what, date) {\n\t      var _this4 = this;\n\t\n\t      if (!(what in coeffs) || what === 'w') {\n\t        return false;\n\t      }\n\t\n\t      date = new Dat(new Date(date));\n\t\n\t      var started = void 0;\n\t\n\t      return (0, _helpers.iterate)(coeffs, function (coeff, w) {\n\t        if (w === what) {\n\t          started = true;\n\t        }\n\t\n\t        if (!started || w === 'w') {\n\t          return;\n\t        }\n\t\n\t        if (started && _this4.get(w) !== date.get(w)) {\n\t          return false;\n\t        }\n\t      }) !== false;\n\t    }\n\t\n\t    /**\r\n\t     * @method Dat#set\r\n\t     * @public\r\n\t     * @param {SetPeriod|Object.<SetPeriod, Number>} what - What to add.\r\n\t     * @param {Number} [number] - Number of what to set if the first argument is a period string.\r\n\t     * @returns {Dat} Returns this.\r\n\t     * @description Method for setting values such as seconds or minutes.\r\n\t     *\r\n\t     * @example\r\n\t     * new Dat(new Date('1999-12-31T23:59:59.999Z')).set('s', 58).get('s');           // 58\r\n\t     * new Dat(new Date('1999-12-31T23:59:59.999Z')).set({ c: 998, s: 58 }).get('c'); // 998\r\n\t     */\n\t\n\t  }, {\n\t    key: 'set',\n\t    value: function set(what, number) {\n\t      var date = this.$;\n\t\n\t      if (arguments.length >= 2) {\n\t        what = _defineProperty({}, what, number);\n\t      }\n\t\n\t      what = new _Super3.default(what).$;\n\t\n\t      (0, _helpers.iterate)(what, function (value, what) {\n\t        setSwitcher(what, [date, value, 'set']);\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Dat#setUTC\r\n\t     * @public\r\n\t     * @param {SetPeriod|Object.<SetPeriod, Number>} what - See {@link Dat#set}.\r\n\t     * @param {Number} [number] - See {@link Dat#set}.\r\n\t     * @returns {Dat} Returns this.\r\n\t     * @description UTC version of {@link Dat#set}.\r\n\t     *\r\n\t     * @example\r\n\t     * const date = new Dat(new Date('1999-12-31T23:59:59.999Z'));\r\n\t     *\r\n\t     * date.setUTC('ccc', 998).getUTC('ccc'); // 998\r\n\t     * date.setUTC({\r\n\t     *   s: 58,\r\n\t     *   m: 58,\r\n\t     *   h: 22\r\n\t     * });\r\n\t     *\r\n\t     * date.getUTC('s'); // 58\r\n\t     * date.getUTC('m'); // 58\r\n\t     * date.getUTC('h'); // 23\r\n\t     */\n\t\n\t  }, {\n\t    key: 'setUTC',\n\t    value: function setUTC(what, number) {\n\t      var date = this.$;\n\t\n\t      if (arguments.length >= 2) {\n\t        what = _defineProperty({}, what, number);\n\t      }\n\t\n\t      what = new _Super3.default(what).$;\n\t\n\t      (0, _helpers.iterate)(what, function (value, what) {\n\t        setSwitcher(what, [date, value, 'setUTC']);\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Dat#setUTC\r\n\t     * @public\r\n\t     * @param {Number} [time] - Time to set.\r\n\t     * @returns {Dat|Number} - If the time argument is present this is returned otherwise the time is returned.\r\n\t     * @description Synonym for both\r\n\t     * [Date#getTime]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime} and\r\n\t     * [Date#setTime]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/setTime}.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'time',\n\t    value: function time(_time) {\n\t      var date = this.$;\n\t\n\t      if (arguments.length) {\n\t        date.setTime(_time);\n\t      }\n\t\n\t      return date.getTime();\n\t    }\n\t  }, {\n\t    key: 'toISOString',\n\t    value: function toISOString() {\n\t      return this.$.toISOString();\n\t    }\n\t  }, {\n\t    key: 'toLocaleString',\n\t    value: function toLocaleString() {\n\t      return this.$.toLocaleString();\n\t    }\n\t  }, {\n\t    key: 'toString',\n\t    value: function toString() {\n\t      return this.$.toString();\n\t    }\n\t  }, {\n\t    key: 'valueOf',\n\t    value: function valueOf() {\n\t      return this.$.valueOf();\n\t    }\n\t  }]);\n\t\n\t  return Dat;\n\t}(_Super3.default);\n\t\n\texports.Dat = Dat;\n\t\n\t(0, _helpers.defineProperties)(Dat.prototype, _defineProperty({}, _helpers.Symbol.toStringTag, 'Dat'));\n\t\n\t_constructors2.default[1].push({\n\t  check: _helpers.isDate,\n\t  cls: Dat\n\t});\n\t\n\t/**\r\n\t * @function now\r\n\t * @public\r\n\t * @returns {Number} Number of milliseconds.\r\n\t * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/now\r\n\t * @description Synonym for\r\n\t * [Date.now]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/now}.\r\n\t */\n\tfunction now() {\n\t  return Date.now();\n\t}\n\t\n\t/**\r\n\t * @function date\r\n\t * @public\r\n\t * @param {DateLike} [date = new Date()] - Date-like value that is passed to the Date constructor.\r\n\t * @returns {Dat} New instance of Dat.\r\n\t * @description Synonym for new Dat(new Date(date));\r\n\t */\n\tfunction date(date) {\n\t  if (!arguments.length) {\n\t    return new Dat(new Date());\n\t  }\n\t\n\t  date = new _Super3.default(date).$;\n\t\n\t  return new Dat(new Date(date));\n\t}\n\t\n\texports.default = Dat;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Num = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.rand = rand;\n\texports.random = random;\n\t\n\tvar _Super2 = __webpack_require__(18);\n\t\n\tvar _Super3 = _interopRequireDefault(_Super2);\n\t\n\tvar _Func = __webpack_require__(24);\n\t\n\tvar _Func2 = _interopRequireDefault(_Func);\n\t\n\tvar _Promise = __webpack_require__(21);\n\t\n\tvar _Promise2 = _interopRequireDefault(_Promise);\n\t\n\tvar _constructors = __webpack_require__(6);\n\t\n\tvar _constructors2 = _interopRequireDefault(_constructors);\n\t\n\tvar _helpers = __webpack_require__(8);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @module Num\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @private\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @mixin\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @description Exports Num class.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar toRadian = Math.PI / 180;\n\tvar toDegree = 180 / Math.PI;\n\tvar ln2 = Math.LN2;\n\tvar ln10 = Math.LN10;\n\t\n\t/**\n\t * @class Num\n\t * @extends Super\n\t * @public\n\t * @param {Number} [number = 0] - A number to wrap.\n\t * @returns {Num} Instance of Num.\n\t * @description Wrap of a number.\n\t *\n\t * @example\n\t * const num = new Num(1);\n\t */\n\t\n\tvar Num = exports.Num = function (_Super) {\n\t  _inherits(Num, _Super);\n\t\n\t  function Num() {\n\t    var number = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\t\n\t    _classCallCheck(this, Num);\n\t\n\t    return _possibleConstructorReturn(this, Object.getPrototypeOf(Num).call(this, number));\n\t\n\t    /**\n\t     * @member Num#$\n\t     * @type {Number}\n\t     * @public\n\t     * @description Original number.\n\t     */\n\t  }\n\t\n\t  /**\n\t   * @member Num#abs\n\t   * @type {Number}\n\t   * @public\n\t   * @readonly\n\t   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/abs\n\t   * @description Synonym for\n\t   * [Math.abs]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/abs}.\n\t   *\n\t   * @example\n\t   * new Num(1).abs;  // 1\n\t   * new Num(-1).abs; // 1\n\t   */\n\t\n\t\n\t  _createClass(Num, [{\n\t    key: 'acos',\n\t\n\t\n\t    /**\n\t     * @method Num#acos\n\t     * @public\n\t     * @param {Boolean|*} [toDegrees = false] If it is truthy the return value is transformed into degrees.\n\t     * @returns {Number} Arccosine of the number.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/acos\n\t     * @description Synonym for\n\t     * [Math.acos]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/acos}.\n\t     */\n\t    value: function acos(toDegrees) {\n\t      return (toDegrees ? toDegree : 1) * Math.acos(this.$);\n\t    }\n\t\n\t    /**\n\t     * @member Num#acosh\n\t     * @type {Number}\n\t     * @public\n\t     * @readonly\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/acosh\n\t     * @description Synonym for\n\t     * [Math.acosh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/acosh}.\n\t     */\n\t\n\t  }, {\n\t    key: 'asin',\n\t\n\t\n\t    /**\n\t     * @method Num#asin\n\t     * @public\n\t     * @param {Boolean|*} [toDegrees = false] If it is truthy the return value is transformed into degrees.\n\t     * @returns {Number} Arcsine of the number.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/asin\n\t     * @description Synonym for\n\t     * [Math.asin]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/asin}.\n\t     */\n\t    value: function asin(toDegrees) {\n\t      return (toDegrees ? toDegree : 1) * Math.asin(this.$);\n\t    }\n\t\n\t    /**\n\t     * @method Num#atan\n\t     * @public\n\t     * @param {Boolean|*} [toDegrees = false] If it is truthy the return value is transformed into degrees.\n\t     * @returns {Number} Arcsine of the number.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/atan\n\t     * @description Synonym for\n\t     * [Math.atan]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/atan}.\n\t     */\n\t\n\t  }, {\n\t    key: 'atan',\n\t    value: function atan(toDegrees) {\n\t      return (toDegrees ? toDegree : 1) * Math.atan(this.$);\n\t    }\n\t\n\t    /**\n\t     * @member Num#atanh\n\t     * @type {Number}\n\t     * @public\n\t     * @readonly\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/atanh\n\t     * @description Synonym for\n\t     * [Math.atanh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/atanh}.\n\t     */\n\t\n\t  }, {\n\t    key: 'cos',\n\t\n\t\n\t    /**\n\t     * @method Num#cos\n\t     * @public\n\t     * @param {Boolean|*} [asDegrees = false] If it is truthy the number is treated as a degree value.\n\t     * @returns {Number} Cosine of the number.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cos\n\t     * @description Synonym for\n\t     * [Math.cos]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cos}.\n\t     */\n\t    value: function cos(asDegrees) {\n\t      return Math.cos((asDegrees ? toRadian : 1) * this.$);\n\t    }\n\t\n\t    /**\n\t     * @member Num#cosh\n\t     * @type {Number}\n\t     * @public\n\t     * @readonly\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cosh\n\t     * @description Synonym for\n\t     * [Math.cosh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cosh}.\n\t     */\n\t\n\t  }, {\n\t    key: 'interval',\n\t\n\t\n\t    /**\n\t     * @method Num#interval\n\t     * @public\n\t     * @param {Function} func - Function that is called every <number> milliseconds.\n\t     * @returns {Function} Function that aborts the interval. The context of the function (if it's not already bound)\n\t     * is the object with the abort method.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/setInterval\n\t     * @description Analogue of the\n\t     * [setInterval]{@link https://developer.mozilla.org/en/docs/Web/API/WindowTimers/setInterval}.\n\t     *\n\t     * @example\n\t     * const times = 0;\n\t     * new Num(50).interval(function () {\n\t     *   if (++times === 10) {\n\t     *     this.abort();\n\t     *   }\n\t     * });\n\t     */\n\t    value: function interval(func) {\n\t      (0, _helpers.validate)([func], ['function'], 'Num#interval');\n\t\n\t      func = new _Func2.default(func).bindContext({ abort: abort });\n\t\n\t      var number = this.$;\n\t      var args = [].slice.call(arguments, 1);\n\t\n\t      var timeout = void 0;\n\t      var aborted = void 0;\n\t\n\t      setTimeout(function interval() {\n\t        func.apply(null, args);\n\t\n\t        if (!aborted) {\n\t          timeout = setTimeout(interval, number);\n\t        }\n\t      }, 0);\n\t\n\t      return abort;\n\t\n\t      function abort() {\n\t        aborted = true;\n\t\n\t        return clearTimeout(timeout);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * @member Num#ln\n\t     * @type {Number}\n\t     * @public\n\t     * @readonly\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log\n\t     * @description Synonym for\n\t     * [Math.log]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log}.\n\t     */\n\t\n\t  }, {\n\t    key: 'log',\n\t\n\t\n\t    /**\n\t     * @method Num#log\n\t     * @public\n\t     * @param {Number} number - Number to get logarithm of.\n\t     * @returns {Number} Logarithm of the argument number to the number base.\n\t     * @description Returns the logarithm of the argument number to the number base.\n\t     *\n\t     * @example\n\t     * new Num(2).log(16);  // 4\n\t     * new Num(3).log(243); // 5\n\t     */\n\t    value: function log(number) {\n\t      return Math.log(number) / Math.log(this.$);\n\t    }\n\t\n\t    /**\n\t     * @member Num#log2\n\t     * @type {Number}\n\t     * @public\n\t     * @readonly\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log2\n\t     * @description Synonym for\n\t     * [Math.log2]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log2}.\n\t     */\n\t\n\t  }, {\n\t    key: 'pow',\n\t\n\t\n\t    /**\n\t     * @method Num#pow\n\t     * @public\n\t     * @param {Number} power - Power the number should be raised to.\n\t     * @returns {Number} The number to the <power> power.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/pow\n\t     * @description Synonym for\n\t     * [Math.pow]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/pow}.\n\t     *\n\t     * @example\n\t     * new Num(4).pow(.5); // 2\n\t     * new Num(3).pow(2);  // 9\n\t     */\n\t    value: function pow(power) {\n\t      return Math.pow(this.$, power);\n\t    }\n\t\n\t    /**\n\t     * @method Num#root\n\t     * @public\n\t     * @param {Number} power - Power the number should be raised to.\n\t     * @returns {Number} The <power> root of the number.\n\t     * @description Synonym for number.pow(1 / power);\n\t     *\n\t     * @example\n\t     * new Num(4).root(2);   // 0.5\n\t     * new Num(243).root(5); // 3\n\t     */\n\t\n\t  }, {\n\t    key: 'root',\n\t    value: function root(power) {\n\t      return Math.pow(this.$, 1 / power);\n\t    }\n\t\n\t    /**\n\t     * @member Num#round\n\t     * @type {Number}\n\t     * @public\n\t     * @readonly\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/round\n\t     * @description Synonym for\n\t     * [Math.round]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/round}.\n\t     *\n\t     * @example\n\t     * new Num(1.1).floor;  // 1\n\t     * new Num(-1.1).floor; // -1\n\t     * new Num(1.5).floor;  // 2\n\t     */\n\t\n\t  }, {\n\t    key: 'sin',\n\t\n\t\n\t    /**\n\t     * @method Num#sin\n\t     * @public\n\t     * @param {Boolean|*} [asDegrees = false] If it is truthy the number is treated as a degree value.\n\t     * @returns {Number} Sine of the number.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sin\n\t     * @description Synonym for\n\t     * [Math.sin]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sin}.\n\t     */\n\t    value: function sin(asDegrees) {\n\t      return Math.sin((asDegrees ? toRadian : 1) * this.$);\n\t    }\n\t\n\t    /**\n\t     * @member Num#sinh\n\t     * @type {Number}\n\t     * @public\n\t     * @readonly\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sinh\n\t     * @description Synonym for\n\t     * [Math.sinh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sinh}.\n\t     */\n\t\n\t  }, {\n\t    key: 'tan',\n\t\n\t\n\t    /**\n\t     * @method Num#tan\n\t     * @public\n\t     * @param {Boolean|*} [asDegrees = false] If it is truthy the number is treated as a degree value.\n\t     * @returns {Number} Tangent of the number.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/tan\n\t     * @description Synonym for\n\t     * [Math.tan]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/tan}.\n\t     */\n\t    value: function tan(asDegrees) {\n\t      return Math.tan((asDegrees ? toRadian : 1) * this.$);\n\t    }\n\t\n\t    /**\n\t     * @member Num#tanh\n\t     * @type {Number}\n\t     * @public\n\t     * @readonly\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/tanh\n\t     * @description Synonym for\n\t     * [Math.tanh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/tanh}.\n\t     */\n\t\n\t  }, {\n\t    key: 'timeout',\n\t\n\t\n\t    /**\n\t     * @method Num#timeout\n\t     * @public\n\t     * @param {*} [value] - Value to be resolved by the promise.\n\t     * @returns {Promise} Promise that could be aborted.\n\t     * @see https://developer.mozilla.org/en/docs/Web/API/WindowTimers/setTimeout\n\t     * @description Promise-based analogue of\n\t     * [setTimeout]{@link https://developer.mozilla.org/en/docs/Web/API/WindowTimers/setTimeout}.\n\t     *\n\t     * @example\n\t     * new Num(50).timeout('resolved').then((value) => {\n\t     *   console.log(value); // 'resolved'\n\t     * });\n\t     *\n\t     * const promise = new Num(50).timeout();\n\t     * promise.abort();\n\t     */\n\t    value: function timeout(value) {\n\t      var _this2 = this;\n\t\n\t      var timeout = void 0;\n\t      var reject = void 0;\n\t\n\t      var promise = new _Promise2.default(function (resolve, rej) {\n\t        reject = rej;\n\t        timeout = setTimeout(resolve, _this2.$, value);\n\t      });\n\t\n\t      promise.abort = function abort() {\n\t        clearTimeout(timeout);\n\t\n\t        reject(new Error('Timeout was aborted'));\n\t\n\t        return this;\n\t      };\n\t\n\t      return promise;\n\t    }\n\t\n\t    /**\n\t     * @method Num#toBase\n\t     * @public\n\t     * @param {Number} [base = 10] - Base that the number should inverted to.\n\t     * @returns {String} A string representation of the number in <base> base.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toString\n\t     * @description Synonym for\n\t     * [Number#toString]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toString}.\n\t     *\n\t     * @example\n\t     * new Num(4).toBase(2); // 100\n\t     * new Num(3).toBase();  // 3\n\t     */\n\t\n\t  }, {\n\t    key: 'toBase',\n\t    value: function toBase() {\n\t      var base = arguments.length <= 0 || arguments[0] === undefined ? 10 : arguments[0];\n\t\n\t      return this.$.toString(base);\n\t    }\n\t\n\t    /**\n\t     * @method Num#toExponential\n\t     * @public\n\t     * @param {Number} [fractionDigits] - See the link.\n\t     * @returns {String} A string representation of the number in the exponential format.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential\n\t     * @description Synonym for\n\t     * [Number#toExponential]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential}.\n\t     */\n\t\n\t  }, {\n\t    key: 'toExponential',\n\t    value: function toExponential(fractionDigits) {\n\t      return this.$.toExponential(fractionDigits);\n\t    }\n\t\n\t    /**\n\t     * @method Num#toFixed\n\t     * @public\n\t     * @param {Number} [digits = 0] - See the link.\n\t     * @returns {String} Fixed-point formatted number.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed\n\t     * @description Synonym for\n\t     * [Number#toFixed]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed}.\n\t     */\n\t\n\t  }, {\n\t    key: 'toFixed',\n\t    value: function toFixed(digits) {\n\t      return this.$.toFixed(digits);\n\t    }\n\t\n\t    /**\n\t     * @method Num#toPrecision\n\t     * @public\n\t     * @param {Number} [precision] - See the link.\n\t     * @returns {String} A string representation of the number to the specified precision.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toPrecision\n\t     * @description Synonym for\n\t     * [Number#toPrecision]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toPrecision}.\n\t     */\n\t\n\t  }, {\n\t    key: 'toPrecision',\n\t    value: function toPrecision(precision) {\n\t      return this.$.toPrecision(precision);\n\t    }\n\t  }, {\n\t    key: 'valueOf',\n\t    value: function valueOf() {\n\t      return Number(this.$);\n\t    }\n\t  }, {\n\t    key: 'abs',\n\t    get: function get() {\n\t      return Math.abs(this.$);\n\t    }\n\t  }, {\n\t    key: 'acosh',\n\t    get: function get() {\n\t      var number = this.$;\n\t\n\t      return Math.log(number + Math.sqrt(number * number - 1));\n\t    }\n\t\n\t    /**\n\t     * @member Num#asinh\n\t     * @type {Number}\n\t     * @public\n\t     * @readonly\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/asinh\n\t     * @description Synonym for\n\t     * [Math.asinh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/asinh}.\n\t     */\n\t\n\t  }, {\n\t    key: 'asinh',\n\t    get: function get() {\n\t      var number = this.$;\n\t\n\t      return Math.log(number + Math.sqrt(number * number + 1));\n\t    }\n\t  }, {\n\t    key: 'atanh',\n\t    get: function get() {\n\t      var number = this.$;\n\t\n\t      return Math.log((1 + number) / (1 - number)) / 2;\n\t    }\n\t\n\t    /**\n\t     * @member Num#cbrt\n\t     * @type {Number}\n\t     * @public\n\t     * @readonly\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cbrt\n\t     * @description Synonym for\n\t     * [Math.cbrt]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cbrt}.\n\t     */\n\t\n\t  }, {\n\t    key: 'cbrt',\n\t    get: function get() {\n\t      var cbrt = Math.pow(Math.abs(this.$), 1 / 3);\n\t\n\t      return this.$ > 0 ? cbrt : -cbrt;\n\t    }\n\t\n\t    /**\n\t     * @member Num#ceil\n\t     * @type {Number}\n\t     * @public\n\t     * @readonly\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil\n\t     * @description Synonym for\n\t     * [Math.ceil]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil}.\n\t     *\n\t     * @example\n\t     * new Num(1.1).ceil;  // 2\n\t     * new Num(-1.1).ceil; // -1\n\t     */\n\t\n\t  }, {\n\t    key: 'ceil',\n\t    get: function get() {\n\t      return Math.ceil(this.$);\n\t    }\n\t  }, {\n\t    key: 'cosh',\n\t    get: function get() {\n\t      var exp = this.exp;\n\t\n\t      return (exp + 1 / exp) / 2;\n\t    }\n\t\n\t    /**\n\t     * @member Num#cube\n\t     * @type {Number}\n\t     * @public\n\t     * @readonly\n\t     * @description Cube of the number.\n\t     *\n\t     * @example\n\t     * new Num(2).cube;  // 8\n\t     * new Num(-3).ceil; // -27\n\t     */\n\t\n\t  }, {\n\t    key: 'cube',\n\t    get: function get() {\n\t      return this.$ * this.$ * this.$;\n\t    }\n\t\n\t    /**\n\t     * @member Num#exp\n\t     * @type {Number}\n\t     * @public\n\t     * @readonly\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/exp\n\t     * @description Synonym for\n\t     * [Math.exp]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/exp}.\n\t     */\n\t\n\t  }, {\n\t    key: 'exp',\n\t    get: function get() {\n\t      return Math.exp(this.$);\n\t    }\n\t\n\t    /**\n\t     * @member Num#floor\n\t     * @type {Number}\n\t     * @public\n\t     * @readonly\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/floor\n\t     * @description Synonym for\n\t     * [Math.floor]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/floor}.\n\t     *\n\t     * @example\n\t     * new Num(1.1).floor;  // 1\n\t     * new Num(-1.1).floor; // -2\n\t     */\n\t\n\t  }, {\n\t    key: 'floor',\n\t    get: function get() {\n\t      return Math.floor(this.$);\n\t    }\n\t  }, {\n\t    key: 'ln',\n\t    get: function get() {\n\t      return Math.log(this.$);\n\t    }\n\t  }, {\n\t    key: 'log2',\n\t    get: function get() {\n\t      return this.ln / ln2;\n\t    }\n\t\n\t    /**\n\t     * @member Num#log10\n\t     * @type {Number}\n\t     * @public\n\t     * @readonly\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log10\n\t     * @description Synonym for\n\t     * [Math.log10]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log10}.\n\t     */\n\t\n\t  }, {\n\t    key: 'log10',\n\t    get: function get() {\n\t      return this.ln / ln10;\n\t    }\n\t  }, {\n\t    key: 'round',\n\t    get: function get() {\n\t      return Math.round(this.$);\n\t    }\n\t\n\t    /**\n\t     * @member Num#sign\n\t     * @type {Number}\n\t     * @public\n\t     * @readonly\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\t     * @description Synonym for\n\t     * [Math.sign]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sign}.\n\t     */\n\t\n\t  }, {\n\t    key: 'sign',\n\t    get: function get() {\n\t      var number = this.$;\n\t\n\t      if (!number) {\n\t        return number;\n\t      }\n\t\n\t      return number > 0 ? 1 : -1;\n\t    }\n\t  }, {\n\t    key: 'sinh',\n\t    get: function get() {\n\t      var exp = this.exp;\n\t\n\t      return (exp - 1 / exp) / 2;\n\t    }\n\t\n\t    /**\n\t     * @member Num#sq\n\t     * @type {Number}\n\t     * @public\n\t     * @readonly\n\t     * @description The square of the number.\n\t     *\n\t     * @example\n\t     * new Num(2).sq;  // 4\n\t     * new Num(-3).sq; // 9\n\t     */\n\t\n\t  }, {\n\t    key: 'sq',\n\t    get: function get() {\n\t      return this.$ * this.$;\n\t    }\n\t\n\t    /**\n\t     * @member Num#sqrt\n\t     * @type {Number}\n\t     * @public\n\t     * @readonly\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sqrt\n\t     * @description Synonym for\n\t     * [Math.sqrt]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sqrt}.\n\t     */\n\t\n\t  }, {\n\t    key: 'sqrt',\n\t    get: function get() {\n\t      return Math.sqrt(this.$);\n\t    }\n\t  }, {\n\t    key: 'tanh',\n\t    get: function get() {\n\t      var number = this.$;\n\t\n\t      if (!(0, _helpers.isFinite)(number)) {\n\t        return this.sign;\n\t      }\n\t\n\t      var exp = Math.exp(2 * number);\n\t\n\t      return (exp - 1) / (exp + 1);\n\t    }\n\t  }]);\n\t\n\t  return Num;\n\t}(_Super3.default);\n\t\n\t(0, _helpers.defineProperties)(Num.prototype, _defineProperty({}, _helpers.Symbol.toStringTag, 'Num'));\n\t\n\t_constructors2.default[1].push({\n\t  check: _helpers.isNumber,\n\t  cls: Num\n\t});\n\t\n\t/**\n\t * @function rand\n\t * @public\n\t * @param {Number} [start = 0] - Start of the range.\n\t * @param {Number} [end = 1] - End of the range.\n\t * @returns {Number} Random number.\n\t * @description Returns a random number in the range specified by the arguments.\n\t *\n\t * @example\n\t * rand(1, 5); // 2.315\n\t * rand(1, 5); // 4.356763\n\t */\n\tfunction rand() {\n\t  var start = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\t  var end = arguments.length <= 1 || arguments[1] === undefined ? 1 : arguments[1];\n\t\n\t  return start + (end - start) * Math.random();\n\t}\n\t\n\t/**\n\t * @function random\n\t * @public\n\t * @param {Integer} start - Start of the range.\n\t * @param {Integer} end - End of the range.\n\t * @returns {Number} Random integer.\n\t * @description Returns a random integer number in the range specified by the arguments.\n\t *\n\t * @example\n\t * random(1, 5); // 3\n\t * random(1, 5); // 1\n\t */\n\tfunction random(start, end) {\n\t  (0, _helpers.validate)([start, end], ['intLike', 'intLike'], 'random');\n\t\n\t  if (end <= start) {\n\t    throw new Error('The second argument must be greater than the first!', 'random');\n\t  }\n\t\n\t  return Math.floor(rand(start, end + 1));\n\t}\n\t\n\texports.default = Num;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Func = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.method = method;\n\texports.noop = noop;\n\texports.self = self;\n\t\n\tvar _Super2 = __webpack_require__(18);\n\t\n\tvar _Super3 = _interopRequireDefault(_Super2);\n\t\n\tvar _Promise = __webpack_require__(21);\n\t\n\tvar _Promise2 = _interopRequireDefault(_Promise);\n\t\n\tvar _constructors = __webpack_require__(6);\n\t\n\tvar _constructors2 = _interopRequireDefault(_constructors);\n\t\n\tvar _helpers = __webpack_require__(8);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @module Func\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @private\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @mixin\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @description Exports Func class.\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\r\n\t * @callback BeforeMiddleware\r\n\t * @param {Array} args - Previous arguments.\r\n\t * @param {Func} func - This function.\r\n\t * @returns {Array} - New arguments.\r\n\t */\n\t\n\t/**\r\n\t * @callback AfterMiddleware\r\n\t * @param {*} returnValue - Previous return value.\r\n\t * @param {Func} func - This function.\r\n\t * @returns {*} - New return value.\r\n\t */\n\t\n\t/**\r\n\t * @class Func\r\n\t * @extends Super\r\n\t * @public\r\n\t * @param {Function} [func = function () {}] - Function to wrap.\r\n\t * @returns {Func} Instance of Func.\r\n\t * @description A wrap of a function.\r\n\t *\r\n\t * @example\r\n\t * const func = new Func(Math.max);\r\n\t *\r\n\t * func(1, 4, -2, 5); // 5\r\n\t */\n\t\n\tvar Func = exports.Func = function (_Super) {\n\t  _inherits(Func, _Super);\n\t\n\t  function Func() {\n\t    var _ret2;\n\t\n\t    var func = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];\n\t\n\t    _classCallCheck(this, Func);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Func).call(this));\n\t\n\t    if (func instanceof Func) {\n\t      var _ret;\n\t\n\t      return _ret = func, _possibleConstructorReturn(_this, _ret);\n\t    }\n\t\n\t    function proxy() {\n\t      var _this2 = this,\n\t          _arguments = arguments;\n\t\n\t      if (++proxy.$$.called < proxy.$$.canBeCalled) {\n\t        var _ret3 = function () {\n\t          var _proxy$$$ = proxy.$$;\n\t          var before = _proxy$$$.before;\n\t          var after = _proxy$$$.after;\n\t          var sync = _proxy$$$.sync;\n\t          var contextLocked = _proxy$$$.contextLocked;\n\t          var _proxy$$$2 = proxy.$$;\n\t          var context = _proxy$$$2.context;\n\t          var args = _proxy$$$2.args;\n\t\n\t          var ret = void 0;\n\t\n\t          context = contextLocked ? context : context || _this2;\n\t          args = args.concat((0, _helpers.toArray)(_arguments));\n\t\n\t          if (sync) {\n\t            (0, _helpers.iterate)(before, function (middleware) {\n\t              args = middleware.call(context, (0, _helpers.toArray)(args), proxy);\n\t            });\n\t\n\t            ret = func.apply(context, (0, _helpers.toArray)(args));\n\t\n\t            (0, _helpers.iterate)(after, function (middleware) {\n\t              ret = middleware.call(context, ret, proxy);\n\t            });\n\t\n\t            return {\n\t              v: ret\n\t            };\n\t          }\n\t\n\t          var promise = _Promise2.default.resolve(args);\n\t\n\t          (0, _helpers.iterate)(before, function (middleware) {\n\t            promise = promise.then(function (args) {\n\t              return middleware.call(context, (0, _helpers.toArray)(args), proxy);\n\t            });\n\t          });\n\t\n\t          promise = promise.then(function (args) {\n\t            return func.apply(context, (0, _helpers.toArray)(args));\n\t          });\n\t\n\t          (0, _helpers.iterate)(after, function (middleware) {\n\t            promise = promise.then(function (ret) {\n\t              return middleware.call(context, ret, proxy);\n\t            });\n\t          });\n\t\n\t          return {\n\t            v: promise\n\t          };\n\t        }();\n\t\n\t        if ((typeof _ret3 === 'undefined' ? 'undefined' : _typeof(_ret3)) === \"object\") return _ret3.v;\n\t      }\n\t    }\n\t\n\t    /**\r\n\t     * @member {Object} Func#$$\r\n\t     * @type {Object}\r\n\t     * @protected\r\n\t     * @property {Array} after - After middleware array.\r\n\t     * @property {Array} args - Locked and bound arguments.\r\n\t     * @property {Array} argsLocked - Locked arguments.\r\n\t     * @property {Array} before - Before middleware array.\r\n\t     * @property {Number} called - How many times the function was called.\r\n\t     * @property {Number} canBeCalled - How many times the function can be actually called.\r\n\t     * @property {*} context - Locked or bound context.\r\n\t     * @property {Boolean} contextLocked - Is context locked or not.\r\n\t     * @property {Boolean} sync - Is function synchronous or not.\r\n\t     * @description Config parameters.\r\n\t     */\n\t    Object.defineProperty(proxy, '$$', {\n\t      value: {\n\t        after: [],\n\t        args: [],\n\t        argsLocked: [],\n\t        before: [],\n\t        called: 0,\n\t        canBeCalled: Infinity,\n\t        context: null,\n\t        contextLocked: false,\n\t        sync: true\n\t      }\n\t    });\n\t\n\t    /**\r\n\t     * @member {Function} Func#$\r\n\t     * @type {Function}\r\n\t     * @public\r\n\t     * @description Original function.\r\n\t     */\n\t    Object.defineProperty(proxy, '$', { value: func });\n\t    Object.setPrototypeOf(proxy, Func.prototype);\n\t\n\t    return _ret2 = proxy, _possibleConstructorReturn(_this, _ret2);\n\t  }\n\t\n\t  /**\r\n\t   * @method Func#after\r\n\t   * @public\r\n\t   * @param {AfterMiddleware} middleware - After middleware.\r\n\t   * @param {Boolean|*} [afterAll = true] - Boolean parameter where to put middleware.\r\n\t   * Truthy parameter stands for \"to the end\" and falsey for \"to the beginning\".\r\n\t   * @returns {Func} Returns this.\r\n\t   * @description Adds after middleware.\r\n\t   *\r\n\t   * @example\r\n\t   * const func = new Func((a) => a + 1)\r\n\t   *   .after((result) => result * result);\r\n\t   *\r\n\t   * func(4);  // 25\r\n\t   * func(-4); // 9\r\n\t   */\n\t\n\t\n\t  _createClass(Func, [{\n\t    key: 'after',\n\t    value: function after(middleware) {\n\t      var afterAll = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n\t\n\t      (0, _helpers.validate)([middleware], ['function'], 'Func#after');\n\t\n\t      var after = this.$$.after;\n\t\n\t\n\t      if (afterAll) {\n\t        after.push(middleware);\n\t      } else {\n\t        after.unshift(middleware);\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Func#apply\r\n\t     * @public\r\n\t     * @param {*} [context] - Context to call with.\r\n\t     * @param {(Array|Arguments)} [args] - Arguments to call with.\r\n\t     * @returns {*} Return of function call.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\r\n\t     * @description Synonym for\r\n\t     * [Function#apply]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Function/apply}.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'apply',\n\t    value: function apply(context, args) {\n\t      return function () {}.apply.apply(this, arguments);\n\t    }\n\t\n\t    /**\r\n\t     * @method Func#async\r\n\t     * @public\r\n\t     * @param {Boolean|*} [condition] - If the function should be synchronous or not.\r\n\t     * @returns {Func} Returns this.\r\n\t     * @description If the function should be synchronous or not.\r\n\t     *\r\n\t     * @example\r\n\t     * const func = new Func((a) => a + 1).async();\r\n\t     *\r\n\t     * func(4).then((result) => {\r\n\t     *   console.log(result); // 5\r\n\t     * });\r\n\t     */\n\t\n\t  }, {\n\t    key: 'async',\n\t    value: function async() {\n\t      var condition = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\t\n\t      this.$$.sync = !condition;\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Func#before\r\n\t     * @public\r\n\t     * @param {BeforeMiddleware} middleware - Before middleware.\r\n\t     * @param {Boolean|*} [beforeAll = true] - Boolean parameter where to put middleware.\r\n\t     * Truthy parameter stands for \"to the beginning\" and falsey for \"to the end\".\r\n\t     * @returns {Func} Returns this.\r\n\t     * @description Adds before middleware.\r\n\t     *\r\n\t     * @example\r\n\t     * const func = new Func((a) => a + 1)\r\n\t     *   .before(([arg]) => [arg * arg]);\r\n\t     *\r\n\t     * func(4); // 17\r\n\t     * func(3); // 10\r\n\t     */\n\t\n\t  }, {\n\t    key: 'before',\n\t    value: function before(middleware) {\n\t      var beforeAll = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n\t\n\t      (0, _helpers.validate)([middleware], ['function'], 'Func#before');\n\t\n\t      var before = this.$$.before;\n\t\n\t\n\t      if (beforeAll) {\n\t        before.unshift(middleware);\n\t      } else {\n\t        before.push(middleware);\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Func#bind\r\n\t     * @public\r\n\t     * @param {*} context - Context to bind.\r\n\t     * @param {...(Array|Arguments|*)} args - Arguments to bind.\r\n\t     * @returns {Func} Returns this.\r\n\t     * @description Composition of {@link Func#bindContext} and {@link Func#bindArgs}.\r\n\t     *\r\n\t     * @example\r\n\t     * const func = new Func(function (a, b) {\r\n\t     *   return this.a + a + b;\r\n\t     * }).bind({ a: 2 }, 1);\r\n\t     *\r\n\t     * func(1); // 4\r\n\t     * func(3); // 6\r\n\t     */\n\t\n\t  }, {\n\t    key: 'bind',\n\t    value: function bind(context) {\n\t      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        args[_key - 1] = arguments[_key];\n\t      }\n\t\n\t      return this.bindContext(context).bindArgs((0, _helpers.toArray)(arguments).slice(1));\n\t    }\n\t\n\t    /**\r\n\t     * @method Func#bindArgs\r\n\t     * @public\r\n\t     * @param {(Array|Arguments)} args - Arguments to bind.\r\n\t     * @returns {Func} Returns this.\r\n\t     * @description Binds arguments in addition to already locked and bound ones.\r\n\t     *\r\n\t     * @example\r\n\t     * const func = new Func((...args) => {\r\n\t     *   let sum = 0;\r\n\t     *\r\n\t     *   for (let i = 0; i < args.length; i++) {\r\n\t     *     sum += args[i];\r\n\t     *   }\r\n\t     *\r\n\t     *   return sum;\r\n\t     * });\r\n\t     *\r\n\t     * func(1, 2, 3); // 6\r\n\t     *\r\n\t     * func.bindArgs([4]);\r\n\t     *\r\n\t     * func(1, 2, 3); // 10\r\n\t     *\r\n\t     * func.bindArgs([5]);\r\n\t     *\r\n\t     * func(1, 2, 3); // 15\r\n\t     */\n\t\n\t  }, {\n\t    key: 'bindArgs',\n\t    value: function bindArgs(args) {\n\t      var func = this.$$;\n\t\n\t      func.args = func.args.concat((0, _helpers.toArray)(args));\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Func#bindContext\r\n\t     * @public\r\n\t     * @param {*} context - Context to bind.\r\n\t     * @returns {Func} Returns this.\r\n\t     * @description Bind new context if it's not already locked.\r\n\t     *\r\n\t     * @example\r\n\t     * const func = new Func(function () {\r\n\t     *   return this.a;\r\n\t     * }).bindContext({ a: 1 });\r\n\t     *\r\n\t     * func(); // 1\r\n\t     *\r\n\t     * func.bindContext({ a: 2 });\r\n\t     *\r\n\t     * func(); // 2\r\n\t     */\n\t\n\t  }, {\n\t    key: 'bindContext',\n\t    value: function bindContext(context) {\n\t      var func = this.$$;\n\t\n\t      if (!func.contextLocked) {\n\t        func.context = context;\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Func#call\r\n\t     * @public\r\n\t     * @param {*} [context] - Context to call with.\r\n\t     * @param {...*} [args] - Arguments to call with.\r\n\t     * @returns {*} Return of function call.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Function/call\r\n\t     * @description Synonym for\r\n\t     * [Function#call]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Function/call}.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'call',\n\t    value: function call(context) {\n\t      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t        args[_key2 - 1] = arguments[_key2];\n\t      }\n\t\n\t      return function () {}.call.apply(this, arguments);\n\t    }\n\t\n\t    /**\r\n\t     * @member {Number} Func#called\r\n\t     * @public\r\n\t     * @readonly\r\n\t     * @description Returns how many times the function was called.\r\n\t     *\r\n\t     * @example\r\n\t     * const func = new Func((a) => a + 1);\r\n\t     *\r\n\t     * func();\r\n\t     * func();\r\n\t     *\r\n\t     * func.called // 2\r\n\t     */\n\t\n\t  }, {\n\t    key: 'canBeCalled',\n\t\n\t\n\t    /**\r\n\t     * @method Func#canBeCalled\r\n\t     * @public\r\n\t     * @param {Number} times - Number of maximum times the function is called (middlewares are also taken for a count).\r\n\t     * @returns {Func} Returns this.\r\n\t     * @description Method for limiting call times of function.\r\n\t     *\r\n\t     * @example\r\n\t     * const func = new Func((a) => a + 1)\r\n\t     *   .canBeCalled(1);\r\n\t     *\r\n\t     * func(1); // 2\r\n\t     * func(1); // undefined\r\n\t     */\n\t    value: function canBeCalled(times) {\n\t      this.$$.canBeCalled = times;\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Func#limitArgsTo\r\n\t     * @public\r\n\t     * @param {Number} number - Number of arguments to limit to.\r\n\t     * @returns {Func} Returns this.\r\n\t     * @description Built-in before middleware for limiting number of arguments\r\n\t     * that is put to the end of before middlewares.\r\n\t     *\r\n\t     * @example\r\n\t     * const func = new Func((a, b) => [a, b]);\r\n\t     *\r\n\t     * func(1, 2); // [1, 2]\r\n\t     *\r\n\t     * func.limitArgsTo(1);\r\n\t     *\r\n\t     * func(1, 2); // [1, undefined]\r\n\t     */\n\t\n\t  }, {\n\t    key: 'limitArgsTo',\n\t    value: function limitArgsTo(number) {\n\t      return this.before(function (args) {\n\t        return args.slice(0, number);\n\t      }, false);\n\t    }\n\t\n\t    /**\r\n\t     * @method Func#lock\r\n\t     * @public\r\n\t     * @param {*} context - Context to lock.\r\n\t     * @param {(Array|Arguments|*)} args - Arguments to lock.\r\n\t     * @returns {Func} Returns this.\r\n\t     * @description Composition of {@link Func#lockContext} and {@link Func#lockArgs}.\r\n\t     *\r\n\t     * @example\r\n\t     * const func = new Func(function (a, b) {\r\n\t     *   return this.a + a + b;\r\n\t     * }).lock({ a: 2 }, [1]);\r\n\t     *\r\n\t     * func(1); // 4\r\n\t     * func(3); // 6\r\n\t     */\n\t\n\t  }, {\n\t    key: 'lock',\n\t    value: function lock(context, args) {\n\t      return this.lockContext(context).lockArgs(args);\n\t    }\n\t\n\t    /**\r\n\t     * @method Func#lockArgs\r\n\t     * @public\r\n\t     * @param {(Array|Arguments|*)} args - Arguments to lock.\r\n\t     * @returns {Func} Returns this.\r\n\t     * @description Erases bound arguments and adds new arguments to already locked ones.\r\n\t     *\r\n\t     * @example\r\n\t     * const func = new Func((...args) => {\r\n\t     *   let sum = 0;\r\n\t     *\r\n\t     *   for (let i = 0; i < args.length; i++) {\r\n\t     *     sum += args[i];\r\n\t     *   }\r\n\t     *\r\n\t     *   return sum;\r\n\t     * });\r\n\t     *\r\n\t     * func(1, 2, 3); // 6\r\n\t     *\r\n\t     * func.lockArgs([4]);\r\n\t     *\r\n\t     * func(1, 2, 3); // 10\r\n\t     *\r\n\t     * func.bindArgs([6, 7]);\r\n\t     * func.lockArgs([5]);\r\n\t     *\r\n\t     * func(1, 2, 3); // 15\r\n\t     */\n\t\n\t  }, {\n\t    key: 'lockArgs',\n\t    value: function lockArgs(args) {\n\t      var func = this.$$;\n\t\n\t      func.args = func.argsLocked = func.argsLocked.concat((0, _helpers.toArray)(args));\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Func#lockContext\r\n\t     * @public\r\n\t     * @param {*} context - Context to lock.\r\n\t     * @returns {Func} Returns this.\r\n\t     * @description Locks context if it's not already locked.\r\n\t     *\r\n\t     * @example\r\n\t     * const func = new Func(function () {\r\n\t     *   return this.a;\r\n\t     * }).lockContext({ a: 1 });\r\n\t     *\r\n\t     * func(); // 1\r\n\t     *\r\n\t     * func.lockContext({ a: 2 });\r\n\t     *\r\n\t     * func(); // 1\r\n\t     */\n\t\n\t  }, {\n\t    key: 'lockContext',\n\t    value: function lockContext(context) {\n\t      var func = this.$$;\n\t\n\t      if (!func.contextLocked) {\n\t        func.context = context;\n\t        func.contextLocked = true;\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Func#timing\r\n\t     * @public\r\n\t     * @param {String} mark - Argument that is passed to console.time() and console.timeEnd().\r\n\t     * By default name of the original function, or if it's not present, 'anonymous' is used.\r\n\t     * @returns {Func} Returns this.\r\n\t     * @description Built-in before and after middlewares for noting calling time.\r\n\t     * In case of asynchronous functions it notes time between calling function and resolving or rejecting the result.\r\n\t     *\r\n\t     * @example\r\n\t     * const func = new Func((a) => a + 1)\r\n\t     *   .timing('plus 1');\r\n\t     *\r\n\t     * func(2); // plus 1: 0.010ms\r\n\t     *\r\n\t     * const async = new Func(() => new Promise(() => {\r\n\t     *     setTimeout(resolve, 1000);\r\n\t     *   }))\r\n\t     *   .async()\r\n\t     *   .timing();\r\n\t     *\r\n\t     * async();\r\n\t     * // After 1 second...\r\n\t     * // anonymous: 1000.010ms\r\n\t     */\n\t\n\t  }, {\n\t    key: 'timing',\n\t    value: function timing(mark) {\n\t      mark = arguments.length ? String(mark) : this.$.name || 'anonymous';\n\t\n\t      this.before(function (args) {\n\t        console.time(mark);\n\t\n\t        return args;\n\t      }, false);\n\t\n\t      this.after(function (ret) {\n\t        console.timeEnd(mark);\n\t\n\t        return ret;\n\t      }, false);\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toString',\n\t    value: function toString() {\n\t      return function () {}.toString.call(this.$);\n\t    }\n\t\n\t    /**\r\n\t     * @method Func#unbind\r\n\t     * @public\r\n\t     * @returns {Func} Returns this.\r\n\t     * @description Composition of {@link Func#unbindContext} and {@link Func#unbindArgs}.\r\n\t     *\r\n\t     * @example\r\n\t     * const func = new Func(function (a) {\r\n\t     *   return this.foo + ' & ' +  a;\r\n\t     * }).bind({ foo: 2 }, 1);\r\n\t     *\r\n\t     * func(); // '2 & 1'\r\n\t     *\r\n\t     * func.unbind();\r\n\t     *\r\n\t     * func(); // 'undefined & undefined'\r\n\t     */\n\t\n\t  }, {\n\t    key: 'unbind',\n\t    value: function unbind() {\n\t      return this.unbindContext().unbindArgs();\n\t    }\n\t\n\t    /**\r\n\t     * @method Func#unbindArgs\r\n\t     * @public\r\n\t     * @returns {Func} Returns this.\r\n\t     * @description Erases all bound arguments.\r\n\t     *\r\n\t     * @example\r\n\t     * const func = new Func((...args) => {\r\n\t     *   let sum = 0;\r\n\t     *\r\n\t     *   for (let i = 0; i < args.length; i++) {\r\n\t     *     sum += args[i];\r\n\t     *   }\r\n\t     *\r\n\t     *   return sum;\r\n\t     * }).bindArgs([4, 5]);\r\n\t     *\r\n\t     * func(1, 2, 3); // 15\r\n\t     *\r\n\t     * func.unbindArgs();\r\n\t     *\r\n\t     * func(1, 2, 3); // 6\r\n\t     */\n\t\n\t  }, {\n\t    key: 'unbindArgs',\n\t    value: function unbindArgs() {\n\t      var func = this.$$;\n\t\n\t      func.args = func.argsLocked;\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Func#unbindContext\r\n\t     * @public\r\n\t     * @returns {Func} Returns this.\r\n\t     * @description Erases context if it's not locked.\r\n\t     *\r\n\t     * @example\r\n\t     * const func = new Func(function () {\r\n\t     *   return this.foo;\r\n\t     * }).bindContext({ foo: 1 });\r\n\t     *\r\n\t     * func(); // 1\r\n\t     *\r\n\t     * func.unbindArgs();\r\n\t     *\r\n\t     * func(); // undefined\r\n\t     */\n\t\n\t  }, {\n\t    key: 'unbindContext',\n\t    value: function unbindContext() {\n\t      var func = this.$$;\n\t\n\t      if (!func.contextLocked) {\n\t        func.context = null;\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'called',\n\t    get: function get() {\n\t      return this.$$.called;\n\t    }\n\t  }]);\n\t\n\t  return Func;\n\t}(_Super3.default);\n\t\n\t(0, _helpers.defineProperties)(Func.prototype, _defineProperty({}, _helpers.Symbol.toStringTag, 'Func'));\n\t\n\t_constructors2.default[1].push({\n\t  check: _helpers.isFunction,\n\t  cls: Func\n\t});\n\t\n\t/**\r\n\t * @function method\r\n\t * @public\r\n\t * @param {String} method - Method to call.\r\n\t * @param {(Array|Arguments|*)} args - Arguments to call the method with.\r\n\t * @returns {Function} Function that calls stated method with given arguments.\r\n\t * @description Function that returns the function\r\n\t * that calls stated method of its first argument with given arguments.\r\n\t *\r\n\t * @example\r\n\t * [1.2345, 2.789, 3.14].map(method('toFixed', [2])); // ['1.23', '2.79', '3.14']\r\n\t */\n\tfunction method(method) {\n\t  var args = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n\t\n\t  return function (x) {\n\t    return x[method].apply(x, (0, _helpers.toArray)(args));\n\t  };\n\t}\n\t\n\t/**\r\n\t * @function noop\r\n\t * @public\r\n\t * @returns {void}\r\n\t * @description Empty function.\r\n\t */\n\tfunction noop() {}\n\t\n\t/**\r\n\t * @function self\r\n\t * @public\r\n\t * @returns {*} First argument itself.\r\n\t * @description Function that returns the first argument.\r\n\t *\r\n\t * @example\r\n\t * [1, 2].map(self);                     // [1, 2]\r\n\t * [1, 3, NaN, 0, 7, null].filter(self); // [1, 3, 7]\r\n\t */\n\tfunction self() {\n\t  return arguments[0];\n\t}\n\t\n\texports.default = Func;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Str = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.parseJSON = parseJSON;\n\t\n\tvar _D = __webpack_require__(3);\n\t\n\tvar _D2 = _interopRequireDefault(_D);\n\t\n\tvar _Super2 = __webpack_require__(18);\n\t\n\tvar _Super3 = _interopRequireDefault(_Super2);\n\t\n\tvar _constructors = __webpack_require__(6);\n\t\n\tvar _constructors2 = _interopRequireDefault(_constructors);\n\t\n\tvar _regexpSpecialCharacters = __webpack_require__(26);\n\t\n\tvar _regexpSpecialCharacters2 = _interopRequireDefault(_regexpSpecialCharacters);\n\t\n\tvar _helpers = __webpack_require__(8);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @module Str\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @private\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @mixin\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @description Exports Str class.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar htmlSpecials = {\n\t  '&': '&amp;',\n\t  '<': '&lt;',\n\t  '>': '&gt;'\n\t};\n\tvar regexpSpecialsRegexp = new RegExp(new _Super3.default(_regexpSpecialCharacters2.default).word(function (x) {\n\t  return '\\\\' + x + '|';\n\t}).replace(/\\|$/, ''), 'g');\n\t\n\t/**\n\t * @class Str\n\t * @extends Super\n\t * @public\n\t * @param {String} [string = ''] - A string to wrap.\n\t * @returns {Str} Instance of Str.\n\t * @description Wrap of a string.\n\t *\n\t * @example\n\t * const s = new Num('1');\n\t */\n\t\n\tvar Str = exports.Str = function (_Super) {\n\t  _inherits(Str, _Super);\n\t\n\t  function Str() {\n\t    var string = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\t\n\t    _classCallCheck(this, Str);\n\t\n\t    return _possibleConstructorReturn(this, Object.getPrototypeOf(Str).call(this, string));\n\t\n\t    /**\n\t     * @member Str#$\n\t     * @type {String}\n\t     * @public\n\t     * @description Original string.\n\t     */\n\t  }\n\t\n\t  /**\n\t   * @method Str#capitalizeFirst\n\t   * @public\n\t   * @returns {Str} Capitalized string.\n\t   * @description Method capitalizing the first symbol.\n\t   *\n\t   * @example\n\t   * new Str('foo').capitalizeFirst().$; // 'Foo'\n\t   */\n\t\n\t\n\t  _createClass(Str, [{\n\t    key: 'capitalizeFirst',\n\t    value: function capitalizeFirst() {\n\t      var string = this.$;\n\t\n\t      return new Str(string.slice(0, 1).toUpperCase() + string.slice(1));\n\t    }\n\t\n\t    /**\n\t     * @method Str#endsWith\n\t     * @public\n\t     * @param {String} searchString - See the link.\n\t     * @param {Number} [position = string.length] - See the link.\n\t     * @returns {Boolean} If the string ends with the argument string.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\t     * @description Synonym for\n\t     * [String#endsWith]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith}.\n\t     */\n\t\n\t  }, {\n\t    key: 'endsWith',\n\t    value: function endsWith(searchString, position) {\n\t      if (arguments.length < 2) {\n\t        position = this.$.length;\n\t      }\n\t\n\t      return this.slice(0, position).revert().startsWith(new Str(searchString).revert().$);\n\t    }\n\t\n\t    /**\n\t     * @method Str#escapeHTML\n\t     * @public\n\t     * @returns {Str} New instance of Str.\n\t     * @description Methods escaping \"&\", \"<\" and \">\" symbols.\n\t     *\n\t     * @example\n\t     * new Str('\"1 < 2\" & \"7 > 4\" are true expressions.').escapeHTML().$;\n\t     * // '\"1 &lt; 2\" &amp \"7 &gt; 2\" are true expressions.'\n\t     */\n\t\n\t  }, {\n\t    key: 'escapeHTML',\n\t    value: function escapeHTML() {\n\t      var string = this.$;\n\t\n\t      (0, _helpers.iterate)(htmlSpecials, function (escaped, symbol) {\n\t        string = string.replace(new RegExp(symbol, 'g'), escaped);\n\t      });\n\t\n\t      return new Str(string);\n\t    }\n\t\n\t    /**\n\t     * @method Str#escapeRegExp\n\t     * @public\n\t     * @returns {Str} New instance of Str.\n\t     * @description Method escaping RegExp special characters.\n\t     *\n\t     * @example\n\t     * new Str('(213.98 - [] {})').escapeRegExp().$; // '\\(213\\.98 \\- \\[\\] \\{\\}\\)'\n\t     */\n\t\n\t  }, {\n\t    key: 'escapeRegExp',\n\t    value: function escapeRegExp() {\n\t      return this.replace(regexpSpecialsRegexp, '\\\\$&');\n\t    }\n\t\n\t    /**\n\t     * @method Str#in\n\t     * @public\n\t     * @param {*} object - Object to check the string as a property in.\n\t     * @returns {Boolean} If it is in the object or not.\n\t     * @description Returns string in object.\n\t     *\n\t     * @example\n\t     * new Str('a').in({ a: 1 }); // true\n\t     * new Str('toFixed').in(1);  // false\n\t     * new Str('a').in(null);     // false\n\t     */\n\t\n\t  }, {\n\t    key: 'in',\n\t    value: function _in(object) {\n\t      if (!(0, _helpers.isObject)(object)) {\n\t        return false;\n\t      }\n\t\n\t      return this.$ in object;\n\t    }\n\t\n\t    /**\n\t     * @method Str#indexOf\n\t     * @public\n\t     * @param {String} searchValue - See the link.\n\t     * @param {Number} [fromIndex = 0] - See the link.\n\t     * @returns {Number} Found index or -1.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf\n\t     * @description Synonym for\n\t     * [String#indexOf]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf}.\n\t     */\n\t\n\t  }, {\n\t    key: 'indexOf',\n\t    value: function indexOf(searchValue, fromIndex) {\n\t      return this.$.indexOf.apply(this.$, arguments);\n\t    }\n\t\n\t    /**\n\t     * @method Str#lastIndexOf\n\t     * @public\n\t     * @param {String} searchValue - See the link.\n\t     * @param {Number} [fromIndex = string.length] - See the link.\n\t     * @returns {Number} Found index or -1.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf\n\t     * @description Synonym for\n\t     * [String#lastIndexOf]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf}.\n\t     */\n\t\n\t  }, {\n\t    key: 'lastIndexOf',\n\t    value: function lastIndexOf(searchValue, fromIndex) {\n\t      return this.$.lastIndexOf.apply(this.$, arguments);\n\t    }\n\t\n\t    /**\n\t     * @member Str#length\n\t     * @type {Number}\n\t     * @public\n\t     * @readonly\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/length\n\t     * @description Synonym for\n\t     * [String#length]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/length}.\n\t     */\n\t\n\t  }, {\n\t    key: 'match',\n\t\n\t\n\t    /**\n\t     * @method Str#match\n\t     * @public\n\t     * @returns {Arr|Super} D-Wrap of found match.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/match\n\t     * @description Synonym for\n\t     * [String#match]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/match}.\n\t     */\n\t    value: function match(regexp) {\n\t      return (0, _D2.default)(this.$.match.apply(this.$, arguments));\n\t    }\n\t\n\t    /**\n\t     * @method Str#repeat\n\t     * @public\n\t     * @param {Integer} times - Times to repeat the string.\n\t     * @returns {Str} New instance of Str.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n\t     * @description Synonym for\n\t     * [String#repeat]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/repeat}.\n\t     *\n\t     * @example\n\t     * new Str('123').repeat(2).$; // '123123'\n\t     * new Str('123').repeat(0).$; // ''\n\t     */\n\t\n\t  }, {\n\t    key: 'repeat',\n\t    value: function repeat(times) {\n\t      (0, _helpers.validate)([times], [['intLike', '>=0']], 'Str#repeat');\n\t\n\t      times = +times;\n\t\n\t      var string = this.$;\n\t\n\t      var s = '';\n\t\n\t      for (var i = 0; i < times; i++) {\n\t        s += string;\n\t      }\n\t\n\t      return new Str(s);\n\t    }\n\t\n\t    /**\n\t     * @method Str#replace\n\t     * @public\n\t     * @param {RegExp|String} regexp - See the link.\n\t     * @param {String|Function} [replacer = ''] - See the link.\n\t     * @returns {Str} New instance of Str.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/replace\n\t     * @description Synonym for\n\t     * [String#replace]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/replace}\n\t     * besides that replacer has a default value of ''.\n\t     */\n\t\n\t  }, {\n\t    key: 'replace',\n\t    value: function replace(regexp) {\n\t      var replacer = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];\n\t\n\t      return new Str(this.$.replace(regexp, replacer));\n\t    }\n\t\n\t    /**\n\t     * @method Str#replaceString\n\t     * @public\n\t     * @param {String} string - String to replace.\n\t     * @param {String} [replacer = ''] - String to replace with.\n\t     * @returns {Str} New instance of Str.\n\t     * @description Method for global string replaceing.\n\t     *\n\t     * @example\n\t     * new Str('123123').replaceString('1', '4').$; // '423423'\n\t     * new Str('123123').replaceString('1').$;      // '2323'\n\t     */\n\t\n\t  }, {\n\t    key: 'replaceString',\n\t    value: function replaceString(string) {\n\t      var replacer = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];\n\t\n\t      string = new _Super3.default(string).$;\n\t\n\t      (0, _helpers.validate)([string], ['string'], 'Str#replaceString');\n\t\n\t      return new Str(this.$.split(string).join(replacer));\n\t    }\n\t\n\t    /**\n\t     * @method Str#revert\n\t     * @public\n\t     * @returns {Str} New instance of string.\n\t     * @description Method for reverting a string.\n\t     *\n\t     * @example\n\t     * new Str('1234').revert().$; // '4321'\n\t     */\n\t\n\t  }, {\n\t    key: 'revert',\n\t    value: function revert() {\n\t      var string = this.$;\n\t      var str = '';\n\t\n\t      for (var i = string.length - 1; i >= 0; i--) {\n\t        str += string[i];\n\t      }\n\t\n\t      return new Str(str);\n\t    }\n\t\n\t    /**\n\t     * @method Str#search\n\t     * @public\n\t     * @param {RegExp} regexp - See the link.\n\t     * @returns {Number} Index of the first match, if found, and -1 if not.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/search\n\t     * @description Synonym for\n\t     * [String#search]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/search}.\n\t     */\n\t\n\t  }, {\n\t    key: 'search',\n\t    value: function search(regexp) {\n\t      (0, _helpers.validate)([regexp], ['regexp']);\n\t\n\t      return this.$.search.apply(this.$, arguments);\n\t    }\n\t\n\t    /**\n\t     * @method Str#slice\n\t     * @public\n\t     * @param {Number} [beginSlice = 0] - See the link.\n\t     * @param {Number} [endSlice = string.length] - See the link.\n\t     * @returns {Str} New instance of Str.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/slice\n\t     * @description Synonym for\n\t     * [String#slice]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/slice}.\n\t     */\n\t\n\t  }, {\n\t    key: 'slice',\n\t    value: function slice(beginSlice, endSlice) {\n\t      return new Str(this.$.slice.apply(this.$, arguments));\n\t    }\n\t\n\t    /**\n\t     * @method Str#split\n\t     * @public\n\t     * @param {RegExp|String} [separator] - See the link.\n\t     * @returns {Arr|Super} D-Wrap of the array.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/split\n\t     * @description Synonym for\n\t     * [String#split]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/split}.\n\t     */\n\t\n\t  }, {\n\t    key: 'split',\n\t    value: function split(separator) {\n\t      return (0, _D2.default)(this.$.split.apply(this.$, arguments));\n\t    }\n\t\n\t    /**\n\t     * @method Str#startsWith\n\t     * @public\n\t     * @param {String} searchString - See the link.\n\t     * @param {Number} [position = 0] - See the link.\n\t     * @returns {Boolean} If the string ends with the argument string.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\t     * @description Synonym for\n\t     * [String#startsWith]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith}.\n\t     */\n\t\n\t  }, {\n\t    key: 'startsWith',\n\t    value: function startsWith(searchString) {\n\t      var position = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\t\n\t      return this.$.indexOf.apply(this.$, arguments) === position;\n\t    }\n\t\n\t    /**\n\t     * @method Str#substr\n\t     * @public\n\t     * @param {Number} [start = 0] - See the link.\n\t     * @param {Number} [length = string.length] - See the link.\n\t     * @returns {Str} New instance of Str.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/substr\n\t     * @description Synonym for\n\t     * [String#substr]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/substr}.\n\t     */\n\t\n\t  }, {\n\t    key: 'substr',\n\t    value: function substr(start, length) {\n\t      return new Str(this.$.substr.apply(this.$, arguments));\n\t    }\n\t\n\t    /**\n\t     * @method Str#substring\n\t     * @public\n\t     * @param {Number} [indexStart = 0] - See the link.\n\t     * @param {Number} [indexEnd = string.length] - See the link.\n\t     * @returns {Str} New instance of Str.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/substring\n\t     * @description Synonym for\n\t     * [String#substring]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/substring}.\n\t     */\n\t\n\t  }, {\n\t    key: 'substring',\n\t    value: function substring(indexStart, indexEnd) {\n\t      return new Str(this.$.substring.apply(this.$, arguments));\n\t    }\n\t\n\t    /**\n\t     * @method Str#toCamelCase\n\t     * @public\n\t     * @returns {Str} New instance of Str.\n\t     * @description Removes following regexp /\\s\\-_\\./ making the string camel cased.\n\t     *\n\t     * @example\n\t     * new Str('spinal-case').toCamelCase().$;  // 'spinalCase'\n\t     * new Str('_snake_case_').toCamelCase().$; // 'snakeCase'\n\t     */\n\t\n\t  }, {\n\t    key: 'toCamelCase',\n\t    value: function toCamelCase() {\n\t      return new Str(trim(this.$).replace(/[\\s\\-_\\.]+/g, '-').replace(/\\-[^\\-]/g, function (match) {\n\t        return match[1].toUpperCase();\n\t      }).replace(/^[\\S]/, function (match) {\n\t        return match.toLowerCase();\n\t      }));\n\t    }\n\t\n\t    /**\n\t     * @method Str#toCapitalCase\n\t     * @public\n\t     * @returns {Str} New instance of Str.\n\t     * @description Removes following regexp /\\-_\\./ making the string capital letter cased.\n\t     *\n\t     * @example\n\t     * new Str('spinal-case').toCapitalCase().$;  // 'Spinal Case'\n\t     * new Str('_snake_case_').toCapitalCase().$; // 'Snake Case'\n\t     */\n\t\n\t  }, {\n\t    key: 'toCapitalCase',\n\t    value: function toCapitalCase() {\n\t      return new Str(trim(this.$).replace(/[\\s\\-_\\.]+/g, ' ').replace(/[\\S]/g, function (match) {\n\t        return match.toLowerCase() === match ? match : ' ' + match;\n\t      }).replace(/\\s[\\S]/g, function (match) {\n\t        return match.toUpperCase();\n\t      }).replace(/\\s+/g, ' ').replace(/^\\s/, '').replace(/^[\\S]/, function (match) {\n\t        return match.toUpperCase();\n\t      }));\n\t    }\n\t\n\t    /**\n\t     * @method Str#toDotCase\n\t     * @public\n\t     * @returns {Str} New instance of Str.\n\t     * @description Removes following regexp /\\-_\\./ making the string dot cased.\n\t     *\n\t     * @example\n\t     * new Str('spinal-case').toDotCase().$;  // 'spinal.case'\n\t     * new Str('_snake_case_').toDotCase().$; // 'snake.case'\n\t     */\n\t\n\t  }, {\n\t    key: 'toDotCase',\n\t    value: function toDotCase() {\n\t      return new Str(trim(this.$).replace(/[\\s\\-_\\.]+/g, '.').replace(/[^\\.]/g, function (match) {\n\t        return match.toLowerCase() === match ? match : '.' + match;\n\t      }).replace(/\\.+/g, '.').replace(/^\\./, '').toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * @method Str#toHyphenCase\n\t     * @public\n\t     * @returns {Str} New instance of Str.\n\t     * @description Removes following regexp /\\s\\-_\\./ making the string camel cased.\n\t     *\n\t     * @example\n\t     * new Str('camelCase').toSpinalCase().$;    // 'camel-case'\n\t     * new Str('_snake_case_').toSpinalCase().$; // 'snake-case'\n\t     */\n\t\n\t  }, {\n\t    key: 'toHyphenCase',\n\t    value: function toHyphenCase() {\n\t      return new Str(trim(this.$).replace(/[\\s\\-_\\.]+/g, '-').replace(/[^\\-]/g, function (match) {\n\t        return match.toLowerCase() === match ? match : '-' + match;\n\t      }).replace(/\\-+/g, '-').replace(/^\\-/, '').toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * @method Str#toLowerCase\n\t     * @public\n\t     * @returns {Str} New instance of Str.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase\n\t     * @description Synonym for\n\t     * [String#toLowerCase]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase}.\n\t     *\n\t     * @example\n\t     * new Str('UPPER-CASE').toLowerCase().$;  // 'upper-case'\n\t     */\n\t\n\t  }, {\n\t    key: 'toLowerCase',\n\t    value: function toLowerCase() {\n\t      return new Str(this.$.toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * @method Str#toSnakeCase\n\t     * @public\n\t     * @returns {Str} New instance of Str.\n\t     * @description Removes following regexp /\\s\\-\\./ making the string spinal cased.\n\t     *\n\t     * @example\n\t     * new Str('spinal-case').toSnakeCase().$; // 'spinal_case'\n\t     * new Str('camelCase').toSnakeCase().$;   // 'camel_case'\n\t     */\n\t\n\t  }, {\n\t    key: 'toSnakeCase',\n\t    value: function toSnakeCase() {\n\t      return new Str(trim(this.$).replace(/[\\s\\-_\\.]+/g, '_').replace(/[^_]/g, function (match) {\n\t        return match.toLowerCase() === match ? match : '_' + match;\n\t      }).replace(/_+/g, '_').replace(/^_/, '').toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * @method Str#toSpaceCase\n\t     * @public\n\t     * @returns {Str} New instance of Str.\n\t     * @description Removes following regexp /\\-_\\./ making the string space cased.\n\t     *\n\t     * @example\n\t     * new Str('spinal-case').toSpaceCase().$;  // 'spinal case'\n\t     * new Str('_snake_case_').toSpaceCase().$; // 'snake case'\n\t     */\n\t\n\t  }, {\n\t    key: 'toSpaceCase',\n\t    value: function toSpaceCase() {\n\t      return new Str(trim(this.$).replace(/[\\s\\-_\\.]+/g, ' ').replace(/[\\S]/g, function (match) {\n\t        return match.toLowerCase() === match ? match : ' ' + match;\n\t      }).replace(/\\s+/g, ' ').replace(/^\\s/, '').toLowerCase());\n\t    }\n\t  }, {\n\t    key: 'toString',\n\t    value: function toString() {\n\t      return this.$;\n\t    }\n\t\n\t    /**\n\t     * @method Str#toUpperCase\n\t     * @public\n\t     * @returns {Str} New instance of Str.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase\n\t     * @description Synonym for\n\t     * [String#toUpperCase]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase}.\n\t     *\n\t     * @example\n\t     * new Str('lower-case').toUpperCase().$;  // 'LOWER-CASE'\n\t     */\n\t\n\t  }, {\n\t    key: 'toUpperCase',\n\t    value: function toUpperCase() {\n\t      return new Str(this.$.toUpperCase());\n\t    }\n\t\n\t    /**\n\t     * @method Str#trim\n\t     * @public\n\t     * @returns {Str} New instance of Str.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trim\n\t     * @description Synonym for\n\t     * [String#trim]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trim}.\n\t     */\n\t\n\t  }, {\n\t    key: 'trim',\n\t    value: function trim() {\n\t      return new Str(this.$.replace(/^[\\s\\ufeff\\u00a0]+|[\\s\\ufeff\\u00a0]+$/g, ''));\n\t    }\n\t\n\t    /**\n\t     * @method Str#trimLeft\n\t     * @public\n\t     * @returns {Str} New instance of Str.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trimLeft\n\t     * @description Synonym for\n\t     * [String#trimLeft]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trimLeft}.\n\t     */\n\t\n\t  }, {\n\t    key: 'trimLeft',\n\t    value: function trimLeft() {\n\t      return new Str(this.$.replace(/^[\\s\\ufeff\\u00a0]+/, ''));\n\t    }\n\t\n\t    /**\n\t     * @method Str#trimRight\n\t     * @public\n\t     * @returns {Str} New instance of Str.\n\t     * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trimRight\n\t     * @description Synonym for\n\t     * [String#trimRight]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trimRight}.\n\t     */\n\t\n\t  }, {\n\t    key: 'trimRight',\n\t    value: function trimRight() {\n\t      return new Str(this.$.replace(/[\\s\\ufeff\\u00a0]+$/, ''));\n\t    }\n\t  }, {\n\t    key: 'length',\n\t    get: function get() {\n\t      return this.$.length;\n\t    }\n\t  }]);\n\t\n\t  return Str;\n\t}(_Super3.default);\n\t\n\t(0, _helpers.defineProperties)(Str.prototype, _defineProperty({}, _helpers.Symbol.toStringTag, 'Str'));\n\t\n\tfunction trim(string) {\n\t  return string.replace(/^[\\s\\-_\\.]+|[\\s\\-_\\.]+$/g, '');\n\t}\n\t\n\t/**\n\t * @function parseJSON\n\t * @public\n\t * @param {String} [json = null] - String to parse.\n\t * @param {Object} [options] - Options.\n\t * @param {Boolean|*} [options.numbers] - If it is needed to parse number-like strings as numbers.\n\t * @param {Boolean|*} [options.dates] - If it is needed to parse date-like string as dates.\n\t * Date-like string is considered to match ^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d\\.\\d\\d\\dZ?$\n\t * @param {JSONCallback} [callback] - Callback that called on every iteration.\n\t * @returns {DWrap} D-Wrap of found match.\n\t * @description Method for parsing json.\n\t *\n\t * @example\n\t * parseJSON('{ \"a\": 1 }').$;                                           // { a: 1 }\n\t * parseJSON('{ \"a\": \"1\" }', { numbers: true }).$;                      // { numbers: true }\n\t * parseJSON('{ \"a\": \"1999-12-31T23:59:59.999Z\" }', { dates: true }).$; // { a: Date {...} }\n\t */\n\tfunction parseJSON() {\n\t  var json = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t  var callback = arguments[2];\n\t\n\t  if (arguments.length <= 1) {\n\t    return (0, _D2.default)(JSON.parse(json));\n\t  }\n\t\n\t  if ((0, _helpers.isFunction)(options)) {\n\t    callback = options;\n\t    options = {};\n\t  }\n\t\n\t  var _options = options;\n\t  var numbers = _options.numbers;\n\t  var dates = _options.dates;\n\t\n\t  var parsed = JSON.parse(json, function (key, value) {\n\t    if (dates && /^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d\\.\\d\\d\\dZ?$/.test(value)) {\n\t      value = new Date(value);\n\t    } else if (numbers && (0, _helpers.isNumberLike)(value) && (0, _helpers.isString)(value)) {\n\t      value = Number(value);\n\t    }\n\t\n\t    return callback ? callback.apply(this, arguments) : value;\n\t  });\n\t\n\t  return (0, _D2.default)(parsed);\n\t}\n\t\n\t_constructors2.default[2].push({\n\t  check: _helpers.isString,\n\t  cls: Str\n\t});\n\t\n\texports.default = Str;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * @module constants/regexpSpecialCharacters\n\t * @private\n\t * @description Exports special characters for RegExp.\n\t */\n\t\n\t/**\n\t * @const\n\t * @name module:constants/regexpSpecialCharacters~regexpSpecialCharacters\n\t * @type {String[]}\n\t */\n\texports.default = ['.', '+', '*', '?', '(', ')', '[', ']', '{', '}', '<', '>', '^', '$', '!', '=', ':', '-', '|', ',', '\\\\'];\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Super = __webpack_require__(18);\n\t\n\tvar _Super2 = _interopRequireDefault(_Super);\n\t\n\tvar _Str = __webpack_require__(25);\n\t\n\tvar _Str2 = _interopRequireDefault(_Str);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\r\n\t * @module constants/formats\r\n\t * @private\r\n\t * @description Exports different types of formatting for {@link Date#format}.\r\n\t */\n\t\n\tvar zero = new _Str2.default('0');\n\tvar daysOfTheWeekNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\tvar daysOfTheWeekAliases = new _Super2.default(daysOfTheWeekNames).map(function (value) {\n\t  return value.slice(0, 3);\n\t}).$;\n\tvar monthsNames = ['January', 'February', 'March', 'April', 'May', 'June', 'Jule', 'August', 'September', 'October', 'November', 'December'];\n\tvar monthsAliases = new _Super2.default(monthsNames).map(function (value) {\n\t  return value.slice(0, 3);\n\t}).$;\n\t\n\t/**\r\n\t * @callback module:constants/formats~matchCallback\r\n\t * @param {Dat} date - D-wrap of a date to apply format to.\r\n\t * @param {String} string - Matched applied expression.\r\n\t */\n\t\n\t/**\r\n\t * @typedef {Object} module:constants/formats~formatExpr\r\n\t * @property {String} format - Matched format.\r\n\t * @property {module:constants/formats~matchCallback} match - Callback if there was a match.\r\n\t */\n\t\n\t/**\r\n\t * @type {module:constants/formats~formatExpr[]}\r\n\t * @description Array of different formats.\r\n\t */\n\texports.default = [{\n\t  format: 'ccc',\n\t  match: function match(date, utc) {\n\t    return round(date[utc]('c'), 3);\n\t  }\n\t}, {\n\t  format: 'c',\n\t  match: function match(date, utc) {\n\t    return date[utc]('c');\n\t  }\n\t}, {\n\t  format: 'ss',\n\t  match: function match(date, utc) {\n\t    return round(date[utc]('s'), 2);\n\t  }\n\t}, {\n\t  format: 's',\n\t  match: function match(date, utc) {\n\t    return date[utc]('s');\n\t  }\n\t}, {\n\t  format: 'mm',\n\t  match: function match(date, utc) {\n\t    return round(date[utc]('m'), 2);\n\t  }\n\t}, {\n\t  format: 'm',\n\t  match: function match(date, utc) {\n\t    return date[utc]('m');\n\t  }\n\t}, {\n\t  format: 'hh',\n\t  match: function match(date, utc) {\n\t    return round(date[utc]('h'), 2);\n\t  }\n\t}, {\n\t  format: 'h',\n\t  match: function match(date, utc) {\n\t    return date[utc]('h');\n\t  }\n\t}, {\n\t  format: 'dddd',\n\t  match: function match(date, utc) {\n\t    return daysOfTheWeekNames[date[utc]('dw')];\n\t  }\n\t}, {\n\t  format: 'ddd',\n\t  match: function match(date, utc) {\n\t    return daysOfTheWeekAliases[date[utc]('dw')];\n\t  }\n\t}, {\n\t  format: 'dd',\n\t  match: function match(date, utc) {\n\t    return round(date[utc]('d'), 2);\n\t  }\n\t}, {\n\t  format: 'd',\n\t  match: function match(date, utc) {\n\t    return date[utc]('d');\n\t  }\n\t}, {\n\t  format: 'MMMM',\n\t  match: function match(date, utc) {\n\t    return monthsNames[date[utc]('M') - 1];\n\t  }\n\t}, {\n\t  format: 'MMM',\n\t  match: function match(date, utc) {\n\t    return monthsAliases[date[utc]('M') - 1];\n\t  }\n\t}, {\n\t  format: 'MM',\n\t  match: function match(date, utc) {\n\t    return round(date[utc]('M'), 2);\n\t  }\n\t}, {\n\t  format: 'M',\n\t  match: function match(date, utc) {\n\t    return date[utc]('M');\n\t  }\n\t}, {\n\t  format: 'yyyy',\n\t  match: function match(date, utc) {\n\t    return round(date[utc]('y'), 4);\n\t  }\n\t}, {\n\t  format: 'yy',\n\t  match: function match(date, utc) {\n\t    return String(date[utc]('y')).slice(-2);\n\t  }\n\t}, {\n\t  format: 'y',\n\t  match: function match(date, utc) {\n\t    return date[utc]('y');\n\t  }\n\t}];\n\t\n\t/**\r\n\t * @function round\r\n\t * @private\r\n\t * @param {Number} number - Number to round.\r\n\t * @param {Number} digits - Number of the digits of the output.\r\n\t * @returns {String} String with necessary additional starting zeroes.\r\n\t */\n\t\n\tfunction round(number, digits) {\n\t  var string = String(number);\n\t  var zeroes = digits - string.length;\n\t\n\t  zeroes = zeroes < 0 ? 0 : zeroes;\n\t\n\t  return zero.repeat(zeroes).$ + string;\n\t}\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.find = exports.head = exports.body = exports.html = exports.document = exports.window = exports.Elem = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\texports.parseHTML = parseHTML;\n\texports.px = px;\n\t\n\tvar _Super = __webpack_require__(18);\n\t\n\tvar _Super2 = _interopRequireDefault(_Super);\n\t\n\tvar _Arr2 = __webpack_require__(17);\n\t\n\tvar _Arr3 = _interopRequireDefault(_Arr2);\n\t\n\tvar _BlobObject = __webpack_require__(20);\n\t\n\tvar _Fetch = __webpack_require__(29);\n\t\n\tvar _Fetch2 = _interopRequireDefault(_Fetch);\n\t\n\tvar _Promise = __webpack_require__(21);\n\t\n\tvar _Promise2 = _interopRequireDefault(_Promise);\n\t\n\tvar _Str = __webpack_require__(25);\n\t\n\tvar _Str2 = _interopRequireDefault(_Str);\n\t\n\tvar _Switcher = __webpack_require__(19);\n\t\n\tvar _constructors = __webpack_require__(6);\n\t\n\tvar _constructors2 = _interopRequireDefault(_constructors);\n\t\n\tvar _appliedRegExps = __webpack_require__(33);\n\t\n\tvar _appliedRegExps2 = _interopRequireDefault(_appliedRegExps);\n\t\n\tvar _elements = __webpack_require__(34);\n\t\n\tvar _elements2 = _interopRequireDefault(_elements);\n\t\n\tvar _canvasMethods = __webpack_require__(35);\n\t\n\tvar _helpers = __webpack_require__(8);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @module Elem\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @private\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @mixin\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @description Exports Elem class.\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\r\n\t * @typedef {String} ElemEventString\r\n\t * @public\r\n\t * @description A string containing events separated by a comma with zero or more spaces or just spaces.\r\n\t */\n\t\n\t/**\r\n\t * @callback ElemValueCallback\r\n\t * @public\r\n\t * @param {String} value - Old value.\r\n\t * @param {Elem} elem - Current element.\r\n\t * @param {Number} index - Index in the set of the elements.\r\n\t */\n\t\n\t/**\r\n\t * @callback ElemSetOfCallback\r\n\t * @public\r\n\t * @param {Element} created - Created element.\r\n\t * @param {*} value - Value of the iterated element in the object.\r\n\t * @param {Key} key - Key of the iterated element in the object.\r\n\t * @param {*} object - Object that is iterated over.\r\n\t * @param {Element} elem - Current element.\r\n\t * @param {Number} index - Index of the current element.\r\n\t */\n\t\n\t/**\r\n\t * @callback ValidateCallback\r\n\t * @public\r\n\t * @param {*} value - Element value.\r\n\t * @param {Element} elem - Element to validate.\r\n\t * @param {Number} index - Index of the element.\r\n\t */\n\t\n\t/**\r\n\t * @callback CtxCallback\r\n\t * @public\r\n\t * @param {CanvasRenderingContext2D} ctx - Canvas rendering context.\r\n\t */\n\t\n\t/**\r\n\t * @callback Listener\r\n\t * @public\r\n\t * @param {Event} e - Fired event.\r\n\t * @param {Element} elem - Element on which the listener was called.\r\n\t * @param {Number} index - Index of the element on which the listener was called.\r\n\t */\n\t\n\t/**\r\n\t * @callback ElemRemoveListeners\r\n\t * @public\r\n\t * @param {...ElemEventString} events - If at least one argument present only removes event listeners specified\r\n\t * by the events in the arguments.\r\n\t */\n\t\n\tvar nativeDocument = global.document;\n\tvar empty = nativeDocument.createElement('div');\n\tvar eventSeparator = /, *| +/;\n\tvar textProperty = new _Super2.default(Node.prototype).propertyDescriptor('textContent') ? 'textContent' : 'innerText';\n\tvar classes = {};\n\tvar attrs = {};\n\tvar windowsDwayneData = new _Arr3.default();\n\tvar inputElements = 'input, select, textarea, datalist, keygen, output';\n\tvar dataURLFetch = new _Fetch2.default({ responseType: 'arraybuffer' });\n\tvar refSwitcher = (0, _Switcher.switcher)('strictEquals', 'href').case(['img', 'script', 'iframe', 'audio', 'video'], 'src').case('form', 'action');\n\tvar filterSwitcher = (0, _Switcher.switcher)('call', function (selector) {\n\t  return selector;\n\t}).case(_helpers.isString, function (selector) {\n\t  return function (elem) {\n\t    return new Elem(elem).is(selector);\n\t  };\n\t}).case([_helpers.isArray, isElem], function (elems) {\n\t  elems = new _Arr3.default(elems);\n\t\n\t  return function (elem) {\n\t    return elems.indexOf(elem) !== -1;\n\t  };\n\t});\n\tvar formDataSwitcher = (0, _Switcher.switcher)('strictEquals', function (_ref) {\n\t  var value = _ref.value;\n\t  return value;\n\t}).case('file', function (_ref2) {\n\t  var files = _ref2.files;\n\t  return files;\n\t});\n\tvar innerSwitcher = (0, _Switcher.switcher)('strictEquals', 0).case('padding-box', function (paddings) {\n\t  return paddings;\n\t}).case('border-box', function (paddings, borders) {\n\t  return paddings + borders;\n\t});\n\tvar outerSwitcher = (0, _Switcher.switcher)('strictEquals', function (borders, paddings) {\n\t  return borders + paddings;\n\t}).case('padding-box', function (borders) {\n\t  return borders;\n\t}).case('border-box', 0);\n\t\n\t/**\r\n\t * @class Elem\r\n\t * @extends Arr\r\n\t * @public\r\n\t * @param {Element|Element[]} [elem = []] - An element or an array of elements to wrap.\r\n\t * @returns {Elem} Instance of Elem.\r\n\t * @description Wrap of an elements set. Also has all methods from from\r\n\t * [CanvasRenderingContext2D]{@link https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D}.\r\n\t * Getters methods return the same as methods from CanvasRenderingContext2D and the rest return this.\r\n\t * Work for the first canvas element in the set.\r\n\t *\r\n\t * @example\r\n\t * new Elem(document.body);\r\n\t * new Elem(document.querySelectorAll('.cls'));\r\n\t * new Elem(document.getElementsByClassName('cls'));\r\n\t */\n\t\n\tvar Elem = function (_Arr) {\n\t  _inherits(Elem, _Arr);\n\t\n\t  function Elem() {\n\t    var elem = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\t\n\t    _classCallCheck(this, Elem);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Elem).call(this, function () {\n\t      var element = elem;\n\t\n\t      if ((0, _helpers.isArrayLike)(element) && (isWindow(element) || isHTMLDocument(element) || (0, _helpers.isElement)(element))) {\n\t        element = [element];\n\t      }\n\t\n\t      return new _Arr3.default((0, _helpers.toArray)(new _Super2.default(element).$, true)).object(function (elems, elem) {\n\t        if (((0, _helpers.isElement)(elem) || isWindow(elem) || isHTMLDocument(elem) || (0, _helpers.toStringTag)(elem) === 'CSSStyleRule') && elems.indexOf(elem) === -1) {\n\t          elems.push(elem);\n\t        }\n\t      }, []).$;\n\t    }()));\n\t\n\t    _this.$$ = elem;\n\t\n\t    _this.forEach(addDwayneData);\n\t\n\t    /**\r\n\t     * @member {Element[]} Elem#$\r\n\t     * @type {Element[]}\r\n\t     * @public\r\n\t     * @description Constructed element set.\r\n\t     */\n\t\n\t    /**\r\n\t     * @member {*} Elem#$$\r\n\t     * @type {*}\r\n\t     * @public\r\n\t     * @description Initial element set.\r\n\t     */\n\t    return _this;\n\t  }\n\t\n\t  /**\r\n\t   * @method Elem#add\r\n\t   * @public\r\n\t   * @param {...(String|Elem|Element|Element[])} elements - Each argument is a selector, or Elem, or Element, or array of Elements.\r\n\t   * @returns {Elem} Returns this.\r\n\t   * @description Method for adding new elements to the set.\r\n\t   *\r\n\t   * @example\r\n\t   *\r\n\t   */\n\t\n\t\n\t  _createClass(Elem, [{\n\t    key: 'add',\n\t    value: function add() {\n\t      var _this2 = this;\n\t\n\t      for (var _len = arguments.length, elements = Array(_len), _key = 0; _key < _len; _key++) {\n\t        elements[_key] = arguments[_key];\n\t      }\n\t\n\t      (0, _helpers.iterate)(arguments, function (elem) {\n\t        toFind(elem).forEach(function (elem) {\n\t          if (_this2.indexOf(elem) === -1) {\n\t            _this2.push(elem);\n\t          }\n\t        });\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#addClass\r\n\t     * @public\r\n\t     * @param {...String} classes - Classes to add.\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @description Method for adding classes to the all the elements in the set.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.addClass('red', 'round');\r\n\t     */\n\t\n\t  }, {\n\t    key: 'addClass',\n\t    value: function addClass() {\n\t      for (var _len2 = arguments.length, classes = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t        classes[_key2] = arguments[_key2];\n\t      }\n\t\n\t      return this.forEach(function (elem) {\n\t        var list = elem.classList;\n\t\n\t        list.add.apply(list, classes);\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#addHTML\r\n\t     * @public\r\n\t     * @param {String} html - HTML to add.\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @description Method for adding HTML to the all elements in the set.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.addHTML('&lt;div&gt;1&lt;/div&gt;');\r\n\t     */\n\t\n\t  }, {\n\t    key: 'addHTML',\n\t    value: function addHTML(html) {\n\t      return this.forEach(function (elem) {\n\t        elem.innerHTML += html;\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#addRule\r\n\t     * @public\r\n\t     * @param {String} name - Name of the rule.\r\n\t     * @param {String} selector - Selector for the rule\r\n\t     * @param {Object.<String, String>} style - Style for the selector.\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @description Method for adding css styles into the first style tag in the set.\r\n\t     * Note: style element should be inside the document.\r\n\t     *\r\n\t     * @example\r\n\t     * style.addRule('img-size', 'img.square', {\r\n\t     *   width: '40px !important',\r\n\t     *   height: '40px !important'\r\n\t     * });\r\n\t     */\n\t\n\t  }, {\n\t    key: 'addRule',\n\t    value: function addRule(name, selector, style) {\n\t      this.some(function (elem) {\n\t        if (getName(elem) === 'style') {\n\t          var sheet = elem.sheet;\n\t          var length = sheet.cssRules.length;\n\t\n\t          var rules = new _Super2.default(style).word(function (value, property) {\n\t            return new _Str2.default(property).toHyphenCase() + ': ' + value + ';\\n';\n\t          });\n\t\n\t          sheet.insertRule(selector + ' {' + (rules && '\\n') + rules + '}', length);\n\t          sheet.cssRules[length].dwayneData = { name: name };\n\t\n\t          return true;\n\t        }\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#addText\r\n\t     * @public\r\n\t     * @param {String} text - Text to add.\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @description Method for adding text to the all elements in the set.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.addText('123');\r\n\t     */\n\t\n\t  }, {\n\t    key: 'addText',\n\t    value: function addText(text) {\n\t      return this.forEach(function (elem) {\n\t        elem.appendChild(nativeDocument.createTextNode(text));\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#apply\r\n\t     * @public\r\n\t     * @param {...String} strings - Strings to apply.\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @description Method that is a shorthand for many other methods.\r\n\t     * All shorthands can be separated with space and written within one string.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.apply(\r\n\t     *   '#id .c1 .c2 @border(1px solid black) $disabled $attr(some value) *(Click me!)'\r\n\t     * );\r\n\t     * // shorthand for\r\n\t     * // elem\r\n\t     * //   .id('id')\r\n\t     * //   .addClass('c1', 'c2')\r\n\t     * //   .border('1px solid black')\r\n\t     * //   .disabled()\r\n\t     * //   .attr('attr', 'some value')\r\n\t     * //   .text('Click me!');\r\n\t     * // There is a full list of possible types of syntax below...\r\n\t     *\r\n\t     * elem.apply('#id');                         // shorthand for elem.id('id');\r\n\t     * elem.apply('.c1 .c2');                     // shorthand for elem.addClass('c1', 'c2');\r\n\t     * elem.apply('-.c1 -.c2');                   // shorthand for elem.removeClass('c1', 'c2');\r\n\t     * elem.apply('-@float -@display');           // shorthand for elem.removeCSS('float', 'display');\r\n\t     * elem.apply('-$a1 -$a2');                   // shorthand for elem.removeAttr('a1', 'a2');\r\n\t     * elem.apply('*(some text)');                // shorthand for elem.text('set text');\r\n\t     * elem.apply('&(&lt;div&gt;1&lt;/div&gt;)'); // shorthand for elem.html('&lt;div&gt;1&lt;/div&gt;');\r\n\t     * elem.apply('@float(right)');               // shorthand for elem.css('float', 'right');\r\n\t     * elem.apply('@transform(scale(5px))');      // shorthand for elem.css('float', 'right');\r\n\t     * elem.apply('@margin(2px 2px)');            // shorthand for elem.css('margin', '2px 2px');\r\n\t     * elem.apply('@marginLeft(2px)');            // shorthand for elem.css('marginLeft', '2px 2px');\r\n\t     * elem.apply('@margin-left(2px)');           // shorthand for elem.css('margin-left', '2px 2px');\r\n\t     * elem.apply('$attr(some value)');           // shorthand for elem.attr('attr', 'some value');\r\n\t     * elem.apply('$attr');                       // shorthand for elem.attr('attr', '');\r\n\t     */\n\t\n\t  }, {\n\t    key: 'apply',\n\t    value: function apply() {\n\t      var _this3 = this;\n\t\n\t      for (var _len3 = arguments.length, strings = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n\t        strings[_key3] = arguments[_key3];\n\t      }\n\t\n\t      var applied = void 0;\n\t      var setApplied = void 0;\n\t      var callback = void 0;\n\t      var name = void 0;\n\t      var np1 = void 0;\n\t      var slice = void 0;\n\t\n\t      new _Str2.default(new _Arr3.default(arguments).join(' ')).split(/(\\s+)/).forEach(function (string) {\n\t        if (!applied) {\n\t          np1 = string.slice(0, 1);\n\t          callback = _appliedRegExps2.default[np1];\n\t          slice = 1;\n\t\n\t          if (callback && !(0, _helpers.isFunction)(callback)) {\n\t            callback = callback[string.slice(1, 2)];\n\t            slice = 2;\n\t          }\n\t\n\t          if (/^\\s+$/.test(string) || !callback) {\n\t            return;\n\t          }\n\t\n\t          name = string.slice(slice).match(/^[^()]+/);\n\t\n\t          if (!name && np1 !== '*' && np1 !== '&') {\n\t            return;\n\t          }\n\t\n\t          applied = {\n\t            name: name ? name[0] : '',\n\t            args: string.slice(slice + (name ? name[0] : '').length),\n\t            callback: callback\n\t          };\n\t\n\t          setApplied = true;\n\t        }\n\t\n\t        if (!setApplied) {\n\t          applied.args += string;\n\t        }\n\t\n\t        if (!applied.args || /^\\([\\s\\S]+\\)$/.test(applied.args)) {\n\t          applied.callback(_this3, applied.name, applied.args.replace(/^\\(|\\)$/g, ''));\n\t          applied = null;\n\t        }\n\t\n\t        setApplied = false;\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#attr\r\n\t     * @public\r\n\t     * @param {String|Object.<String, String|ElemValueCallback>} [attr] - Name of the attribute to get or\r\n\t     * an object of the format { [attrName]: value, ... } to set attributes.\r\n\t     * @param {String|ElemValueCallback} [value] - If the first argument is a string\r\n\t     * it should be a value to set for that attribute.\r\n\t     * @returns {Super|String|Elem} If no arguments passed, D-Wrap of attributes of the first element in the set\r\n\t     * returned, if 1 string argument is passed the value of the attribute of the first element in the set\r\n\t     * returned otherwise returns this.\r\n\t     * @description Method for getting/setting attributes.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.attr('attr1', 'value1'); // attribute attr1 set to 'value1' and this returned\r\n\t     * elem.attr('attr1');           // 'value1'\r\n\t     * elem.attr({\r\n\t     *   attr1: 'value3',            // attribute attr1 set to 'value3'\r\n\t     *   attr2: 'value2'             // attribute attr2 set to 'value2'\r\n\t     * });                           // this returned\r\n\t     * elem.attr().$;                // { attr1: 'value3', attr2: 'value2' }\r\n\t     */\n\t\n\t  }, {\n\t    key: 'attr',\n\t    value: function attr(_attr, value) {\n\t      var _this4 = this;\n\t\n\t      var elem = getElem(this);\n\t\n\t      if (!arguments.length) {\n\t        return new _Super2.default(elem.attributes).object(function (o, attr) {\n\t          o[attr.name] = attr.value;\n\t        });\n\t      }\n\t\n\t      if (arguments.length <= 1 && (0, _helpers.isString)(_attr)) {\n\t        return elem.getAttribute(_attr);\n\t      }\n\t\n\t      if (arguments.length >= 2) {\n\t        _attr = _defineProperty({}, _attr, value);\n\t      }\n\t\n\t      new _Super2.default(_attr).forEach(function (value, key) {\n\t        _this4.forEach(function (elem, index) {\n\t          elem.setAttribute(key, (0, _helpers.isFunction)(value) ? value(elem.getAttribute(key), elem, index) : value);\n\t        });\n\t      });\n\t\n\t      _helpers.crossClassMethods.transformAnchor(this);\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#blob\r\n\t     * @public\r\n\t     * @param {Object} [options = {}] - Options that are passed into {@link blob}.\r\n\t     * @returns {Promise.<BlobObject>} New instance of promise.\r\n\t     * @description Returns a {@link BlobObject} Promise. Works with image or canvas first element.\r\n\t     *\r\n\t     * @example\r\n\t     * image.blob().then((blob) => console.log(blob));  // BlobObject\r\n\t     * canvas.blob().then((blob) => console.log(blob)); // BlobObject\r\n\t     */\n\t\n\t  }, {\n\t    key: 'blob',\n\t    value: function blob() {\n\t      var _this5 = this;\n\t\n\t      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      return new _Promise2.default(function (resolve, reject) {\n\t        var elem = _this5.first();\n\t        var name = elem.name;\n\t\n\t\n\t        if (name !== 'img' && name !== 'canvas') {\n\t          reject(new Error('First element in the set isn\\'t an image or a canvas! (Elem#blob)'));\n\t        }\n\t\n\t        if (name === 'canvas') {\n\t          return resolve(elem);\n\t        }\n\t\n\t        elem.load().then(function () {\n\t          if (elem.isBroken()) {\n\t            return reject(new Error('The image is broken! (Elem#blob)'));\n\t          }\n\t\n\t          var canvas = new Elem(nativeDocument).canvas();\n\t          var width = elem.width();\n\t          var height = elem.height();\n\t\n\t          canvas.width(width).height(height).drawImage(elem.$[0], 0, 0);\n\t\n\t          resolve(canvas);\n\t        });\n\t      }).then(function (canvas) {\n\t        return dataURLFetch(canvas.dataURL());\n\t      }).then(function (_ref3) {\n\t        var ab = _ref3.data;\n\t        return (0, _BlobObject.blob)(ab, options);\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#blur\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/API/HTMLElement/blur\r\n\t     * @description Synonym for\r\n\t     * [HTMLElement#blur]{@link https://developer.mozilla.org/en/docs/Web/API/HTMLElement/blur}.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'blur',\n\t    value: function blur() {\n\t      return this.forEach(function (elem) {\n\t        elem.blur();\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#calcCSS\r\n\t     * @param {String} [pseudo] - See the link.\r\n\t     * @returns {CSSStyleDeclaration} See the link.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/API/Window/getComputedStyle\r\n\t     * @description Synonym for\r\n\t     * [getComputedStyle]{@link https://developer.mozilla.org/en/docs/Web/API/Window/getComputedStyle}.\r\n\t     * Returns computed style for the first element in the set or undefined.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'calcCSS',\n\t    value: function calcCSS() {\n\t      var pseudo = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t\n\t      return getComputedStyle(getElem(this), pseudo);\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#changeRule\r\n\t     * @public\r\n\t     * @param {String} name - Name of the rule.\r\n\t     * @param {Object.<String, String>} style - Style for the selector.\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @description Method for changing css styles in the first style tag in the set.\r\n\t     * Note: style element should be inside the document.\r\n\t     *\r\n\t     * @example\r\n\t     * style.changeRule('img-size', {\r\n\t     *   width: '50px !important',\r\n\t     *   height: '50px !important'\r\n\t     * });\r\n\t     */\n\t\n\t  }, {\n\t    key: 'changeRule',\n\t    value: function changeRule(name, style) {\n\t      this.some(function (elem) {\n\t        if (getName(elem) === 'style') {\n\t          var _ref4 = new _Arr3.default(elem.sheet.cssRules).find(function (rule) {\n\t            return rule.dwayneData && rule.dwayneData.name === name;\n\t          }) || {};\n\t\n\t          var rule = _ref4.value;\n\t\n\t\n\t          if (rule) {\n\t            new Elem(rule).css(style);\n\t\n\t            return true;\n\t          }\n\t        }\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#child\r\n\t     * @public\r\n\t     * @param {Number|String|Elem|Element|Element[]} element - If the argument is a number a wrap of the set of the children\r\n\t     * of this index of each element in the set returned otherwise an element to put into this element, a collection\r\n\t     * or a selector of it.\r\n\t     * @returns {Elem} Returns a wrap of children or inserted elements.\r\n\t     * @description Method is similar to\r\n\t     * [Node#appendChild]{@link https://developer.mozilla.org/en/docs/Web/API/Node/appendChild}.\r\n\t     *\r\n\t     * @example\r\n\t     * const child = elem.child(1);\r\n\t     *\r\n\t     * elem.child(elem2);\r\n\t     * elem.child(document.getElementById('id'));\r\n\t     * elem.child('#id div.c1');\r\n\t     */\n\t\n\t  }, {\n\t    key: 'child',\n\t    value: function child(element) {\n\t      if ((0, _helpers.isInteger)(element) && element >= 0) {\n\t        return this.children().elem(element);\n\t      }\n\t\n\t      return toFind(element).into(this);\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#children\r\n\t     * @public\r\n\t     * @returns {Elem} D-Wrap of the children of the first element in the set.\r\n\t     * @description Method for getting element's children.\r\n\t     *\r\n\t     * @example\r\n\t     * const children = elem.children();\r\n\t     */\n\t\n\t  }, {\n\t    key: 'children',\n\t    value: function children() {\n\t      return new Elem(this.length ? this.$[0].children : []);\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#class\r\n\t     * @public\r\n\t     * @param {String} [cls] - If it's present it has to contain class attribute to set.\r\n\t     * @returns {Arr|Elem} If the argument is present this returned otherwise a wrap of the classes array returned.\r\n\t     * @description Method for getting/setting classes.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.class('c1 c2'); // class set to 'c1 c2'\r\n\t     * elem.class().$;      // ['c1', 'c2']\r\n\t     */\n\t\n\t  }, {\n\t    key: 'class',\n\t    value: function _class(cls) {\n\t      if (!arguments.length) {\n\t        return new _Arr3.default(getElem(this).className.split(' '));\n\t      }\n\t\n\t      return this.forEach(function (elem) {\n\t        elem.className = cls;\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#click\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/API/HTMLElement/click\r\n\t     * @description Synonym for\r\n\t     * [HTMLElement#click]{@link https://developer.mozilla.org/en/docs/Web/API/HTMLElement/click}.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'click',\n\t    value: function click() {\n\t      return this.forEach(function (elem) {\n\t        elem.click();\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#clone\r\n\t     * @public\r\n\t     * @param {Boolean|*} [deep = false] - See thee link.\r\n\t     * @returns {Elem} New instance of Elem.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/API/Node/cloneNode\r\n\t     * @description Synonym for\r\n\t     * [Node#cloneNode]{@link https://developer.mozilla.org/en/docs/Web/API/Node/cloneNode}.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'clone',\n\t    value: function clone() {\n\t      var deep = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];\n\t\n\t      return this.object(function (elems, elem) {\n\t        elems.add(elem.cloneNode(!!deep));\n\t      }, new Elem());\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#closest\r\n\t     * @public\r\n\t     * @param {String} selector - See the link.\r\n\t     * @returns {Elem} Set of the closest elements.\r\n\t     * @description Synonym for\r\n\t     * [Element#closest]{@link https://developer.mozilla.org/en/docs/Web/API/Element/closest}.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'closest',\n\t    value: function closest(selector) {\n\t      return this.object(function (elems, elem) {\n\t        while (elem) {\n\t          if (new Elem(elem).is(selector)) {\n\t            return elems.add(elem);\n\t          }\n\t\n\t          elem = elem.parentElement;\n\t        }\n\t      }, new Elem());\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#contains\r\n\t     * @public\r\n\t     * @param {String|Elem|Element} element - Element to find out if it's within the first element\r\n\t     * in the set or a selector of it.\r\n\t     * @returns {Boolean} Returns if the argument within this element.\r\n\t     * @description Method is extension for\r\n\t     * [Node#contains]{@link https://developer.mozilla.org/en/docs/Web/API/Node/contains}.\r\n\t     *\r\n\t     * @example\r\n\t     * elem1.contains(elem2);   // true|false\r\n\t     * elem.contains(selector); // true|false\r\n\t     */\n\t\n\t  }, {\n\t    key: 'contains',\n\t    value: function contains(element) {\n\t      element = toFind(element);\n\t\n\t      return getElem(this).contains(getElem(element));\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#create\r\n\t     * @public\r\n\t     * @param {String} type - Type of created element.\r\n\t     * @param {...String} appliedExpressions - Strings that are passed into {@link Elem#apply}.\r\n\t     * @returns {Elem} New instance of Elem - wrap of the created element.\r\n\t     * @description Method for creating elements inside this element. If this element is a document it's just created.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.create('div', '#id .c1 .c2 *Some text*');\r\n\t     *\r\n\t     * // also there are shorthands for almost every HTML-element\r\n\t     * elem.div();\r\n\t     * elem.input('$type(checkbox) $name(country)');\r\n\t     */\n\t\n\t  }, {\n\t    key: 'create',\n\t    value: function create(type) {\n\t      var _arguments = arguments;\n\t\n\t      for (var _len4 = arguments.length, appliedExpressions = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n\t        appliedExpressions[_key4 - 1] = arguments[_key4];\n\t      }\n\t\n\t      return this.object(function (elems, elem) {\n\t        var element = new Elem(nativeDocument.createElement(type));\n\t\n\t        if (elem !== nativeDocument) {\n\t          element.into(elem);\n\t        }\n\t\n\t        elems.add(element.apply.apply(element, new _Arr3.default(_arguments).slice(1).$));\n\t      }, new Elem());\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#css\r\n\t     * @public\r\n\t     * @param {String|Object.<String, String|ElemValueCallback>} [property] - Name of the property to get or\r\n\t     * an object of the format { [property]: value, ... } to set styles.\r\n\t     * @param {String|ElemValueCallback} [value] - If the first argument is a string it should be a value to set for that property.\r\n\t     * @returns {Super|String|Elem} If no arguments passed, D-Wrap of css styles of the element returned,\r\n\t     * if 1 string argument is passed the value of the property returned otherwise returns this.\r\n\t     * @description Method for getting/setting styles. Supports !important.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.css('display', 'none'); // display set to 'none' and this returned\r\n\t     * elem.css('display');         // 'none'\r\n\t     * elem.css({\r\n\t     *   display: 'inline',         // display set to 'inline'\r\n\t     *   cursor: 'pointer'          // cursor set to 'pointer'\r\n\t     * });                          // this returned\r\n\t     * elem.css().$;                // { display: 'none', cursor: 'pointer' }\r\n\t     */\n\t\n\t  }, {\n\t    key: 'css',\n\t    value: function css(property, value) {\n\t      var style = getElem(this).style;\n\t\n\t      if (!arguments.length) {\n\t        return new _Str2.default(style.cssText).split(/; ?/).object(function (o, value) {\n\t          if (value) {\n\t            property = value.split(/: /);\n\t\n\t            o[new _Str2.default(property[0]).toCamelCase().$] = property[1];\n\t          }\n\t        });\n\t      }\n\t\n\t      if (arguments.length <= 1 && (0, _helpers.isString)(property)) {\n\t        property = new _Str2.default(property).toHyphenCase().$;\n\t\n\t        return style.getPropertyValue(property) + (style.getPropertyPriority(property) ? ' !important' : '');\n\t      }\n\t\n\t      if (arguments.length >= 2) {\n\t        property = _defineProperty({}, property, value);\n\t      }\n\t\n\t      return this.forEach(function (elem, index) {\n\t        new _Super2.default(property).forEach(function (value, property) {\n\t          property = new _Str2.default(property).toHyphenCase();\n\t\n\t          if ((0, _helpers.isFunction)(value)) {\n\t            value = value(new Elem(elem).css(property.$), elem, index);\n\t          }\n\t\n\t          elem.style.setProperty(property, value.replace(/!important$/, ''), /!important$/.test(value) ? 'important' : '');\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#ctx\r\n\t     * @public\r\n\t     * @param {String|Object|CtxCallback} [property] - If present and object\r\n\t     * it's assigned to the canvas rendering context, if function\r\n\t     * it's called with canvas rendering context argument, if string\r\n\t     * the value from the second argument is used for assigning\r\n\t     * this property to canvas rendering context and if not present\r\n\t     * canvas rendering context returned.\r\n\t     * @param {*} [value] - See the property argument.\r\n\t     * @returns {CanvasRenderingContext2D|Elem}\r\n\t     * @description Rendering context of the first canvas in the set.\r\n\t     *\r\n\t     * @example\r\n\t     * canvas.ctx; // CanvasRenderingContext2D\r\n\t     */\n\t\n\t  }, {\n\t    key: 'ctx',\n\t    value: function ctx(property, value) {\n\t      var ctx = void 0;\n\t\n\t      this.some(function (elem) {\n\t        if (getName(elem) === 'canvas') {\n\t          ctx = elem.dwayneData.ctx;\n\t\n\t          return true;\n\t        }\n\t      });\n\t\n\t      if (!arguments.length) {\n\t        return ctx;\n\t      }\n\t\n\t      if ((0, _helpers.isFunction)(property)) {\n\t        property(ctx);\n\t      } else {\n\t        if (arguments.length >= 2) {\n\t          property = _defineProperty({}, property, value);\n\t        }\n\t\n\t        (0, _helpers.assign)(ctx, property);\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#data\r\n\t     * @public\r\n\t     * @param {String|Object.<String, String|ElemValueCallback>} [key] - Name of the data attribute (without data- prefix)\r\n\t     * to get or an object of the format { [attrName]: value, ... } to set attributes.\r\n\t     * @param {String|ElemValueCallback} [value] - If the first argument is a string it should be a value to set for that attribute.\r\n\t     * @returns {Super|String|Elem} If no arguments passed, D-Wrap of dataset of the element returned,\r\n\t     * if 1 string argument is passed the value of the data attribute returned otherwise returns this.\r\n\t     * @description Method for getting/setting data attributes. See\r\n\t     * [HTMLElement#dataset]{@link https://developer.mozilla.org/en/docs/Web/API/HTMLElement/dataset}.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.data('someKey1', 'value'); // attribute data-some-key1 set to 'value1' and this returned\r\n\t     * elem.data('someKey1');          // 'value1'\r\n\t     * elem.data({\r\n\t     *   someKey1: 'value3',           // attribute data-some-key1 set to 'value3'\r\n\t     *   someKey2: 'value2'            // attribute data-some-key2 set to 'value2'\r\n\t     * });                             // this returned\r\n\t     * elem.data().$;                  // { someKey1: 'value3', someKey2: 'value2' }\r\n\t     */\n\t\n\t  }, {\n\t    key: 'data',\n\t    value: function data(key, value) {\n\t      var _this6 = this;\n\t\n\t      var dataset = getElem(this).dataset;\n\t\n\t      if (!arguments.length) {\n\t        return new _Super2.default(dataset).object(function (o, value, key) {\n\t          o[key] = value;\n\t        });\n\t      }\n\t\n\t      if (arguments.length === 1 && (0, _helpers.isString)(key)) {\n\t        return dataset[key];\n\t      }\n\t\n\t      if (arguments.length >= 2) {\n\t        key = _defineProperty({}, key, value);\n\t      }\n\t\n\t      (0, _helpers.iterate)(key, function (value, key) {\n\t        _this6.forEach(function (elem, index) {\n\t          elem.dataset[key] = (0, _helpers.isFunction)(value) ? value(elem.dataset[key], elem, index) : value;\n\t        });\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#dataURL\r\n\t     * @param {String} [type = 'image/png'] - See the link\r\n\t     * @param {Number} [encoderOptions = 0.92] - See the link.\r\n\t     * @returns {String} Data URL for the first canvas element in the set.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/API/HTMLCanvasElement/toDataURL\r\n\t     * @description Synonym for\r\n\t     * [HTMLCanvasElement#toDataURL]{@link https://developer.mozilla.org/en/docs/Web/API/HTMLCanvasElement/toDataURL}.\r\n\t     *\r\n\t     * @example\r\n\t     * canvas.dataURL();\r\n\t     */\n\t\n\t  }, {\n\t    key: 'dataURL',\n\t    value: function dataURL(type, encoderOptions) {\n\t      var ctx = this.ctx();\n\t\n\t      if (!ctx) {\n\t        return '';\n\t      }\n\t\n\t      return ctx.canvas.toDataURL.apply(ctx.canvas, arguments);\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#deleteRule\r\n\t     * @public\r\n\t     * @param {String} name - Name of the rule.\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @description Method for deleting css styles in a style tag.\r\n\t     * Note: style element should be inside the document.\r\n\t     *\r\n\t     * @example\r\n\t     * style.deleteRule('img-size');\r\n\t     */\n\t\n\t  }, {\n\t    key: 'deleteRule',\n\t    value: function deleteRule(name) {\n\t      this.some(function (elem) {\n\t        if (getName(elem) === 'style') {\n\t          var rule = new _Arr3.default(elem.sheet.cssRules).find(function (rule) {\n\t            return rule.dwayneData && rule.dwayneData.name === name;\n\t          });\n\t\n\t          if (rule) {\n\t            elem.sheet.deleteRule(rule.key);\n\t\n\t            return true;\n\t          }\n\t        }\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#dispatch\r\n\t     * @public\r\n\t     * @param {String|Event} event - Event or a string (new Event(event) is created).\r\n\t     * @param {Object} [eventInit = {}] - See the link.\r\n\t     * @param {Boolean} [eventInit.bubbles = true] - See the link.\r\n\t     * @param {Boolean} [eventInit.cancelable = true] - See the link.\r\n\t     * @param {Object} [details = {}] - Object that is assigned to the event.\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/API/Event/Event\r\n\t     * @description Synonym for\r\n\t     * [EventTarget#dispatchEvent]{@link https://developer.mozilla.org/en/docs/Web/API/EventTarget/dispatchEvent}.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.dispatch('click');\r\n\t     * elem.dispatch('click', { bubbles: false, cancellable: false });\r\n\t     * elem.dispatch(new CustomEvent('custom-event'));\r\n\t     */\n\t\n\t  }, {\n\t    key: 'dispatch',\n\t    value: function dispatch(event) {\n\t      var eventInit = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t      var details = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\t\n\t      var _ref5 = eventInit || {};\n\t\n\t      var _ref5$bubbles = _ref5.bubbles;\n\t      var bubbles = _ref5$bubbles === undefined ? true : _ref5$bubbles;\n\t      var _ref5$cancelable = _ref5.cancelable;\n\t      var cancelable = _ref5$cancelable === undefined ? true : _ref5$cancelable;\n\t\n\t      var finalEvent = event;\n\t\n\t      if (!/Event$/.test((0, _helpers.toStringTag)(finalEvent))) {\n\t        try {\n\t          finalEvent = new Event(finalEvent, eventInit);\n\t        } catch (err) {\n\t          finalEvent = nativeDocument.createEvent('Event');\n\t          finalEvent.initEvent(event, bubbles, cancelable);\n\t        }\n\t\n\t        (0, _helpers.assign)(finalEvent, details);\n\t      }\n\t\n\t      return this.forEach(function (elem) {\n\t        elem.dispatchEvent(finalEvent);\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#elem\r\n\t     * @public\r\n\t     * @param {Number} [index = 0] - Index of the element of the set to get. Negative index means elem.length + index.\r\n\t     * @returns {Elem} New instance of Elem.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.elem(1); // a wrap of the element in the set that has index 1\r\n\t     * elem.elem();  // a wrap of the element in the set that has index 0\r\n\t     */\n\t\n\t  }, {\n\t    key: 'elem',\n\t    value: function elem() {\n\t      var index = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\t\n\t      if (index < 0) {\n\t        index = this.length + index;\n\t      }\n\t\n\t      return new Elem(this.$[index]);\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#filter\r\n\t     * @public\r\n\t     * @param {String|Function|Element[]|Elem} [selector = Boolean] - If it's a string the method filters elements with the selector\r\n\t     * otherwise super.filter is called.\r\n\t     * @returns {Elem} New instance of Elem.\r\n\t     * @description Method for filtering elements.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.filter((elem) => new Elem(elem).closest('.parent'));\r\n\t     * elem.filter(elemsInArray);\r\n\t     * elem.filter(elemsInElem);\r\n\t     * elem.filter('.child');\r\n\t     */\n\t\n\t  }, {\n\t    key: 'filter',\n\t    value: function filter() {\n\t      var selector = arguments.length <= 0 || arguments[0] === undefined ? Boolean : arguments[0];\n\t\n\t      return new Elem(_get(Object.getPrototypeOf(Elem.prototype), 'filter', this).call(this, filterSwitcher(selector)));\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#find\r\n\t     * @public\r\n\t     * @param {String|Function} selector - Selector to find.\r\n\t     * @returns {Elem|{ key: Key, value: * }|null} New instance of Elem if selector is a string\r\n\t     * otherwise super.find is called.\r\n\t     * @description Synonym for\r\n\t     * [Element#querySelectorAll]{@link https://developer.mozilla.org/en/docs/Web/API/Element/querySelectorAll}.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'find',\n\t    value: function find(selector) {\n\t      if (!(0, _helpers.isString)(selector)) {\n\t        return _get(Object.getPrototypeOf(Elem.prototype), 'find', this).call(this, selector);\n\t      }\n\t\n\t      return this.object(function (elems, elem) {\n\t        elems.add(_find(selector, elem));\n\t      }, new Elem());\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#first\r\n\t     * @public\r\n\t     * @returns {Elem} New instance of Elem.\r\n\t     * @description Synonym for elem.elem(0).\r\n\t     */\n\t\n\t  }, {\n\t    key: 'first',\n\t    value: function first() {\n\t      return this.elem(0);\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#first\r\n\t     * @public\r\n\t     * @param {String} [selector = null] - If present, finds first child in every elem that matches the selector.\r\n\t     * If not, finds first child of each element in the set.\r\n\t     * @returns {Elem} New instance of Elem.\r\n\t     * @description Method for finding first children of each element in the set.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.first();       // finds first child of each element in the elem set\r\n\t     * elem.first('.foo'); // find first child that has foo class of each element in the set\r\n\t     */\n\t\n\t  }, {\n\t    key: 'firstChild',\n\t    value: function firstChild() {\n\t      var selector = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t\n\t      return this.object(function (elems, elem) {\n\t        var _ref6 = new _Arr3.default(elem.children).find(function (elem) {\n\t          return new Elem(elem).is(selector);\n\t        }) || {};\n\t\n\t        var found = _ref6.value;\n\t\n\t\n\t        elems.add(found);\n\t      }, new Elem());\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#focus\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @see https://developer.mozilla.org/en/docs/Web/API/HTMLElement/focus\r\n\t     * @description Synonym for\r\n\t     * [HTMLElement#focus]{@link https://developer.mozilla.org/en/docs/Web/API/HTMLElement/focus}.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'focus',\n\t    value: function focus() {\n\t      return this.forEach(function (elem) {\n\t        elem.focus();\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#getFormData\r\n\t     * @public\r\n\t     * @returns {Object} Form data object.\r\n\t     * @description Method allows you to get form data from the form.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getFormData',\n\t    value: function getFormData() {\n\t      return this.find(inputElements).object(function (data, input) {\n\t        data[input.name] = formDataSwitcher(input.type, [input]);\n\t      }, {}).$;\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#getRule\r\n\t     * @public\r\n\t     * @param {String} name - Name of the rule.\r\n\t     * @returns {{ selector: (String|void), rules: Object }} Set of the css rules.\r\n\t     * @description Method for getting set of the rules under the name.\r\n\t     * Note: style element should be inside the document.\r\n\t     *\r\n\t     * @example\r\n\t     * style.addRule('img-size', 'img.square', {\r\n\t     *   width: '40px',\r\n\t     *   height: '40px'\r\n\t     * });\r\n\t     * style.getRule('img-size');\r\n\t     * // {\r\n\t     * //   selector: 'img.square',\r\n\t     * //   rules: {\r\n\t     * //     width: '40px',\r\n\t     * //     height: '40px'\r\n\t     * //   }\r\n\t     * // }\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getRule',\n\t    value: function getRule(name) {\n\t      var found = {\n\t        selector: undefined,\n\t        rules: {}\n\t      };\n\t\n\t      this.some(function (elem) {\n\t        if (getName(elem) === 'style') {\n\t          var _ref7 = new _Arr3.default(elem.sheet.cssRules).find(function (rule) {\n\t            return rule.dwayneData && rule.dwayneData.name === name;\n\t          }) || {};\n\t\n\t          var rule = _ref7.value;\n\t\n\t\n\t          if (rule) {\n\t            found = {\n\t              selector: rule.selectorText,\n\t              rules: new Elem(rule).css().$\n\t            };\n\t\n\t            return true;\n\t          }\n\t        }\n\t      });\n\t\n\t      return found;\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#hasAttr\r\n\t     * @public\r\n\t     * @param {String} attr - Name of the attribute.\r\n\t     * @returns {Boolean} If the first element in the set has the attribute.\r\n\t     * @description Method that returns if the first element in the set has the attribute or not.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.attr('attr', 'value').hasAttr('attr'); // true\r\n\t     * elem.removeAttr('attr').hasAttr('attr');    // false\r\n\t     */\n\t\n\t  }, {\n\t    key: 'hasAttr',\n\t    value: function hasAttr(attr) {\n\t      return getElem(this).hasAttribute(attr);\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#hasClass\r\n\t     * @public\r\n\t     * @param {String} cls - Name of the class.\r\n\t     * @returns {Boolean} If the first element in the set has the class.\r\n\t     * @description Method that returns if the first element in the set has the class or not.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.addClass('cls').hasClass('cls');    // true\r\n\t     * elem.removeClass('cls').hasClass('cls'); // false\r\n\t     */\n\t\n\t  }, {\n\t    key: 'hasClass',\n\t    value: function hasClass(cls) {\n\t      return getElem(this).classList.contains(cls);\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#height\r\n\t     * @public\r\n\t     * @param {*|ElemValueCallback} [height] - Height to set.\r\n\t     * @returns {Elem|String} If no arguments passed height of the first element in the set returned.\r\n\t     * Otherwise all elements heights in the set are set to the height argument.\r\n\t     * @description Gets or sets height.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.height(123);\r\n\t     * elem.height(); // 123\r\n\t     */\n\t\n\t  }, {\n\t    key: 'height',\n\t    value: function height(_height) {\n\t      return this.prop.apply(this, new _Arr3.default(arguments).unshift('height').$);\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#hide\r\n\t     * @public\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @description Hides all elements in the set.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.hide();\r\n\t     */\n\t\n\t  }, {\n\t    key: 'hide',\n\t    value: function hide() {\n\t      return this.forEach(function (elem) {\n\t        elem = new Elem(elem);\n\t\n\t        elem.prop('dwayneData').previousDisplay = elem.css('display');\n\t        elem.css('display', 'none !important');\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#html\r\n\t     * @public\r\n\t     * @param {String|ElemValueCallback|*} [html] - HTML to write instead of current HTML.\r\n\t     * @returns {Elem|String} If no arguments passed HTML of the first element in the set returned.\r\n\t     * Otherwise all elements HTML in the set are set to the html argument.\r\n\t     * @description Gets or sets HTML.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.html('&lt;div&gt;1&lt;/div&gt;');\r\n\t     * elem.html(); // '&lt;div&gt;1&lt;/div&gt;'\r\n\t     */\n\t\n\t  }, {\n\t    key: 'html',\n\t    value: function html(_html) {\n\t      if (!arguments.length) {\n\t        return getElem(this).innerHTML;\n\t      }\n\t\n\t      return this.forEach(function (elem, index) {\n\t        elem.innerHTML = (0, _helpers.isFunction)(_html) ? _html(elem.innerHTML, elem, index) : _html;\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#id\r\n\t     * @public\r\n\t     * @param {String|*} [id] - Id to set.\r\n\t     * @returns {Elem|String} If no arguments passed id of the first element in the set returned.\r\n\t     * Otherwise all elements ids in the set are set to the id argument.\r\n\t     * @description Gets id or sets ids.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.id('unique');\r\n\t     * elem.id(); // 'unique'\r\n\t     */\n\t\n\t  }, {\n\t    key: 'id',\n\t    value: function id(_id) {\n\t      if (!arguments.length) {\n\t        return getElem(this).id;\n\t      }\n\t\n\t      return this.forEach(function (elem) {\n\t        elem.id = _id;\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @member {Number} Elem#innerHeight\r\n\t     * @type {Number}\r\n\t     * @public\r\n\t     * @readonly\r\n\t     * @description Method for finding how much height content of the first element can be.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.css({\r\n\t     *   boxSizing: 'border-box',\r\n\t     *   height: '200px',\r\n\t     *   paddingTop: '2px',\r\n\t     *   paddingBottom: '3px',\r\n\t     *   borderTop: '1px solid black',\r\n\t     *   borderBottom: '4px solid black'\r\n\t     * }).innerHeight; // 190\r\n\t     * elem\r\n\t     *   .css('box-sizing', 'content-box')\r\n\t     *   .innerHeight; // 200\r\n\t     * elem\r\n\t     *   .css('box-sizing', 'padding-box')\r\n\t     *   .innerHeight; // 195\r\n\t     */\n\t\n\t  }, {\n\t    key: 'into',\n\t\n\t\n\t    /**\r\n\t     * @method Elem#into\r\n\t     * @public\r\n\t     * @param {String|Elem|Element} element - Element to put this element into or a selector of it.\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @description Method is similar to\r\n\t     * [Node#appendChild]{@link https://developer.mozilla.org/en/docs/Web/API/Node/appendChild}.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.into(elem2);\r\n\t     * elem.into(document.getElementById('id'));\r\n\t     * elem.into('#id div.c1');\r\n\t     */\n\t    value: function into(element) {\n\t      element = toFind(element).$[0];\n\t\n\t      if (!element) {\n\t        return this;\n\t      }\n\t\n\t      return this.forEach(function (elem) {\n\t        element.appendChild(elem);\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#is\r\n\t     * @public\r\n\t     * @param {String} selector\r\n\t     * @returns {Boolean} If the first element in the set matches the selector.\r\n\t     * If the selector is undefined or null always returns true.\r\n\t     * @description Synonym for\r\n\t     * [Element#matches]{@link https://developer.mozilla.org/en/docs/Web/API/Element/matches}.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.addClass('cls');\r\n\t     * elem.is('.cls');         // true\r\n\t     *\r\n\t     * elem.removeClass('cls');\r\n\t     * elem.is('.cls');         // false\r\n\t     */\n\t\n\t  }, {\n\t    key: 'is',\n\t    value: function is(selector) {\n\t      if ((0, _helpers.isNull)(selector)) {\n\t        return true;\n\t      }\n\t\n\t      var elem = getElem(this);\n\t      var matches = elem.matches || elem.matchesSelector || elem.webkitMatchesSelector || elem.mozMatchesSelector || elem.msMatchesSelector || elem.oMatchesSelector;\n\t\n\t      try {\n\t        return matches.call(elem, selector);\n\t      } catch (err) {\n\t        console.error('Selector \\'' + selector + '\\' is not a valid selector (Elem#is)');\n\t\n\t        return false;\n\t      }\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#isBroken\r\n\t     * @public\r\n\t     * @returns {Boolean} If the first image in the set is broken.\r\n\t     * @description Returns if the first element in the set is broken. Not image and not loaded image is considered proper.\r\n\t     *\r\n\t     * @example\r\n\t     * const img = elem.img().on({\r\n\t     *   'load': onload,\r\n\t     *   'error': onload\r\n\t     * });\r\n\t     *\r\n\t     * onload = () => {\r\n\t     *   console.log(img.isBroken()); // true\r\n\t     * };\r\n\t     *\r\n\t     * img.ref('/some/non-existent/site/not-found.png');\r\n\t     */\n\t\n\t  }, {\n\t    key: 'isBroken',\n\t    value: function isBroken() {\n\t      var isBroken = false;\n\t\n\t      this.some(function (elem) {\n\t        if (getName(elem) === 'img') {\n\t          isBroken = !!(elem.complete && (!elem.naturalWidth || !elem.naturalHeight));\n\t\n\t          return true;\n\t        }\n\t      });\n\t\n\t      return isBroken;\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#last\r\n\t     * @public\r\n\t     * @returns {Elem} New instance of Elem.\r\n\t     * @description Synonym for elem.elem(-1).\r\n\t     */\n\t\n\t  }, {\n\t    key: 'last',\n\t    value: function last() {\n\t      return this.elem(-1);\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#last\r\n\t     * @public\r\n\t     * @param {String} [selector = null] - If present, finds last child in every elem that matches the selector.\r\n\t     * If not, finds last child of each element in the set.\r\n\t     * @returns {Elem} New instance of Elem.\r\n\t     * @description Method for finding last children of each element in the set.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.last();       // finds last child of each element in the elem set\r\n\t     * elem.last('.foo'); // find last child that has 'foo' class of each element in the set\r\n\t     */\n\t\n\t  }, {\n\t    key: 'lastChild',\n\t    value: function lastChild() {\n\t      var selector = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t\n\t      return this.object(function (elems, elem) {\n\t        var _ref8 = new _Arr3.default(elem.children).reverse().find(function (elem) {\n\t          return new Elem(elem).is(selector);\n\t        }) || {};\n\t\n\t        var found = _ref8.value;\n\t\n\t\n\t        elems.add(found);\n\t      }, new Elem());\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#load\r\n\t     * @public\r\n\t     * @returns {Promise.<{ proper: Elem, broken: Elem }>} Promise with broken and proper images.\r\n\t     * @description Loads each image in the set and puts it to the proper or broken array.\r\n\t     *\r\n\t     * @example\r\n\t     * images.load().then(({ broken }) => {\r\n\t     *   broken.filter('img').ref('/fallback.png');\r\n\t     * });\r\n\t     */\n\t\n\t  }, {\n\t    key: 'load',\n\t    value: function load() {\n\t      var images = {\n\t        proper: new Elem(),\n\t        broken: new Elem()\n\t      };\n\t\n\t      return _Promise2.default.all(this.filter(function (elem) {\n\t        return getName(elem) === 'img';\n\t      }).map(function (elem) {\n\t        var $elem = new Elem(elem);\n\t\n\t        if (elem.complete) {\n\t          images[$elem.isBroken() ? 'broken' : 'proper'].push(elem);\n\t\n\t          return;\n\t        }\n\t\n\t        return new _Promise2.default(function (resolve) {\n\t          var removeListeners = $elem.on({\n\t            load: function load() {\n\t              images.proper.add(elem);\n\t\n\t              removeListeners();\n\t              resolve();\n\t            },\n\t            error: function error() {\n\t              images.broken.add(elem);\n\t\n\t              removeListeners();\n\t              resolve();\n\t            }\n\t          });\n\t        });\n\t      }).$).then(function () {\n\t        return images;\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#moveAttr\r\n\t     * @public\r\n\t     * @param {String} attr - Attribute to move to the first element.\r\n\t     * @param {String} [value = ''] - Value to set for the attribute. If not set attribute of the previous element or '' used.\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @description Method for moving an attribute from previous element to the next one (first element in this set).\r\n\t     *\r\n\t     * @example\r\n\t     * elem1.moveAttr('attr', 'value');     // attribute 'attr' set to 'value' on elem1\r\n\t     * elem2.moveAttr('attr');              // attribute 'attr' removed from elem1. set to 'value' on elem2\r\n\t     * elem3.moveAttr('attr', 'new value'); // attribute 'attr' removed from elem2. set to 'new value' on elem3\r\n\t     */\n\t\n\t  }, {\n\t    key: 'moveAttr',\n\t    value: function moveAttr(attr) {\n\t      var value = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];\n\t\n\t      var prev = attrs[attr];\n\t      var elem = this.elem();\n\t\n\t      if (prev && elem.length) {\n\t        if (arguments.length < 2) {\n\t          value = prev.attr(attr);\n\t        }\n\t\n\t        prev.removeAttr(attr);\n\t      }\n\t\n\t      if (elem.length) {\n\t        attrs[attr] = elem.attr(attr, value);\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#moveClass\r\n\t     * @public\r\n\t     * @param {String} cls - Class to move to the first element.\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @description Method for moving a class from previous element to the next one (first element in this set).\r\n\t     *\r\n\t     * @example\r\n\t     * elem1.moveClass('cls'); // class 'cls' added to elem1\r\n\t     * elem2.moveClass('cls'); // class 'cls' removed from elem1. added to elem1\r\n\t     */\n\t\n\t  }, {\n\t    key: 'moveClass',\n\t    value: function moveClass(cls) {\n\t      var prev = classes[cls];\n\t      var elem = this.elem();\n\t\n\t      if (prev && elem.length) {\n\t        prev.removeClass(cls);\n\t      }\n\t\n\t      if (elem.length) {\n\t        classes[cls] = elem.addClass(cls);\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @member Elem#name\r\n\t     * @type {String}\r\n\t     * @public\r\n\t     * @readonly\r\n\t     * @description tagName (lowercased) of the first element in the set.\r\n\t     *\r\n\t     * @example\r\n\t     * const elem1 = elem.create('div');\r\n\t     * elem1.name // 'div'\r\n\t     */\n\t\n\t  }, {\n\t    key: 'next',\n\t\n\t\n\t    /**\r\n\t     * @method Elem#next\r\n\t     * @public\r\n\t     * @param {String} [selector = null] - If present, finds next element to every elem that matches the selector.\r\n\t     * If not, finds next element to each element in the set.\r\n\t     * @returns {Elem} New instance of Elem.\r\n\t     * @description Method for finding next element to each element in the set.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.next();       // finds next element to each element in the set\r\n\t     * elem.next('.foo'); // finds next element to each element that has 'foo' class\r\n\t     */\n\t    value: function next() {\n\t      var selector = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t\n\t      return this.object(function (elems, elem) {\n\t        /* eslint no-cond-assign: 0 */\n\t        while (elem = elem.nextElementSibling) {\n\t          if (new Elem(elem).is(selector)) {\n\t            return elems.add(elem);\n\t          }\n\t        }\n\t      }, new Elem());\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#off\r\n\t     * @public\r\n\t     * @param {...ElemEventString} events - Events to remove.\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @description Method that removes all the listeners from each element in the set specified by the events arguments.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.off('click');\r\n\t     * elem.off('click, input');\r\n\t     * elem.off('click, input', 'focus');\r\n\t     */\n\t\n\t  }, {\n\t    key: 'off',\n\t    value: function off() {\n\t      var _arguments2 = arguments;\n\t\n\t      for (var _len5 = arguments.length, events = Array(_len5), _key6 = 0; _key6 < _len5; _key6++) {\n\t        events[_key6] = arguments[_key6];\n\t      }\n\t\n\t      return this.forEach(function (elem) {\n\t        var listeners = elem.dwayneData.listeners;\n\t\n\t\n\t        (0, _helpers.iterate)(_arguments2, function (event) {\n\t          (0, _helpers.iterate)(event.split(eventSeparator), function (event) {\n\t            (listeners[event] || new _Super2.default()).forEach(function (_ref9) {\n\t              var removeListener = _ref9.removeListener;\n\t              return removeListener();\n\t            });\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#on\r\n\t     * @public\r\n\t     * @param {ElemEventString|Object.<ElemEventString|Listener>} event - Either a {@link ElemEventString} string\r\n\t     * or an object with event keys (a key is also ElemEventString) and listeners values.\r\n\t     * @param {String} [selector = null] - Selector to filter event targets.\r\n\t     * @param {Listener} [listener] - If the first argument is a string it must be a listener function for\r\n\t     * specified event(s).\r\n\t     * @returns {ElemRemoveListeners} Function that takes optional event argument.\r\n\t     * @description Adds event listeners for all the elements in the set.\r\n\t     * For debugging: If you need to know what listeners are in work (and what selectors filter targets)\r\n\t     * you can look at the base property of the only dwayne listener that listens for the event\r\n\t     * and find all working listeners in listener.base.dwayneData.listeners[event].$.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.on(\r\n\t     *   'change, input',\r\n\t     *   'input, select, textarea, datalist, keygen, output',\r\n\t     *   (e, elem, index) => console.log(elem.value)\r\n\t     * );\r\n\t     * elem.on(\r\n\t     *   'change, input',\r\n\t     *   (e, elem, index) => console.log(elem.value)\r\n\t     * );\r\n\t     * elem.on(\r\n\t     *   {\r\n\t     *     'change, input': (e, elem, index) => console.log(elem.value),\r\n\t     *     'blur': console.log('blur')\r\n\t     *   },\r\n\t     *   'input, select, textarea, datalist, keygen, output'\r\n\t     * );\r\n\t     *\r\n\t     * const removeListeners = elem.on({\r\n\t     *   'change, input': (e, elem, index) => console.log(elem.value),\r\n\t     *   'blur': console.log('blur')\r\n\t     * });\r\n\t     *\r\n\t     * removeListeners('click');\r\n\t     * removeListeners('blur, change');\r\n\t     * removeListeners('blur, change', 'input');\r\n\t     * removeListeners();\r\n\t     */\n\t\n\t  }, {\n\t    key: 'on',\n\t    value: function on(event) {\n\t      var selector = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];\n\t      var listener = arguments[2];\n\t\n\t      var allListeners = new _Super2.default({});\n\t\n\t      if ((0, _helpers.isFunction)(selector)) {\n\t        listener = selector;\n\t        selector = null;\n\t      }\n\t\n\t      if ((0, _helpers.isString)(event)) {\n\t        event = _defineProperty({}, event, listener);\n\t      }\n\t\n\t      event = new _Super2.default(event).object(function (listeners, listener, event) {\n\t        (0, _helpers.iterate)(event.split(eventSeparator), function (event) {\n\t          listeners[event] = listener;\n\t        });\n\t      });\n\t\n\t      this.forEach(function (elem) {\n\t        var _ref10 = elem.dwayneData || windowsDwayneData.find(function (_ref12) {\n\t          var element = _ref12.element;\n\t          return element === elem;\n\t        });\n\t\n\t        var listeners = _ref10.listeners;\n\t\n\t\n\t        event.forEach(function (listener, event) {\n\t          var removeEventListeners = listeners[event] = listeners[event] || new _Super2.default({}).define('index', {\n\t            value: 0,\n\t            configurable: true,\n\t            writable: true\n\t          });\n\t          var index = removeEventListeners.prop('index');\n\t\n\t          if (!removeEventListeners.has('listener')) {\n\t            var newListener = function newListener(e) {\n\t              removeEventListeners.forEach(function (_ref11) {\n\t                var selector = _ref11.selector;\n\t                var listener = _ref11.listener;\n\t\n\t                if (new Elem(e.target).is(selector)) {\n\t                  listener.call(elem, e, elem, index);\n\t                }\n\t              });\n\t            };\n\t\n\t            newListener.base = elem;\n\t\n\t            elem.addEventListener(event, newListener, false);\n\t            removeEventListeners.define('listener', {\n\t              value: newListener,\n\t              configurable: true,\n\t              writable: true\n\t            });\n\t          }\n\t\n\t          var removeListener = function removeListener() {\n\t            removeEventListeners.delete(index);\n\t\n\t            if (!removeEventListeners.count) {\n\t              elem.removeEventListener(event, removeEventListeners.prop('listener'), false);\n\t              removeEventListeners.delete('listener');\n\t            }\n\t          };\n\t\n\t          allListeners.prop(event, (allListeners.prop(event) || new _Arr3.default()).push(removeListener));\n\t\n\t          removeEventListeners.assign(_defineProperty({\n\t            index: index + 1\n\t          }, index, {\n\t            selector: selector,\n\t            listener: listener,\n\t            removeListener: removeListener\n\t          }));\n\t        });\n\t      });\n\t\n\t      return function removeEventListeners(event) {\n\t        if (arguments.length) {\n\t          (0, _helpers.iterate)(arguments, function (event) {\n\t            (0, _helpers.iterate)(event.split(eventSeparator), function (event) {\n\t              if (allListeners.has(event)) {\n\t                allListeners.prop(event).forEach(function (removeListener) {\n\t                  return removeListener();\n\t                });\n\t                allListeners.delete(event);\n\t              }\n\t            });\n\t          });\n\t\n\t          return;\n\t        }\n\t\n\t        allListeners.forEach(function (removeListeners) {\n\t          removeListeners.forEach(function (removeListener) {\n\t            return removeListener();\n\t          });\n\t        });\n\t      };\n\t    }\n\t\n\t    /**\r\n\t     * @member {Number} Elem#outerWidth\r\n\t     * @type {Number}\r\n\t     * @public\r\n\t     * @readonly\r\n\t     * @description Method for finding how much height the element actually is.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.css({\r\n\t     *   boxSizing: 'border-box',\r\n\t     *   height: '200px',\r\n\t     *   paddingTop: '2px',\r\n\t     *   paddingBottom: '3px',\r\n\t     *   borderTop: '1px solid black',\r\n\t     *   borderBottom: '4px solid black'\r\n\t     *   marginTop: '0px',\r\n\t     *   marginBottom: '5px'\r\n\t     * }).outerHeight; // 205\r\n\t     * elem\r\n\t     *   .css('box-sizing', 'content-box')\r\n\t     *   .outerHeight; // 215\r\n\t     * elem\r\n\t     *   .css('box-sizing', 'padding-box')\r\n\t     *   .outerHeight; // 210\r\n\t     */\n\t\n\t  }, {\n\t    key: 'parent',\n\t\n\t\n\t    /**\r\n\t     * @method Elem#parent\r\n\t     * @public\r\n\t     * @returns {Elem} New instance of Elem.\r\n\t     * @description Method returns wrap of the set of the parent elements of each element in the set.\r\n\t     */\n\t    value: function parent() {\n\t      return this.object(function (elems, elem) {\n\t        return elems.add(elem.parentElement);\n\t      }, new Elem());\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#parentTree\r\n\t     * @public\r\n\t     * @returns {Elem} New instance of Elem.\r\n\t     * @description Returns wrap of all parents of each element in the set.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.parentTree(); // Elem\r\n\t     */\n\t\n\t  }, {\n\t    key: 'parentTree',\n\t    value: function parentTree() {\n\t      return this.object(function (elems, elem) {\n\t        while (elem = elem.parentNode) {\n\t          elems.add(elem);\n\t        }\n\t      }, new Elem());\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#prev\r\n\t     * @public\r\n\t     * @param {String} [selector = null] - If present, finds previous element to every elem that matches the selector.\r\n\t     * If not, finds previous element to each element in the set.\r\n\t     * @returns {Elem} New instance of Elem.\r\n\t     * @description Method for finding previous element to each element in the set.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.next();       // finds previous element to each element in the set\r\n\t     * elem.next('.foo'); // finds previous element to each element that has 'foo' class\r\n\t     */\n\t\n\t  }, {\n\t    key: 'prev',\n\t    value: function prev() {\n\t      var selector = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t\n\t      return this.object(function (elems, elem) {\n\t        /* eslint no-cond-assign: 0 */\n\t        while (elem = elem.previousElementSibling) {\n\t          if (new Elem(elem).is(selector)) {\n\t            return elems.add(elem);\n\t          }\n\t        }\n\t      }, new Elem());\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#prop\r\n\t     * @public\r\n\t     * @param {String|Object.<String, ElemValueCallback|*>} property - Either a string of a property or an assigned object.\r\n\t     * @param {ElemValueCallback|*} [value] - If a property parameter is a string\r\n\t     * this has to be an assigned value if it's present.\r\n\t     * @returns {Elem|*} Returns this if it's setter or a value if getter.\r\n\t     * @description Method that is either a property getter for the first element in the set\r\n\t     * or a setter for every element in the set.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.prop('draggable', false);\r\n\t     * elem.prop('draggable'); // false\r\n\t     */\n\t\n\t  }, {\n\t    key: 'prop',\n\t    value: function prop(property, value) {\n\t      if (arguments.length <= 1 && (0, _helpers.isString)(property)) {\n\t        return this.$[0] ? this.$[0][property] : undefined;\n\t      }\n\t\n\t      if (arguments.length >= 2) {\n\t        property = _defineProperty({}, property, value);\n\t      }\n\t\n\t      return this.forEach(function (elem, index) {\n\t        (0, _helpers.iterate)(property, function (value, prop) {\n\t          elem[prop] = (0, _helpers.isFunction)(value) ? value(elem[prop], elem, index) : value;\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#ref\r\n\t     * @public\r\n\t     * @param {String|ElemValueCallback} [link] - If it's present link to a resource.\r\n\t     * @returns {Elem|String} If the link argument isn't present it's a getter of the 'src' attribute\r\n\t     * for the one of following elements: img, script, iframe, audio, video; of the 'action' attribute\r\n\t     * for a form element and of the 'href' attribute for the rest. If it's present it's a setter\r\n\t     * of the same attribute for all the element in the set.\r\n\t     * @description Method for getting resources links and setting them.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.ref('/some/cool/image.png');\r\n\t     * elem.ref(); // '/some/cool/image.png'\r\n\t     */\n\t\n\t  }, {\n\t    key: 'ref',\n\t    value: function ref(link) {\n\t      if (!arguments.length) {\n\t        return this.attr(refSwitcher(this.name));\n\t      }\n\t\n\t      return this.forEach(function (elem) {\n\t        elem = new Elem(elem);\n\t\n\t        elem.attr(refSwitcher(elem.name), link);\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#remove\r\n\t     * @public\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @description Removes all the elements from the set from the document.\r\n\t     * Note: it doesn't remove them from the set so watch out for the memory leaks.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.remove();\r\n\t     */\n\t\n\t  }, {\n\t    key: 'remove',\n\t    value: function remove() {\n\t      return this.forEach(function (elem) {\n\t        elem.remove();\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem@removeAttr\r\n\t     * @public\r\n\t     * @param {...String} attributes - Attributes to remove.\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @description Removes all the attributes from arguments from all the elements in the set.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.removeAttr('foo', 'bar', 'baz');\r\n\t     */\n\t\n\t  }, {\n\t    key: 'removeAttr',\n\t    value: function removeAttr() {\n\t      var _arguments3 = arguments;\n\t\n\t      for (var _len6 = arguments.length, attributes = Array(_len6), _key7 = 0; _key7 < _len6; _key7++) {\n\t        attributes[_key7] = arguments[_key7];\n\t      }\n\t\n\t      return this.forEach(function (elem) {\n\t        (0, _helpers.iterate)(_arguments3, function (attr) {\n\t          elem.removeAttribute(attr);\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#removeClass\r\n\t     * @public\r\n\t     * @param {...String} classes - Classes to remove.\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @description Removes all the classes from arguments from all the elements in the set.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.removeClass('foo', 'bar', 'baz');\r\n\t     */\n\t\n\t  }, {\n\t    key: 'removeClass',\n\t    value: function removeClass() {\n\t      var _arguments4 = arguments;\n\t\n\t      for (var _len7 = arguments.length, classes = Array(_len7), _key8 = 0; _key8 < _len7; _key8++) {\n\t        classes[_key8] = arguments[_key8];\n\t      }\n\t\n\t      return this.forEach(function (elem) {\n\t        var list = elem.classList;\n\t\n\t        list.remove.apply(list, _arguments4);\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#removeCSS\r\n\t     * @public\r\n\t     * @param {...String} props - CSS properties to remove.\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @description Removes all the CSS properties from arguments from all the elements in the set.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.removeCSS('display', 'position', 'margin');\r\n\t     */\n\t\n\t  }, {\n\t    key: 'removeCSS',\n\t    value: function removeCSS() {\n\t      var _arguments5 = arguments;\n\t\n\t      for (var _len8 = arguments.length, props = Array(_len8), _key9 = 0; _key9 < _len8; _key9++) {\n\t        props[_key9] = arguments[_key9];\n\t      }\n\t\n\t      return this.forEach(function (elem) {\n\t        (0, _helpers.iterate)(_arguments5, function (css) {\n\t          elem.style.removeProperty(css);\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#replace\r\n\t     * @public\r\n\t     * @param {String|Elem|Element} element - Element to replace the first element in the set with or a selector of it.\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @description Method is similar to\r\n\t     * [Node#replaceChild]{@link https://developer.mozilla.org/en/docs/Web/API/Node/replaceChild}.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.replace(elem2);\r\n\t     * elem.replace(document.getElementById('id'));\r\n\t     * elem.replace('#id div.c1');\r\n\t     */\n\t\n\t  }, {\n\t    key: 'replace',\n\t    value: function replace(element) {\n\t      var elem = getElem(this);\n\t      var parent = elem.parentElement;\n\t\n\t      if (!parent) {\n\t        return this;\n\t      }\n\t\n\t      element = toFind(element).$[0];\n\t\n\t      if (element) {\n\t        parent.replaceChild(element, elem);\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#setOf\r\n\t     * @public\r\n\t     * @param {String} type - HTML element type.\r\n\t     * @param {Number|Object|*[]} iterator - A number (how many elements to create inside each element),\r\n\t     * an object or an array to iterate over.\r\n\t     * @param {ElemSetOfCallback} callback\r\n\t     * @returns {Elem} New instance of Elem.\r\n\t     * @description Function for creating set of elements inside each element in the set based on an array or an object.\r\n\t     *\r\n\t     * @example\r\n\t     * table.setOf('tr', [[1, 2], [3, 4], [5, 6]], (row, array) => {\r\n\t     *   D(row).setOf('td', array, (col, number) => {\r\n\t     *     D(col).text(number);\r\n\t     *   });\r\n\t     * });\r\n\t     */\n\t\n\t  }, {\n\t    key: 'setOf',\n\t    value: function setOf(type, iterator, callback) {\n\t      (0, _helpers.validate)({ 2: callback }, { 2: ['function'] }, 'Elem#setOf');\n\t\n\t      iterator = new _Super2.default(iterator).$;\n\t\n\t      if ((0, _helpers.isNumber)(iterator)) {\n\t        try {\n\t          (0, _helpers.validate)({ 1: iterator }, { 1: ['intLike', '>=0'] }, 'Elem#setOf');\n\t        } catch (e) {\n\t          throw new Error('\\n\\t\\t\\t\\t\\t2nd argument must be either or non-negative integer, or object!\\n\\t\\t\\t\\t');\n\t        }\n\t\n\t        iterator = (0, _Arr2.array)(iterator);\n\t      }\n\t\n\t      return this.object(function (elems, elem, index) {\n\t        (0, _helpers.iterate)(iterator, function (value, key) {\n\t          var created = new Elem(elem).create(type);\n\t\n\t          callback(created.$, value, key, iterator, elem, index);\n\t\n\t          elems.add(created);\n\t        });\n\t      }, new Elem());\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#show\r\n\t     * @public\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @description Shows all elements in the set.\r\n\t     * If an element was hidden using {@link Elem#hide} previous display is set.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.show();\r\n\t     */\n\t\n\t  }, {\n\t    key: 'show',\n\t    value: function show() {\n\t      return this.forEach(function (elem) {\n\t        var _elem = elem;\n\t        var dwayneData = _elem.dwayneData;\n\t\n\t\n\t        elem = new Elem(elem);\n\t\n\t        if (elem.css('display').indexOf('none') === 0) {\n\t          elem.css('display', dwayneData.previousDisplay);\n\t        }\n\t\n\t        dwayneData.previousDisplay = '';\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#text\r\n\t     * @public\r\n\t     * @param {String|ElemValueCallback|*} [text] - Text to write instead of current text.\r\n\t     * @returns {Elem|String} If no arguments passed text of the first element in the set returned.\r\n\t     * Otherwise all elements texts in the set are set to the text argument.\r\n\t     * @description Gets or sets text.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.text('123');\r\n\t     * elem.text(); // '123'\r\n\t     */\n\t\n\t  }, {\n\t    key: 'text',\n\t    value: function text(_text) {\n\t      if (!arguments.length) {\n\t        return this.prop(textProperty);\n\t      }\n\t\n\t      return this.forEach(function (elem, index) {\n\t        new Elem(elem).html('').addText((0, _helpers.isFunction)(_text) ? _text(elem[textProperty], elem, index) : _text);\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#toggleAttr\r\n\t     * @public\r\n\t     * @param {String} attr - Attribute to toggle.\r\n\t     * @param {Boolean|*} [condition] - If present and the condition is truthy method adds the attribute\r\n\t     * with the '' value and if falsey method removes the attribute. If not present method adds\r\n\t     * the attribute if it doesn't exist and removes if it does.\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @description Method for toggling attributes.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.toggleAttr('attr');\r\n\t     * elem.toggleAttr('attr', someCondition);\r\n\t     */\n\t\n\t  }, {\n\t    key: 'toggleAttr',\n\t    value: function toggleAttr(attr, condition) {\n\t      var _arguments6 = arguments;\n\t\n\t      return this.forEach(function (elem) {\n\t        elem = new Elem(elem);\n\t\n\t        if (_arguments6.length < 2 ? !elem.hasAttr(attr) : condition) {\n\t          elem.attr(attr, '');\n\t        } else {\n\t          elem.removeAttr(attr);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#toggleAttr\r\n\t     * @public\r\n\t     * @param {String} cls - Class to toggle.\r\n\t     * @param {Boolean|*} [condition] - If present and the condition is truthy method adds the class\r\n\t     * and if falsey method removes the class. If not present method adds\r\n\t     * the class if it doesn't exist and removes if it does.\r\n\t     * @returns {Elem} Returns this.\r\n\t     * @description Method for toggling classes.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.toggleClass('cls');\r\n\t     * elem.toggleClass('cls', someCondition);\r\n\t     */\n\t\n\t  }, {\n\t    key: 'toggleClass',\n\t    value: function toggleClass(cls, condition) {\n\t      return (arguments.length < 2 ? !this.hasClass(cls) : condition) ? this.addClass(cls) : this.removeClass(cls);\n\t    }\n\t  }, {\n\t    key: 'up',\n\t\n\t\n\t    /**\r\n\t     * @method Elem#up\r\n\t     * @param {Integer} [level = 1] - What level up along the tree should be the parent.\r\n\t     * @returns {Elem} New instance of Elem.\r\n\t     * @description Creates a collection of parents of level &lt;level&gt;.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.up();\r\n\t     * elem.up(2);\r\n\t     */\n\t    value: function up() {\n\t      var level = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];\n\t\n\t      (0, _helpers.validate)([level], [['intLike', '>=0']], 'Elem#up');\n\t\n\t      level = Number(level);\n\t\n\t      return this.object(function (elems, elem) {\n\t        var n = level;\n\t\n\t        while (n-- && elem) {\n\t          elem = elem.parentElement;\n\t        }\n\t\n\t        elems.add(elem);\n\t      }, new Elem());\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#validate\r\n\t     * @public\r\n\t     * @param {ValidateCallback} [validator] - If present, function that validates inputs.\r\n\t     * @returns {Elem|Object.<String, Error|*>|{ form: Error?, inputs: <Object.<String, Error>>|null }|null}\r\n\t     * If a callback argument provided returns this. If no arguments provided returns either an object\r\n\t     * with input names keys and errors values or null if no errors found.\r\n\t     * @description If a callback argument provided adds it to the element validators list. If no arguments provided\r\n\t     * validates every input element in the set with its own functions. If an element is a form it validates all input elements inside it.\r\n\t     *\r\n\t     * @example\r\n\t     * form.on('input change', 'input', (value, input) => {\r\n\t     *   const $input = D(input);\r\n\t     *\r\n\t     *   if (Number(value) %3) {\r\n\t     *     $input.attr('invalid', '');\r\n\t     *\r\n\t     *     throw new Error('The value should be divided by 3!');\r\n\t     *   }\r\n\t     *\r\n\t     *   $input.removeAttr('invalid');\r\n\t     * });\r\n\t     */\n\t\n\t  }, {\n\t    key: 'validate',\n\t    value: function validate(validator) {\n\t      (0, _helpers.validate)([validator], ['function||!'], 'Elem#validate');\n\t\n\t      if (validator) {\n\t        return this.forEach(function (_ref13) {\n\t          var dwayneData = _ref13.dwayneData;\n\t\n\t          dwayneData.validators.push(validator);\n\t        });\n\t      }\n\t\n\t      var errors = null;\n\t\n\t      this.filter(inputElements + ', form').forEach(function (elem, index) {\n\t        if (getName(elem) === 'form') {\n\t          return new Elem(elem).find(inputElements).forEach(function (input, index) {\n\t            validatorWrap(input, index);\n\t          });\n\t        }\n\t\n\t        validatorWrap(elem, index);\n\t      });\n\t\n\t      function validatorWrap(input, index) {\n\t        try {\n\t          if (input.validity && !input.validity.valid) {\n\t            throw new Error(input.validationMessage);\n\t          }\n\t\n\t          input.dwayneData.validators.forEach(function (validator) {\n\t            validator(input.value, input, index);\n\t          });\n\t        } catch (err) {\n\t          (errors = errors || {})[input.name] = err;\n\t        }\n\t      }\n\t\n\t      return errors;\n\t    }\n\t\n\t    /**\r\n\t     * @method Elem#width\r\n\t     * @public\r\n\t     * @param {*|ElemValueCallback} [width] - Width to set.\r\n\t     * @returns {Elem|String} If no arguments passed width of the first element in the set returned.\r\n\t     * Otherwise all elements widths in the set are set to the width argument.\r\n\t     * @description Gets or sets width.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.width(123);\r\n\t     * elem.width(); // 123\r\n\t     */\n\t\n\t  }, {\n\t    key: 'width',\n\t    value: function width(_width) {\n\t      return this.prop.apply(this, new _Arr3.default(arguments).unshift('width').$);\n\t    }\n\t  }, {\n\t    key: 'innerHeight',\n\t    get: function get() {\n\t      var elem = this.$[0];\n\t\n\t      if (!elem) {\n\t        return 0;\n\t      }\n\t\n\t      if (isWindow(elem)) {\n\t        return elem.innerHeight;\n\t      }\n\t\n\t      var _calcCSS = this.calcCSS();\n\t\n\t      var borderTopWidth = _calcCSS.borderTopWidth;\n\t      var borderBottomWidth = _calcCSS.borderBottomWidth;\n\t      var boxSizing = _calcCSS.boxSizing;\n\t      var height = _calcCSS.height;\n\t      var paddingTop = _calcCSS.paddingTop;\n\t      var paddingBottom = _calcCSS.paddingBottom;\n\t\n\t      var borders = px(borderTopWidth) + px(borderBottomWidth);\n\t      var paddings = px(paddingTop) + px(paddingBottom);\n\t\n\t      return px(height) - innerSwitcher(boxSizing, [paddings, borders]);\n\t    }\n\t\n\t    /**\r\n\t     * @member {Number} Elem#innerWidth\r\n\t     * @type {Number}\r\n\t     * @public\r\n\t     * @readonly\r\n\t     * @description Method for finding how much width content of the first element can be.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.css({\r\n\t     *   boxSizing: 'border-box',\r\n\t     *   width: '200px',\r\n\t     *   paddingLeft: '2px',\r\n\t     *   paddingRight: '3px',\r\n\t     *   borderLeft: '1px solid black',\r\n\t     *   borderRight: '4px solid black'\r\n\t     * }).innerWidth; // 190\r\n\t     * elem\r\n\t     *   .css('box-sizing', 'content-box')\r\n\t     *   .innerWidth; // 200\r\n\t     * elem\r\n\t     *   .css('box-sizing', 'padding-box')\r\n\t     *   .innerWidth; // 195\r\n\t     */\n\t\n\t  }, {\n\t    key: 'innerWidth',\n\t    get: function get() {\n\t      var elem = this.$[0];\n\t\n\t      if (!elem) {\n\t        return 0;\n\t      }\n\t\n\t      if (isWindow(elem)) {\n\t        return elem.innerWidth;\n\t      }\n\t\n\t      var _calcCSS2 = this.calcCSS();\n\t\n\t      var borderLeftWidth = _calcCSS2.borderLeftWidth;\n\t      var borderRightWidth = _calcCSS2.borderRightWidth;\n\t      var boxSizing = _calcCSS2.boxSizing;\n\t      var paddingLeft = _calcCSS2.paddingLeft;\n\t      var paddingRight = _calcCSS2.paddingRight;\n\t      var width = _calcCSS2.width;\n\t\n\t      var borders = px(borderLeftWidth) + px(borderRightWidth);\n\t      var paddings = px(paddingLeft) + px(paddingRight);\n\t\n\t      return px(width) - innerSwitcher(boxSizing, [paddings, borders]);\n\t    }\n\t  }, {\n\t    key: 'name',\n\t    get: function get() {\n\t      return getName(this.$[0]);\n\t    }\n\t  }, {\n\t    key: 'outerHeight',\n\t    get: function get() {\n\t      var elem = this.$[0];\n\t\n\t      if (!elem) {\n\t        return 0;\n\t      }\n\t\n\t      if (isWindow(elem)) {\n\t        return elem.outerHeight;\n\t      }\n\t\n\t      var _calcCSS3 = this.calcCSS();\n\t\n\t      var borderTopWidth = _calcCSS3.borderTopWidth;\n\t      var borderBottomWidth = _calcCSS3.borderBottomWidth;\n\t      var boxSizing = _calcCSS3.boxSizing;\n\t      var height = _calcCSS3.height;\n\t      var marginTop = _calcCSS3.marginTop;\n\t      var marginBottom = _calcCSS3.marginBottom;\n\t      var paddingTop = _calcCSS3.paddingTop;\n\t      var paddingBottom = _calcCSS3.paddingBottom;\n\t\n\t      var borders = px(borderTopWidth) + px(borderBottomWidth);\n\t      var paddings = px(paddingTop) + px(paddingBottom);\n\t\n\t      return px(height) + px(marginTop) + px(marginBottom) + outerSwitcher(boxSizing, [borders, paddings]);\n\t    }\n\t\n\t    /**\r\n\t     * @member {Number} Elem#outerWidth\r\n\t     * @type {Number}\r\n\t     * @public\r\n\t     * @readonly\r\n\t     * @description Method for finding how much width the element actually is.\r\n\t     *\r\n\t     * @example\r\n\t     * elem.css({\r\n\t     *   boxSizing: 'border-box',\r\n\t     *   width: '200px',\r\n\t     *   paddingLeft: '2px',\r\n\t     *   paddingRight: '3px',\r\n\t     *   borderLeft: '1px solid black',\r\n\t     *   borderRight: '4px solid black'\r\n\t     *   marginLeft: '0px',\r\n\t     *   marginRight: '5px'\r\n\t     * }).outerWidth; // 205\r\n\t     * elem\r\n\t     *   .css('box-sizing', 'content-box')\r\n\t     *   .outerWidth; // 215\r\n\t     * elem\r\n\t     *   .css('box-sizing', 'padding-box')\r\n\t     *   .outerWidth; // 210\r\n\t     */\n\t\n\t  }, {\n\t    key: 'outerWidth',\n\t    get: function get() {\n\t      var elem = this.$[0];\n\t\n\t      if (!elem) {\n\t        return 0;\n\t      }\n\t\n\t      if (isWindow(elem)) {\n\t        return elem.outerWidth;\n\t      }\n\t\n\t      var _calcCSS4 = this.calcCSS();\n\t\n\t      var borderLeftWidth = _calcCSS4.borderLeftWidth;\n\t      var borderRightWidth = _calcCSS4.borderRightWidth;\n\t      var boxSizing = _calcCSS4.boxSizing;\n\t      var marginLeft = _calcCSS4.marginLeft;\n\t      var marginRight = _calcCSS4.marginRight;\n\t      var paddingLeft = _calcCSS4.paddingLeft;\n\t      var paddingRight = _calcCSS4.paddingRight;\n\t      var width = _calcCSS4.width;\n\t\n\t      var borders = px(borderLeftWidth) + px(borderRightWidth);\n\t      var paddings = px(paddingLeft) + px(paddingRight);\n\t\n\t      return px(width) + px(marginLeft) + px(marginRight) + outerSwitcher(boxSizing, [borders, paddings]);\n\t    }\n\t  }, {\n\t    key: 'toStringTag',\n\t    get: function get() {\n\t      return (0, _helpers.toStringTag)(this.$$);\n\t    }\n\t  }]);\n\t\n\t  return Elem;\n\t}(_Arr3.default);\n\t\n\texports.Elem = Elem;\n\t\n\t\n\t(0, _helpers.defineProperties)(Elem.prototype, _defineProperty({}, _helpers.Symbol.toStringTag, 'Elem'));\n\t\n\tvar window = exports.window = new Elem(global);\n\tvar document = exports.document = new Elem(nativeDocument);\n\tvar html = exports.html = new Elem(nativeDocument.documentElement);\n\tvar body = exports.body = new Elem(nativeDocument.body);\n\tvar head = exports.head = new Elem(nativeDocument.head);\n\t\n\t(0, _helpers.dynamicDefineProperties)(Elem.prototype, _elements2.default, function (elem) {\n\t  return function () {\n\t    return this.create.apply(this, new _Arr3.default(arguments).unshift(elem).$);\n\t  };\n\t});\n\t\n\t(0, _helpers.dynamicDefineProperties)(Elem.prototype, _canvasMethods.canvasGetMethods, function (method) {\n\t  return function () {\n\t    var ctx = this.ctx();\n\t\n\t    if (ctx) {\n\t      return ctx[method].apply(ctx, arguments);\n\t    }\n\t  };\n\t});\n\t\n\t(0, _helpers.dynamicDefineProperties)(Elem.prototype, _canvasMethods.canvasRestMethods, function (method) {\n\t  return function () {\n\t    var ctx = this.ctx();\n\t\n\t    if (ctx) {\n\t      ctx[method].apply(ctx, arguments);\n\t    }\n\t\n\t    return this;\n\t  };\n\t});\n\t\n\t/**\r\n\t * @function toFind\r\n\t * @private\r\n\t * @param {Element|Elem|String} elem - Element, selector of Elements or Elem.\r\n\t * @returns {Elem} Instance of Elem.\r\n\t */\n\tfunction toFind(elem) {\n\t  if ((0, _helpers.isString)(elem)) {\n\t    elem = _find(elem);\n\t  }\n\t\n\t  return new Elem(elem);\n\t}\n\t\n\t/**\r\n\t * @function isElem\r\n\t * @private\r\n\t * @param {*} value - Value to check if it's Elem.\r\n\t * @returns {Boolean} If the value is Elem.\r\n\t * @description Returns if the value is Elem or not.\r\n\t */\n\tfunction isElem(value) {\n\t  return value instanceof Elem;\n\t}\n\t\n\t/**\r\n\t * @function isWindow\r\n\t * @private\r\n\t * @param {*} value - Value to check if it's Window.\r\n\t * @returns {Boolean} If the value is Window.\r\n\t * @description Returns if the value is Window or not.\r\n\t */\n\tfunction isWindow(value) {\n\t  return (0, _helpers.toStringTag)(value) === 'Window';\n\t}\n\t\n\t/**\r\n\t * @function isHTMLDocument\r\n\t * @private\r\n\t * @param {*} value - Value to check if it's HTMLDocument.\r\n\t * @returns {Boolean} If the value is HTMLDocument.\r\n\t * @description Returns if the value is HTMLDocument or not.\r\n\t */\n\tfunction isHTMLDocument(value) {\n\t  return (0, _helpers.toStringTag)(value) === 'HTMLDocument';\n\t}\n\t\n\t/**\r\n\t * @function getElem\r\n\t * @private\r\n\t * @param {Elem} elem - Element to check.\r\n\t * @returns {Element} The argument or a fallback if needed.\r\n\t */\n\tfunction getElem(elem) {\n\t  return elem.$[0] || empty;\n\t}\n\t\n\t/**\r\n\t * @function getName\r\n\t * @private\r\n\t * @param {Element} [elem] - Element which name is needed to know.\r\n\t * @returns {String} Elements name\r\n\t */\n\tfunction getName(elem) {\n\t  return elem && elem.tagName && elem.tagName.toLowerCase() || '';\n\t}\n\t\n\t/**\r\n\t * @function addDwayneData\r\n\t * @private\r\n\t * @param {Element} elem - Element to add dwayneData to.\r\n\t * @returns {void}\r\n\t */\n\tfunction addDwayneData(elem) {\n\t  if (!{}.hasOwnProperty.call(elem, 'dwayneData') && !isWindow(elem)) {\n\t    /**\r\n\t     * @member Element#dwayneData\r\n\t     * @type {Object}\r\n\t     * @protected\r\n\t     * @property {String} previousDisplay - Parameter used for hiding/showing elements.\r\n\t     * @property {Object.<String, Super>} removeListeners - Parameter used for remove event listeners.\r\n\t     * @property {CanvasRenderingContext2D} [ctx] - Canvas rendering context.\r\n\t     * @property {Arr} validators - Validators assigned to element.\r\n\t     * @description D data.\r\n\t     */\n\t    Object.defineProperty(elem, 'dwayneData', {\n\t      value: {\n\t        previousDisplay: '',\n\t        listeners: {},\n\t        ctx: getName(elem) === 'canvas' && elem.getContext('2d'),\n\t        validators: new _Arr3.default([])\n\t      }\n\t    });\n\t  } else if (!windowsDwayneData.some(function (_ref14) {\n\t    var element = _ref14.element;\n\t    return element === elem;\n\t  })) {\n\t    windowsDwayneData.push({\n\t      element: elem,\n\t      listeners: {}\n\t    });\n\t  }\n\t}\n\t\n\t_constructors2.default[2].push({\n\t  check: function check(elem) {\n\t    return (0, _helpers.isElement)(elem) || isWindow(elem) || isHTMLDocument(elem) || /^(HTMLCollection|NodeList)$/.test((0, _helpers.toStringTag)(elem));\n\t  },\n\t  cls: Elem\n\t});\n\t\n\t/**\r\n\t * @function find\r\n\t * @public\r\n\t * @param {String} selector - Selector to find.\r\n\t * @param {Element} [base = document] - Base to find in.\r\n\t * @returns {Elem} New instance of Elem.\r\n\t * @description Synonym for\r\n\t * [Document#querySelectorAll]{@link https://developer.mozilla.org/en/docs/Web/API/Document/querySelectorAll}.\r\n\t */\n\tfunction _find(selector) {\n\t  var base = arguments.length <= 1 || arguments[1] === undefined ? nativeDocument : arguments[1];\n\t\n\t  return new Elem(base.querySelectorAll(String(selector)));\n\t}\n\t\n\t/**\r\n\t * @function parseHTML\r\n\t * @public\r\n\t * @param {String} html - HTML to parse.\r\n\t * @returns {Elem} New instance of Elem.\r\n\t * @description Parses HTML and returns the contents.\r\n\t *\r\n\t * @example\r\n\t * parseHTML('&lt;div&gt;123&lt;/div&gt;'); // Elem\r\n\t */\n\texports.find = _find;\n\tfunction parseHTML(html) {\n\t  return document.div().html(html).children();\n\t}\n\t\n\t/**\r\n\t * @function px\r\n\t * @public\r\n\t * @param {String|Number} size - String containing pixels value or a number.\r\n\t * @returns {Number} Number of pixels.\r\n\t * @description Function for parsing pixel strings.\r\n\t *\r\n\t * @example\r\n\t * px('0px');  // 0\r\n\t * px('42px'); // 42\r\n\t */\n\tfunction px(size) {\n\t  return Number(String(size).replace(/px$/, ''));\n\t}\n\t\n\texports.default = Elem;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.fetch = exports.Fetch = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Promise = __webpack_require__(21);\n\t\n\tvar _Promise2 = _interopRequireDefault(_Promise);\n\t\n\tvar _Super = __webpack_require__(18);\n\t\n\tvar _Super2 = _interopRequireDefault(_Super);\n\t\n\tvar _Arr = __webpack_require__(17);\n\t\n\tvar _Arr2 = _interopRequireDefault(_Arr);\n\t\n\tvar _Str = __webpack_require__(25);\n\t\n\tvar _Str2 = _interopRequireDefault(_Str);\n\t\n\tvar _helpers = __webpack_require__(8);\n\t\n\tvar _constructURL = __webpack_require__(30);\n\t\n\tvar _constructURL2 = _interopRequireDefault(_constructURL);\n\t\n\tvar _parseHeaders = __webpack_require__(31);\n\t\n\tvar _parseHeaders2 = _interopRequireDefault(_parseHeaders);\n\t\n\tvar _transformData = __webpack_require__(32);\n\t\n\tvar _transformData2 = _interopRequireDefault(_transformData);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @module Fetch\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @private\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @mixin\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @description Exports Fetch class.\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\r\n\t * @typedef {'get'|'post'|'delete'|'head'|'put'|'patch'} FetchMethod\r\n\t * @public\r\n\t */\n\t\n\t/**\r\n\t * @typedef {Object} FetchConfig\r\n\t * @public\r\n\t * @property {Array.<AfterMiddleware|FetchErrorAfterMiddleware>} [after]\r\n\t * @property {Object} [auth]\r\n\t * @property {String} [auth.username]\r\n\t * @property {String} [auth.password]\r\n\t * @property {String} [baseURL]\r\n\t * @property {Array.<BeforeMiddleware|FetchErrorBeforeMiddleware>} [before]\r\n\t * @property {*} [data]\r\n\t * @property {Object.<String, String[]>} [headers]\r\n\t * @property {FetchMethod} [method]\r\n\t * @property {Object} [params]\r\n\t * @property {Object} [query]\r\n\t * @property {String} [responseType]\r\n\t * @property {Number} [timeout]\r\n\t * @property {String} [url]\r\n\t * @property {Boolean} [withCredentials]\r\n\t */\n\t\n\t/**\r\n\t * @typedef {Object} FetchResponse\r\n\t * @public\r\n\t * @property {FetchConfig} config\r\n\t * @property {*} data\r\n\t * @property {Object.<String, String>} headers\r\n\t * @property {Number} status\r\n\t * @property {String} statusText\r\n\t * @property {XMLHttpRequest} xhr\r\n\t */\n\t\n\t/**\r\n\t * @callback FetchAfterMiddleware\r\n\t * @public\r\n\t * @param {FetchResponse} config - Fetch response.\r\n\t */\n\t\n\t/**\r\n\t * @callback FetchErrorAfterMiddleware\r\n\t * @public\r\n\t * @param {Error|*} err - Thrown error.\r\n\t * @param {FetchResponse} config - Fetch response.\r\n\t */\n\t\n\t/**\r\n\t * @callback FetchBeforeMiddleware\r\n\t * @public\r\n\t * @param {FetchConfig} config - Fetch config.\r\n\t */\n\t\n\t/**\r\n\t * @callback FetchErrorBeforeMiddleware\r\n\t * @public\r\n\t * @param {Error|*} err - Thrown error.\r\n\t * @param {FetchConfig} config - Fetch config.\r\n\t */\n\t\n\t/**\r\n\t * @callback FetchConfigFunction\r\n\t * @public\r\n\t * @param {FetchConfig} config\r\n\t */\n\t\n\tvar defaults = {\n\t  after: [],\n\t  auth: {\n\t    username: '',\n\t    password: ''\n\t  },\n\t  baseURL: global.location.origin,\n\t  before: [],\n\t  data: null,\n\t  headers: {},\n\t  method: 'get',\n\t  params: {},\n\t  query: {},\n\t  responseType: '',\n\t  timeout: 0,\n\t  url: '',\n\t  withCredentials: false\n\t};\n\tvar uploadMethods = new _Arr2.default(['post', 'put']);\n\t\n\t/**\r\n\t * @class Fetch\r\n\t * @extends Function\r\n\t * @public\r\n\t * @param {FetchConfig} [config = {}] - A number to wrap.\r\n\t * @returns {Fetch} Instance of Fetch.\r\n\t * An instance of Fetch is a function that simply calls #request with the same arguments.\r\n\t * @description Class for fetching data.\r\n\t *\r\n\t * @example\r\n\t * const fetch = new Fetch();\r\n\t *\r\n\t * fetch('/data').then((res) => {\r\n\t *   console.log(res);\r\n\t * });\r\n\t */\n\t\n\tvar Fetch = exports.Fetch = function (_Function) {\n\t  _inherits(Fetch, _Function);\n\t\n\t  function Fetch() {\n\t    var _ret;\n\t\n\t    var config = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t    _classCallCheck(this, Fetch);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Fetch).call(this));\n\t\n\t    function fetch() {\n\t      return fetch.request.apply(fetch, arguments);\n\t    }\n\t\n\t    var conf = new _Super2.default({}).deepAssign(defaults, config).$;\n\t\n\t    conf.before.push(fetchBeforeMiddleware);\n\t\n\t    /**\r\n\t     * @member {FetchConfig} Fetch#$$\r\n\t     * @type {FetchConfig}\r\n\t     * @public\r\n\t     * @description Fetch config.\r\n\t     */\n\t    Object.defineProperty(fetch, '$$', { value: conf });\n\t    Object.setPrototypeOf(fetch, Fetch.prototype);\n\t\n\t    return _ret = fetch, _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\r\n\t   * @method Fetch#after\r\n\t   * @public\r\n\t   * @param {FetchAfterMiddleware|FetchErrorAfterMiddleware} middleware - Middleware to add.\r\n\t   * @param {Boolean|*} [afterAll = true] - Boolean parameter where to put the middleware.\r\n\t   * Truthy parameter stands for \"to the end\" and falsey for \"to the beginning\".\r\n\t   * @returns {Fetch} Returns this.\r\n\t   * @description Middleware that is called after the request.\r\n\t   * If the middleware has 2 or less arguments it's treated as success middleware otherwise as an error one.\r\n\t   * If the middleware returns a promise it becomes a part of the middleware chain.\r\n\t   *\r\n\t   * @example\r\n\t   * const fetch = new Fetch()\r\n\t   *   .after((err, res) => {\r\n\t   *     console.log(err);\r\n\t   *\r\n\t   *     throw err;\r\n\t   *   })\r\n\t   *   .after((res) => {\r\n\t   *     res.json = D(res.data).parseJSON():\r\n\t   *   });\r\n\t   */\n\t\n\t\n\t  _createClass(Fetch, [{\n\t    key: 'after',\n\t    value: function after(middleware) {\n\t      var afterAll = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n\t\n\t      (0, _helpers.validate)([middleware], ['function'], 'Fetch#after');\n\t\n\t      var after = this.$$.after;\n\t\n\t\n\t      if (afterAll) {\n\t        after.push(middleware);\n\t      } else {\n\t        after.unshift(middleware);\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Fetch#before\r\n\t     * @public\r\n\t     * @param {FetchBeforeMiddleware|FetchErrorBeforeMiddleware} middleware - Middleware to add.\r\n\t     * @param {Boolean|*} [beforeAll = true] - Boolean parameter where to put the middleware.\r\n\t     * Truthy parameter stands for \"to the beginning\" and falsey for \"to the end\".\r\n\t     * @returns {Fetch} Returns this.\r\n\t     * @description Middleware that is called before the request.\r\n\t     * If the middleware has 2 or less arguments it's treated as success middleware otherwise as an error one.\r\n\t     * If the middleware returns a promise it becomes a part of the middleware chain.\r\n\t     *\r\n\t     * @example\r\n\t     * const fetch = new Fetch()\r\n\t     *   .before((err, req) => {\r\n\t     *     console.log(err);\r\n\t     *\r\n\t     *     throw err;\r\n\t     *   })\r\n\t     *   .before((req) => {\r\n\t     *     if (req.url === '/veryLongRequest') {\r\n\t     *       req.timeout = 30000;\r\n\t     *     }\r\n\t     *   });\r\n\t     */\n\t\n\t  }, {\n\t    key: 'before',\n\t    value: function before(middleware) {\n\t      var beforeAll = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n\t\n\t      (0, _helpers.validate)([middleware], ['function'], 'Fetch#before');\n\t\n\t      var before = this.$$.before;\n\t\n\t\n\t      if (beforeAll) {\n\t        before.unshift(middleware);\n\t      } else {\n\t        before.push(middleware);\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Fetch#config\r\n\t     * @public\r\n\t     * @param {String|FetchConfig|FetchConfigFunction} [property] - If it's a function\r\n\t     * it's called with the fetch config argument, if it's a string the value argument\r\n\t     * is used for assigning this property to the fetch config\r\n\t     * otherwise it's assigned to the fetch config.\r\n\t     * @param {*} [value] - See the property argument.\r\n\t     * @returns {Fetch|FetchConfig} If the argument is present this is returned otherwise the fetch config is returned.\r\n\t     * @description Method for getting and setting config.\r\n\t     *\r\n\t     * @example\r\n\t     * const fetch = new Fetch();\r\n\t     *\r\n\t     * fetch.config({ baseURL: 5000 });\r\n\t     * fetch.config().timeout; // 5000\r\n\t     *\r\n\t     * fetch.config((config) => {\r\n\t     *   config.baseURL += '/api';\r\n\t     * });\r\n\t     */\n\t\n\t  }, {\n\t    key: 'config',\n\t    value: function config(property, value) {\n\t      var conf = this.$$;\n\t\n\t      if (!arguments.length) {\n\t        return conf;\n\t      }\n\t\n\t      if ((0, _helpers.isFunction)(property)) {\n\t        property(conf);\n\t      } else {\n\t        if (arguments.length >= 2) {\n\t          property = _defineProperty({}, property, value);\n\t        }\n\t\n\t        new _Super2.default(conf).deepAssign(property);\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Fetch#delete\r\n\t     * @public\r\n\t     * @param {String} [url] - See {@link Fetch#request}.\r\n\t     * @param {FetchConfig} [config] - See {@link Fetch#request}.\r\n\t     * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\r\n\t     * @description Shorthand for #request for delete requests.\r\n\t     *\r\n\t     * @example\r\n\t     * new Fetch().delete('/data').then((res) => {\r\n\t     *   console.log(res);\r\n\t     * });\r\n\t     */\n\t\n\t  }, {\n\t    key: 'delete',\n\t    value: function _delete(url) {\n\t      var config = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      if (!(0, _helpers.isString)(url)) {\n\t        config = url;\n\t        url = undefined;\n\t      }\n\t\n\t      return this.request(url, (0, _helpers.assign)({ method: 'delete' }, config));\n\t    }\n\t\n\t    /**\r\n\t     * @method Fetch#get\r\n\t     * @public\r\n\t     * @param {String} [url] - See {@link Fetch#request}.\r\n\t     * @param {FetchConfig} [config] - See {@link Fetch#request}.\r\n\t     * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\r\n\t     * @description Shorthand for #request for get requests.\r\n\t     *\r\n\t     * @example\r\n\t     * new Fetch().get('/data').then((res) => {\r\n\t     *   console.log(res);\r\n\t     * });\r\n\t     */\n\t\n\t  }, {\n\t    key: 'get',\n\t    value: function get(url) {\n\t      var config = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      if (!(0, _helpers.isString)(url)) {\n\t        config = url;\n\t        url = undefined;\n\t      }\n\t\n\t      return this.request(url, (0, _helpers.assign)({ method: 'get' }, config));\n\t    }\n\t\n\t    /**\r\n\t     * @method Fetch#head\r\n\t     * @public\r\n\t     * @param {String} [url] - See {@link Fetch#request}.\r\n\t     * @param {FetchConfig} [config] - See {@link Fetch#request}.\r\n\t     * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\r\n\t     * @description Shorthand for #request for head requests.\r\n\t     *\r\n\t     * @example\r\n\t     * new Fetch().head('/data').then((res) => {\r\n\t     *   console.log(res);\r\n\t     * });\r\n\t     */\n\t\n\t  }, {\n\t    key: 'head',\n\t    value: function head(url) {\n\t      var config = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      if (!(0, _helpers.isString)(url)) {\n\t        config = url;\n\t        url = undefined;\n\t      }\n\t\n\t      return this.request(url, (0, _helpers.assign)({ method: 'head' }, config));\n\t    }\n\t\n\t    /**\r\n\t     * @method Fetch#headers\r\n\t     * @public\r\n\t     * @param {String|Object.<String, String|String[]>} header - A header string or an object of the following format:\r\n\t     * { [header]: [value1, value2, ...] }.\r\n\t     * @param {String|String[]} [value] - Header value. If the first argument is a string\r\n\t     * this has to be a header value or an array of header values.\r\n\t     * @returns {Fetch} Returns this.\r\n\t     * @description Method for setting request headers.\r\n\t     *\r\n\t     * @example\r\n\t     * const fetch = new Fetch()\r\n\t     *   .headers('Header1', 'Value')\r\n\t     *   .headers('Header2', ['Value1', 'Value2'])\r\n\t     *   .headers({\r\n\t     *     Header3: ['Value1', 'Value2']\r\n\t     *   });\r\n\t     */\n\t\n\t  }, {\n\t    key: 'headers',\n\t    value: function headers(header, value) {\n\t      var headers = this.$$.headers;\n\t\n\t\n\t      if (arguments.length >= 2) {\n\t        header = _defineProperty({}, header, value);\n\t      }\n\t\n\t      (0, _helpers.iterate)(header, function (value, header) {\n\t        var array = headers[header] || [];\n\t        var toPush = (0, _helpers.isArray)(value) ? value : [value];\n\t\n\t        (headers[header] = array).push.apply(array, toPush);\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\r\n\t     * @method Fetch#instance\r\n\t     * @public\r\n\t     * @param {FetchConfig} [config] - New config if needed.\r\n\t     * @returns {Fetch} New instance of Fetch.\r\n\t     * @description Method for creating new fetch instances based on already existent.\r\n\t     *\r\n\t     * @example\r\n\t     * const mainFetch = new Fetch({\r\n\t     *   baseURL: '//other.domain.com/api',\r\n\t     *   withCredentials: true\r\n\t     * });\r\n\t     *\r\n\t     * const longFetch = mainFetch.instance({\r\n\t     *   timeout: 10000\r\n\t     * });\r\n\t     */\n\t\n\t  }, {\n\t    key: 'instance',\n\t    value: function instance() {\n\t      var config = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var dataConfig = new _Super2.default(config).hasOwn('data') ? { data: config.data } : {};\n\t\n\t      delete config.data;\n\t\n\t      var conf = new _Super2.default({}).deepAssign(this.$$, config).assign(dataConfig).$;\n\t\n\t      if (conf.before.indexOf(fetchBeforeMiddleware) === -1) {\n\t        conf.before.push(fetchBeforeMiddleware);\n\t      }\n\t\n\t      return new Fetch(conf);\n\t    }\n\t\n\t    /**\r\n\t     * @method Fetch#patch\r\n\t     * @public\r\n\t     * @param {String} [url] - See {@link Fetch#request}.\r\n\t     * @param {*} [data] - Additional parameter for uploading data.\r\n\t     * @param {FetchConfig} [config] - See {@link Fetch#request}.\r\n\t     * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\r\n\t     * @description Shorthand for #request for head requests.\r\n\t     *\r\n\t     * @example\r\n\t     * new Fetch().patch('/data', { user: 'John' }).then((res) => {\r\n\t     *   console.log(res);\r\n\t     * });\r\n\t     */\n\t\n\t  }, {\n\t    key: 'patch',\n\t    value: function patch(url) {\n\t      var data = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t      var config = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\t\n\t      if (arguments.length && !(0, _helpers.isString)(url)) {\n\t        config = data;\n\t        data = url;\n\t        url = undefined;\n\t      }\n\t\n\t      return this.request(url, (0, _helpers.assign)({ method: 'patch', data: data }, config));\n\t    }\n\t\n\t    /**\r\n\t     * @method Fetch#post\r\n\t     * @public\r\n\t     * @param {String} [url] - See {@link Fetch#request}.\r\n\t     * @param {*} [data] - Additional parameter for uploading data.\r\n\t     * @param {FetchConfig} [config] - See {@link Fetch#request}.\r\n\t     * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\r\n\t     * @description Shorthand for #request for head requests.\r\n\t     *\r\n\t     * @example\r\n\t     * new Fetch().post('/data', { user: 'John' }).then((res) => {\r\n\t     *   console.log(res);\r\n\t     * });\r\n\t     */\n\t\n\t  }, {\n\t    key: 'post',\n\t    value: function post(url) {\n\t      var data = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t      var config = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\t\n\t      if (arguments.length && !(0, _helpers.isString)(url)) {\n\t        config = data;\n\t        data = url;\n\t        url = undefined;\n\t      }\n\t\n\t      return this.request(url, (0, _helpers.assign)({ method: 'post', data: data }, config));\n\t    }\n\t\n\t    /**\r\n\t     * @method Fetch#put\r\n\t     * @public\r\n\t     * @param {String} [url] - See {@link Fetch#request}.\r\n\t     * @param {*} [data] - Additional parameter for uploading data.\r\n\t     * @param {FetchConfig} [config] - See {@link Fetch#request}.\r\n\t     * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\r\n\t     * @description Shorthand for #request for head requests.\r\n\t     *\r\n\t     * @example\r\n\t     * new Fetch().put('/data', { user: 'John' }).then((res) => {\r\n\t     *   console.log(res);\r\n\t     * });\r\n\t     */\n\t\n\t  }, {\n\t    key: 'put',\n\t    value: function put(url) {\n\t      var data = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t      var config = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\t\n\t      if (arguments.length && !(0, _helpers.isString)(url)) {\n\t        config = data;\n\t        data = url;\n\t        url = undefined;\n\t      }\n\t\n\t      return this.request(url, (0, _helpers.assign)({ method: 'put', data: data }, config));\n\t    }\n\t\n\t    /**\r\n\t     * @method Fetch#request\r\n\t     * @public\r\n\t     * @param {String} [url] - URL for the request.\r\n\t     * @param {FetchConfig} [config] - Additional config for this particular request.\r\n\t     * @returns {Promise.<FetchResponse, Error>} Promise that is resolved with the request response.\r\n\t     * @description Main function for making requests. All request methods call this method\r\n\t     * including the fetch instance itself.\r\n\t     *\r\n\t     * @example\r\n\t     * const fetch = new Fetch();\r\n\t     *\r\n\t     * fetch.request('/data', { timeout: 1000 }).then((res) => {\r\n\t     *   console.log(res);\r\n\t     * });\r\n\t     *\r\n\t     * fetch.request({ timeout: 1000 }).then((res) => {\r\n\t     *   console.log(res);\r\n\t     * });\r\n\t     *\r\n\t     * fetch.request().then((res) => {\r\n\t     *   console.log(res);\r\n\t     * });\r\n\t     */\n\t\n\t  }, {\n\t    key: 'request',\n\t    value: function request(url) {\n\t      var config = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      if (arguments.length === 1 && !(0, _helpers.isString)(url)) {\n\t        config = url;\n\t      }\n\t\n\t      var dataConfig = new _Super2.default(config).hasOwn('data') ? { data: config.data } : {};\n\t      var urlConfig = (0, _helpers.isString)(url) ? { url: url } : {};\n\t\n\t      delete config.data;\n\t\n\t      var conf = new _Super2.default(this.$$).deepClone().deepAssign(urlConfig, config).assign(dataConfig).$;\n\t\n\t      var xhr = void 0;\n\t      var promise = _Promise2.default.resolve();\n\t\n\t      (0, _helpers.iterate)(conf.before, function (middleware) {\n\t        promise = promise.then(function () {\n\t          if (middleware.length >= 2) {\n\t            return _Promise2.default.resolve();\n\t          }\n\t\n\t          return new _Promise2.default(function (resolve) {\n\t            resolve(middleware(conf));\n\t          });\n\t        }, function (err) {\n\t          if (middleware.length < 2) {\n\t            return _Promise2.default.reject(err);\n\t          }\n\t\n\t          return new _Promise2.default(function (resolve) {\n\t            resolve(middleware(err, conf));\n\t          });\n\t        });\n\t      });\n\t\n\t      promise = promise.then(function () {\n\t        return new _Promise2.default(function (resolve, reject) {\n\t          var after = conf.after;\n\t          var _conf$auth = conf.auth;\n\t          var username = _conf$auth.username;\n\t          var password = _conf$auth.password;\n\t          var data = conf.data;\n\t          var headers = conf.headers;\n\t          var method = conf.method;\n\t          var onprogress = conf.onprogress;\n\t          var responseType = conf.responseType;\n\t          var timeout = conf.timeout;\n\t          var url = conf.url;\n\t          var withCredentials = conf.withCredentials;\n\t\n\t\n\t          xhr = new XMLHttpRequest();\n\t\n\t          xhr.open(method, url, true, username, password);\n\t\n\t          (0, _helpers.iterate)(headers, function (value, header) {\n\t            xhr.setRequestHeader(header, value);\n\t          });\n\t\n\t          if (onprogress) {\n\t            if (uploadMethods.indexOfStrict(method) === -1) {\n\t              xhr.onprogress = onprogress;\n\t            } else {\n\t              xhr.upload.onprogress = onprogress;\n\t            }\n\t          }\n\t\n\t          xhr.onabort = function () {\n\t            reject(new Error('Request was aborted'));\n\t\n\t            xhr = null;\n\t          };\n\t\n\t          xhr.onerror = function () {\n\t            reject(new Error('Network error'));\n\t\n\t            xhr = null;\n\t          };\n\t\n\t          xhr.ontimeout = function () {\n\t            reject(new Error('Request time exceeded'));\n\t\n\t            xhr = null;\n\t          };\n\t\n\t          xhr.onreadystatechange = function () {\n\t            if (!xhr || !xhr.status || xhr.readyState !== 4) {\n\t              return;\n\t            }\n\t\n\t            var response = {\n\t              config: conf,\n\t              data: !responseType || responseType === 'text' ? xhr.responseText : xhr.response,\n\t              headers: (0, _parseHeaders2.default)(xhr.getAllResponseHeaders()),\n\t              status: xhr.status === 1223 ? 204 : xhr.status,\n\t              statusText: xhr.status === 1223 ? 'No Content' : xhr.statusText,\n\t              xhr: xhr\n\t            };\n\t\n\t            var promise = _Promise2.default.resolve();\n\t\n\t            (0, _helpers.iterate)(after, function (middleware) {\n\t              promise = promise.then(function () {\n\t                if (middleware.length >= 2) {\n\t                  return _Promise2.default.resolve();\n\t                }\n\t\n\t                return new _Promise2.default(function (resolve) {\n\t                  resolve(middleware(response));\n\t                });\n\t              }, function (err) {\n\t                if (middleware.length < 2) {\n\t                  return _Promise2.default.reject(err);\n\t                }\n\t\n\t                return new _Promise2.default(function (resolve) {\n\t                  resolve(middleware(err, response));\n\t                });\n\t              });\n\t            });\n\t\n\t            resolve(promise.then(function () {\n\t              return response;\n\t            }).catch(function (err) {\n\t              try {\n\t                err.response = response;\n\t              } catch (e) {\n\t                throw err;\n\t              }\n\t\n\t              throw err;\n\t            }));\n\t          };\n\t\n\t          xhr.responseType = responseType;\n\t          xhr.timeout = Number(timeout) || 0;\n\t          xhr.withCredentials = !!withCredentials;\n\t\n\t          xhr.send(data);\n\t        });\n\t      });\n\t\n\t      promise.abort = function abort() {\n\t        if (xhr) {\n\t          xhr.abort();\n\t        }\n\t\n\t        return this;\n\t      };\n\t\n\t      return promise;\n\t    }\n\t  }]);\n\t\n\t  return Fetch;\n\t}(Function);\n\t\n\t(0, _helpers.defineProperties)(Fetch.prototype, _defineProperty({}, _helpers.Symbol.toStringTag, 'Fetch'));\n\t\n\t/**\r\n\t * @function fetchBeforeMiddleware\r\n\t * @private\r\n\t * @param {FetchConfig} config\r\n\t * @description Built-in before middleware for url, data, method, headers construction.\r\n\t */\n\tfunction fetchBeforeMiddleware(config) {\n\t  var baseURL = config.baseURL;\n\t  var data = config.data;\n\t  var headers = config.headers;\n\t  var method = config.method;\n\t  var params = config.params;\n\t  var query = config.query;\n\t  var url = config.url;\n\t\n\t  var METHOD = method.toUpperCase();\n\t\n\t  config.method = METHOD;\n\t  config.url = (0, _constructURL2.default)(baseURL, url, params, query);\n\t  config.data = (0, _transformData2.default)(data, METHOD, headers);\n\t  config.headers = new _Super2.default(headers).object(function (headers, values, header) {\n\t    header = new _Str2.default(header).toCapitalCase().replace(/\\s+/g, '-').$;\n\t\n\t    headers[header] = values.join(', ');\n\t  }).$;\n\t}\n\t\n\t/**\r\n\t * @const {Fetch} fetch\r\n\t * @public\r\n\t * @description Empty instance of Fetch.\r\n\t */\n\tvar fetch = exports.fetch = new Fetch();\n\t\n\texports.default = Fetch;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Str = __webpack_require__(25);\n\t\n\tvar _Str2 = _interopRequireDefault(_Str);\n\t\n\tvar _checkTypes = __webpack_require__(4);\n\t\n\tvar _iterate = __webpack_require__(10);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\r\n\t * @type {RegExp}\r\n\t * @description Absolute URL pattern.\r\n\t */\n\tvar absoluteURLRegexp = /^(([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\/|data:[a-z]+\\/[a-z]+;base64,)/i;\n\t\n\t/**\r\n\t * @function constructURL\r\n\t * @param {String} baseURL - BaseURL of the output URL.\r\n\t * @param {String} url - Main part of the output URL.\r\n\t * @param {Object} params - Params to replace in the url expressions like \":param\".\r\n\t * @param {Object} query - Object with query params.\r\n\t * @param {Object} [hash = ''] - URL hash.\r\n\t * @returns {String} Constructed URL.\r\n\t * @description Function for constructing URL from the base URL, URL, params and query params.\r\n\t */\n\t/**\r\n\t * @module helpers/constructURL\r\n\t * @private\r\n\t * @description Exports Object.assign-like method.\r\n\t */\n\t\n\texports.default = function (baseURL, url, params, query) {\n\t  var hash = arguments.length <= 4 || arguments[4] === undefined ? '' : arguments[4];\n\t\n\t  var URL = isAbsolute(url) ? url : String(baseURL).replace(/\\/+$/, '') + '/' + String(url).replace(/^\\/+/, '');\n\t\n\t  (0, _iterate.iterate)(params, function (value, param) {\n\t    URL = new _Str2.default(URL).replaceString(':' + param, value).$;\n\t  });\n\t\n\t  var queryParams = [];\n\t\n\t  (0, _iterate.iterate)(query, function (value, param) {\n\t    if ((0, _checkTypes.isArray)(value)) {\n\t      param += '[]';\n\t    } else {\n\t      value = [value];\n\t    }\n\t\n\t    (0, _iterate.iterate)(value, function (value) {\n\t      if ((0, _checkTypes.isObject)(value)) {\n\t        value = JSON.stringify(value);\n\t      } else {\n\t        value = String(value);\n\t      }\n\t\n\t      queryParams.push(encode(param) + '=' + encode(value));\n\t    });\n\t  });\n\t\n\t  if (queryParams.length) {\n\t    URL += (URL.indexOf('?') === -1 ? '?' : '&') + queryParams.join('&');\n\t  }\n\t\n\t  return '' + URL + (hash ? '#' + hash : '');\n\t};\n\t\n\t/**\r\n\t * @function isAbsolute\r\n\t * @param {String} url - URL to check if it is absolute or not.\r\n\t * @returns {Boolean} If the argument URL is absolute or not.\r\n\t */\n\t\n\t\n\tfunction isAbsolute(url) {\n\t  return absoluteURLRegexp.test(url);\n\t}\n\t\n\t/**\r\n\t * @function encode\r\n\t * @param {String} string - String to encode using encodeURIComponent\r\n\t * @returns {String} Encoded string.\r\n\t */\n\tfunction encode(string) {\n\t  return encodeURIComponent(string);\n\t}\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Str = __webpack_require__(25);\n\t\n\tvar _Str2 = _interopRequireDefault(_Str);\n\t\n\tvar _iterate = __webpack_require__(10);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * @function parseHeaders\n\t * @param {String} rawHeaders - Raw headers.\n\t * @returns {Object} Headers object\n\t * @description Function for parsing raw headers.\n\t */\n\t/**\n\t * @module helpers/parseHeaders\n\t * @private\n\t * @description Exports parseHeaders method.\n\t */\n\t\n\texports.default = function (rawHeaders) {\n\t  var headers = {};\n\t\n\t  (0, _iterate.iterate)((rawHeaders || '').split('\\n'), function (value) {\n\t    var index = value.indexOf(':');\n\t    var key = new _Str2.default(value.substring(0, index)).trim().toCamelCase().$;\n\t    var val = new _Str2.default(value.substring(index + 1)).trim().$;\n\t\n\t    if (key) {\n\t      headers[key] = (headers[key] ? headers[key] + ', ' : '') + val;\n\t    }\n\t  });\n\t\n\t  return headers;\n\t};\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Arr = __webpack_require__(17);\n\t\n\tvar _Arr2 = _interopRequireDefault(_Arr);\n\t\n\tvar _Super = __webpack_require__(18);\n\t\n\tvar _Super2 = _interopRequireDefault(_Super);\n\t\n\tvar _ = __webpack_require__(8);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar notToTransform = new _Arr2.default(['FormData', 'File', 'Blob', 'ArrayBuffer', 'String', 'Number']); /**\r\n\t                                                                                                          * @module helpers/transformData\r\n\t                                                                                                          * @private\r\n\t                                                                                                          * @description Exports parseHeaders method.\r\n\t                                                                                                          */\n\t\n\tvar withoutBody = new _Arr2.default(['DELETE', 'GET', 'HEAD']);\n\t\n\t/**\r\n\t * @function transformData\r\n\t * @param {*} data - Data to transform\r\n\t * @param {String} method - HTTP method.\r\n\t * @param {Object} headers - Object with headers.\r\n\t * @returns {*} - Transformed data.\r\n\t */\n\t\n\texports.default = function (data, method, headers) {\n\t  data = new _Super2.default(data).$;\n\t\n\t  if (withoutBody.indexOfStrict(method) !== -1) {\n\t    return null;\n\t  }\n\t\n\t  if ((0, _.isObject)(data) && notToTransform.keyOfStrict((0, _.toStringTag)(data)) !== -1) {\n\t    if (!headers.contentType) {\n\t      headers.contentType = ['application/json;charset=utf-8'];\n\t    }\n\t\n\t    return new _Super2.default(data).json();\n\t  }\n\t\n\t  return data;\n\t};\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\r\n\t * @module constants/appliedRegExps\r\n\t * @private\r\n\t * @description Exports different types of syntax for {@link Elem#apply}.\r\n\t */\n\t\n\t/**\r\n\t * @callback matchAppliedExprCallback\r\n\t * @param {Elem} elem - D-elem of an element to apply expression to.\r\n\t * @param {String} string - Matched applied name.\r\n\t * @param {String} arg - Argument within the parentheses.\r\n\t */\n\t\n\t/**\r\n\t * @type {Object.<String, matchAppliedExprCallback|Object.<String, matchAppliedExprCallback>>}\r\n\t * @description Object of different types of syntax.\r\n\t */\n\t\n\texports.default = {\n\t  '#': function _(elem, id) {\n\t    elem.id(id);\n\t  },\n\t  '.': function _(elem, cls) {\n\t    elem.addClass(cls);\n\t  },\n\t  $: function $(elem, attr, value) {\n\t    elem.attr(attr, value);\n\t  },\n\t  '@': function _(elem, prop, value) {\n\t    elem.css(prop, value);\n\t  },\n\t  '&': function _(elem, name, html) {\n\t    elem.html(html);\n\t  },\n\t  '*': function _(elem, name, text) {\n\t    elem.text(text);\n\t  },\n\t\n\t  '-': {\n\t    '.': function _(elem, cls) {\n\t      elem.removeClass(cls);\n\t    },\n\t    $: function $(elem, attr) {\n\t      elem.removeAttr(attr);\n\t    },\n\t    '@': function _(elem, prop) {\n\t      elem.removeCSS(prop);\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * @module constants/elements\n\t * @private\n\t * @description Exports methods for {@link Elem} for creating html-elements.\n\t */\n\t\n\t/**\n\t * @const\n\t * @type {String[]}\n\t */\n\texports.default = [\n\t/**\n\t * @member {Function} Elem#a\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'a',\n\t\n\t/**\n\t * @member {Function} Elem#abbr\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'abbr',\n\t\n\t/**\n\t * @member {Function} Elem#address\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'address',\n\t\n\t/**\n\t * @member {Function} Elem#area\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'area',\n\t\n\t/**\n\t * @member {Function} Elem#article\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'article',\n\t\n\t/**\n\t * @member {Function} Elem#audio\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'audio',\n\t\n\t/**\n\t * @member {Function} Elem#b\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'b',\n\t\n\t/**\n\t * @member {Function} Elem#base\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'base',\n\t\n\t/**\n\t * @member {Function} Elem#bdi\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'bdi',\n\t\n\t/**\n\t * @member {Function} Elem#bdo\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'bdo',\n\t\n\t/**\n\t * @member {Function} Elem#blockquote\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'blockquote',\n\t\n\t/**\n\t * @member {Function} Elem#body\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'body',\n\t\n\t/**\n\t * @member {Function} Elem#br\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'br',\n\t\n\t/**\n\t * @member {Function} Elem#button\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'button',\n\t\n\t/**\n\t * @member {Function} Elem#canvas\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'canvas',\n\t\n\t/**\n\t * @member {Function} Elem#caption\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'caption',\n\t\n\t/**\n\t * @member {Function} Elem#cite\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'cite',\n\t\n\t/**\n\t * @member {Function} Elem#code\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'code',\n\t\n\t/**\n\t * @member {Function} Elem#col\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'col',\n\t\n\t/**\n\t * @member {Function} Elem#colgroup\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'colgroup',\n\t\n\t/**\n\t * @member {Function} Elem#content\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'content',\n\t\n\t/**\n\t * @member {Function} Elem#datalist\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'datalist',\n\t\n\t/**\n\t * @member {Function} Elem#dd\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'dd',\n\t\n\t/**\n\t * @member {Function} Elem#del\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'del',\n\t\n\t/**\n\t * @member {Function} Elem#details\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'details',\n\t\n\t/**\n\t * @member {Function} Elem#dfn\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'dfn',\n\t\n\t/**\n\t * @member {Function} Elem#dialog\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'dialog',\n\t\n\t/**\n\t * @member {Function} Elem#div\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'div',\n\t\n\t/**\n\t * @member {Function} Elem#dl\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'dl',\n\t\n\t/**\n\t * @member {Function} Elem#dt\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'dt',\n\t\n\t/**\n\t * @member {Function} Elem#element\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'element',\n\t\n\t/**\n\t * @member {Function} Elem#em\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'em',\n\t\n\t/**\n\t * @member {Function} Elem#embed\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'embed',\n\t\n\t/**\n\t * @member {Function} Elem#fieldset\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'fieldset',\n\t\n\t/**\n\t * @member {Function} Elem#figcaption\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'figcaption',\n\t\n\t/**\n\t * @member {Function} Elem#figure\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'figure',\n\t\n\t/**\n\t * @member {Function} Elem#footer\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'footer',\n\t\n\t/**\n\t * @member {Function} Elem#form\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'form',\n\t\n\t/**\n\t * @member {Function} Elem#h1\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'h1',\n\t\n\t/**\n\t * @member {Function} Elem#h2\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'h2',\n\t\n\t/**\n\t * @member {Function} Elem#h3\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'h3',\n\t\n\t/**\n\t * @member {Function} Elem#h4\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'h4',\n\t\n\t/**\n\t * @member {Function} Elem#h5\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'h5',\n\t\n\t/**\n\t * @member {Function} Elem#h6\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'h6',\n\t\n\t/**\n\t * @member {Function} Elem#head\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'head',\n\t\n\t/**\n\t * @member {Function} Elem#header\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'header',\n\t\n\t/**\n\t * @member {Function} Elem#hgroup\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'hgroup',\n\t\n\t/**\n\t * @member {Function} Elem#hr\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'hr',\n\t\n\t/**\n\t * @member {Function} Elem#i\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'i',\n\t\n\t/**\n\t * @member {Function} Elem#iframe\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'iframe',\n\t\n\t/**\n\t * @member {Function} Elem#img\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'img',\n\t\n\t/**\n\t * @member {Function} Elem#input\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'input',\n\t\n\t/**\n\t * @member {Function} Elem#ins\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'ins',\n\t\n\t/**\n\t * @member {Function} Elem#kbd\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'kbd',\n\t\n\t/**\n\t * @member {Function} Elem#label\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'label',\n\t\n\t/**\n\t * @member {Function} Elem#legend\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'legend',\n\t\n\t/**\n\t * @member {Function} Elem#li\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'li',\n\t\n\t/**\n\t * @member {Function} Elem#link\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'link',\n\t\n\t/**\n\t * @member {Function} Elem#main\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'main',\n\t\n\t/**\n\t * @member {Function} Elem#mark\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'mark',\n\t\n\t/**\n\t * @member {Function} Elem#menu\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'menu',\n\t\n\t/**\n\t * @member {Function} Elem#menuitem\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'menuitem',\n\t\n\t/**\n\t * @member {Function} Elem#meta\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'meta',\n\t\n\t/**\n\t * @member {Function} Elem#meter\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'meter',\n\t\n\t/**\n\t * @member {Function} Elem#nav\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'nav',\n\t\n\t/**\n\t * @member {Function} Elem#noscript\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'noscript',\n\t\n\t/**\n\t * @member {Function} Elem#null\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'null',\n\t\n\t/**\n\t * @member {Function} Elem#ol\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'ol',\n\t\n\t/**\n\t * @member {Function} Elem#optgroup\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'optgroup',\n\t\n\t/**\n\t * @member {Function} Elem#option\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'option',\n\t\n\t/**\n\t * @member {Function} Elem#output\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'output',\n\t\n\t/**\n\t * @member {Function} Elem#p\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'p',\n\t\n\t/**\n\t * @member {Function} Elem#param\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'param',\n\t\n\t/**\n\t * @member {Function} Elem#pre\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'pre',\n\t\n\t/**\n\t * @member {Function} Elem#progress\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'progress',\n\t\n\t/**\n\t * @member {Function} Elem#q\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'q',\n\t\n\t/**\n\t * @member {Function} Elem#rp\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'rp',\n\t\n\t/**\n\t * @member {Function} Elem#rt\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'rt',\n\t\n\t/**\n\t * @member {Function} Elem#rtc\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'rtc',\n\t\n\t/**\n\t * @member {Function} Elem#ruby\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'ruby',\n\t\n\t/**\n\t * @member {Function} Elem#s\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t's',\n\t\n\t/**\n\t * @member {Function} Elem#samp\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'samp',\n\t\n\t/**\n\t * @member {Function} Elem#script\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'script',\n\t\n\t/**\n\t * @member {Function} Elem#section\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'section',\n\t\n\t/**\n\t * @member {Function} Elem#select\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'select',\n\t\n\t/**\n\t * @member {Function} Elem#shadow\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'shadow',\n\t\n\t/**\n\t * @member {Function} Elem#small\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'small',\n\t\n\t/**\n\t * @member {Function} Elem#source\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'source',\n\t\n\t/**\n\t * @member {Function} Elem#span\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'span',\n\t\n\t/**\n\t * @member {Function} Elem#strong\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'strong',\n\t\n\t/**\n\t * @member {Function} Elem#style\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'style',\n\t\n\t/**\n\t * @member {Function} Elem#sub\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'sub',\n\t\n\t/**\n\t * @member {Function} Elem#summary\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'summary',\n\t\n\t/**\n\t * @member {Function} Elem#sup\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'sup',\n\t\n\t/**\n\t * @member {Function} Elem#table\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'table',\n\t\n\t/**\n\t * @member {Function} Elem#tbody\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'tbody',\n\t\n\t/**\n\t * @member {Function} Elem#td\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'td',\n\t\n\t/**\n\t * @member {Function} Elem#template\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'template',\n\t\n\t/**\n\t * @member {Function} Elem#textarea\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'textarea',\n\t\n\t/**\n\t * @member {Function} Elem#tfoot\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'tfoot',\n\t\n\t/**\n\t * @member {Function} Elem#th\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'th',\n\t\n\t/**\n\t * @member {Function} Elem#thead\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'thead',\n\t\n\t/**\n\t * @member {Function} Elem#time\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'time',\n\t\n\t/**\n\t * @member {Function} Elem#title\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'title',\n\t\n\t/**\n\t * @member {Function} Elem#tr\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'tr',\n\t\n\t/**\n\t * @member {Function} Elem#track\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'track',\n\t\n\t/**\n\t * @member {Function} Elem#u\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'u',\n\t\n\t/**\n\t * @member {Function} Elem#ul\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'ul',\n\t\n\t/**\n\t * @member {Function} Elem#var\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'var',\n\t\n\t/**\n\t * @member {Function} Elem#video\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'video',\n\t\n\t/**\n\t * @member {Function} Elem#wbr\n\t * @type {Function}\n\t * @param {...String} appliedExpressions\n\t * @returns {Elem}\n\t */\n\t'wbr'];\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * @module constants/elements\n\t * @private\n\t * @description Exports different canvas methods for {@link Elem} for creating html-elements.\n\t */\n\t\n\t/**\n\t * @const\n\t * @type {String[]}\n\t */\n\tvar canvasGetMethods = exports.canvasGetMethods = [\n\t/**\n\t * @member {Function} Elem#createImageData\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {ImageData|void}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/createImageData\n\t */\n\t'createImageData',\n\t\n\t/**\n\t * @member {Function} Elem#createLinearGradient\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {CanvasGradient|void}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/createLinearGradient\n\t */\n\t'createLinearGradient',\n\t\n\t/**\n\t * @member {Function} Elem#createPattern\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {CanvasPattern|void}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/createPattern\n\t */\n\t'createPattern',\n\t\n\t/**\n\t * @member {Function} Elem#createRadialGradient\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {CanvasGradient|void}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/createRadialGradient\n\t */\n\t'createRadialGradient',\n\t\n\t/**\n\t * @member {Function} Elem#getImageData\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {ImageData|void}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/getImageData\n\t */\n\t'getImageData',\n\t\n\t/**\n\t * @member {Function} Elem#getLineDash\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Number[]|void}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/getLineDash\n\t */\n\t'getLineDash',\n\t\n\t/**\n\t * @member {Function} Elem#isPointInPath\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Boolean|void}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/isPointInPath\n\t */\n\t'isPointInPath',\n\t\n\t/**\n\t * @member {Function} Elem#isPointInStroke\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Boolean|void}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/isPointInStroke\n\t */\n\t'isPointInStroke',\n\t\n\t/**\n\t * @member {Function} Elem#measureText\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {TextMetrics|void}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/measureText\n\t */\n\t'measureText'];\n\t\n\tvar canvasRestMethods = exports.canvasRestMethods = [\n\t/**\n\t * @member {Function} Elem#arc\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/arc\n\t */\n\t'arc',\n\t\n\t/**\n\t * @member {Function} Elem#arcTo\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/arcTo\n\t */\n\t'arcTo',\n\t\n\t/**\n\t * @member {Function} Elem#beginPath\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/beginPath\n\t */\n\t'beginPath',\n\t\n\t/**\n\t * @member {Function} Elem#bezierCurveTo\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/bezierCurveTo\n\t */\n\t'bezierCurveTo',\n\t\n\t/**\n\t * @member {Function} Elem#clearRect\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/clearRect\n\t */\n\t'clearRect',\n\t\n\t/**\n\t * @member {Function} Elem#clip\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/clip\n\t */\n\t'clip',\n\t\n\t/**\n\t * @member {Function} Elem#closePath\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/closePath\n\t */\n\t'closePath',\n\t\n\t/**\n\t * @member {Function} Elem#drawFocusIfNeeded\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/drawFocusIfNeeded\n\t */\n\t'drawFocusIfNeeded',\n\t\n\t/**\n\t * @member {Function} Elem#drawImage\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/drawImage\n\t */\n\t'drawImage',\n\t\n\t/**\n\t * @member {Function} Elem#ellipse\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/ellipse\n\t */\n\t'ellipse',\n\t\n\t/**\n\t * @member {Function} Elem#fill\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/fill\n\t */\n\t'fill',\n\t\n\t/**\n\t * @member {Function} Elem#fillRect\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/fillRect\n\t */\n\t'fillRect',\n\t\n\t/**\n\t * @member {Function} Elem#fillText\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/fillText\n\t */\n\t'fillText',\n\t\n\t/**\n\t * @member {Function} Elem#lineTo\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/lineTo\n\t */\n\t'lineTo',\n\t\n\t/**\n\t * @member {Function} Elem#moveTo\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/moveTo\n\t */\n\t'moveTo',\n\t\n\t/**\n\t * @member {Function} Elem#putImageData\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/putImageData\n\t */\n\t'putImageData',\n\t\n\t/**\n\t * @member {Function} Elem#quadraticCurveTo\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/quadraticCurveTo\n\t */\n\t'quadraticCurveTo',\n\t\n\t/**\n\t * @member {Function} Elem#rect\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/rect\n\t */\n\t'rect',\n\t\n\t/**\n\t * @member {Function} Elem#resetTransform\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/resetTransform\n\t */\n\t'resetTransform',\n\t\n\t/**\n\t * @member {Function} Elem#restore\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/restore\n\t */\n\t'restore',\n\t\n\t/**\n\t * @member {Function} Elem#rotate\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/rotate\n\t */\n\t'rotate',\n\t\n\t/**\n\t * @member {Function} Elem#save\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/save\n\t */\n\t'save',\n\t\n\t/**\n\t * @member {Function} Elem#scale\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/scale\n\t */\n\t'scale',\n\t\n\t/**\n\t * @member {Function} Elem#setLineDash\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/setLineDash\n\t */\n\t'setLineDash',\n\t\n\t/**\n\t * @member {Function} Elem#setTransform\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/setTransform\n\t */\n\t'setTransform',\n\t\n\t/**\n\t * @member {Function} Elem#stroke\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/stroke\n\t */\n\t'stroke',\n\t\n\t/**\n\t * @member {Function} Elem#strokeRect\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/strokeRect\n\t */\n\t'strokeRect',\n\t\n\t/**\n\t * @member {Function} Elem#strokeText\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/strokeText\n\t */\n\t'strokeText',\n\t\n\t/**\n\t * @member {Function} Elem#transform\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/transform\n\t */\n\t'transform',\n\t\n\t/**\n\t * @member {Function} Elem#translate\n\t * @type {Function}\n\t * @param {...*} args\n\t * @returns {Elem}\n\t * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/translate\n\t */\n\t'translate'];\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** dwayne.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b4be99cc5da3a354bc28\n **/","import D from './D';\r\n\r\nglobal.D = D;\r\nglobal.top.D = D;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./browser.js\n **/","import D, * as statics from './lib';\nimport { assign } from './lib/helpers/assign';\n\nassign(D, statics);\n\ndelete D.default;\n\nexport * from './lib';\nexport default D;\n\n\n\n/** WEBPACK FOOTER **\n ** ./D.js\n **/","import D from './D';\r\n\r\nexport * from './D';\r\nexport * from './Alphabet';\r\nexport * from './Arr';\r\nexport * from './BlobObject';\r\nexport * from './Dat';\r\nexport * from './Elem';\r\nexport * from './Fetch';\r\nexport * from './Func';\r\nexport * from './Num';\r\nexport * from './Promise';\r\nexport * from './Str';\r\nexport * from './Super';\r\nexport * from './Switcher';\r\n\r\nexport default D;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/index.js\n **/","/**\n * @module D\n * @private\n * @description Exports D function.\n */\n\nimport constructors from './constants/constructors';\n\nexport * from './helpers/checkTypes';\n\n/**\n * @function D\n * @public\n * @param {*} [value] - Any value.\n * @returns {DWrap} Wrap of the argument.\n * @description Function for creating a D-wrap of an object.\n *\n * @example\n * D({});            // Super\n * D(() => {});      // Func\n * D([]);            // Arr\n * D(1);             // Num\n * D('1');           // Str\n * D(new Date());    // Dat\n * D(document.body); // Elem\n */\nexport function D(value) {\n  for (let i = constructors.length - 1; i >= 0; i--) {\n    const levelConstructors = constructors[i];\n\n    for (let k = 0, len = levelConstructors.length; k < len; k++) {\n      const constructor = levelConstructors[k];\n\n      if (value instanceof constructor.cls) {\n        return value;\n      }\n\n      if (constructor.check(value)) {\n        return new constructor.cls(value);\n      }\n    }\n  }\n}\n\nexport default D;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/D.js\n **/","/**\r\n * @module helpers/checkTypes\r\n * @private\r\n * @mixin\r\n * @description Exports is<Type> methods.\r\n */\r\n\r\nimport { toStringTag } from './toStringTag';\r\n\r\n/**\r\n * @function isArray\r\n * @public\r\n * @param {*} value - Value to check if it is an array.\r\n * @returns {Boolean} If the argument is an array or not.\r\n * \r\n * @example\r\n * isArray([]);                             // true\r\n * isArray(0);                              // true\r\n * isArray(document.querySelectorAll('*')); // false\r\n */\r\nexport function isArray(value) {\r\n  return toStringTag(value) === 'Array';\r\n}\r\n\r\n/**\r\n * @function isArrayLike\r\n * @public\r\n * @param {*} value - Value to check if it is array-like.\r\n * @returns {Boolean} If the argument is array-like or not.\r\n * @description Basically returns if the argument has non-negative integer \"length\" property and isn't a function.\r\n * \r\n * @example\r\n * isArrayLike([]);                             // true\r\n * isArrayLike('');                             // true\r\n * isArrayLike(() => {});                       // false\r\n * isArrayLike(document.querySelectorAll('*')); // true\r\n */\r\nexport function isArrayLike(value) {\r\n  if (!value || isFunction(value)) {\r\n    return false;\r\n  }\r\n  \r\n  const length = value.length;\r\n  \r\n  return isInteger(length) && length >= 0;\r\n}\r\n\r\n/**\r\n * @function isBoolean\r\n * @public\r\n * @param {*} value - Value to check if it is a boolean.\r\n * @returns {Boolean} If the argument is a boolean or not.\r\n * \r\n * @example\r\n * isBoolean(true);               // true\r\n * isBoolean(new Boolean(false)); // true\r\n * isBoolean(null);               // false\r\n */\r\nexport function isBoolean(value) {\r\n  return toStringTag(value) === 'Boolean';\r\n}\r\n\r\n/**\r\n * @function isDate\r\n * @public\r\n * @param {*} value - Value to check if it is a date.\r\n * @returns {Boolean} If the argument is a date or not.\r\n * \r\n * @example\r\n * isDate(new Date());                 // true\r\n * isDate('1999-12-31T23:59:59.999Z'); // false\r\n */\r\nexport function isDate(value) {\r\n  return toStringTag(value) === 'Date';\r\n}\r\n\r\n/**\r\n * @function isDateLike\r\n * @public\r\n * @param {*} value - Value to check if it is date-like.\r\n * @returns {Boolean} If the argument is date-like or not.\r\n * @description Basically returns if new Date(argument) is not invalid date.\r\n * \r\n * @example\r\n * isDateLike(new Date());                 // true\r\n * isDateLike('1999-12-31T23:59:59.999Z'); // true\r\n * isDateLike(0);                          // true\r\n */\r\nexport function isDateLike(value) {\r\n  value = new Date(value);\r\n  \r\n  return !isNaN(value.getTime());\r\n}\r\n\r\n/**\r\n * @function isElement\r\n * @public\r\n * @param {*} value - Value to check if it is an element.\r\n * @returns {Boolean} If the argument is element or not.\r\n *\r\n * @example\r\n * isElement(document.querySelector('html')); // true\r\n */\r\nexport function isElement(value) {\r\n  return /Element$/.test(toStringTag(value));\r\n}\r\n\r\n/**\r\n * @function isFinite\r\n * @public\r\n * @param {*} value - Value to check if it is finite.\r\n * @returns {Boolean} If the argument is finite or not.\r\n * \r\n * @example\r\n * isFinite(0);        // true\r\n * isFinite('0');      // false\r\n * isFinite(Infinity); // false\r\n * isFinite(NaN);      // false\r\n */\r\nexport function isFinite(value) {\r\n  if (!isNumber(value)) {\r\n    return false;\r\n  }\r\n  \r\n  value = Number(value);\r\n\r\n  return !isNaN(value) && value !== Infinity && value !== -Infinity;\r\n}\r\n\r\n/**\r\n * @function isFunction\r\n * @public\r\n * @param {*} value - Value to check if it is a function.\r\n * @returns {Boolean} If the argument is a function or not.\r\n * \r\n * @example\r\n * isFunction(() => {});            // true\r\n * \r\n * const func = () => {};\r\n * Object.setPrototypeOf(func, {});\r\n * isFunction(func);                // true\r\n */\r\nexport function isFunction(value) {\r\n  return toStringTag(value) === 'Function' || typeof value === 'function';\r\n}\r\n\r\n/**\r\n * @function isInteger\r\n * @public\r\n * @param {*} value - Value to check if it is an integer.\r\n * @returns {Boolean} If the argument is an integer or not.\r\n *\r\n * @example\r\n * isInteger(0);             // true\r\n * isInteger(0.1);           // false\r\n * isInteger(new Number(0)); // true\r\n * isInteger('0');           // false\r\n * isInteger(Infinity);      // false\r\n * isInteger(NaN);           // false\r\n */\r\nexport function isInteger(value) {\r\n  return isNumber(value) && value % 1 === 0;\r\n}\r\n\r\n/**\r\n * @function isIntegerLike\r\n * @public\r\n * @param {*} value - Value to check if it is integer-like.\r\n * @returns {Boolean} If the argument is integer-like or not.\r\n *\r\n * @example\r\n * isIntegerLike(0);             // true\r\n * isIntegerLike(new Number(0)); // true\r\n * isIntegerLike(0.1);           // false\r\n * isIntegerLike('0');           // true\r\n */\r\nexport function isIntegerLike(value) {\r\n  value = parseInt(Number(value));\r\n\r\n  return !!(value || value === 0);\r\n}\r\n\r\n/**\r\n * @function isNaN\r\n * @public\r\n * @param {*} value - Value to check if it is NaN.\r\n * @returns {Boolean} If the argument is NaN or not.\r\n *\r\n * @example\r\n * isNaN(0);               // false\r\n * isNaN('NaN');           // false\r\n * isNaN(NaN);             // true\r\n * isNaN(new Number(NaN)); // true\r\n */\r\nexport function isNaN(value) {\r\n  if (!isNumber(value)) {\r\n    return false;\r\n  }\r\n  \r\n  value = Number(value);\r\n\r\n  return value !== value;\r\n}\r\n\r\n/**\r\n * @function isNull\r\n * @public\r\n * @param {*} value - Value to check if it is null.\r\n * @returns {Boolean} If the argument is null or not.\r\n *\r\n * @example\r\n * isNull(null);      // true\r\n * isNull(undefined); // false\r\n */\r\nexport function isNull(value) {\r\n  return value === null;\r\n}\r\n\r\n/**\r\n * @function isNullOrUndefined\r\n * @public\r\n * @param {*} value - Value to check if it is null or undefined.\r\n * @returns {Boolean} If the argument is null or undefined or not.\r\n *\r\n * @example\r\n * isNullOrUndefined(null);      // true\r\n * isNullOrUndefined(undefined); // true\r\n * isNullOrUndefined(false);     // false\r\n */\r\nexport function isNullOrUndefined(value) {\r\n  return value === null || typeof value === 'undefined';\r\n}\r\n\r\n/**\r\n * @function isNumber\r\n * @public\r\n * @param {*} value - Value to check if it is a number.\r\n * @returns {Boolean} If the argument is a number or not.\r\n *\r\n * @example\r\n * isNumber(0);             // true\r\n * isNumber(new Number(0)); // true\r\n * isNumber(NaN);           // true\r\n * isNumber('0');           // false\r\n */\r\nexport function isNumber(value) {\r\n  return toStringTag(value) === 'Number';\r\n}\r\n\r\n/**\r\n * @function isNumberLike\r\n * @public\r\n * @param {*} value - Value to check if it is number-like.\r\n * @returns {Boolean} If the argument is number-like or not.\r\n *\r\n * @example\r\n * isNumberLike(0);          // true\r\n * isNumberLike('0');        // true\r\n * isNumberLike('Infinity'); // true\r\n * isNumberLike('NaN');      // true\r\n * isNumberLike(NaN);        // true\r\n */\r\nexport function isNumberLike(value) {\r\n  if (isNaN(value) || value === 'NaN') {\r\n    return true;\r\n  }\r\n  \r\n  value = Number(value);\r\n  \r\n  return !!(value || value === 0);\r\n}\r\n\r\n/**\r\n * @function isObject\r\n * @public\r\n * @param {*} value - Value to check if it is an object.\r\n * @returns {Boolean} If the argument is an object or not.\r\n *\r\n * @example\r\n * isObject({});   // true\r\n * isObject(1);    // false\r\n * isObject(null); // false\r\n */\r\nexport function isObject(value) {\r\n  return !!value && (toStringTag(value) === 'Object' || typeof value === 'object' || value instanceof Object);\r\n}\r\n\r\n/**\r\n * @function isPlainObject\r\n * @public\r\n * @param {*} value - Value to check if it is a plain object.\r\n * @returns {Boolean} If the argument is a plain object or not.\r\n *\r\n * @example\r\n * const obj = {};\r\n *\r\n * ifPlainObject(obj); // true\r\n *\r\n * Object.setPrototypeOf(object, null);\r\n *\r\n * ifPlainObject(obj); // true\r\n *\r\n * Object.setPrototypeOf(object, {});\r\n *\r\n * ifPlainObject(obj); // false\r\n */\r\nexport function isPlainObject(value) {\r\n  if (isPrimitive(value)) {\r\n    return false;\r\n  }\r\n\r\n  const proto = Object.getPrototypeOf(value);\r\n\r\n  if (isNull(proto)) {\r\n    return true;\r\n  }\r\n\r\n  const constructor = proto.constructor;\r\n\r\n  return isFunction(constructor) &&\r\n    constructor instanceof constructor &&\r\n    isNull(Object.getPrototypeOf(proto));\r\n}\r\n\r\n/**\r\n * @function isPrimitive\r\n * @public\r\n * @param {*} value - Value to check if it is primitive.\r\n * @returns {Boolean} If the argument is primitive or not.\r\n *\r\n * @example\r\n * isPrimitive(1);             // true\r\n * isPrimitive({});            // false\r\n * isPrimitive('');            // true\r\n * isPrimitive(new Number(0)); // false\r\n * isPrimitive(true);          // true\r\n * isPrimitive(Symbol('foo')); // true\r\n * isPrimitive(null);          // true\r\n * isPrimitive(undefined);     // true\r\n */\r\nexport function isPrimitive(value) {\r\n  return isNull(value) || /^(number|string|boolean|symbol|undefined)$/.test(typeof value);\r\n}\r\n\r\n/**\r\n * @function isRegExp\r\n * @public\r\n * @param {*} value - Value to check if it is a regular expression.\r\n * @returns {Boolean} If the argument is a regular expression or not.\r\n *\r\n * @example\r\n * isRegExp(/foo/);             // true\r\n * isRegExp('/foo/');           // false\r\n * isRegExp(new RegExp('foo')); // true\r\n */\r\nexport function isRegExp(value) {\r\n  return toStringTag(value) === 'RegExp';\r\n}\r\n\r\n/**\r\n * @function isString\r\n * @public\r\n * @param {*} value - Value to check if it is a string.\r\n * @returns {Boolean} If the argument is a string or not.\r\n *\r\n * @example\r\n * isString('0');             // true\r\n * isString(new String('0')); // true\r\n */\r\nexport function isString(value) {\r\n  return toStringTag(value) === 'String';\r\n}\r\n\r\n/**\r\n * @function isSymbol\r\n * @public\r\n * @param {*} value - Value to check if it is a symbol.\r\n * @returns {Boolean} If the argument is a symbol or not.\r\n *\r\n * @example\r\n * isSymbol(Symbol('1')); // true\r\n */\r\nexport function isSymbol(value) {\r\n  return toStringTag(value) === 'Symbol';\r\n}\r\n\r\n/**\r\n * @function isUndefined\r\n * @public\r\n * @param {*} value - Value to check if it is undefined.\r\n * @returns {Boolean} If the argument is undefined or not.\r\n *\r\n * @example\r\n * isUndefined(null);      // false\r\n * isUndefined(undefined); // true\r\n */\r\nexport function isUndefined(value) {\r\n  return typeof value === 'undefined';\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/helpers/checkTypes.js\n **/","/**\n * @module helpers/toStringTag\n * @private\n * @description Exports toStringTag method.\n */\n\n/**\n * @function toStringTag\n * @param {*} object - Object to get toStringTag of.\n * @returns {String} Cut string.\n * @description Cut \"Type\" string from \"[object Type]\" string that gotten from {}.toString,call(object).\n */\nexport function toStringTag(object) {\n  return {}.toString.call(object).replace(/^\\[object |]$/g, '');\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/helpers/toStringTag.js\n **/","/**\r\n * @module Alphabet\r\n * @private\r\n * @mixin\r\n * @description Exports Alphabet class.\r\n */\r\n\r\nimport { isString, validate, defineProperties, Symbol } from './helpers';\r\n\r\n/**\r\n * @typedef {String} Char\r\n * @public\r\n * @description A string of one char.\r\n */\r\n\r\n/**\r\n * @class Alphabet\r\n * @public\r\n * @param {ArrayLike} alphabet - Alphabet to wrap.\r\n * @returns {Alphabet} Instance of Alphabet.\r\n * @description Class for alphabet manipulations: add, delete symbols, generate a token from an alphabet,\r\n * check if an alphabet contains a word.\r\n *\r\n * @example\r\n * new Alphabet(['a', 'b', 'c']);\r\n */\r\nexport class Alphabet {\r\n  constructor(alphabet = []) {\r\n    const a = {};\r\n\r\n    for (let i = 0, length = alphabet.length; i < length; i++) {\r\n      const char = alphabet[i];\r\n\r\n      if (!check(char)) {\r\n        throw new Error('Each element of an array must be a single char! (in Alphabet)');\r\n      }\r\n\r\n      a[char] = char;\r\n    }\r\n\r\n    /**\r\n     * @member {Object} Alphabet#$$\r\n     * @public\r\n     * @description The alphabet.\r\n     */\r\n    Object.defineProperty(this, '$$', { value: a });\r\n  }\r\n\r\n  /**\r\n   * @method Alphabet#add\r\n   * @public\r\n   * @param {...Char} chars - Chars to add.\r\n   * @returns {Alphabet} Returns this.\r\n   * @description Method for adding new letters to the alphabet.\r\n   *\r\n   * @example\r\n   * const alphabet = new Alphabet(['a', 'b', 'c']);\r\n   *\r\n   * alphabet.add('d', 'e');\r\n   *\r\n   * alphabet.get().$; // ['a', 'b', 'c', 'd', 'e']\r\n   */\r\n  add(...chars) {\r\n    for (let i = 0, length = chars.length; i < length; i++) {\r\n      const char = chars[i];\r\n\r\n      if (!check(char)) {\r\n        throw new Error('Each argument must be a single char! (in Alphabet#add)');\r\n      }\r\n\r\n      this.$$[char] = char;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Alphabet#contains\r\n   * @public\r\n   * @param {String} word - Word to check if it is in the alphabet or not.\r\n   * @returns {Boolean} If the word in the alphabet or not.\r\n   * @description Method that returns if a word is in alphabet or not.\r\n   *\r\n   * @example\r\n   * const alphabet = new Alphabet(['f', 'b', 'o', 'a', 'r']);\r\n   *\r\n   * alphabet.contains('foo'); // true\r\n   * alphabet.contains('bar'); // true\r\n   * alphabet.contains('baz'); // false\r\n   */\r\n  contains(word) {\r\n    validate([word], ['string'], 'Alphabet#contains');\r\n\r\n    const alphabet = this.$$;\r\n\r\n    for (let i = 0, length = word.length; i < length; i++) {\r\n      if (!alphabet[word[i]]) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @method Alphabet#delete\r\n   * @public\r\n   * @param {...Char} chars - Chars to delete.\r\n   * @returns {Alphabet} Returns this.\r\n   * @description Method for deleting letters from the alphabet.\r\n   *\r\n   * @example\r\n   * const alphabet = new Alphabet(['a', 'b', 'c', 'd']);\r\n   *\r\n   * alphabet.delete('a');\r\n   *\r\n   * alphabet.get().$; // ['b', 'c', 'd']\r\n   *\r\n   * alphabet.delete('b', 'd');\r\n   *\r\n   * alphabet.get().$; // ['c']\r\n   */\r\n  delete(...chars) {\r\n    for (let i = 0, length = chars.length; i < length; i++) {\r\n      const char = chars[i];\r\n\r\n      if (!check(char)) {\r\n        throw new Error('Each argument must be a single char! (in Alphabet#delete)');\r\n      }\r\n\r\n      delete this.$$[char];\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Alphabet#get\r\n   * @returns {Array} Wrap of an array of alphabet letters.\r\n   * @description Method for getting array of alphabet letters.\r\n   *\r\n   * @example\r\n   * new Alphabet(['a', 'b', 'c']).get().$; // ['a', 'b', 'c']\r\n   */\r\n  get() {\r\n    return Object.keys(this.$$);\r\n  }\r\n\r\n  /**\r\n   * @method Alphabet#token\r\n   * @public\r\n   * @param {Number} length - Token length.\r\n   * @returns {String} Token.\r\n   * @description Method for generating random token with given length.\r\n   *\r\n   * @example\r\n   * new Alphabet(['a', 'b', 'c']).token(4); // 'abcb'\r\n   */\r\n  token(length) {\r\n    validate([length], [['intLike', '>0']], 'Alphabet#token');\r\n\r\n    const alphabet = Object.keys(this.$$);\r\n    const len = alphabet.length;\r\n    let token = '';\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      token += alphabet[Math.floor(Math.random() * len)];\r\n    }\r\n\r\n    return token;\r\n  }\r\n}\r\n\r\ndefineProperties(Alphabet.prototype, {\r\n  [Symbol.toStringTag]: 'Alphabet'\r\n});\r\n\r\nfunction check(char) {\r\n  return isString(char) && char.length === 1;\r\n}\r\n\r\n/**\r\n * @function alphabet\r\n * @public\r\n * @param {String} string - String to generate an alphabet from.\r\n * @returns {Alphabet} New instance of Alphabet.\r\n * @description Function for creating an alphabet from a string that has format like this:\r\n * '&lt;char1&gt;-&lt;char2&gt; &lt;char3&gt;-&lt;char4&gt;'\r\n *\r\n * @example\r\n * const a1 = alphabet('a-c 1-3');\r\n * const a2 = alphabet('5-5f-g');\r\n *\r\n * a1.get().$; // ['1', '2', '3', 'a', 'b', 'c']\r\n * a2.get().$; // ['5', 'f', 'g']\r\n */\r\nexport function alphabet(string) {\r\n  validate([string], ['string']);\r\n\r\n  const ranges = string.split(/([\\s\\S]\\-+[\\s\\S])?/g);\r\n  const length = ranges.length;\r\n  const alphabet = [];\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    const range = ranges[i];\r\n\r\n    if (!range || range === ' ') {\r\n      continue;\r\n    }\r\n\r\n    if (/\\-/.test(range) && !/[\\s\\S]\\-+[\\s\\S]/.test(range)) {\r\n      throw new Error(`Wrong part of the string (${ range })! (in alphabet)`);\r\n    }\r\n\r\n    if (/\\-/.test(range)) {\r\n      const start = range.charCodeAt(0);\r\n      const end = range.charCodeAt(2);\r\n\r\n      if (start > end) {\r\n        throw new Error('Start of the range must be before its end! (in alphabet)');\r\n      }\r\n\r\n      for (let k = 0, len = end - start + 1; k < len; k++) {\r\n        alphabet.push(String.fromCharCode(start + k));\r\n      }\r\n\r\n      continue;\r\n    }\r\n\r\n    if (range.length === 1) {\r\n      alphabet.push(range);\r\n    }\r\n  }\r\n\r\n  return new Alphabet(alphabet);\r\n}\r\n\r\nexport default Alphabet;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Alphabet.js\n **/","export * from './assign';\r\nexport * from './checkTypes';\r\nexport * from './crossClassMethods';\r\nexport * from './defineProperty';\r\nexport * from './iterate';\r\nexport * from './Symbol';\r\nexport * from './toArray';\r\nexport * from './toStringTag';\r\nexport * from './validate';\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/helpers/index.js\n **/","/**\n * @module helpers/assign\n * @private\n * @description Exports Object.assign-like method.\n */\n\nimport { iterate } from './iterate';\n\n/**\n * @const\n * @function assign\n * @param {Object} target - Object to assign rest of arguments to.\n * @param {...Object} objects - Objects that are assigned to the target.\n * @returns {Object} Target.\n */\nexport function assign(target) {\n  iterate(arguments, (source, index) => {\n    if (index) {\n      iterate(source, (value, key) => {\n        target[key] = value;\n      });\n    }\n  });\n    \n  return target;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/helpers/assign.js\n **/","/**\r\n * @module helpers/iterate\r\n * @private\r\n * @description Exports iterate method.\r\n */\r\n\r\nimport { isArrayLike, isUndefined } from './checkTypes';\r\n\r\n/**\r\n * @callback IterationCallback\r\n * @param {*} value - Iteration value.\r\n * @param {String|Number} key - Iteration key.\r\n * @param {*} object - Initial iterable object.\r\n */\r\n\r\n/**\r\n * @function iterate\r\n * @param {(Object|Array|null|undefined)} object - Value to iterate over.\r\n * @param {IterationCallback} callback - Callback that is called on every iteration.\r\n * @returns {*} If callback returns not undefined then iterate returns this value.\r\n * @description Function for iterating over all types of values.\r\n */\r\nexport function iterate(object, callback) {\r\n  const array = isArrayLike(object);\r\n\r\n  let iterated = 0;\r\n\r\n  for (const key in object) {\r\n    if ({}.hasOwnProperty.call(object, key)) {\r\n      if (array && iterated++ >= object.length) {\r\n        break;\r\n      }\r\n\r\n      const value = callback(object[key], array ? Number(key) : key, object);\r\n\r\n      if (!isUndefined(value)) {\r\n        return value;\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/helpers/iterate.js\n **/","/**\n * @module helpers/crossClassMethods\n * @private\n * @description Exports crossClassMethods.\n */\n\nimport D from '../D';\n\n/**\n * @namespace\n * @private\n * @type {Object}\n */\nexport const crossClassMethods = {\n  transformAnchor,\n  htmlElement\n};\n\n/**\n * @function transformAnchor\n * @abstract\n * @memberof module:helpers/crossClassMethods.crossClassMethods\n * @param {Elem} elem - Elem to transform.\n * @returns {void}\n * @description Function for transformation html-anchors by {@link Router}.\n */\nfunction transformAnchor() {}\n\n/**\n * @function htmlElement\n * @abstract\n * @memberof module:helpers/crossClassMethods.crossClassMethods\n * @param {Element} elem - Elem to wrap.\n * @returns {Elem} Instance of Elem or an Elem subclass.\n * @description Function for wrapping elements.\n */\nfunction htmlElement(elem) {\n  return D(elem);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/helpers/crossClassMethods.js\n **/","/**\n * @module helpers/defineProperty\n * @private\n * @description Exports defineProperty and dynamicDefineProperties methods.\n */\n\nimport { iterate } from './iterate';\n\n/**\n * @callback propertyGeneratorCallback\n * @param {String} name - Name of the property.\n * @returns {*} Generated property.\n */\n\n/**\n * @function dynamicDefineProperties\n * @param {Object} target - Object to define properties for.\n * @param {Array} properties - Object which keys are properties.\n * @param {propertyGeneratorCallback} propertyGenerator - Callback for every property.\n * @returns {void}\n * @description Function for dynamic creating properties based on name of the method.\n */\nexport function dynamicDefineProperties(target, properties, propertyGenerator) {\n  iterate(properties, (name) => {\n    Object.defineProperty(target, name, {\n      value: propertyGenerator(name),\n      writable: true,\n      enumerable: false,\n      configurable: true\n    });\n  });\n}\n\n/**\n * @function defineProperties\n * @param {Object} target - Target to define properties for.\n * @param {Object} properties - Object with properties needed to be assign to the target.\n * @returns {void}\n * @description Function for defining properties of an object.\n */\nexport function defineProperties(target, properties) {\n  iterate(properties, (method, name) => {\n    if (/^get /.test(name)) {\n      Object.defineProperty(target, name.replace(/^get /, ''), {\n        get: method,\n        set: undefined,\n        enumerable: false,\n        configurable: true\n      });\n\n      return;\n    }\n\n    if (/^set /.test(name)) {\n      Object.defineProperty(target, name.replace(/^set /, ''), {\n        set: method,\n        get: undefined,\n        enumerable: false,\n        configurable: true\n      });\n\n      return;\n    }\n\n    if (/^get\\/set /.test(name)) {\n      Object.defineProperty(target, name.replace(/^get\\/set /, ''), {\n        get: method.get,\n        set: method.set,\n        enumerable: false,\n        configurable: true\n      });\n\n      return;\n    }\n\n    if (name !== 'Symbol.toStringTag') {\n      Object.defineProperty(target, name, {\n        value: method,\n        writable: true,\n        enumerable: false,\n        configurable: true\n      });\n    }\n  });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/helpers/defineProperty.js\n **/","/**\n * @module helpers/Symbol\n * @private\n * @description Exports Symbol class.\n */\n\nexport const Symbol = global.Symbol || {\n  toStringTag: 'Symbol.toStringTag',\n  iterator: Math.random().toString(36)\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/helpers/Symbol.js\n **/","/**\n * @module helpers/toArray\n * @private\n * @description Exports toArray method.\n */\n\nimport { isArray, isArrayLike, isString } from './checkTypes';\nimport { iterate } from './iterate';\n\n/**\n * @function toArray\n * @param {*} value - Any value.\n * @param {Boolean} [createNewArray = false] - If it is needed to create new array.\n * @returns {Array} Create array.\n * @description Function for creating an array of any value.\n */\nexport function toArray(value, createNewArray) {\n  if (isArray(value) && !createNewArray) {\n    return value;\n  }\n\n  const array = [];\n\n  if (isArrayLike(value) && !isString(value)) {\n    iterate(value, (value) => {\n      array.push(value);\n    });\n  } else {\n    array.push(value);\n  }\n\n  return array;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/helpers/toArray.js\n **/","/**\n * @module helpers/validate\n * @private\n * @description Exports validate method.\n */\n\nimport checkExpressions from '../constants/validateCheckExpressions';\nimport { iterate } from './iterate';\nimport { isArray } from './checkTypes';\n\nconst numbers = ['1st', '2nd', '3rd', '4th', '5th', '6th', '7th'];\n\n/**\n * @function validate\n * @private\n * @param {Object} args - Arguments of function.\n * @param {Object} options - Object with validate parameters.\n * @param {String} [name] - Name of the function what called validate.\n * @returns {void}\n * @description Function for checking arguments of other functions.\n */\nexport function validate(args, options, name) {\n  iterate(options, (array, number) => {\n    if (!isArray(array)) {\n      array = [array];\n    }\n\n    iterate(array, (checker) => {\n      checker = checkExpressions[checker];\n\n      if (!checker.check(args[number])) {\n        throw new checker.error(checker.text.replace('$n', numbers[number]) + (name ? ` (in ${ name })` : ''));\n      }\n    });\n  });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/helpers/validate.js\n **/","/**\n * @module constants/validateCheckExpressions\n * @private\n * @description Exports different types of validate expressions for {@link module:helpers/validate}.\n */\n\nimport * as methods from '../helpers/checkTypes';\n\n/**\n * @callback checkValidityCallback\n * @private\n * @param {*} value - Value to check.\n */\n\n/**\n * @typedef {Object} validateExpr\n * @private\n * @property {String} text - Text of the thrown error.\n * @property {Error} error - Type of the thrown error.\n * @property {checkValidityCallback} check - Callback for checking value.\n */\n\n/**\n * @type {validateExpr[]}\n * @private\n * @description Object of different types of validation.\n */\nexport default {\n  '>0': {\n    check: (n) => n > 0,\n    text: '$n argument must be positive!',\n    error: RangeError\n  },\n  '>=0': {\n    check: (n) => n >= 0,\n    text: '$n argument must be non-negative!',\n    error: RangeError\n  },\n  '<0': {\n    check: (n) => n < 0,\n    text: '$n argument must be negative!',\n    error: RangeError\n  },\n  '<=0': {\n    check: (n) => n <= 0,\n    text: '$n argument must be non-positive!',\n    error: RangeError\n  },\n  '!!': {\n    check: methods.isNullOrUndefined,\n    text: '$n argument must be not null or undefined!',\n    error: TypeError\n  },\n  array: {\n    check: methods.isArray,\n    text: '$n argument must be an array!',\n    error: TypeError\n  },\n  'array||!': {\n    check: (a) => methods.isArray(a) || methods.isNullOrUndefined(a),\n    text: '$n argument must be an array, or undefined, or null!',\n    error: TypeError\n  },\n  arrayLike: {\n    check: methods.isArrayLike,\n    text: '$n argument must be array-like!',\n    error: TypeError\n  },\n  'arrayLike||!': {\n    check: (a) => methods.isArrayLike(a) || methods.isNullOrUndefined(a),\n    text: '$n argument must be array-like, or undefined, or null!',\n    error: TypeError\n  },\n  date: {\n    check: methods.isDate,\n    text: '$n argument must be a date!',\n    error: TypeError\n  },\n  'date||!': {\n    check: (d) => methods.isDate(d) || methods.isNullOrUndefined(d),\n    text: '$n argument must be a date, or undefined, or null!',\n    error: TypeError\n  },\n  dateLike: {\n    check: methods.isDateLike,\n    text: '$n argument must be date-like!',\n    error: TypeError\n  },\n  'dateLike||!': {\n    check: (d) => methods.isDateLike(d) || methods.isNullOrUndefined(d),\n    text: '$n argument must be date-like, or undefined, or null!',\n    error: TypeError\n  },\n  function: {\n    check: methods.isFunction,\n    text: '$n argument must be a function!',\n    error: TypeError\n  },\n  'function||!': {\n    check: (f) => methods.isFunction(f) || methods.isNullOrUndefined(f),\n    text: '$n argument must be a function, or undefined, or null!',\n    error: TypeError\n  },\n  int: {\n    check: methods.isInteger,\n    text: '$n argument must be an integer!',\n    error: TypeError\n  },\n  'int||!': {\n    check: (i) => methods.isInteger(i) || methods.isNullOrUndefined(i),\n    text: '$n argument must be an integer, or undefined, or null!',\n    error: TypeError\n  },\n  intLike: {\n    check: methods.isIntegerLike,\n    text: '$n argument must be integer-like!',\n    error: TypeError\n  },\n  'intLike||!': {\n    check: (i) => methods.isIntegerLike(i) || methods.isNullOrUndefined(i),\n    text: '$n argument must be integer-like, or undefined, or null!',\n    error: TypeError\n  },\n  number: {\n    check: methods.isNumber,\n    text: '$n argument must be a number!',\n    error: TypeError\n  },\n  'number||!': {\n    check: (n) => methods.isNumber(n) || methods.isNullOrUndefined(n),\n    text: '$n argument must be a number, or undefined, or null!',\n    error: TypeError\n  },\n  numberLike: {\n    check: methods.isNumberLike,\n    text: '$n argument must be number-like!',\n    error: TypeError\n  },\n  'numberLike||!': {\n    check: (n) => methods.isNumberLike(n) || methods.isNullOrUndefined(n),\n    text: '$n argument must be number-like, or undefined, or null!',\n    error: TypeError\n  },\n  object: {\n    check: methods.isObject,\n    text: '$n argument must be an object!',\n    error: TypeError\n  },\n  'object||!': {\n    check: (o) => methods.isObject(o) || methods.isNullOrUndefined(o),\n    text: '$n argument must be an object, or undefined, or null!',\n    error: TypeError\n  },\n  regexp: {\n    check: methods.isRegExp,\n    text: '$n argument must be a regular expression!',\n    error: TypeError\n  },\n  'regexp||!': {\n    check: (r) => methods.isRegExp(r) || methods.isNullOrUndefined(r),\n    text: '$n argument must be a regular expression, or undefined, or null!',\n    error: TypeError\n  },\n  string: {\n    check: methods.isString,\n    text: '$n argument must be a string!',\n    error: TypeError\n  },\n  'string||!': {\n    check: (s) => methods.isString(s) || methods.isNullOrUndefined(s),\n    text: '$n argument must be a string, or undefined, or null!',\n    error: TypeError\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/constants/validateCheckExpressions.js\n **/","/**\r\n * @module Arr\r\n * @private\r\n * @mixin\r\n * @description Exports Arr class.\r\n */\r\n\r\nimport Super from './Super';\r\nimport constructors from './constants/constructors';\r\nimport {\r\n  isArrayLike, isNaN, isNumber, isString,\r\n  toArray, validate, iterate as iterator, Symbol, defineProperties\r\n} from './helpers';\r\n\r\n/**\r\n * @typedef {Array|*} ArrayLike\r\n * @public\r\n * @description Array-like type.\r\n */\r\n\r\n/**\r\n * @callback ArrayCallback\r\n * @public\r\n * @param {Number} i - Iteration index.\r\n */\r\n\r\n/**\r\n * @callback IterateCallback\r\n * @public\r\n * @param {Number} i - Iteration index.\r\n */\r\n\r\n/**\r\n * @callback CompareFunction\r\n * @public\r\n * @param {*} x - First value to be compared.\r\n * @param {*} y - Second value to be compared.\r\n */\r\n\r\n/**\r\n * @class Arr\r\n * @extends Super\r\n * @public\r\n * @param {Array} [array = []] - An array to wrap.\r\n * @returns {Arr} Instance of Arr.\r\n * @description Wrap of an array.\r\n *\r\n * @example\r\n * new Arr([1, 2]);\r\n */\r\nexport class Arr extends Super {\r\n  constructor(array = []) {\r\n    super(toArray(array));\r\n\r\n    /**\r\n     * @member Arr#$\r\n     * @type {Array}\r\n     * @public\r\n     * @description Made array.\r\n     */\r\n  }\r\n\r\n  /**\r\n   * @method Arr#concat\r\n   * @public\r\n   * @param {...(Array|*)} values - Arrays or any other values to concat the array with.\r\n   * @returns {Arr} New instance of Arr.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\r\n   * @description Synonym for\r\n   * [Array#concat]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/concat}.\r\n   */\r\n  concat(...values) {\r\n    const array = toArray(this.$, true);\r\n\r\n    iterator(arguments, (value) => {\r\n      value = new Super(value).$;\r\n\r\n      if (isArrayLike(value) && !isString(value)) {\r\n        iterator(value, (value) => {\r\n          array.push(value);\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      array.push(value);\r\n    });\r\n\r\n    return new this.constructor(array);\r\n  }\r\n\r\n  /**\r\n   * @member Arr#first\r\n   * @type {*}\r\n   * @public\r\n   * @readonly\r\n   * @description Returns the first element of the array.\r\n   *\r\n   * @example\r\n   * new Arr([1, 2, 3]).first; // 1\r\n   * new Arr([]).first;        // undefined\r\n   */\r\n  get first() {\r\n    return this.$[0];\r\n  }\r\n\r\n  /**\r\n   * @method Arr#indexOf\r\n   * @public\r\n   * @param {*} value - Value to search.\r\n   * @returns {Number} Index of the argument.\r\n   * @description Almost the same as {@link Super#keyOf}. The difference is that if the value is not found\r\n   * -1 returned instead of null and if found Number(key) returned.\r\n   *\r\n   * @example\r\n   * new Arr([1, 2, 3]).indexOf(1);       // 0\r\n   * new Arr([1, 2, 3]).indexOf('1');     // 0\r\n   * new Arr([1, 2, 3]).indexOf(3);       // -1\r\n   * new Arr([1, 2, NaN]).indexOf(NaN);   // 2\r\n   */\r\n  indexOf(value) {\r\n    const key = this.keyOf(value);\r\n\r\n    return key === null ? -1 : Number(key);\r\n  }\r\n\r\n  /**\r\n   * @method Arr#indexOfStrict\r\n   * @public\r\n   * @param {*} value - Value to search.\r\n   * @returns {Number} Index of the argument.\r\n   * @description Almost the same as {@link Super#keyOfStrict}. The difference is that if the value is not found\r\n   * -1 returned instead of null and if found Number(key) returned.\r\n   *\r\n   * @example\r\n   * new Arr([1, 2, 3]).indexOfStrict(1);       // 0\r\n   * new Arr([1, 2, 3]).indexOfStrict('1');     // -1\r\n   * new Arr([1, 2, 3]).indexOfStrict(3);       // -1\r\n   * new Arr([1, 2, NaN]).indexOfStrict(NaN);   // 2\r\n   */\r\n  indexOfStrict(value) {\r\n    const key = this.keyOfStrict(value);\r\n\r\n    return key === null ? -1 : Number(key);\r\n  }\r\n\r\n  /**\r\n   * @method Arr#join\r\n   * @public\r\n   * @param {String} [separator = ','] - See the link.\r\n   * @returns {String} - String of joined array.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/join\r\n   * @description Synonym for\r\n   * [Array#join]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/join}.\r\n   */\r\n  join(separator) {\r\n    return this.$.join.apply(this.$, arguments);\r\n  }\r\n\r\n  /**\r\n   * @member Arr#last\r\n   * @type {*}\r\n   * @public\r\n   * @readonly\r\n   * @description The last element of the array.\r\n   *\r\n   * @example\r\n   * new Arr([1, 2, 3]).last; // 3\r\n   * new Arr([]).last;        // undefined\r\n   */\r\n  get last() {\r\n    const array = this.$;\r\n\r\n    return array[array.length - 1];\r\n  }\r\n\r\n  /**\r\n   * @member Arr#length\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/length\r\n   * @description Synonym for\r\n   * [Array#length]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/length}.\r\n   */\r\n  get length() {\r\n    return this.$.length;\r\n  }\r\n\r\n  /**\r\n   * @method Arr#pop\r\n   * @public\r\n   * @returns {*} Returns deleted element.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/pop\r\n   * @description Synonym for\r\n   * [Array#pop]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/pop}.\r\n   */\r\n  pop() {\r\n    return this.$.pop();\r\n  }\r\n\r\n  /**\r\n   * @method Arr#push\r\n   * @public\r\n   * @param {...*} values See the link.\r\n   * @this {Arr}\r\n   * @returns {Arr} Returns this.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push\r\n   * @description Synonym for\r\n   * [Array#push]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push}\r\n   * besides returning this.\r\n   */\r\n  push(...values) {\r\n    this.$.push.apply(this.$, arguments);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Arr#reverse\r\n   * @public\r\n   * @returns {Arr} A wrap of the reversed array.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse\r\n   * @description Synonym for\r\n   * [Array#reverse]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse}.\r\n   */\r\n  reverse() {\r\n    this.$.reverse();\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Arr#shift\r\n   * @public\r\n   * @returns {*} Returns deleted element.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/shift\r\n   * @description Synonym for\r\n   * [Array#shift]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/shift}.\r\n   */\r\n  shift() {\r\n    return this.$.shift();\r\n  }\r\n\r\n  /**\r\n   * @method Arr#shuffle\r\n   * @public\r\n   * @returns {Arr} Returns this.\r\n   * @description Method for shuffling.\r\n   *\r\n   * @example\r\n   * new Arr([1, 2, 3, 4]).shuffle().$; // [4, 2, 3, 1]\r\n   * new Arr([1, 2, 3, 4]).shuffle().$; // [1, 3, 4, 2]\r\n   */\r\n  shuffle() {\r\n    const length = this.$.length;\r\n\r\n    return this.forEach((value, index, array) => {\r\n      const randomIndex = index + Math.floor((length - index) * Math.random());\r\n\r\n      array[index] = array[randomIndex];\r\n      array[randomIndex] = value;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Arr#slice\r\n   * @public\r\n   * @param {Number} [begin = 0] - See the link.\r\n   * @param {Number} [end = array.length] - See the link.\r\n   * @returns {Arr} A wrap of a sliced array.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\r\n   * @description Synonym for\r\n   * [Array#slice]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/slice}.\r\n   */\r\n  slice(begin, end) {\r\n    return new this.constructor(this.$.slice.apply(this.$, arguments));\r\n  }\r\n\r\n  /**\r\n   * @method Arr#sort\r\n   * @public\r\n   * @param {CompareFunction} [compareFunction] - See the link.\r\n   * @returns {Arr} Returns this.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\r\n   * @description Synonym for\r\n   * [Array#sort]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/sort}.\r\n   */\r\n  sort(compareFunction) {\r\n    validate([compareFunction], ['function||!'], 'Arr#sort');\r\n\r\n    this.$.sort(compareFunction);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Arr#sortAsc\r\n   * @public\r\n   * @returns {Arr} Returns this.\r\n   * @description Method for ascending sorting. Puts non-numbers first, then NaNs, then sorted values.\r\n   *\r\n   * @example\r\n   * new Arr([NaN, 1, -7, '100', 5]).sortAsc().$; // ['100', NaN, -7, 1, 5]\r\n   */\r\n  sortAsc() {\r\n    return this.sort(asc);\r\n  }\r\n\r\n  /**\r\n   * @method Arr#sortDesc\r\n   * @public\r\n   * @returns {Arr} Returns this.\r\n   * @description Method for descending sorting. Puts sorted values first, then NaNs, then non-numbers.\r\n   *\r\n   * @example\r\n   * new Arr([NaN, 1, -7, '100', 5]).sortDesc().$; // [5, 1, -7, NaN, '100']\r\n   */\r\n  sortDesc() {\r\n    return this.sort((y, x) => asc(x, y));\r\n  }\r\n\r\n  /**\r\n   * @method Arr#splice\r\n   * @public\r\n   * @param {Number} [start] - See the link.\r\n   * @param {Number} [deleteCount] - See the link.\r\n   * @param {...*} [items] - See the link.\r\n   * @returns {Arr} A wrap of return value of #splice call.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\r\n   * @description Synonym for\r\n   * [Array#splice]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/splice}.\r\n   */\r\n  splice(start, deleteCount, ...items) {\r\n    return new Arr(this.$.splice.apply(this.$, arguments));\r\n  }\r\n\r\n  /**\r\n   * @method Arr#string\r\n   * @public\r\n   * @returns {String} Concatenated array.\r\n   * @description Synonym for array.join('').\r\n   *\r\n   * @example\r\n   * new Arr([1, 2, 3]).string(); // '123'\r\n   */\r\n  string() {\r\n    return this.join('');\r\n  }\r\n\r\n  /**\r\n   * @method Arr#unshift\r\n   * @public\r\n   * @param {...*} [values] - See the link.\r\n   * @returns {Arr} Returns this.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift\r\n   * @description Synonym for\r\n   * [Array#unshift]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift}\r\n   * besides returning this.\r\n   */\r\n  unshift(...values) {\r\n    this.$.unshift.apply(this.$, arguments);\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\ndefineProperties(Arr.prototype, {\r\n  [Symbol.toStringTag]: 'Arr'\r\n});\r\n\r\n/**\r\n * @function asc\r\n * @private\r\n * @param {*} x - First value to be compared.\r\n * @param {*} y - Second value to be compared.\r\n * @returns {Number} Where to put the first element: before or after.\r\n */\r\nfunction asc(x, y) {\r\n  if (!isNumber(x) && !isNumber(y)) {\r\n    return 0;\r\n  }\r\n\r\n  if (!isNumber(x)) {\r\n    return -1;\r\n  }\r\n\r\n  if (!isNumber(y)) {\r\n    return 1;\r\n  }\r\n\r\n  if (isNaN(x) && isNaN(y)) {\r\n    return 0;\r\n  }\r\n\r\n  if (isNaN(x)) {\r\n    return -1;\r\n  }\r\n\r\n  if (isNaN(y)) {\r\n    return 1;\r\n  }\r\n\r\n  return x - y;\r\n}\r\n\r\nconstructors[1].push({\r\n  check: isArrayLike,\r\n  cls: Arr\r\n});\r\n\r\n/**\r\n * @function array\r\n * @public\r\n * @param {Number} number - Length of the array.\r\n * @param {ArrayCallback} [callback] - If it's present it has to be a function\r\n * that returns the element that is pushed to the new array.\r\n * @returns {Arr} New instance of Arr.\r\n * @description Method for creating new array from the length using optional callback.\r\n *\r\n * @example\r\n * array(3).$;               // [0, 1, 2]\r\n * array(3, (i) => i * 2).$; // [0, 2, 4]\r\n */\r\nexport function array(number, callback) {\r\n  validate([number, callback], [['intLike', '>=0'], 'function||!'], 'array');\r\n\r\n  const array = [];\r\n\r\n  for (let i = 0; i < number; i++) {\r\n    array.push(callback ? callback(i) : i);\r\n  }\r\n\r\n  return new Arr(array);\r\n}\r\n\r\n/**\r\n * @function iterate\r\n * @public\r\n * @param {Number} number - Number of iterations.\r\n * @param {IterateCallback} callback - Callback that is called on each iteration with the iteration index.\r\n * @returns {void}\r\n * @description Method for replacing for (...) construction.\r\n *\r\n * @example\r\n * iterate();\r\n */\r\nexport function iterate(number, callback) {\r\n  validate([number, callback], [['intLike', '>=0'], 'function'], 'iterate');\r\n\r\n  for (let i = 0; i < number; i++) {\r\n    callback(i);\r\n  }\r\n}\r\n\r\nexport default Arr;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Arr.js\n **/","/**\r\n * @module Super\r\n * @private\r\n * @mixin\r\n * @description Exports Super class.\r\n */\r\n\r\nimport D from './D';\r\nimport { switcher } from './Switcher';\r\nimport constructors from './constants/constructors';\r\nimport {\r\n  isArray, isArrayLike, isDate, isElement, isFunction, isNaN, isNull, isNullOrUndefined,\r\n  isObject, isPlainObject, isPrimitive, isRegExp, isString, isUndefined,\r\n  validate, toStringTag, iterate, Symbol, defineProperties\r\n} from './helpers';\r\n\r\n/**\r\n * @typedef {Super|Arr|Func|Elem|Str|Num|Dat|BlobObject} DWrap\r\n * @public\r\n * @description Any kind of D-Wrap.\r\n */\r\n\r\n/**\r\n * @typedef {String|Number|null} Key\r\n * @public\r\n * @description Key type used in many methods.\r\n */\r\n\r\n/**\r\n * @typedef {TreeElement[]} Tree\r\n * @public\r\n */\r\n\r\n/**\r\n * @typedef {Object} TreeElement\r\n * @public\r\n * @property {Key} key - Tree element key.\r\n * @property {*} value - Tree element value.\r\n * @description {@link Tree} element.\r\n */\r\n\r\n/**\r\n * @callback DeepIterationCallback\r\n * @public\r\n * @param {*} value - Current iteration value.\r\n * @param {String|Number} key - Current iteration key/index.\r\n * @param {*} object - Iteration object.\r\n * @param {Tree} tree - Tree of { key, value } elements.\r\n */\r\n\r\n/**\r\n * @callback DeepReduceCallback\r\n * @public\r\n * @param {*} previousValue - Previous value.\r\n * @param {*} value - Current iteration value.\r\n * @param {String|Number} key - Current iteration key/index.\r\n * @param {*} object - Iteration object.\r\n * @param {Tree} tree - Tree of { key, value } elements.\r\n */\r\n\r\n/**\r\n * @callback IterationCallback\r\n * @public\r\n * @param {*} value - Current iteration value.\r\n * @param {String|Number} key - Current iteration key/index.\r\n * @param {*} object - Iteration object.\r\n */\r\n\r\n/**\r\n * @callback JSONCallback\r\n * @public\r\n * @param {String|null} key - Current value.\r\n * @param {*} value - Current key.\r\n * @param {Object} object - Iteration object.\r\n */\r\n\r\n/**\r\n * @callback ObjectCallback\r\n * @public\r\n * @param {Object} newObject - The new object.\r\n * @param {*} value - Current iteration value.\r\n * @param {String|Number} key - Current iteration key/index.\r\n * @param {*} object - Iteration object.\r\n */\r\n\r\n/**\r\n * @callback ReduceCallback\r\n * @public\r\n * @param {*} previousValue - Previous value.\r\n * @param {*} value - Current iteration value.\r\n * @param {String|Number} key - Current iteration key/index.\r\n * @param {*} object - Iteration object.\r\n */\r\n\r\n/**\r\n * @callback SuperMethod\r\n * @public\r\n * @this {DWrap}\r\n */\r\n\r\nconst cloneSwitcher = switcher('call', (object) => object)\r\n  .case(\r\n    (object) => new Super(object) === object,\r\n    (object) => new (object.proto().constructor(object))\r\n  )\r\n  .case(isElement, (object, deep) => object.clone(deep))\r\n  .case(isDate, (object) => new Date(object))\r\n  .case(isRegExp, (object) => new RegExp(object.source, object.flags))\r\n  .case(isArray, () => [])\r\n  .case(isPlainObject, () => ({}));\r\n\r\n/**\r\n * @class Super\r\n * @public\r\n * @param {*} [object] - An object to wrap.\r\n * @returns {DWrap} Instance of Super.\r\n * @description Wrap of any value. And there is no way to create a nested wrap.\r\n *\r\n * @example\r\n * new Super({}); // Super\r\n */\r\nexport class Super {\r\n  constructor(object) {\r\n    if (object instanceof Super) {\r\n      return object;\r\n    }\r\n\r\n    /**\r\n     * @member Super#$\r\n     * @type {*}\r\n     * @public\r\n     * @description Wrapped object.\r\n     */\r\n    Object.defineProperty(this, '$', { value: object });\r\n  }\r\n\r\n  /**\r\n   * @method Super.addStaticProperties\r\n   * @public\r\n   * @param {String|Object} property - Either a string of a property or an object\r\n   * with properties keys and values values.\r\n   * @param {Object} [value] - If a property parameter is a string this has to be a property value.\r\n   * @returns {this} Returns this.\r\n   * @description Sets static properties for DWrap constructors.\r\n   *\r\n   * @example\r\n   * Super.addStaticProperties('cool', 42);\r\n   * Super.addStaticProperties('superCool', 42*42);\r\n   */\r\n  static addStaticProperties(property, value) {\r\n    if (arguments.length >= 2) {\r\n      property = { [property]: value };\r\n    }\r\n\r\n    defineProperties(this, property);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Super.addInstanceProperties\r\n   * @public\r\n   * @param {String|Object} property - Either a string of a property or an object\r\n   * with properties keys and values values.\r\n   * @param {Object} [value] - If a property parameter is a string this has to be a property value.\r\n   * @returns {this} Returns this.\r\n   * @description Sets static properties for DWrap prototypes.\r\n   *\r\n   * @example\r\n   * Super.addInstanceProperties('cool', 42);\r\n   * Super.addInstanceProperties('superCool', 42*42);\r\n   */\r\n  static addInstanceProperties(property, value) {\r\n    if (arguments.length >= 2) {\r\n      property = { [property]: value };\r\n    }\r\n\r\n    defineProperties(this.prototype, property);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Super#assign\r\n   * @public\r\n   * @param {...*} objects - Objects to be assigned to the object.\r\n   * @returns {DWrap} Returns this.\r\n   * @description Synonym for\r\n   * [Object.assign]\r\n   * {@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign}.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2 }).assign({ a: 3 }, { c: 3, d: 4 }, { d: 5 }).$; // { a: 3, b: 2, c: 3, d: 5 }\r\n   */\r\n  assign(...objects) {\r\n    const object = this.$;\r\n\r\n    iterate(object && arguments, (o) => {\r\n      iterate(new Super(o).$, (value, key) => {\r\n        object[key] = value;\r\n      });\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Super#average\r\n   * @public\r\n   * @param {IterationCallback} [callback = null] - Callback that is passed to {@link Super#sum}.\r\n   * @returns {Number} Average value.\r\n   * @description Synonym for object.sum(callback) / object.count.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).average();                         // 2\r\n   * new Super({ a: 1, b: 2, c: 5 }).average((value) => value * value); // 10\r\n   */\r\n  average(callback = null) {\r\n    validate([callback], ['function||!'], 'Super#average');\r\n\r\n    return this.sum(callback) / this.count;\r\n  }\r\n\r\n  /**\r\n   * @method Super#call\r\n   * @public\r\n   * @param {SuperMethod} func - Function to be called with this context.\r\n   * @param {...*} args - Arguments to be called with.\r\n   * @returns {*} Return of function call.\r\n   * @description Synonym for func.call(DObject, ...args);\r\n   *\r\n   * @example\r\n   * new Super({ a: 1 }).call(function (b, c) {\r\n   *   return this.a + b + c;\r\n   * }, 2, 3); // 6\r\n   */\r\n  call(func) {\r\n    validate([func], ['function'], 'Super#call');\r\n\r\n    return func.apply(this, [].slice.call(arguments, 1));\r\n  }\r\n\r\n  /**\r\n   * @method Super#clone\r\n   * @returns {DWrap} New object.\r\n   * @description Method assigns properties of the object to an empty one and returns the new one.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: { c: 2 } }).clone().$; // { a: 1, b: { c: 2 } }\r\n   */\r\n  clone() {\r\n    const object = this.$;\r\n    const clone = cloneSwitcher(object, [object, false]);\r\n\r\n    if (clone !== object) {\r\n      iterate(object, (value, key) => {\r\n        clone[key] = value;\r\n      });\r\n    }\r\n\r\n    return new this.constructor(clone);\r\n  }\r\n\r\n  /**\r\n   * @member Super#count\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @description Returns number of own enumerable keys of the object.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2 }).count; // 2\r\n   */\r\n  get count() {\r\n    const object = this.$;\r\n\r\n    if (!isObject(object)) {\r\n      return 0;\r\n    }\r\n\r\n    return isArrayLike(object) ? object.length : Object.keys(object).length;\r\n  }\r\n\r\n  /**\r\n   * @method Super#create\r\n   * @public\r\n   * @param {Object} [descriptors] - Descriptors passed to Object.create.\r\n   * @returns {DWrap} New instance of D-Wrap.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/create\r\n   * @description Synonym for\r\n   * [Object.create]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/create}.\r\n   *\r\n   * @example\r\n   * new Super({}).create({\r\n   *   a: {\r\n   *     value: 1,\r\n   *     enumerable: false,\r\n   *     writable: true,\r\n   *     configurable: false\r\n   *   }\r\n   * }).$; // { a: 1 }\r\n   */\r\n  create(descriptors) {\r\n    return D(isPrimitive(this.$) ? undefined : Object.create(this.$, descriptors));\r\n  }\r\n\r\n  /**\r\n   * @method Super#deepAssign\r\n   * @public\r\n   * @param {...*} objects - Objects to be assigned to the object.\r\n   * @returns {DWrap} Returns this.\r\n   * @description Deep analogue of {@link Super#assign}.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1 }).deepAssign(\r\n   *   {\r\n   *     b: {\r\n   *       c: 2\r\n   *     }\r\n   *   },\r\n   *   {\r\n   *     a: {\r\n   *       b: 1\r\n   *     }\r\n   *   },\r\n   *   {\r\n   *     a: {\r\n   *       c: {\r\n   *         d: 1\r\n   *       }\r\n   *     },\r\n   *     b: 2\r\n   *   },\r\n   *   null\r\n   * });\r\n   * // {\r\n   * //   a: {\r\n   * //     b: 1,\r\n   * //     c: {\r\n   * //       d: 1\r\n   * //     }\r\n   * //   },\r\n   * //   b: 2,\r\n   * // }\r\n   */\r\n  deepAssign(...objects) {\r\n    const object = this.$;\r\n\r\n    if (isPrimitive(object)) {\r\n      return this;\r\n    }\r\n\r\n    iterate(arguments, (o) => {\r\n      deepAssign(object, o);\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Super#deepClone\r\n   * @public\r\n   * @returns {DWrap} New instance of DWrap.\r\n   * @description Deep cloning method. Clones plain objects, arrays, regular expressions and elements, the rest stays the same.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: [2, 3], c: { d: 4 } }).deepClone().$;\r\n   * // {\r\n   * //   a: 1,\r\n   * //   b: [2, 3],\r\n   * //   c: { d: 4 }\r\n   * // }\r\n   */\r\n  deepClone() {\r\n    return new this.constructor(deepClone(this.$));\r\n  }\r\n\r\n  /**\r\n   * @method Super#deepEquals\r\n   * @public\r\n   * @param {*} [object] - Object to compare to.\r\n   * @returns {Boolean} - If the objects are deep equal or not.\r\n   * @description Method for deep comparison of two objects.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1 }).deepEquals({ a: '1' }); // true\r\n   * new Super(/1/).deepEquals(/1/);             // true\r\n   */\r\n  deepEquals(object = null) {\r\n    return deepEqual(this.$, object, false);\r\n  }\r\n\r\n  /**\r\n   * @method Super#deepEvery\r\n   * @public\r\n   * @param {DeepIterationCallback} [callback = Boolean] - Called on each iteration.\r\n   * If returns truthy iteration goes on and if falsey it stops.\r\n   * @param {Number} [n = Infinity] - Iteration depth.\r\n   * @returns {Boolean} If all the callback calls returned truthy value.\r\n   * @description Returns boolean if all the callback calls returned truthy value.\r\n   * Otherwise false. Deep analogue of {@link Super#every}.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepEvery((value) => value < 4); // true\r\n   * new Super({ a: {}, b: {}, c: {} }).deepEvery(() => false);              // true\r\n   */\r\n  deepEvery(callback, n) {\r\n    if (arguments.length === 1 && !isFunction(callback)) {\r\n      n = callback;\r\n      callback = Boolean;\r\n    } else if (arguments.length === 1) {\r\n      n = Infinity;\r\n    } else if (!arguments.length) {\r\n      n = Infinity;\r\n      callback = Boolean;\r\n    }\r\n\r\n    validate([callback, n], ['function', ['numberLike', '>0']], 'Super#deepEvery');\r\n\r\n    n = Number(n);\r\n\r\n    return deepEvery(this.$, callback, n, [{ key: null, value: this.$ }]);\r\n  }\r\n\r\n  /**\r\n   * @method Super#deepFilter\r\n   * @public\r\n   * @param {DeepIterationCallback} [callback = Boolean] - Called on each iteration.\r\n   * If returns truthy the element is included and if falsey it's excluded.\r\n   * @param {Number} [n = Infinity] - Iteration depth.\r\n   * @returns {DWrap} New D-Wrap of filtered object.\r\n   * @description Returns filtered by the callback object. Deep analogue of {@link Super#filter}.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepFilter((value) => value%2).$;     // { a: 1, b: { d: 3 } }\r\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepFilter((value) => value === 1).$; // { a: 1 }\r\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepFilter((value) => value > 3).$;   // {}\r\n   */\r\n  deepFilter(callback, n) {\r\n    if (arguments.length === 1 && !isFunction(callback)) {\r\n      n = callback;\r\n      callback = Boolean;\r\n    } else if (arguments.length === 1) {\r\n      n = Infinity;\r\n    } else if (!arguments.length) {\r\n      n = Infinity;\r\n      callback = Boolean;\r\n    }\r\n\r\n    validate([callback, n], ['function', ['numberLike', '>0']], 'Super#deepFilter');\r\n\r\n    const filtered = deepFilter(this.$, callback, n, [{ key: null, value: this.$ }]);\r\n\r\n    return D(isNullOrUndefined(filtered) ? filtered : filtered || {});\r\n  }\r\n\r\n  /**\r\n   * @method Super#deepFind\r\n   * @public\r\n   * @param {DeepIterationCallback} [callback = Boolean] - Called on each iteration.\r\n   * If returns truthy iteration stops and if falsey it continues.\r\n   * @param {Number} [n = Infinity] - Iteration depth.\r\n   * @returns {Tree|null} Tree of { key, value } if something found and null if not.\r\n   * @description Returns tree of the elements if something found and null if nothing found.\r\n   * Deep analogue of {@link Super#find}.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepFind((value) => value === 2);\r\n   * // [\r\n   * //   { key: 'c', value: 2 },\r\n   * //   { key: 'b', value: { c: 2, d: 3 } },\r\n   * //   { key: null, value: <initial object> }\r\n   * // ]\r\n   */\r\n  deepFind(callback, n) {\r\n    if (arguments.length === 1 && !isFunction(callback)) {\r\n      n = callback;\r\n      callback = Boolean;\r\n    } else if (arguments.length === 1) {\r\n      n = Infinity;\r\n    } else if (!arguments.length) {\r\n      n = Infinity;\r\n      callback = Boolean;\r\n    }\r\n\r\n    validate([callback, n], ['function', ['numberLike', '>0']], 'Super#deepFind');\r\n\r\n    return deepFind(this.$, callback, n, [{ key: null, value: this.$ }]);\r\n  }\r\n\r\n  /**\r\n   * @method Super#deepForEach\r\n   * @public\r\n   * @param {DeepIterationCallback} callback - Called on each iteration.\r\n   * @param {Number} [n = Infinity] - Iteration depth.\r\n   * @returns {DWrap} Returns this.\r\n   * @description Method for iterating over any object. Deep analogue of {@link Super#forEach}.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepForEach((value, key, object) => object[key] = value * value).$;\r\n   * // { a: 1, b: { c: 4, d: 9 } }\r\n   */\r\n  deepForEach(callback, n = Infinity) {\r\n    validate([callback, n], ['function', ['numberLike', '>0']], 'Super#deepForEach');\r\n\r\n    n = Number(n);\r\n\r\n    deepForEach(this.$, callback, n, [{ key: null, value: this.$ }]);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Super#deepFreeze\r\n   * @public\r\n   * @returns {DWrap} Returns this.\r\n   * @description Deep analogue of {@link Super#freeze}.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepFreeze(); // Super\r\n   */\r\n  deepFreeze() {\r\n    deepFreeze(this.$);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Super#deepMap\r\n   * @public\r\n   * @param {DeepIterationCallback} callback - Called on each iteration.\r\n   * Return value is used for creating a new object.\r\n   * @param {Number} [n = Infinity] - Iteration depth.\r\n   * @returns {DWrap} D-Wrap of the new object.\r\n   * @description Returns a wrap of a new object using the callback. Deep analogue of {@link Super#map}.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepMap((value) => value * value).$;\r\n   * // { a: 1, b: { c: 4, d: 9 } }\r\n   */\r\n  deepMap(callback, n = Infinity) {\r\n    validate([callback, n], ['function', ['numberLike', '>0']], 'Super#deepMap');\r\n\r\n    n = Number(n);\r\n\r\n    return D(deepMap(this.$, callback, n, [{ key: null, value: this.$ }]));\r\n  }\r\n\r\n  /**\r\n   * @method Super#deepReduce\r\n   * @public\r\n   * @param {DeepReduceCallback} callback - Called on each iteration.\r\n   * Return value is passed to the next callback call.\r\n   * @param {Number} [n = Infinity] - Iteration depth.\r\n   * @param {*} [IV = <first value>|undefined] - Initial value.\r\n   * @returns {*} Modified IV.\r\n   * @description Returns modified IV. Deep analogue of {@link Super#reduce}.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepReduce((sum, value) => sum + value * value, Infinity, 0); // 14\r\n   */\r\n  deepReduce(callback, n = Infinity, IV) {\r\n    validate([callback, n], ['function', ['numberLike', '>0']], 'Super#deepReduce');\r\n\r\n    n = Number(n);\r\n\r\n    const object = this.$;\r\n    const tree = [{ key: null, value: this.$ }];\r\n\r\n    if (arguments.length < 3) {\r\n      return deepReduce(object, callback, n, false, undefined, tree).IV;\r\n    }\r\n\r\n    return deepReduce(object, callback, n, false, { IV }, tree).IV;\r\n  }\r\n\r\n  /**\r\n   * @method Super#deepSome\r\n   * @public\r\n   * @param {DeepIterationCallback} [callback = Boolean] - Called on each iteration.\r\n   * If returns truthy iteration stops and if falsey it continues.\r\n   * @param {Number} [n = Infinity] - Iteration depth.\r\n   * @returns {Boolean} If all the callback calls returned truthy value.\r\n   * @description Returns true if some of the callback calls returned truthy value.\r\n   * Otherwise false. Deep analogue of {@link Super#some}.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepSome((value) => value > 4); // false\r\n   * new Super({ a: {}, b: {}, c: {} }).deepSome(() => true);               // false\r\n   */\r\n  deepSome(callback, n) {\r\n    if (arguments.length === 1 && !isFunction(callback)) {\r\n      n = callback;\r\n      callback = Boolean;\r\n    } else if (arguments.length === 1) {\r\n      n = Infinity;\r\n    } else if (!arguments.length) {\r\n      n = Infinity;\r\n      callback = Boolean;\r\n    }\r\n\r\n    validate([callback, n], ['function', ['numberLike', '>0']], 'Super#deepSome');\r\n\r\n    n = Number(n);\r\n\r\n    return deepSome(this.$, callback, n, [{ key: null, value: this.$ }]);\r\n  }\r\n\r\n  /**\r\n   * @method Super#deepStrictEquals\r\n   * @public\r\n   * @param {*} [object] - Object to compare to.\r\n   * @returns {Boolean} - If the objects are deep strict equal or not.\r\n   * @description Method for deep strict comparison of two objects.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1 }).deepStrictEquals({ a: '1' }); // false\r\n   * new Super(/1/).deepStrictEquals(/1/);             // true\r\n   */\r\n  deepStrictEquals(object = null) {\r\n    return deepEqual(this.$, object, true);\r\n  }\r\n\r\n  /**\r\n   * @method Super#define\r\n   * @param {String|Object} property - Either a string of a property or a descriptors object.\r\n   * @param {Object} [descriptor] - If a property parameter is a string this has to be a property descriptor.\r\n   * @returns {DWrap} Returns this.\r\n   * @description Synonym for both\r\n   * [Object.defineProperty]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty}\r\n   * and\r\n   * [Object.defineProperties]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties}.\r\n   *\r\n   * @example\r\n   * new Super({}).define('a', {\r\n   *   value: 1,\r\n   *   enumerable: false,\r\n   *   writable: true,\r\n   *   configurable: false\r\n   * }).$; // { a: 1 }\r\n   * new Super({}).define({\r\n   *   a: {\r\n   *     value: 1,\r\n   *     enumerable: false,\r\n   *     writable: true,\r\n   *     configurable: false\r\n   *   }\r\n   * }).$; // { a: 1 }\r\n   */\r\n  define(property, descriptor) {\r\n    if (arguments.length >= 2) {\r\n      property = { [property]: descriptor };\r\n    }\r\n\r\n    property = new Super(property).$;\r\n\r\n    if (isObject(this.$)) {\r\n      Object.defineProperties(this.$, property);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Super#delete\r\n   * @public\r\n   * @param {...String} props - List of properties to delete.\r\n   * @returns {DWrap} Returns this.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/delete\r\n   * @description Synonym for multiple\r\n   * [\"delete\" operator]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/delete}.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).delete('c', 'a').$; // { b: 2 }\r\n   */\r\n  delete(...props) {\r\n    const object = this.$;\r\n\r\n    iterate(object && props, (property) => {\r\n      delete object[property];\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Super#equals\r\n   * @public\r\n   * @param {*} [object] - Object to compare.\r\n   * @returns {Boolean} If the objects are equal or not.\r\n   * @description Returns true if objects are equal using '==' operator and false if not. NaNs are considered to be equal.\r\n   *\r\n   * @example\r\n   * new Super(3).equals('3');   // true\r\n   * new Super(NaN).equals(NaN); // true\r\n   */\r\n  equals(object) {\r\n    const o = this.$;\r\n\r\n    object = new Super(object).$;\r\n\r\n    /* eslint eqeqeq: 0 */\r\n    return o == object || (isNaN(o) && isNaN(object));\r\n  }\r\n\r\n  /**\r\n   * @method Super#every\r\n   * @public\r\n   * @param {IterationCallback} [callback = Boolean] - Called on each iteration.\r\n   * If returns truthy iteration goes on and if falsey it stops.\r\n   * @returns {Boolean} If all the callback calls returned truthy value.\r\n   * @description Returns boolean if all the callback calls returned truthy value.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).every((value) => value < 4); // true\r\n   * new Super({}).every(() => false);                            // true\r\n   */\r\n  every(callback = Boolean) {\r\n    validate([callback], ['function'], 'Super#every');\r\n\r\n    return iterate(this.$, (value, key, object) => {\r\n      if (!callback(value, key, object)) {\r\n        return false;\r\n      }\r\n    }) !== false;\r\n  }\r\n\r\n  /**\r\n   * @method Super#filter\r\n   * @public\r\n   * @param {IterationCallback} [callback = Boolean] - Called on each iteration.\r\n   * If returns truthy the element is included and if falsey it's excluded.\r\n   * @returns {DWrap} New D-Wrap of filtered object.\r\n   * @description Returns filtered by the callback object.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).filter((value) => value%2).$; // { a: 1, c: 3 }\r\n   * new Super(null).filter((value) => value%2).$;                 // null\r\n   */\r\n  filter(callback = Boolean) {\r\n    validate([callback], ['function'], 'Super#filter');\r\n\r\n    const object = this.$;\r\n    const array = isArrayLike(object);\r\n\r\n    /* eslint no-nested-ternary: 0 */\r\n    const o = array ? [] : isNullOrUndefined(object) ? object : {};\r\n\r\n    iterate(object, (value, key) => {\r\n      if (callback(value, key, object)) {\r\n        if (array) {\r\n          o.push(value);\r\n        } else {\r\n          o[key] = value;\r\n        }\r\n      }\r\n    });\r\n\r\n    return D(o);\r\n  }\r\n\r\n  /**\r\n   * @method Super#find\r\n   * @public\r\n   * @param {IterationCallback} [callback = Boolean] - Called on each iteration.\r\n   * If returns truthy iteration stops and if falsey it continues.\r\n   * @returns {{ key: Key, value: * }|null} { key, value } if found and null if not.\r\n   * @description Returns found { key, value } if something found and null if nothing found.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).find((value) => value === 2); // { key: 'b', value: 2 }\r\n   * new Super([1, 2, 3]).find((value) => value === 2);            // { key: 1, value: 2 }\r\n   */\r\n  find(callback) {\r\n    validate([callback], ['function'], 'Super#find');\r\n\r\n    return iterate(this.$, (value, key, object) => {\r\n      if (callback(value, key, object)) {\r\n        return { key, value };\r\n      }\r\n    }) || null;\r\n  }\r\n\r\n  /**\r\n   * @method Super#forEach\r\n   * @public\r\n   * @param {IterationCallback} callback - Called on each iteration.\r\n   * @returns {DWrap} Returns this.\r\n   * @description Method for iterating over any object.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).forEach((value, key, object) => {\r\n   *   object[key] = value * value;\r\n   * }).$; // { a: 1, b: { c: 4, d: 5 } }\r\n   */\r\n  forEach(callback) {\r\n    validate([callback], ['function'], 'Super#forEach');\r\n\r\n    iterate(this.$, (value, key, object) => {\r\n      callback(value, key, object);\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Super#freeze\r\n   * @public\r\n   * @returns {DWrap} Returns this.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\r\n   * @description Synonym for\r\n   * [Object.freeze]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze}.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).freeze(); // Super\r\n   */\r\n  freeze() {\r\n    Object.freeze(this.$);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Super#get\r\n   * @public\r\n   * @param {String|Object.<String, Function>} property - Either a string of a property or a getters object.\r\n   * @param {Function} [getter] - If a property parameter is a string this has to be a getter function.\r\n   * @returns {DWrap} Returns this.\r\n   * @description Method for defining getters.\r\n   *\r\n   * @example\r\n   * const object1 = new Super({}).get('a', () => 1).$;\r\n   * object1.a; // 1\r\n   *\r\n   * const object2 = new Super({}).get({\r\n   *   a: () => 2\r\n   * }).$;\r\n   * object2.a; // 2\r\n   */\r\n  get(property, getter) {\r\n    if (arguments.length >= 2) {\r\n      property = { [property]: getter };\r\n    }\r\n\r\n    const object = this.$;\r\n\r\n    iterate(isObject(object) && new Super(property).$, (getter, property) => {\r\n      Object.defineProperty(object, property, { get: getter });\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Super#has\r\n   * @public\r\n   * @param {String|*} key - Property to check.\r\n   * @returns {Boolean} Returns true if the object has the key and false if not.\r\n   * @see https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/in\r\n   * @description Synonym for\r\n   * [\"in\" operator]{@link https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/in}.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).has('b'); // true\r\n   */\r\n  has(key) {\r\n    const object = this.$;\r\n\r\n    if (!isObject(object)) {\r\n      return false;\r\n    }\r\n\r\n    return key in object;\r\n  }\r\n\r\n  /**\r\n   * @method Super#hasOwn\r\n   * @public\r\n   * @param {String|*} key - Property to check.\r\n   * @returns {Boolean} Returns true if the object has its own key and false if not.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\r\n   * @description Synonym for\r\n   * [Object#hasOwnProperty]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty}.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).hasOwn('b');              // true\r\n   * new Super({ a: 1, b: 2, c: 3 }).hasOwn('hasOwnProperty'); // false\r\n   */\r\n  hasOwn(key) {\r\n    const object = this.$;\r\n\r\n    if (!isObject(object)) {\r\n      return false;\r\n    }\r\n\r\n    return {}.hasOwnProperty.call(object, key);\r\n  }\r\n\r\n  /**\r\n   * @method Super#instanceof\r\n   * @public\r\n   * @param {Function} constructor - Constructor to check.\r\n   * @returns {Boolean} If the object is an instance of constructor.\r\n   * @see https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/instanceof\r\n   * @description Synonym for\r\n   * [\"instanceof\" operator]{@link https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/instanceof}.\r\n   */\r\n  instanceof(constructor) {\r\n    return this.$ instanceof constructor;\r\n  }\r\n\r\n  /**\r\n   * @method Super#isFrozen\r\n   * @public\r\n   * @returns {Boolean} If the object is frozen.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\r\n   * @description Synonym for\r\n   * [Object.isFrozen]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen}.\r\n   *\r\n   * @example\r\n   * new Super({}).freeze().isFrozen(); // true\r\n   */\r\n  isFrozen() {\r\n    return Object.isFrozen(this.$);\r\n  }\r\n\r\n  /**\r\n   * @method Super#json\r\n   * @public\r\n   * @param {JSONCallback|String[]} [replacer] - See the link.\r\n   * @param {String|Number} [space] - See the link.\r\n   * @returns {String} JSON string.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\r\n   * @description Synonym for\r\n   * [JSON.stringify]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify}.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).json(); // '{\"a\":1,\"b\":2,\"c\":3}'\r\n   * new Super({ a: 1, b: 2, c: 3 }).json('    ');\r\n   * // {\r\n   * //     \"a\": 1,\r\n   * //     \"b\": 2,\r\n   * //     \"c\": 3\r\n   * // }\r\n   * new Super({ a: 1, b: 2, c: 3 }).json((key, value) => {\r\n   *   if (typeof value === 'number') {\r\n   *     return value%2 ? key + value0 : undefined;\r\n   *   }\r\n   *\r\n   *   return value;\r\n   * }, 2);\r\n   * // {\r\n   * //   \"a\": \"a1\",\r\n   * //   \"c\": \"c3\"\r\n   * // }\r\n   */\r\n  json(replacer, space) {\r\n    if (arguments.length === 1 && !isFunction(replacer) && !isArray(replacer)) {\r\n      [].unshift.call(arguments, null);\r\n    }\r\n\r\n    [].unshift.call(arguments, this.$);\r\n\r\n    return JSON.stringify.apply(JSON, arguments);\r\n  }\r\n\r\n  /**\r\n   * @method Super#keyOf\r\n   * @public\r\n   * @param {*} value - Value to find.\r\n   * @returns {String|Number|null} A key or an index if found and null if not.\r\n   * @description Method for finding equal to the argument value in the object. NaNs are considered to be equal.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).keyOf(2);   // 'b'\r\n   * new Super({ a: 1, b: 2, c: 3 }).keyOf('2'); // 'b'\r\n   */\r\n  keyOf(value) {\r\n    const key = iterate(this.$, (val, key) => {\r\n      if (val == value || (isNaN(val) && isNaN(value))) {\r\n        return key;\r\n      }\r\n    });\r\n\r\n    return isUndefined(key) ? null : key;\r\n  }\r\n\r\n  /**\r\n   * @method Super#keyOfStrict\r\n   * @public\r\n   * @param {*} value - Value to find.\r\n   * @returns {String|Number|null} A key or an index if found and null if not.\r\n   * @description Method for finding strict equal to the argument value in the object. NaNs are considered to be equal.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).keyOfStrict(2);   // 'b'\r\n   * new Super({ a: 1, b: 2, c: 3 }).keyOfStrict('2'); // 'b'\r\n   */\r\n  keyOfStrict(value) {\r\n    const key = iterate(this.$, (val, key) => {\r\n      if (val === value || (isNaN(val) && isNaN(value))) {\r\n        return key;\r\n      }\r\n    });\r\n\r\n    return isUndefined(key) ? null : key;\r\n  }\r\n\r\n  /**\r\n   * @method Super#keys\r\n   * @public\r\n   * @returns {DWrap} A wrap of the keys array.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\r\n   * @description Synonym for\r\n   * [Object.keys]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/keys}.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).keys().$; // ['a', 'b', 'c']\r\n   * new Super(null).keys().$;                 // []\r\n   */\r\n  keys() {\r\n    const object = this.$;\r\n\r\n    return D(isObject(object) ? Object.keys(object) : []);\r\n  }\r\n\r\n  /**\r\n   * @method Super#map\r\n   * @public\r\n   * @param {IterationCallback} callback - Called on each iteration.\r\n   * Return value is used for creating a new object.\r\n   * @returns {DWrap} D-Wrap of the new object.\r\n   * @description Returns a wrap of a new object using the callback.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).map((value) => value * 2).$; // { a: 2, b: 4, c: 6 }\r\n   * new Super(null).map((value) => value * 2).$;                 // null\r\n   */\r\n  map(callback) {\r\n    validate([callback], ['function'], 'Super#map');\r\n\r\n    const object = this.$;\r\n    const o = isArrayLike(object) ? [] : isNull(object) ? null : {};\r\n\r\n    iterate(object, (value, key) => {\r\n      o[key] = callback(value, key, object);\r\n    });\r\n\r\n    return D(o);\r\n  }\r\n\r\n  /**\r\n   * @method Super#max\r\n   * @public\r\n   * @param {IterationCallback} callback - Called on each iteration.\r\n   * Return value is used for comparison with the previous max value.\r\n   * @returns {{key: Key, value: Number}} Object with max value and key of the max value.\r\n   * @description Method for finding max value in the object.\r\n   * If no callback is present comparison is between values of the object.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).max();                     // { key: 'c', value: 3 }\r\n   * new Super({ a: 1, b: 2, c: 3 }).max((value) => 4 - value); // { key: 'a', value: 3 }\r\n   * new Super({ a: 'a', b: 'b', c: 'c' }).max();               // { key: null, value: -Infinity }\r\n   */\r\n  max(callback = null) {\r\n    validate([callback], ['function||!'], 'Super#max');\r\n\r\n    return this.object((max, value, key, object) => {\r\n      const val = Number(callback ? callback(value, key, object) : value);\r\n\r\n      if (val > max.value) {\r\n        max.key = key;\r\n        max.value = val;\r\n      }\r\n    }, { key: null, value: -Infinity }).$;\r\n  }\r\n\r\n  /**\r\n   * @method Super#min\r\n   * @public\r\n   * @param {IterationCallback} callback - Called on each iteration.\r\n   * Return value is used for comparison with the previous min value.\r\n   * @returns {{key: Key, value: Number}} Object with min value and key of the min value.\r\n   * @description Method for finding min value in the object.\r\n   * If no callback is present comparison is between values of the object.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).min();                     // { key: 'a', value: 1 }\r\n   * new Super({ a: 1, b: 2, c: 3 }).min((value) => 4 - value); // { key: 'c', value: 1 }\r\n   * new Super({ a: 'a', b: 'b', c: 'c' }).min();               // { key: null, value: Infinity }\r\n   */\r\n  min(callback = null) {\r\n    validate([callback], ['function||!'], 'Super#min');\r\n\r\n    return this.object((min, value, key, object) => {\r\n      const val = Number(callback ? callback(value, key, object) : value);\r\n\r\n      if (val < min.value) {\r\n        min.key = key;\r\n        min.value = val;\r\n      }\r\n    }, { key: null, value: Infinity }).$;\r\n  }\r\n\r\n  /**\r\n   * @method Super#object\r\n   * @public\r\n   * @param {ObjectCallback} callback - Called on each iteration.\r\n   * @param {Object|*} [object = {}] - Object that is passed to the callback.\r\n   * @returns {DWrap} Wrap of the new object.\r\n   * @description Type of {@link Super#reduce}.\r\n   * The object is passed as an argument into the callback. The output is this object.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2 }).object((object, value, key) => {\r\n   *   object[key] = value;\r\n   *   object[key + key] = value * 2;\r\n   * }).$; // { a: 1, aa: 2, b: 2, bb: 4 }\r\n   */\r\n  object(callback, object = {}) {\r\n    validate([callback], ['function'], 'Super#object');\r\n\r\n    iterate(this.$, (value, key, obj) => {\r\n      callback(object, value, key, obj);\r\n    });\r\n\r\n    return D(object);\r\n  }\r\n\r\n  /**\r\n   * @method Super#prop\r\n   * @public\r\n   * @param {String|Object.<String, *>} property - Either a string of a property or an assigned object.\r\n   * @param {*} [value] - If a property parameter is a string\r\n   * this has to be an assigned value if it's present.\r\n   * @returns {DWrap|*} Returns this if it's a setter or a value if getter.\r\n   * @description Method for getting and setting properties.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).prop('a');              // 1\r\n   * new Super({ a: 1, b: 2, c: 3 }).prop('a', 7).$;         // { a: 7, b: 2, c: 3 }\r\n   * new Super({ a: 1, b: 2, c: 3 }).prop({ a: 7, b: 8 }).$; // { a: 7, b: 8, c: 3 }\r\n   */\r\n  prop(property, value) {\r\n    if (arguments.length <= 1 && isString(property)) {\r\n      return this.$ ? this.$[property] : undefined;\r\n    }\r\n\r\n    if (arguments.length >= 2) {\r\n      property = { [property]: value };\r\n    }\r\n\r\n    return this.assign(property);\r\n  }\r\n\r\n  /**\r\n   * @method Super#propertyDescriptor\r\n   * @public\r\n   * @param {String} property - Property of the object.\r\n   * @returns {Object|undefined} Property descriptor.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor\r\n   * @descriptor Synonym for\r\n   * [Object.getOwnPropertyDescriptor]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor}.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1 }).propertyDescriptor('a');\r\n   * // {\r\n   * //   value: 1,\r\n   * //   enumerable: true,\r\n   * //   writable: true,\r\n   * //   configurable: true\r\n   * // }\r\n   */\r\n  propertyDescriptor(property) {\r\n    const object = this.$;\r\n\r\n    return isObject(object) ? Object.getOwnPropertyDescriptor(object, property) : undefined;\r\n  }\r\n\r\n  /**\r\n   * @method Super#propertyNames\r\n   * @public\r\n   * @returns {DWrap} D-Wrap of the names array.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\r\n   * @descriptor Synonym for\r\n   * [Object.getOwnPropertyNames]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames}.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2 }).define('c', { value: 3 }).$; // ['a', 'b', 'c']\r\n   */\r\n  propertyNames() {\r\n    const object = this.$;\r\n\r\n    return D(isObject(object) ? Object.getOwnPropertyNames(object) : []);\r\n  }\r\n\r\n  /**\r\n   * @method Super#propertySymbols\r\n   * @public\r\n   * @returns {DWrap} D-Wrap of the names array.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols\r\n   * @descriptor Synonym for\r\n   * [Object.getOwnPropertySymbols]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols}.\r\n   *\r\n   * @example\r\n   * new Super({ [Symbol('foo')]: 1 }).define(Symbol('bar'), { value: 2 }).$; // [Symbol('foo'), Symbol('bar')]\r\n   */\r\n  propertySymbols() {\r\n    const object = this.$;\r\n\r\n    return D(isObject(object) ? Object.getOwnPropertySymbols(object) : []);\r\n  }\r\n\r\n  /**\r\n   * @method Super#proto\r\n   * @public\r\n   * @param {*} [proto] - If it's present it's set as a prototype to the object.\r\n   * @returns {DWrap|*} In getter mode returns prototype and in setter mode returns this.\r\n   * @description Synonym for both\r\n   * [Object.getPrototypeOf]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf}\r\n   * and\r\n   * [Object.setPrototypeOf]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf}.\r\n   */\r\n  proto(proto) {\r\n    const object = this.$;\r\n\r\n    if (arguments.length) {\r\n      if (isObject(object)) {\r\n        Object.setPrototypeOf(object, proto);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    return isObject(object) ? Object.getPrototypeOf(object) : undefined;\r\n  }\r\n\r\n  /**\r\n   * @method Super#reduce\r\n   * @public\r\n   * @param {ReduceCallback} callback - Called on each iteration.\r\n   * Return value is passed to the next callback call.\r\n   * @param {*} [IV = <first value>|undefined] - Initial value.\r\n   * @returns {*} Modified IV.\r\n   * @description Returns modified IV. If the second argument is not present first value in the object is taken\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).reduce((sum, value) => sum + value * value, 0); // 14\r\n   */\r\n  reduce(callback, IV) {\r\n    validate([callback], ['function'], 'Super#reduce');\r\n\r\n    const object = this.$;\r\n\r\n    let startKey;\r\n\r\n    if (arguments.length === 1) {\r\n      iterate(object, (value, key) => {\r\n        startKey = key;\r\n        IV = value;\r\n\r\n        return true;\r\n      });\r\n    }\r\n\r\n    iterate(object, (value, key) => {\r\n      if (key !== startKey) {\r\n        IV = callback(IV, value, key, object);\r\n      }\r\n    });\r\n\r\n    return IV;\r\n  }\r\n\r\n  /**\r\n   * @method Super#set\r\n   * @public\r\n   * @param {String|Object.<String, Function>} property - Either a string of a property or a setters object.\r\n   * @param {Function} [setter] - If a property parameter is a string this has to be a setter function.\r\n   * @returns {DWrap} Returns this.\r\n   * @description Method for defining setters.\r\n   *\r\n   * @example\r\n   * const object = new Super({})\r\n   *   .get('public', function () {\r\n   *     return this._private;\r\n   *   })\r\n   *   .set('public', function (value) {\r\n   *     if (typeof value === 'number') {\r\n   *       this._private = value;\r\n   *     }\r\n   *   });\r\n   * object.prop('public', '1').$; // { public: undefined }\r\n   * object.prop('public', 1).$;   // { public: 1, _private: 1 }\r\n   *\r\n   * new Super({}).set({\r\n   *   public(value) {\r\n   *     if (typeof value === 'number') {\r\n   *       this._private = value;\r\n   *     }\r\n   *   }\r\n   * });\r\n   */\r\n  set(property, setter) {\r\n    if (arguments.length >= 2) {\r\n      property = { [property]: setter };\r\n    }\r\n\r\n    const object = this.$;\r\n\r\n    iterate(isObject(object) && new Super(property).$, (setter, property) => {\r\n      Object.defineProperty(object, property, { set: setter });\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Super#some\r\n   * @public\r\n   * @param {IterationCallback} [callback = Boolean] - Called on each iteration.\r\n   * If returns truthy iteration stops and if falsey it continues.\r\n   * @returns {Boolean} If all the callback calls returned truthy value.\r\n   * @description Returns true if some of the callback calls returned truthy value. Otherwise false.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).some((value) => value > 4); // false\r\n   * new Super({}).some(() => true);                             // false\r\n   */\r\n  some(callback = Boolean) {\r\n    validate([callback], ['function'], 'Super#some');\r\n\r\n    return iterate(this.$, (value, key, object) => {\r\n      if (callback(value, key, object)) {\r\n        return true;\r\n      }\r\n    }) || false;\r\n  }\r\n\r\n  /**\r\n   * @method Super#strictEquals\r\n   * @public\r\n   * @param {*} [object] - Object to compare.\r\n   * @returns {Boolean} If the objects are equal or not.\r\n   * @description Returns true if objects are equal using '===' operator and false if not.\r\n   * NaNs are considered to be strict equal.\r\n   *\r\n   * @example\r\n   * new Super(3).strictEquals('3');   // false\r\n   * new Super(NaN).strictEquals(NaN); // true\r\n   */\r\n  strictEquals(object) {\r\n    const o = this.$;\r\n\r\n    object = new Super(object).$;\r\n\r\n    return o === object || (isNaN(o) && isNaN(object));\r\n  }\r\n\r\n  /**\r\n   * @method Super#sum\r\n   * @public\r\n   * @param {IterationCallback} [callback = null] - Called on each iteration.\r\n   * @returns {Number} Sum.\r\n   * @description Type of {@link Super#reduce}.\r\n   * If the callback is present it's used for summing. If not the value is used.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).sum();                         // 6\r\n   * new Super({ a: 1, b: 2, c: 3 }).sum((value) => value * value); // 14\r\n   */\r\n  sum(callback = null) {\r\n    validate([callback], ['function||!'], 'Super#sum');\r\n\r\n    return this.reduce((sum, value, key, object) => (\r\n      sum + Number(callback ? callback(value, key, object) : value)\r\n    ), 0);\r\n  }\r\n\r\n  toJSON() {\r\n    return this.$;\r\n  }\r\n\r\n  /**\r\n   * @member Super#toStringTag\r\n   * @type {String}\r\n   * @public\r\n   * @readonly\r\n   * @description Returns toString tag of the object.\r\n   *\r\n   * @example\r\n   * new Super({}).toStringTag; // 'Object'\r\n   * new Super([]).toStringTag; // 'Array'\r\n   * new Super(1).toStringTag;  // 'Number'\r\n   */\r\n  get toStringTag() {\r\n    return toStringTag(this.$);\r\n  }\r\n\r\n  /**\r\n   * @member Super#type\r\n   * @type {String}\r\n   * @public\r\n   * @readonly\r\n   * @description Synonym for\r\n   * [\"typeof\" operator]{@link https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/instanceof}..\r\n   *\r\n   * @example\r\n   * new Super({}).type;   // 'object'\r\n   * new Super(1).type;    // 'number'\r\n   * new Super('1').type;  // 'string'\r\n   * new Super(true).type; // 'boolean'\r\n   */\r\n  get type() {\r\n    return typeof this.$;\r\n  }\r\n\r\n  /**\r\n   * @method Super#value\r\n   * @public\r\n   * @param {String|Object.<String, *>} property - Either a string of a property or a values object.\r\n   * @param {Object.<String, *>} [value] - If a property parameter is a string this has to be a value to be set.\r\n   * @returns {DWrap} Returns this.\r\n   * @description Method for defining non-enumerable, non-writable, non-configurable values.\r\n   * Synonym for object.define(property, { value: value }).\r\n   *\r\n   * @example\r\n   * new Super({}).value('a', 1).$; // { a: 1 }\r\n   * new Super({}).value({\r\n   *   a: 1\r\n   * }).$;                          // { a: 1 }\r\n   */\r\n  value(property, value) {\r\n    if (arguments.length >= 2) {\r\n      property = { [property]: value };\r\n    }\r\n\r\n    const object = this.$;\r\n\r\n    iterate(isObject(object) && new Super(property).$, (value, property) => {\r\n      Object.defineProperty(object, property, { value });\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Super#values\r\n   * @public\r\n   * @returns {DWrap} A wrap of the values array.\r\n   * @description Returns D-Wrap of the values array.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).values().$; // [1, 2, 3]\r\n   * new Super(null).values().$;                 // []\r\n   */\r\n  values() {\r\n    const array = [];\r\n\r\n    iterate(this.$, (value) => {\r\n      array.push(value);\r\n    });\r\n\r\n    return D(array);\r\n  }\r\n\r\n  /**\r\n   * @method Super#word\r\n   * @public\r\n   * @param {IterationCallback} callback - Called on each iteration.\r\n   * @returns {String} Concatenated string.\r\n   * @description Type of {@link Super#reduce}.\r\n   * If the callback is present it's used for concatenating. If not the value is used.\r\n   *\r\n   * @example\r\n   * new Super({ a: 1, b: 2, c: 3 }).word();                         // '123'\r\n   * new Super({ a: 1, b: 2, c: 3 }).word((value) => value + value); // '112233'\r\n   */\r\n  word(callback = null) {\r\n    validate([callback], ['function||!'], 'Super#word');\r\n\r\n    return this.reduce((word, value, key, object) => (\r\n      word + String(callback ? callback(value, key, object) : value)\r\n    ), '');\r\n  }\r\n}\r\n\r\ndefineProperties(Super.prototype, {\r\n  [Symbol.toStringTag]: 'Super'\r\n});\r\n\r\n/**\r\n * @function deepAssign\r\n * @private\r\n * @param {*} target - Object to assign properties to.\r\n * @param {*} object - Object to assign properties from.\r\n * @returns {void}\r\n */\r\nfunction deepAssign(target, object) {\r\n  iterate(object, (value, key) => {\r\n    if (isPrimitive(value)) {\r\n      target[key] = value;\r\n\r\n      return;\r\n    }\r\n\r\n    const hasProperty = {}.hasOwnProperty.call(target, key);\r\n\r\n    if (isPrimitive(target[key]) || !hasProperty) {\r\n      target[key] = deepClone(value);\r\n\r\n      return;\r\n    }\r\n\r\n    deepAssign(target[key], value);\r\n  });\r\n}\r\n\r\n/**\r\n * @function deepClone\r\n * @private\r\n * @param {*} object - Object to clone.\r\n * @description Does the deep cloning.\r\n */\r\nfunction deepClone(object) {\r\n  const clone = cloneSwitcher(object, [object, true]);\r\n\r\n  if (clone !== object) {\r\n    iterate(object, (value, key) => {\r\n      clone[key] = deepClone(value);\r\n    });\r\n  }\r\n\r\n  return clone;\r\n}\r\n\r\n/**\r\n * @function deepEqual\r\n * @private\r\n * @param {*} o1 - First object to compare.\r\n * @param {*} o2 - Second object to compare.\r\n * @param {Boolean} strict - If comparison should be strict or not.\r\n * @returns {Boolean} - If the object are deep equal or not.\r\n */\r\nfunction deepEqual(o1, o2, strict) {\r\n  o1 = new Super(o1).$;\r\n  o2 = new Super(o2).$;\r\n\r\n  if (o1 === o2) {\r\n    return true;\r\n  }\r\n\r\n  if (isNaN(o1) && isNaN(o2) && isPrimitive(o1) && isPrimitive(o2)) {\r\n    return true;\r\n  }\r\n\r\n  if (isNaN(o1) || isNaN(o2)) {\r\n    return false;\r\n  }\r\n\r\n  if (isPrimitive(o1) || isPrimitive(o2)) {\r\n    return strict ? o1 === o2 : o1 == o2;\r\n  }\r\n\r\n  if (isDate(o1) && isDate(o2)) {\r\n    return o1.getTime() === o2.getTime();\r\n  }\r\n\r\n  if (isDate(o1) || isDate(o2)) {\r\n    return false;\r\n  }\r\n\r\n  if (isRegExp(o1) && isRegExp(o2)) {\r\n    return o1.source === o2.source &&\r\n      o1.global === o2.global &&\r\n      o1.ignoreCase === o2.ignoreCase &&\r\n      o1.multiline === o2.multiline &&\r\n      o1.sticky === o2.sticky &&\r\n      o1.unicode === o2.unicode &&\r\n      o1.lastIndex === o2.lastIndex;\r\n  }\r\n\r\n  if (isRegExp(o1) || isRegExp(o2)) {\r\n    return false;\r\n  }\r\n\r\n  if ((!isPlainObject(o1) && !isArray(o1)) || (!isPlainObject(o2) && !isArray(o2))) {\r\n    return false;\r\n  }\r\n\r\n  const p1 = Object.getPrototypeOf(o1);\r\n  const p2 = Object.getPrototypeOf(o1);\r\n\r\n  if (Object.keys(o1).length !== Object.keys(o2).length) {\r\n    return false;\r\n  }\r\n\r\n  if (p1 && p2 && (toStringTag(p1.constructor) !== toStringTag(p2.constructor))) {\r\n    return false;\r\n  }\r\n\r\n  return iterate(o1, (value, key) => {\r\n    if (!(key in o2) || !deepEqual(value, o2[key], strict)) {\r\n      return false;\r\n    }\r\n  }) !== false;\r\n}\r\n\r\n/**\r\n * @function deepEvery\r\n * @private\r\n * @param {*} object - Object to iterate over.\r\n * @param {DeepIterationCallback} callback - Callback that is called on every element.\r\n * If returns truthy the iteration goes on and if not it stops.\r\n * @param {Number} n - Depth of iteration.\r\n * @param {Tree} tree - Tree of { key, value } objects of iteration.\r\n * @returns {Boolean} - If all the callback calls returned truthy value.\r\n */\r\nfunction deepEvery(object, callback, n, tree) {\r\n  object = new Super(object).$;\r\n\r\n  const end = n === 1;\r\n\r\n  return iterate(object, (value, key, object) => {\r\n    const newTree = [{ key, value }].concat(tree);\r\n\r\n    if (\r\n      end || isPrimitive(value)\r\n        ? !callback(value, key, object, newTree)\r\n        : !deepEvery(value, callback, n - 1, newTree)\r\n    ) {\r\n      return false;\r\n    }\r\n  }) !== false;\r\n}\r\n\r\n/**\r\n * @function deepFilter\r\n * @private\r\n * @param {*} object - Object to iterate over.\r\n * @param {DeepIterationCallback} callback - Callback that is called on every element.\r\n * If returns truthy the element is included in the output and if not it's excluded.\r\n * @param {Number} n - Depth of iteration.\r\n * @param {Tree} tree - Tree of { key, value } objects of iteration.\r\n * @returns {*} Filtered object.\r\n */\r\nfunction deepFilter(object, callback, n, tree) {\r\n  object = new Super(object).$;\r\n\r\n  const array = isArrayLike(object);\r\n  const nul = isNullOrUndefined(object);\r\n  const o = array ? [] : nul ? object : {};\r\n  const end = n === 1;\r\n\r\n  iterate(object, (value, key, object) => {\r\n    const newTree = [{ key, value }].concat(tree);\r\n\r\n    if ((end || isPrimitive(value)) && callback(value, key, object, newTree)) {\r\n      if (array) {\r\n        o.push(value);\r\n      } else {\r\n        o[key] = value;\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (!end) {\r\n      const filtered = deepFilter(value, callback, n - 1, newTree);\r\n\r\n      if (filtered) {\r\n        if (array) {\r\n          o.push(filtered);\r\n        } else {\r\n          o[key] = filtered;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  if (array) {\r\n    return o.length ? o : undefined;\r\n  }\r\n\r\n  if (!nul) {\r\n    return Object.keys(o).length ? o : undefined;\r\n  }\r\n\r\n  return o;\r\n}\r\n\r\n/**\r\n * @function deepFind\r\n * @private\r\n * @param {*} object - Object to iterate over.\r\n * @param {DeepIterationCallback} callback - Callback that is called on every element.\r\n * If returns truthy the iteration stops and if not it continues.\r\n * @param {Number} n - Depth of iteration.\r\n * @param {Tree} tree - Tree of { key, value } objects of iteration.\r\n * @returns {Tree|null} - If found the whole tree is returned and if not it's null what's returned.\r\n */\r\nfunction deepFind(object, callback, n, tree) {\r\n  object = new Super(object).$;\r\n\r\n  const end = n === 1;\r\n\r\n  return iterate(object, (value, key, object) => {\r\n    const newTree = [{ key, value }].concat(tree);\r\n\r\n    if (end || isPrimitive(value)) {\r\n      if (callback(value, key, object, newTree)) {\r\n        return newTree;\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    const result = deepFind(value, callback, n - 1, newTree);\r\n\r\n    if (result) {\r\n      return result;\r\n    }\r\n  }) || null;\r\n}\r\n\r\n/**\r\n * @function deepFreeze\r\n * @private\r\n * @param {*} object - Object to freeze.\r\n * @returns {void}\r\n */\r\nfunction deepFreeze(object) {\r\n  Object.freeze(object);\r\n  iterate(object, deepFreeze);\r\n}\r\n\r\n/**\r\n * @function deepForEach\r\n * @private\r\n * @param {*} object - Object to iterate over.\r\n * @param {DeepIterationCallback} callback - Callback that is called on every element.\r\n * @param {Number} n - Depth of iteration.\r\n * @param {Tree} tree - Tree of { key, value } objects of iteration.\r\n * @returns {void}\r\n */\r\nfunction deepForEach(object, callback, n, tree) {\r\n  object = new Super(object).$;\r\n\r\n  const end = n === 1;\r\n\r\n  iterate(object, (value, key, object) => {\r\n    const newTree = [{ key, value }].concat(tree);\r\n\r\n    if (end || isPrimitive(value)) {\r\n      callback(value, key, object, newTree);\r\n    } else {\r\n      deepForEach(value, callback, n - 1, newTree);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * @function deepMap\r\n * @private\r\n * @param {*} object - Object to iterate over.\r\n * @param {DeepIterationCallback} callback - Callback that is called on every element.\r\n * Returned value is used to create to new object.\r\n * @param {Number} n - Depth of iteration.\r\n * @param {Tree} tree - Tree of { key, value } objects of iteration.\r\n * @returns {*} New object.\r\n */\r\nfunction deepMap(object, callback, n, tree) {\r\n  object = new Super(object).$;\r\n\r\n  const o = isArrayLike(object) ? [] : isNullOrUndefined(object) ? object : {};\r\n  const end = n === 1;\r\n\r\n  iterate(object, (value, key, object) => {\r\n    const newTree = [{ key, value }].concat(tree);\r\n\r\n    o[key] = end || isPrimitive(value)\r\n      ? callback(value, key, object, newTree)\r\n      : deepMap(value, callback, n - 1, newTree);\r\n  });\r\n\r\n  return o;\r\n}\r\n\r\n/**\r\n * @function deepReduce\r\n * @private\r\n * @param {*} object - Object to iterate over.\r\n * @param {DeepReduceCallback} callback - Callback that is called on every element.\r\n * Returned value is used to create to new object.\r\n * @param {Number} n - Depth of iteration.\r\n * @param {Boolean} start - If callback was called already or not.\r\n * @param {{ IV: * }|undefined} IV - If callback was called already or not.\r\n * @param {Tree} tree - Tree of { key, value } objects of iteration.\r\n * @returns {{ IV: * }} Transformed IV.\r\n */\r\nfunction deepReduce(object, callback, n, start, IV, tree) {\r\n  object = new Super(object).$;\r\n\r\n  const end = n === 1;\r\n\r\n  iterate(object, (value, key, object) => {\r\n    if (!IV && (end || isPrimitive(value)) && !start) {\r\n      IV = { IV: value };\r\n      start = true;\r\n\r\n      return;\r\n    }\r\n\r\n    const newTree = [{ key, value }].concat(tree);\r\n\r\n    IV = end || isPrimitive(value)\r\n      ? { IV: callback(IV.IV, value, key, object, newTree) }\r\n      : deepReduce(value, callback, n - 1, start, IV, newTree);\r\n  });\r\n\r\n  return IV;\r\n}\r\n\r\n/**\r\n * @function deepSome\r\n * @private\r\n * @param {*} object - Object to iterate over.\r\n * @param {DeepIterationCallback} callback - Callback that is called on every element.\r\n * If returns truthy the iteration stops and if not it continues.\r\n * @param {Number} n - Depth of iteration.\r\n * @param {Tree} tree - Tree of { key, value } objects of iteration.\r\n * @returns {Boolean} - If some of the callback calls returned truthy value.\r\n */\r\nfunction deepSome(object, callback, n, tree) {\r\n  object = new Super(object).$;\r\n\r\n  const end = n === 1;\r\n\r\n  return iterate(object, (value, key, object) => {\r\n    const newTree = [{ key, value }].concat(tree);\r\n\r\n    if (\r\n      end || isPrimitive(value)\r\n        ? callback(value, key, object, newTree)\r\n        : deepSome(value, callback, n - 1, newTree)\r\n    ) {\r\n      return true;\r\n    }\r\n  }) || false;\r\n}\r\n\r\nconstructors[0].push({\r\n  check: () => true,\r\n  cls: Super\r\n});\r\n\r\nexport default Super;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Super.js\n **/","/**\r\n * @module Switcher\r\n * @private\r\n * @mixin\r\n * @description Exports Switcher class.\r\n */\r\n\r\nimport {\r\n  isArray, isFunction, isString, isUndefined,\r\n  iterate, Symbol, toArray, defineProperties\r\n} from './helpers';\r\n\r\n/**\r\n * @typedef {'boolean'|'equals'|'strictEquals'|'call'} SwitcherMode\r\n * @public\r\n * @description Enum type of switcher modes.\r\n */\r\n\r\n/**\r\n * @callback SwitcherCallCallback\r\n * @public\r\n * @param {*} value - Switcher value.\r\n * @returns {Boolean|*} On what the callback returns depends if the case is a match (truthy for the match).\r\n */\r\n\r\n/**\r\n * @callback SwitcherMatchCallback\r\n * @public\r\n * @param {...*} args - Arguments from the second argument that switcher was called with.\r\n * @param {*} value - Switcher value.\r\n * @param {*} matched - Switcher matched case.\r\n */\r\n\r\n/**\r\n * @class Switcher\r\n * @public\r\n * @param {Object} [cases = {}] - Object of cases.\r\n * @param {SwitcherMode} [mode = 'equals'] - Switcher mode.\r\n * @param {*} [defaultValue] - Switcher default value.\r\n * @returns {Switcher} - Instance of Switcher.\r\n * @description Switcher class for creating functions working similar to switch (value) {} construction,\r\n * but with the value assignment. Switcher instance is a function that accepts a value argument and an optional\r\n * args argument. Args with additional switcher value and matched case\r\n * are passed into the function of the matched case (if it is a function).\r\n *\r\n * @example\r\n * const switcher = new Switcher();\r\n * const switcher = new Switcher({\r\n *   case1: 'value1',\r\n *   case2: 'value2'\r\n * });\r\n * const switcher = new Switcher('strictEquals');\r\n * const switcher = new Switcher({\r\n *   case1: 'value1',\r\n *   case2: 'value2'\r\n * }, 'strictEquals');\r\n * const switcher = new Switcher('strictEquals', 'defaultValue');\r\n * const switcher = new Switcher({\r\n *   case1: 'value1',\r\n *   case2: 'value2'\r\n * }, 'strictEquals', 'defaultValue');\r\n *\r\n * // See [switcher]{@link switcher} examples for more information.\r\n */\r\nexport class Switcher extends Function {\r\n  constructor(cases = {}, mode = 'equals', defaultValue) {\r\n    super();\r\n\r\n    if (isString(cases)) {\r\n      if (!isUndefined(arguments[1])) {\r\n        defaultValue = mode;\r\n      }\r\n\r\n      mode = cases;\r\n      cases = {};\r\n    }\r\n\r\n    const eventualCases = [];\r\n\r\n    iterate(cases, (value, Case) => {\r\n      eventualCases.push({ case: Case, value });\r\n    });\r\n\r\n    function switcher(value, args = []) {\r\n      const { mode, default: def, cases } = switcher.$$;\r\n\r\n      let ret = iterate(cases, ({ value: val, case: Case }) => {\r\n        if (\r\n          (mode === 'boolean' && Case) ||\r\n          /* eslint eqeqeq: 0 */\r\n          (mode === 'equals' && Case == value) ||\r\n          (mode === 'strictEquals' && Case === value) ||\r\n          (mode === 'call' && Case(value))\r\n        ) {\r\n          return { case: Case, value: val };\r\n        }\r\n      });\r\n\r\n      if (isUndefined(ret)) {\r\n        ret = { value: def };\r\n      }\r\n\r\n      if (!isFunction(ret.value)) {\r\n        return ret.value;\r\n      }\r\n\r\n      args = toArray(args, true);\r\n      args.push(value, ret.case);\r\n\r\n      return ret.value.apply(null, args);\r\n    }\r\n\r\n    /**\r\n     * @member Switcher#$$\r\n     * @type {Object}\r\n     * @protected\r\n     * @property {Array} cases - Array of cases.\r\n     * @property {SwitcherMode} mode - Switcher mode.\r\n     * @property {*} default - Switcher default value.\r\n     * @description Config parameters.\r\n     */\r\n    Object.defineProperty(switcher, '$$', {\r\n      value: {\r\n        cases: eventualCases,\r\n        mode,\r\n        default: defaultValue\r\n      }\r\n    });\r\n    Object.setPrototypeOf(switcher, Switcher.prototype);\r\n\r\n    return switcher;\r\n  }\r\n\r\n  /**\r\n   * @method Switcher#case\r\n   * @public\r\n   * @param {*|SwitcherCallCallback|Array.<*|SwitcherCallCallback>} cases - Case or an array of cases.\r\n   * @param {*|SwitcherMatchCallback} value - Value that has to be assigned or a function\r\n   * that is called with switcher value, if it's the case.\r\n   * @returns {Switcher} Returns this.\r\n   * @description Method for defining new cases.\r\n   *\r\n   * @example\r\n   * const sw = new Switcher()\r\n   *   .case(1, 'one')\r\n   *   .case(2, 'two');\r\n   *\r\n   * sw(1); // 'one'\r\n   * sw(2); // 'two'\r\n   */\r\n  case(cases, value) {\r\n    if (!isArray(cases)) {\r\n      cases = [cases];\r\n    }\r\n\r\n    iterate(cases, (Case) => {\r\n      this.$$.cases.push({ case: Case, value });\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Switcher#default\r\n   * @public\r\n   * @param {*} def - New default value.\r\n   * @returns {Switcher} Returns this.\r\n   * @description Method for redefining default switcher value.\r\n   *\r\n   * @example\r\n   * const sw = new Switcher()\r\n   *   .case(1, 'one')\r\n   *   .default('three');\r\n   *\r\n   * sw(1); // 'one'\r\n   * sw(2); // 'three'\r\n   */\r\n  default(def) {\r\n    this.$$.default = def;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Switcher#mode\r\n   * @public\r\n   * @param {SwitcherMode} mode - New switcher mode.\r\n   * @returns {Switcher} Returns this.\r\n   * @description Method for redefining switcher mode.\r\n   *\r\n   * @example\r\n   * const sw = new Switcher()\r\n   *   .mode('strictEquals')\r\n   *   .case(1, 'number')\r\n   *   .case('1', 'string');\r\n   *\r\n   * sw(1);   // 'number'\r\n   * sw('1'); // 'string'\r\n   */\r\n  mode(mode) {\r\n    this.$$.mode = mode;\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\ndefineProperties(Switcher.prototype, {\r\n  [Symbol.toStringTag]: 'Switcher'\r\n});\r\n\r\n/**\r\n * @function switcher\r\n * @public\r\n * @param {Object} [cases = {}] - Object of cases.\r\n * @param {SwitcherMode} [mode = 'equals'] - Switcher mode.\r\n * @param {*} [defaultValue] - Switcher default value.\r\n * @returns {Switcher} New instance of Switcher.\r\n * @description Simple wrap of [new Switcher(...)]{@link Switcher}.\r\n * \r\n * @example\r\n * const sw = switcher({\r\n *   1: 'foo',\r\n *   2: 'bar'\r\n * });\r\n * sw(1); // 'foo'\r\n * sw(2); // 'bar'\r\n * sw(3); // undefined\r\n * \r\n * @example\r\n * const sw = switcher()\r\n *   .case([1, 2], 'foo')\r\n *   .case(3, 'bar');\r\n *   \r\n * sw(1); // 'foo'\r\n * sw(2); // 'foo'\r\n * sw(3); // 'bar'\r\n * \r\n * @example\r\n * const sw = switcher('call')\r\n *   .case(isArray, 'array')\r\n *   .case(isString, 'string')\r\n *   .case(isNumber, 'number')\r\n *   .default('rest');\r\n *   \r\n * sw([]);    // 'array'\r\n * sw('foo'); // 'string'\r\n * sw(123);   // 'number'\r\n * sw({});    // 'rest'\r\n * \r\n * @example\r\n * const sw = switcher({\r\n *   1: (value) => {\r\n *     console.log(value + 1);\r\n *   },\r\n *   2: () => {\r\n *     console.log(value - 1);\r\n *   }\r\n * });\r\n * \r\n * sw(1); // 2\r\n * sw(2); // 1\r\n * \r\n * @example\r\n * const sw = switcher({\r\n *   first: (array) => array[0],\r\n *   last: (array) => array[array.length - 1]\r\n * }, 'equals', (array, index) => array[index]);\r\n * const array = [1, 2, 3, 4];\r\n * \r\n * sw('first', [array]); // 1\r\n * sw('last', [array]);  // 4\r\n * sw(1, [array]);       // 2\r\n * sw(2, [array]);       // 3\r\n */\r\nexport function switcher(cases, mode, defaultValue) {\r\n  return new Switcher(...arguments);\r\n}\r\n\r\n/**\r\n * @function when\r\n * @public\r\n * @param {Boolean|*} condition - Condition used for returning the proper value.\r\n * @param {*} value1 - Value if the condition is truthy.\r\n * @param {*} value2 - Value if the condition is falsey.\r\n * @returns {*} value1 or value2.\r\n * @description Synonym for\r\n * [ternary operator]{@link https://developer.mozilla.org/nl/docs/Web/JavaScript/Reference/Operators/Conditional_Operator}.\r\n * \r\n * @example\r\n * when(true, 'true', 'false'); // 'true'\r\n */\r\nexport function when(condition, value1, value2) {\r\n  return condition ? value1 : value2;\r\n}\r\n\r\nexport default Switcher;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Switcher.js\n **/","/**\r\n * @module BlobObject\r\n * @private\r\n * @mixin\r\n * @description Exports BlobObject class.\r\n */\r\n\r\nimport Super from './Super';\r\nimport Promise from './Promise';\r\nimport constructors from './constants/constructors';\r\nimport {\r\n  isArray, isFunction,\r\n  toStringTag, Symbol, defineProperties\r\n} from './helpers';\r\n\r\n/**\r\n * @typedef {{ buffer: String, binary: String, dataURL: String, text: String }} methods\r\n * @private\r\n * @description List of read blob methods.\r\n */\r\nconst methods = {\r\n  buffer: 'ArrayBuffer',\r\n  binary: 'BinaryString',\r\n  dataURL: 'DataURL',\r\n  text: 'Text'\r\n};\r\nconst URL = global.URL;\r\n\r\n/**\r\n * @typedef {('buffer'|'binary'|'dataURL'|'text')} ReadBlobMethod\r\n * @public\r\n * @description Enum type of read blob methods.\r\n */\r\n\r\n/**\r\n * @typedef {ArrayBuffer|ArrayBufferView|Blob|String} BlobParts\r\n * @public\r\n * @description Allowed blob parts.\r\n */\r\n\r\n/**\r\n * @callback ReaderEventListener\r\n * @public\r\n * @param {Event} e - Fired event.\r\n * @param {FileReader} reader - FileReader.\r\n */\r\n\r\n/**\r\n * @class BlobObject\r\n * @extends Super\r\n * @public\r\n * @param {Blob} blob - Blob to wrap.\r\n * @returns {BlobObject} Instance of BlobObject.\r\n * @description Wrap of a blob.\r\n *\r\n * @example\r\n * new BlobObject(new Blob(['{\"foo\":\"bar\"}'], { type: 'application/json' }));\r\n */\r\nexport class BlobObject extends Super {\r\n  /**\r\n   * @member BlobObject#$\r\n   * @type {Blob}\r\n   * @public\r\n   * @description Original Blob.\r\n   */\r\n\r\n  /**\r\n   * @member {String} BlobObject#dataURL\r\n   * @type {String}\r\n   * @public\r\n   * @readonly\r\n   * @description Returns dataURL representation of the blob.\r\n   */\r\n  get dataURL() {\r\n    return URL.createObjectURL(this.$);\r\n  }\r\n\r\n  /**\r\n   * @method BlobObject#readAs\r\n   * @public\r\n   * @param {ReadBlobMethod} method - Method that is used for reading from blob.\r\n   * @param {ReaderEventListener} [progress] - Progress listener.\r\n   * @returns {Promise} Promise that could be aborted.\r\n   * @description Method for reading from blobs.\r\n   *\r\n   * @example\r\n   * new BlobObject(new Blob(['{\"foo\":\"bar\"}'], { type: 'application/json' }))\r\n   *   .readAs('text')\r\n   *   .then((value) => {\r\n   *     console.log(value); // '{\"foo\":\"bar\"}'\r\n   *   });\r\n   */\r\n  readAs(method, progress) {\r\n    if (!methods[method]) {\r\n      throw new Error('1st argument must be one of following values: buffer, binary, dataURL, text');\r\n    }\r\n\r\n    let reader = new FileReader();\r\n    let toReject;\r\n\r\n    if (isFunction(progress)) {\r\n      reader.onprogress = function (e) {\r\n        progress(e, this);\r\n      };\r\n    }\r\n\r\n    const promise = new Promise((resolve, reject) => {\r\n      toReject = reject;\r\n\r\n      reader.onerror = ({ target }) => {\r\n        if (reader) {\r\n          reject(target.error);\r\n        }\r\n      };\r\n\r\n      reader.onload = ({ target }) => {\r\n        resolve(target.result);\r\n      };\r\n\r\n      reader[`readAs${ methods[method] }`](this.$);\r\n    });\r\n\r\n    promise.abort = function abort() {\r\n      toReject(new Error('Reading was aborted'));\r\n\r\n      reader.abort();\r\n\r\n      reader = null;\r\n\r\n      return this;\r\n    };\r\n\r\n    return promise;\r\n  }\r\n\r\n  /**\r\n   * @method BlobObject#saveAs\r\n   * @public\r\n   * @param {String} [name] - Name that is used for saving file.\r\n   * @returns {BlobObject} Returns this.\r\n   * @description Method for saving blobs.\r\n   *\r\n   * @example\r\n   * new BlobObject(new Blob(['{\"foo\":\"bar\"}'], { type: 'application/json' }))\r\n   *   .saveAs('blob.json');\r\n   */\r\n  saveAs(name = 'download') {\r\n    const anchor = document.createElement('a');\r\n\r\n    anchor.href = this.dataURL;\r\n    anchor.setAttribute('download', name);\r\n    anchor.click();\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\ndefineProperties(BlobObject.prototype, {\r\n  [Symbol.toStringTag]: 'BlobObject'\r\n});\r\n\r\nconstructors[1].push({\r\n  check: (blob) => /^(Blob|File)$/.test(toStringTag(blob)),\r\n  cls: BlobObject\r\n});\r\n\r\n/**\r\n * @function blob\r\n * @public\r\n * @param {(BlobParts[]|BlobParts)} blobParts - Blob parts that are passed to\r\n * [Blob]{@link https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob} constructor.\r\n * @param {Object} [options] - Options that are passed to\r\n * [Blob]{@link https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob} constructor.\r\n * @returns {BlobObject} New instance of BlobObject.\r\n * @description Function for creating blobs not involving BlobObject and Blob constructors.\r\n */\r\nexport function blob(blobParts, options = {}) {\r\n  if (!isArray(blobParts)) {\r\n    blobParts = [blobParts];\r\n  }\r\n\r\n  return new BlobObject(new Blob(blobParts, options));\r\n}\r\n\r\nexport default BlobObject;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/BlobObject.js\n **/","/**\r\n * @module Promise\r\n * @private\r\n * @mixin\r\n * @description Exports Promise class.\r\n */\r\n\r\nimport { isFunction, defineProperties, Symbol } from './helpers';\r\n\r\nconst secret = {};\r\nconst iterator = Symbol.iterator;\r\n\r\nexport class Promise {\r\n  constructor(executor) {\r\n    if (!isFunction(executor)) {\r\n      throw new TypeError(`Promise resolver ${ {}.toString.call(executor) } is not a function`);\r\n    }\r\n\r\n    let hiddenStatus;\r\n    let hiddenValue;\r\n\r\n    const\tonFulfill = [];\r\n    const onReject = [];\r\n    const realPromise = this;\r\n    const hiddenPromise = {\r\n      handled: false,\r\n      get status() {\r\n        return hiddenStatus;\r\n      },\r\n      set status(value) {\r\n        hiddenStatus = value;\r\n        realPromise.status = value;\r\n      },\r\n      get value() {\r\n        return hiddenValue;\r\n      },\r\n      set value(val) {\r\n        hiddenValue = val;\r\n        realPromise.value = val;\r\n      }\r\n    };\r\n\r\n    hiddenPromise.status = 'pending';\r\n    hiddenPromise.value = undefined;\r\n\r\n    /**\r\n     * @typedef {Object} hiddenPromise\r\n     * @private\r\n     * @property {Boolean|Object} handled - If the promise is handled or not.\r\n     * @property {'pending'|'fulfilled'|'rejected'} status - Status of the promise.\r\n     * @property {*} value - Value of the promise.\r\n     */\r\n\r\n    /**\r\n     * @member {Function} hiddenPromise#handle\r\n     * @private\r\n     * @param {('reject'|'resolve')} event - Type of the event to handle.\r\n     * @param {Function} handler - Handler itself.\r\n     * @param {Function} resolve - Resolve function.\r\n     * @param {Function} reject - Reject function.\r\n     * @param {Object} secret - Secret.\r\n     * @description Private method for handling promises.\r\n     */\r\n\r\n    /**\r\n     * @member {hiddenPromise} Promise#$$\r\n     * @protected\r\n     */\r\n    defineProperties(this.$$ = {}, {\r\n      'get/set handled': {\r\n        get() {\r\n          return hiddenPromise.handled;\r\n        },\r\n        set(key) {\r\n          if (key === secret) {\r\n            hiddenPromise.handled = true;\r\n          }\r\n        }\r\n      },\r\n      handle(status, f, resolve, reject, key) {\r\n        if (key === secret) {\r\n          const proxy = isFunction(f) ? (value) => {\r\n            try {\r\n              resolve(f(value));\r\n            } catch (err) {\r\n              return reject(err);\r\n            }\r\n          } : null;\r\n\r\n          if (status === 'resolve') {\r\n            onFulfill.push(proxy || ((value) => resolve(value)));\r\n          } else if (status === 'reject') {\r\n            onReject.push(proxy || ((err) => reject(err)));\r\n          }\r\n        }\r\n      },\r\n      'get status'() {\r\n        return hiddenPromise.status;\r\n      },\r\n      'get value'() {\r\n        return hiddenPromise.value;\r\n      }\r\n    });\r\n\r\n    try {\r\n      executor(resolve, reject);\r\n    } catch (err) {\r\n      reject(err);\r\n    }\r\n\r\n    function reject(err) {\r\n      if (hiddenPromise.status === 'pending') {\r\n        hiddenPromise.status = 'rejected';\r\n        hiddenPromise.value = err;\r\n\r\n        for (let i = 0, length = onReject.length; i < length; i++) {\r\n          hiddenPromise.handled = true;\r\n\r\n          onReject[i](err);\r\n        }\r\n\r\n        setTimeout(() => {\r\n          if (!hiddenPromise.handled) {\r\n            console.error('%s %o', 'Uncaught (in promise)', err);\r\n          }\r\n        }, 1);\r\n      }\r\n    }\r\n\r\n    function resolve(value) {\r\n      if (hiddenPromise.status === 'pending') {\r\n        if (value && isFunction(value.then)) {\r\n          return value.then((value) => {\r\n            resolve(value);\r\n          }, (err) => {\r\n            reject(err);\r\n          });\r\n        }\r\n\r\n        hiddenPromise.status = 'fulfilled';\r\n        hiddenPromise.value = value;\r\n\r\n        for (let i = 0, length = onFulfill.length; i < length; i++) {\r\n          hiddenPromise.handled = true;\r\n\r\n          onFulfill[i](value);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static all(iterable) {\r\n    const array = [];\r\n\r\n    let toResolve = 0;\r\n\r\n    if (iterable[iterator]) {\r\n      iterable = iterable[iterator]();\r\n\r\n      return new Promise((resolve, reject) => {\r\n        let next;\r\n        let i = 0;\r\n\r\n        while (!(next = iterable.next()).done) {\r\n          const promise = Promise.resolve(next.value);\r\n\r\n          toResolve++;\r\n\r\n          ((i) => {\r\n            promise.then((value) => {\r\n              toResolve--;\r\n              array[i] = value;\r\n\r\n              setTimeout(() => {\r\n                if (next.done && !toResolve) {\r\n                  resolve(array);\r\n                }\r\n              }, 1);\r\n            }, reject);\r\n          })(i++);\r\n        }\r\n\r\n        if (!i) {\r\n          return Promise.resolve([]);\r\n        }\r\n      });\r\n    }\r\n\r\n    const length = iterable.length;\r\n\r\n    if (!length) {\r\n      return Promise.resolve([]);\r\n    }\r\n\r\n    toResolve = length;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      for (let i = 0; i < length; i++) {\r\n        const promise = Promise.resolve(array[i]);\r\n\r\n        promise.then((value) => {\r\n          toResolve--;\r\n          array[i] = value;\r\n\r\n          if (!toResolve) {\r\n            resolve(array);\r\n          }\r\n        }, reject);\r\n      }\r\n    });\r\n  }\r\n\r\n  static race(iterable) {\r\n    const array = [];\r\n\r\n    if (iterable[iterator]) {\r\n      iterable = iterable[iterator]();\r\n\r\n      return new Promise((resolve, reject) => {\r\n        let next;\r\n\r\n        while (!(next = iterable.next()).done) {\r\n          next.value.then(resolve, reject);\r\n        }\r\n      });\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      for (let i = 0, length = array.length; i < length; i++) {\r\n        array[i].then(resolve, reject);\r\n      }\r\n    });\r\n  }\r\n\r\n  static reject(value) {\r\n    return new Promise((resolve, reject) => {\r\n      reject(value);\r\n    });\r\n  }\r\n\r\n  static resolve(value) {\r\n    if (value && isFunction(value.then)) {\r\n      return value;\r\n    }\r\n\r\n    return new Promise((resolve) => {\r\n      resolve(value);\r\n    });\r\n  }\r\n\r\n  abort() {}\r\n\r\n  catch(onRejected) {\r\n    return resolveOrReject(this.$$, null, onRejected);\r\n  }\r\n\r\n  then(onFulfilled, onRejected) {\r\n    return resolveOrReject(this.$$, onFulfilled, onRejected);\r\n  }\r\n}\r\n\r\ndefineProperties(Promise.prototype, {\r\n  [Symbol.toStringTag]: 'Promise'\r\n});\r\n\r\n/**\r\n * @function resolveOrReject\r\n * @private\r\n * @param {hiddenPromise} promise - Promise to resolve or reject.\r\n * @param {Function} [onResolved] - Resolve function.\r\n * @param {Function} [onRejected] - Reject function.\r\n * @returns {Promise} New instance of Promise.\r\n */\r\nfunction resolveOrReject(promise, onResolved, onRejected) {\r\n  if (promise.status === 'pending') {\r\n    return new Promise((resolve, reject) => {\r\n      promise.handle('reject', onRejected, resolve, reject, secret);\r\n      promise.handle('resolve', onResolved, resolve, reject, secret);\r\n    });\r\n  }\r\n\r\n  promise.handled = secret;\r\n\r\n  const { value } = promise;\r\n\r\n  let method;\r\n  let handler;\r\n\r\n  if (promise.status === 'fulfilled') {\r\n    method = 'resolve';\r\n    handler = onResolved;\r\n  } else {\r\n    method = 'reject';\r\n    handler = onRejected;\r\n  }\r\n\r\n  if (!isFunction(handler)) {\r\n    return Promise[method](value);\r\n  }\r\n\r\n  try {\r\n    return Promise.resolve(handler(value));\r\n  } catch (err) {\r\n    return Promise.reject(err);\r\n  }\r\n}\r\n\r\nexport default Promise;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Promise.js\n **/","/**\r\n * @module Dat\r\n * @private\r\n * @mixin\r\n * @description Exports Dat class.\r\n */\r\n\r\nimport Super from './Super';\r\nimport Num from './Num';\r\nimport Str from './Str';\r\nimport { switcher } from './Switcher';\r\nimport constructors from './constants/constructors';\r\nimport formats from './constants/formats';\r\nimport { isDate, iterate, Symbol, defineProperties } from './helpers';\r\n\r\n/**\r\n * @typedef {*} DateLike\r\n * @public\r\n */\r\n\r\n/**\r\n * @typedef {'c'|'s'|'m'|'h'|'d'|'w'|'M'|'y'} AddPeriod\r\n * @public\r\n */\r\n\r\n/**\r\n * @typedef {'c'|'s'|'m'|'h'|'d'|'dw'|'M'|'y'} GetPeriod\r\n * @public\r\n */\r\n\r\n/**\r\n * @typedef {'c'|'s'|'m'|'h'|'d'|'M'|'y'} OfOnePeriod\r\n * @public\r\n */\r\n\r\n/**\r\n * @typedef {'c'|'s'|'m'|'h'|'d'|'M'|'y'} SetPeriod\r\n * @public\r\n */\r\n\r\n/**\r\n * @typedef {'ccc'|'c'|'ss'|'s'|'mm'|'m'|'hh'|'h'|'dddd'|'ddd'|'dd'|'d'|'MMMM'|'MMM'|'MM'|'M'|'yyyy'|'yy'|'y'} Format\r\n * @public\r\n */\r\n\r\nconst coeffs = {\r\n  c: 1,\r\n  s: 1000,\r\n  m: 60000,\r\n  h: 3600000,\r\n  d: 86400000,\r\n  w: 604800000,\r\n  M: 2592000000,\r\n  y: 31536000000\r\n};\r\n\r\nconst getSwitcher = switcher({\r\n  c: (date, utc) => date[`${ utc }Milliseconds`](),\r\n  s: (date, utc) => date[`${ utc }Seconds`](),\r\n  m: (date, utc) => date[`${ utc }Minutes`](),\r\n  h: (date, utc) => date[`${ utc }Hours`](),\r\n  d: (date, utc) => date[`${ utc }Date`](),\r\n  dw: (date, utc) => date[`${ utc }Day`](),\r\n  M: (date, utc) => date[`${ utc }Month`]() + 1,\r\n  y: (date, utc) => date[`${ utc }FullYear`]()\r\n}, 'equals', NaN);\r\nconst setSwitcher = switcher({\r\n  c: (date, value, utc) => date[`${ utc }Milliseconds`](value),\r\n  s: (date, value, utc) => date[`${ utc }Seconds`](value),\r\n  m: (date, value, utc) => date[`${ utc }Minutes`](value),\r\n  h: (date, value, utc) => date[`${ utc }Hours`](value),\r\n  d: (date, value, utc) => date[`${ utc }Date`](value),\r\n  M: (date, value, utc) => date[`${ utc }Month`](value - 1),\r\n  y: (date, value, utc) => date[`${ utc }FullYear`](value)\r\n});\r\n\r\n/**\r\n * @class Dat\r\n * @extends Super\r\n * @public\r\n * @param {Date} [date = new Date()] - A date to wrap.\r\n * @returns {Dat} Instance of Dat.\r\n * @description Wrap of a date.\r\n *\r\n * @example\r\n * const date = new Dat(new Date());\r\n */\r\nexport class Dat extends Super {\r\n  constructor(date = new Date()) {\r\n    super(date);\r\n\r\n    /**\r\n     * @member Dat#$\r\n     * @type {Date}\r\n     * @public\r\n     * @description Original date.\r\n     */\r\n  }\r\n\r\n  /**\r\n   * @method Dat#add\r\n   * @public\r\n   * @param {AddPeriod|Object.<AddPeriod, Number>} what - What to add.\r\n   * @param {Number} [number] - Number of what to add if the first argument is a period string.\r\n   * @returns {Dat} Returns this.\r\n   * @description Method for adding amounts of time to the date. Returns new instance of Dat.\r\n   *\r\n   * @example\r\n   * new Dat(new Date('1999-12-31T23:59:59.999Z')).add('c', 2).toISOString();         // '2000-01-01T00:00:00.001Z'\r\n   * new Dat(new Date('1999-12-31T23:59:59.999Z')).add({ c: 2, d: 5 }).toISOString(); // '2000-01-06T00:00:00.001Z'\r\n   */\r\n  add(what, number) {\r\n    if (arguments.length >= 2) {\r\n      what = { [what]: number };\r\n    }\r\n\r\n    return this.time(this.time() + new Super(what).sum((value, what) => coeffs[what] * value));\r\n  }\r\n\r\n  /**\r\n   * @method Dat#expires\r\n   * @public\r\n   * @param {*} [value = this] - Value to resolve after the date expires.\r\n   * @returns {Promise} New instance of Promise.\r\n   * @description Method for defining when the date expires.\r\n   *\r\n   * @example\r\n   * new Dat().add('c', 500).expires('Expired').then((value) => {\r\n   *   // After 500 milliseconds\r\n   *   console.log(value); // 'Expired'\r\n   * });\r\n   */\r\n  expires(value) {\r\n    if (!arguments.length) {\r\n      value = this;\r\n    }\r\n\r\n    return new Num(this.$ - now()).timeout(value);\r\n  }\r\n\r\n  /**\r\n   * @method Dat#format\r\n   * @public\r\n   * @param {String} string - Template for the output.\r\n   * @param {String} [prefix = ''] - If needed [all special strings]{@link Format}\r\n   * are treated as they should be prefix with prefix.\r\n   * @returns {String} Formatted string.\r\n   * @description Method for creating formatted output based on a string.\r\n   *\r\n   * @example\r\n   * new Dat('1999-12-31T23:59:59.999Z').format('Seconds: $ss, milliseconds: $ccc.', '$');\r\n   * // 'Seconds: 59, milliseconds: 999.'\r\n   */\r\n  format(string, prefix = '') {\r\n    string = new Str(new Super(string).$);\r\n    prefix = String(new Super(prefix).$);\r\n\r\n    iterate(formats, (format) => {\r\n      string = string.replaceString(prefix + format.format, format.match(this, 'get'));\r\n    });\r\n\r\n    return string.$;\r\n  }\r\n\r\n  /**\r\n   * @method Dat#formatUTC\r\n   * @public\r\n   * @param {String} string - See {@link Dat#format}.\r\n   * @param {String} [prefix = ''] - See {@link Dat#format}.\r\n   * @returns {String} Formatted string.\r\n   * @description UTC version of {@link Dat#format}.\r\n   *\r\n   * @example\r\n   * new Dat('1999-07-07T03:09:09.099Z').formatUTC(\r\n   *   `\r\n   *     Milliseconds: $ccc|$c.\r\n   *     Seconds:      $ss|$s.\r\n   *     Minutes:      $mm|$m.\r\n   *     Hours:        $hh|$h.\r\n   *     Day:          $dddd|$ddd|$dd|$d.\r\n   *     Month:        $MMMM|$MMM|$MM|$M.\r\n   *     Year:         $yyyy|$yy|$y.\r\n   *   `,\r\n   *   '$'\r\n   * );\r\n   * // Milliseconds: 099|99.\r\n   * // Seconds:      09|9.\r\n   * // Minutes:      09|9.\r\n   * // Hours:        03|3.\r\n   * // Day:          Friday|Fri|07|7.\r\n   * // Month:        July|Jul|07|7.\r\n   * // Year:         1999|99|1999.\r\n   */\r\n  formatUTC(string, prefix = '') {\r\n    string = new Str(new Super(string).$);\r\n    prefix = String(new Super(prefix).$);\r\n\r\n    iterate(formats, (format) => {\r\n      string = string.replaceString(prefix + format.format, format.match(this, 'getUTC'));\r\n    });\r\n\r\n    return string.$;\r\n  }\r\n\r\n  /**\r\n   * @method Dat#get\r\n   * @public\r\n   * @param {GetPeriod} what - What to get.\r\n   * @returns {Number} Number of what to get.\r\n   * @description Method for getting values such as seconds or minutes.\r\n   *\r\n   * @example\r\n   * new Dat(new Date('1999-12-31T23:59:59.999Z')).get('s'); // 59\r\n   */\r\n  get(what) {\r\n    return getSwitcher(what, [this.$, 'get']);\r\n  }\r\n\r\n  /**\r\n   * @method Dat#getUTC\r\n   * @public\r\n   * @param {GetPeriod} what - See {@link Dat#get}.\r\n   * @returns {Number} Number of what to get.\r\n   * @description UTC version of {@link Dat#get}.\r\n   *\r\n   * @example\r\n   * const date = new Dat(new Date('1999-12-31T23:59:59.999Z'));\r\n   *\r\n   * date.getUTC('c');  // 999\r\n   * date.getUTC('s');  // 59\r\n   * date.getUTC('m');  // 59\r\n   * date.getUTC('h');  // 23\r\n   * date.getUTC('d');  // 31\r\n   * date.getUTC('dw'); // 5\r\n   * date.getUTC('M');  // 12\r\n   * date.getUTC('y');  // 1999\r\n   */\r\n  getUTC(what) {\r\n    return getSwitcher(what, [this.$, 'getUTC']);\r\n  }\r\n\r\n  /**\r\n   * @method Dat#isAfter\r\n   * @public\r\n   * @param {DateLike} date - Date to be compared to this date.\r\n   * @returns {Boolean} If this date is after the argument one.\r\n   * @description Finds out if this date is after the argument one.\r\n   *\r\n   * @example\r\n   * new Dat(new Date(333)).isAfter(new Date(334)); // false\r\n   * new Dat(new Date(333)).isAfter(new Date(332)); // true\r\n   */\r\n  isAfter(date) {\r\n    date = new Date(new Super(date).$);\r\n\r\n    return date.getTime() < this.$.getTime();\r\n  }\r\n\r\n  /**\r\n   * @method Dat#isBefore\r\n   * @public\r\n   * @param {DateLike} date - Date to be compared to this date.\r\n   * @returns {Boolean} If this date is before the argument one.\r\n   * @description Finds out if this date is before the argument one.\r\n   *\r\n   * @example\r\n   * new Dat(new Date(333)).isBefore(new Date(334)); // true\r\n   * new Dat(new Date(333)).isBefore(new Date(332)); // false\r\n   */\r\n  isBefore(date) {\r\n    date = new Date(new Super(date).$);\r\n\r\n    return date.getTime() > this.$.getTime();\r\n  }\r\n\r\n  /**\r\n   * @method Dat#isBetween\r\n   * @public\r\n   * @param {DateLike} date1 - Start of the range.\r\n   * @param {DateLike} date2 - End of the range.\r\n   * @returns {Boolean} If this date is after date1 and before date2.\r\n   * @description Finds out if this date is after date1 and before date2.\r\n   *\r\n   * @example\r\n   * new Dat(new Date(333)).isBetween(new Date(332), new Date(334)); // true\r\n   * new Dat(new Date(333)).isBetween(new Date(334), new Date(332)); // false\r\n   */\r\n  isBetween(date1, date2) {\r\n    const time = this.$.getTime();\r\n\r\n    date1 = new Date(new Super(date1).$);\r\n    date2 = new Date(new Super(date2).$);\r\n\r\n    return time > date1.getTime() && time < date2.getTime();\r\n  }\r\n\r\n  /**\r\n   * @method Dat#isInvalid\r\n   * @public\r\n   * @returns {Boolean} If the date is invalid.\r\n   * @description Returns if the date is invalid.\r\n   *\r\n   * @example\r\n   * new Dat(new Date('a')).isInvalid(); // true\r\n   * new Dat(new Date(1)).isInvalid();   // false\r\n   */\r\n  isInvalid() {\r\n    return this.$.toString() === 'Invalid Date';\r\n  }\r\n\r\n  /**\r\n   * @method Dat#isPassed\r\n   * @public\r\n   * @returns {Boolean} If the date is passed.\r\n   * @description Returns if the date is passed.\r\n   *\r\n   * @example\r\n   * new Dat(new Date(1)).isPassed(); // true\r\n   */\r\n  isPassed() {\r\n    return this.isBefore(now());\r\n  }\r\n\r\n  /**\r\n   * @method Dat#ofOne\r\n   * @public\r\n   * @param {OfOnePeriod} what - Period to check.\r\n   * @param {DateLike} date - Date to check.\r\n   * @returns {Boolean} If two dates are of one second, minute or something else.\r\n   * @description Returns if two dates are of one second, minute or something else.\r\n   *\r\n   * @example\r\n   * new Dat(new Date('1999-12-31T23:59:59.000Z')).ofOne('s', new Date(1999-12-31T23:59:59.333Z')); // true\r\n   * new Dat(new Date('1999-12-31T23:59:59.000Z')).ofOne('s', new Date(1999-12-31T23:59:58.999Z')); // false\r\n   */\r\n  ofOne(what, date) {\r\n    if (!(what in coeffs) || what === 'w') {\r\n      return false;\r\n    }\r\n\r\n    date = new Dat(new Date(date));\r\n\r\n    let started;\r\n\r\n    return iterate(coeffs, (coeff, w) => {\r\n      if (w === what) {\r\n        started = true;\r\n      }\r\n\r\n      if (!started || w === 'w') {\r\n        return;\r\n      }\r\n\r\n      if (started && this.get(w) !== date.get(w)) {\r\n        return false;\r\n      }\r\n    }) !== false;\r\n  }\r\n\r\n  /**\r\n   * @method Dat#set\r\n   * @public\r\n   * @param {SetPeriod|Object.<SetPeriod, Number>} what - What to add.\r\n   * @param {Number} [number] - Number of what to set if the first argument is a period string.\r\n   * @returns {Dat} Returns this.\r\n   * @description Method for setting values such as seconds or minutes.\r\n   *\r\n   * @example\r\n   * new Dat(new Date('1999-12-31T23:59:59.999Z')).set('s', 58).get('s');           // 58\r\n   * new Dat(new Date('1999-12-31T23:59:59.999Z')).set({ c: 998, s: 58 }).get('c'); // 998\r\n   */\r\n  set(what, number) {\r\n    const date = this.$;\r\n\r\n    if (arguments.length >= 2) {\r\n      what = { [what]: number };\r\n    }\r\n\r\n    what = new Super(what).$;\r\n\r\n    iterate(what, (value, what) => {\r\n      setSwitcher(what, [date, value, 'set']);\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Dat#setUTC\r\n   * @public\r\n   * @param {SetPeriod|Object.<SetPeriod, Number>} what - See {@link Dat#set}.\r\n   * @param {Number} [number] - See {@link Dat#set}.\r\n   * @returns {Dat} Returns this.\r\n   * @description UTC version of {@link Dat#set}.\r\n   *\r\n   * @example\r\n   * const date = new Dat(new Date('1999-12-31T23:59:59.999Z'));\r\n   *\r\n   * date.setUTC('ccc', 998).getUTC('ccc'); // 998\r\n   * date.setUTC({\r\n   *   s: 58,\r\n   *   m: 58,\r\n   *   h: 22\r\n   * });\r\n   *\r\n   * date.getUTC('s'); // 58\r\n   * date.getUTC('m'); // 58\r\n   * date.getUTC('h'); // 23\r\n   */\r\n  setUTC(what, number) {\r\n    const date = this.$;\r\n\r\n    if (arguments.length >= 2) {\r\n      what = { [what]: number };\r\n    }\r\n\r\n    what = new Super(what).$;\r\n\r\n    iterate(what, (value, what) => {\r\n      setSwitcher(what, [date, value, 'setUTC']);\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Dat#setUTC\r\n   * @public\r\n   * @param {Number} [time] - Time to set.\r\n   * @returns {Dat|Number} - If the time argument is present this is returned otherwise the time is returned.\r\n   * @description Synonym for both\r\n   * [Date#getTime]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime} and\r\n   * [Date#setTime]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/setTime}.\r\n   */\r\n  time(time) {\r\n    const date = this.$;\r\n\r\n    if (arguments.length) {\r\n      date.setTime(time);\r\n    }\r\n\r\n    return date.getTime();\r\n  }\r\n\r\n  toISOString() {\r\n    return this.$.toISOString();\r\n  }\r\n\r\n  toLocaleString() {\r\n    return this.$.toLocaleString();\r\n  }\r\n\r\n  toString() {\r\n    return this.$.toString();\r\n  }\r\n\r\n  valueOf() {\r\n    return this.$.valueOf();\r\n  }\r\n}\r\ndefineProperties(Dat.prototype, {\r\n  [Symbol.toStringTag]: 'Dat'\r\n});\r\n\r\nconstructors[1].push({\r\n  check: isDate,\r\n  cls: Dat\r\n});\r\n\r\n/**\r\n * @function now\r\n * @public\r\n * @returns {Number} Number of milliseconds.\r\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/now\r\n * @description Synonym for\r\n * [Date.now]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/now}.\r\n */\r\nexport function now() {\r\n  return Date.now();\r\n}\r\n\r\n/**\r\n * @function date\r\n * @public\r\n * @param {DateLike} [date = new Date()] - Date-like value that is passed to the Date constructor.\r\n * @returns {Dat} New instance of Dat.\r\n * @description Synonym for new Dat(new Date(date));\r\n */\r\nexport function date(date) {\r\n  if (!arguments.length) {\r\n    return new Dat(new Date());\r\n  }\r\n\r\n  date = new Super(date).$;\r\n\r\n  return new Dat(new Date(date));\r\n}\r\n\r\nexport default Dat;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Dat.js\n **/","/**\n * @module Num\n * @private\n * @mixin\n * @description Exports Num class.\n */\n\nimport Super from './Super';\nimport Func from './Func';\nimport Promise from './Promise';\nimport constructors from './constants/constructors';\nimport {\n  isNumber, isFinite,\n  defineProperties, validate, Symbol\n} from './helpers';\n\nconst toRadian = Math.PI / 180;\nconst toDegree = 180 / Math.PI;\nconst ln2 = Math.LN2;\nconst ln10 = Math.LN10;\n\n/**\n * @class Num\n * @extends Super\n * @public\n * @param {Number} [number = 0] - A number to wrap.\n * @returns {Num} Instance of Num.\n * @description Wrap of a number.\n *\n * @example\n * const num = new Num(1);\n */\nexport class Num extends Super {\n  constructor(number = 0) {\n    super(number);\n\n    /**\n     * @member Num#$\n     * @type {Number}\n     * @public\n     * @description Original number.\n     */\n  }\n\n  /**\n   * @member Num#abs\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/abs\n   * @description Synonym for\n   * [Math.abs]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/abs}.\n   *\n   * @example\n   * new Num(1).abs;  // 1\n   * new Num(-1).abs; // 1\n   */\n  get abs() {\n    return Math.abs(this.$);\n  }\n\n  /**\n   * @method Num#acos\n   * @public\n   * @param {Boolean|*} [toDegrees = false] If it is truthy the return value is transformed into degrees.\n   * @returns {Number} Arccosine of the number.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/acos\n   * @description Synonym for\n   * [Math.acos]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/acos}.\n   */\n  acos(toDegrees) {\n    return (toDegrees ? toDegree : 1) * Math.acos(this.$);\n  }\n\n  /**\n   * @member Num#acosh\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/acosh\n   * @description Synonym for\n   * [Math.acosh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/acosh}.\n   */\n  get acosh() {\n    const number = this.$;\n\n    return Math.log(number + Math.sqrt(number * number - 1));\n  }\n\n  /**\n   * @member Num#asinh\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/asinh\n   * @description Synonym for\n   * [Math.asinh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/asinh}.\n   */\n  get asinh() {\n    const number = this.$;\n\n    return Math.log(number + Math.sqrt(number * number + 1));\n  }\n\n  /**\n   * @method Num#asin\n   * @public\n   * @param {Boolean|*} [toDegrees = false] If it is truthy the return value is transformed into degrees.\n   * @returns {Number} Arcsine of the number.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/asin\n   * @description Synonym for\n   * [Math.asin]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/asin}.\n   */\n  asin(toDegrees) {\n    return (toDegrees ? toDegree : 1) * Math.asin(this.$);\n  }\n\n  /**\n   * @method Num#atan\n   * @public\n   * @param {Boolean|*} [toDegrees = false] If it is truthy the return value is transformed into degrees.\n   * @returns {Number} Arcsine of the number.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/atan\n   * @description Synonym for\n   * [Math.atan]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/atan}.\n   */\n  atan(toDegrees) {\n    return (toDegrees ? toDegree : 1) * Math.atan(this.$);\n  }\n\n  /**\n   * @member Num#atanh\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/atanh\n   * @description Synonym for\n   * [Math.atanh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/atanh}.\n   */\n  get atanh() {\n    const number = this.$;\n\n    return Math.log((1 + number) / (1 - number)) / 2;\n  }\n\n  /**\n   * @member Num#cbrt\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cbrt\n   * @description Synonym for\n   * [Math.cbrt]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cbrt}.\n   */\n  get cbrt() {\n    const cbrt = Math.pow(Math.abs(this.$), 1 / 3);\n\n    return this.$ > 0 ? cbrt : -cbrt;\n  }\n\n  /**\n   * @member Num#ceil\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil\n   * @description Synonym for\n   * [Math.ceil]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil}.\n   *\n   * @example\n   * new Num(1.1).ceil;  // 2\n   * new Num(-1.1).ceil; // -1\n   */\n  get ceil() {\n    return Math.ceil(this.$);\n  }\n\n  /**\n   * @method Num#cos\n   * @public\n   * @param {Boolean|*} [asDegrees = false] If it is truthy the number is treated as a degree value.\n   * @returns {Number} Cosine of the number.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cos\n   * @description Synonym for\n   * [Math.cos]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cos}.\n   */\n  cos(asDegrees) {\n    return Math.cos((asDegrees ? toRadian : 1) * this.$);\n  }\n\n  /**\n   * @member Num#cosh\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cosh\n   * @description Synonym for\n   * [Math.cosh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cosh}.\n   */\n  get cosh() {\n    const exp = this.exp;\n\n    return (exp + 1 / exp) / 2;\n  }\n\n  /**\n   * @member Num#cube\n   * @type {Number}\n   * @public\n   * @readonly\n   * @description Cube of the number.\n   *\n   * @example\n   * new Num(2).cube;  // 8\n   * new Num(-3).ceil; // -27\n   */\n  get cube() {\n    return this.$ * this.$ * this.$;\n  }\n\n  /**\n   * @member Num#exp\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/exp\n   * @description Synonym for\n   * [Math.exp]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/exp}.\n   */\n  get exp() {\n    return Math.exp(this.$);\n  }\n\n  /**\n   * @member Num#floor\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/floor\n   * @description Synonym for\n   * [Math.floor]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/floor}.\n   *\n   * @example\n   * new Num(1.1).floor;  // 1\n   * new Num(-1.1).floor; // -2\n   */\n  get floor() {\n    return Math.floor(this.$);\n  }\n\n  /**\n   * @method Num#interval\n   * @public\n   * @param {Function} func - Function that is called every <number> milliseconds.\n   * @returns {Function} Function that aborts the interval. The context of the function (if it's not already bound)\n   * is the object with the abort method.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/setInterval\n   * @description Analogue of the\n   * [setInterval]{@link https://developer.mozilla.org/en/docs/Web/API/WindowTimers/setInterval}.\n   *\n   * @example\n   * const times = 0;\n   * new Num(50).interval(function () {\n   *   if (++times === 10) {\n   *     this.abort();\n   *   }\n   * });\n   */\n  interval(func) {\n    validate([func], ['function'], 'Num#interval');\n\n    func = new Func(func).bindContext({ abort });\n\n    const number = this.$;\n    const args = [].slice.call(arguments, 1);\n\n    let timeout;\n    let aborted;\n\n    setTimeout(function interval() {\n      func.apply(null, args);\n\n      if (!aborted) {\n        timeout = setTimeout(interval, number);\n      }\n    }, 0);\n\n    return abort;\n\n    function abort() {\n      aborted = true;\n\n      return clearTimeout(timeout);\n    }\n  }\n\n  /**\n   * @member Num#ln\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log\n   * @description Synonym for\n   * [Math.log]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log}.\n   */\n  get ln() {\n    return Math.log(this.$);\n  }\n\n  /**\n   * @method Num#log\n   * @public\n   * @param {Number} number - Number to get logarithm of.\n   * @returns {Number} Logarithm of the argument number to the number base.\n   * @description Returns the logarithm of the argument number to the number base.\n   *\n   * @example\n   * new Num(2).log(16);  // 4\n   * new Num(3).log(243); // 5\n   */\n  log(number) {\n    return Math.log(number) / Math.log(this.$);\n  }\n\n  /**\n   * @member Num#log2\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log2\n   * @description Synonym for\n   * [Math.log2]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log2}.\n   */\n  get log2() {\n    return this.ln / ln2;\n  }\n\n  /**\n   * @member Num#log10\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log10\n   * @description Synonym for\n   * [Math.log10]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log10}.\n   */\n  get log10() {\n    return this.ln / ln10;\n  }\n\n  /**\n   * @method Num#pow\n   * @public\n   * @param {Number} power - Power the number should be raised to.\n   * @returns {Number} The number to the <power> power.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/pow\n   * @description Synonym for\n   * [Math.pow]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/pow}.\n   *\n   * @example\n   * new Num(4).pow(.5); // 2\n   * new Num(3).pow(2);  // 9\n   */\n  pow(power) {\n    return Math.pow(this.$, power);\n  }\n\n  /**\n   * @method Num#root\n   * @public\n   * @param {Number} power - Power the number should be raised to.\n   * @returns {Number} The <power> root of the number.\n   * @description Synonym for number.pow(1 / power);\n   *\n   * @example\n   * new Num(4).root(2);   // 0.5\n   * new Num(243).root(5); // 3\n   */\n  root(power) {\n    return Math.pow(this.$, 1 / power);\n  }\n\n  /**\n   * @member Num#round\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/round\n   * @description Synonym for\n   * [Math.round]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/round}.\n   *\n   * @example\n   * new Num(1.1).floor;  // 1\n   * new Num(-1.1).floor; // -1\n   * new Num(1.5).floor;  // 2\n   */\n  get round() {\n    return Math.round(this.$);\n  }\n\n  /**\n   * @member Num#sign\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n   * @description Synonym for\n   * [Math.sign]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sign}.\n   */\n  get sign() {\n    const number = this.$;\n\n    if (!number) {\n      return number;\n    }\n\n    return number > 0 ? 1 : -1;\n  }\n\n  /**\n   * @method Num#sin\n   * @public\n   * @param {Boolean|*} [asDegrees = false] If it is truthy the number is treated as a degree value.\n   * @returns {Number} Sine of the number.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sin\n   * @description Synonym for\n   * [Math.sin]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sin}.\n   */\n  sin(asDegrees) {\n    return Math.sin((asDegrees ? toRadian : 1) * this.$);\n  }\n\n  /**\n   * @member Num#sinh\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sinh\n   * @description Synonym for\n   * [Math.sinh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sinh}.\n   */\n  get sinh() {\n    const exp = this.exp;\n\n    return (exp - 1 / exp) / 2;\n  }\n\n  /**\n   * @member Num#sq\n   * @type {Number}\n   * @public\n   * @readonly\n   * @description The square of the number.\n   *\n   * @example\n   * new Num(2).sq;  // 4\n   * new Num(-3).sq; // 9\n   */\n  get sq() {\n    return this.$ * this.$;\n  }\n\n  /**\n   * @member Num#sqrt\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sqrt\n   * @description Synonym for\n   * [Math.sqrt]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sqrt}.\n   */\n  get sqrt() {\n    return Math.sqrt(this.$);\n  }\n\n  /**\n   * @method Num#tan\n   * @public\n   * @param {Boolean|*} [asDegrees = false] If it is truthy the number is treated as a degree value.\n   * @returns {Number} Tangent of the number.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/tan\n   * @description Synonym for\n   * [Math.tan]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/tan}.\n   */\n  tan(asDegrees) {\n    return Math.tan((asDegrees ? toRadian : 1) * this.$);\n  }\n\n  /**\n   * @member Num#tanh\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/tanh\n   * @description Synonym for\n   * [Math.tanh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/tanh}.\n   */\n  get tanh() {\n    const number = this.$;\n\n    if (!isFinite(number)) {\n      return this.sign;\n    }\n\n    const exp = Math.exp(2 * number);\n\n    return (exp - 1) / (exp + 1);\n  }\n\n  /**\n   * @method Num#timeout\n   * @public\n   * @param {*} [value] - Value to be resolved by the promise.\n   * @returns {Promise} Promise that could be aborted.\n   * @see https://developer.mozilla.org/en/docs/Web/API/WindowTimers/setTimeout\n   * @description Promise-based analogue of\n   * [setTimeout]{@link https://developer.mozilla.org/en/docs/Web/API/WindowTimers/setTimeout}.\n   *\n   * @example\n   * new Num(50).timeout('resolved').then((value) => {\n   *   console.log(value); // 'resolved'\n   * });\n   *\n   * const promise = new Num(50).timeout();\n   * promise.abort();\n   */\n  timeout(value) {\n    let timeout;\n    let reject;\n\n    const promise = new Promise((resolve, rej) => {\n      reject = rej;\n      timeout = setTimeout(resolve, this.$, value);\n    });\n\n    promise.abort = function abort() {\n      clearTimeout(timeout);\n\n      reject(new Error('Timeout was aborted'));\n\n      return this;\n    };\n\n    return promise;\n  }\n\n  /**\n   * @method Num#toBase\n   * @public\n   * @param {Number} [base = 10] - Base that the number should inverted to.\n   * @returns {String} A string representation of the number in <base> base.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toString\n   * @description Synonym for\n   * [Number#toString]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toString}.\n   *\n   * @example\n   * new Num(4).toBase(2); // 100\n   * new Num(3).toBase();  // 3\n   */\n  toBase(base = 10) {\n    return this.$.toString(base);\n  }\n\n  /**\n   * @method Num#toExponential\n   * @public\n   * @param {Number} [fractionDigits] - See the link.\n   * @returns {String} A string representation of the number in the exponential format.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential\n   * @description Synonym for\n   * [Number#toExponential]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential}.\n   */\n  toExponential(fractionDigits) {\n    return this.$.toExponential(fractionDigits);\n  }\n\n  /**\n   * @method Num#toFixed\n   * @public\n   * @param {Number} [digits = 0] - See the link.\n   * @returns {String} Fixed-point formatted number.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed\n   * @description Synonym for\n   * [Number#toFixed]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed}.\n   */\n  toFixed(digits) {\n    return this.$.toFixed(digits);\n  }\n\n  /**\n   * @method Num#toPrecision\n   * @public\n   * @param {Number} [precision] - See the link.\n   * @returns {String} A string representation of the number to the specified precision.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toPrecision\n   * @description Synonym for\n   * [Number#toPrecision]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toPrecision}.\n   */\n  toPrecision(precision) {\n    return this.$.toPrecision(precision);\n  }\n\n  valueOf() {\n    return Number(this.$);\n  }\n}\n\ndefineProperties(Num.prototype, {\n  [Symbol.toStringTag]: 'Num'\n});\n\nconstructors[1].push({\n  check: isNumber,\n  cls: Num\n});\n\n/**\n * @function rand\n * @public\n * @param {Number} [start = 0] - Start of the range.\n * @param {Number} [end = 1] - End of the range.\n * @returns {Number} Random number.\n * @description Returns a random number in the range specified by the arguments.\n *\n * @example\n * rand(1, 5); // 2.315\n * rand(1, 5); // 4.356763\n */\nexport function rand(start = 0, end = 1) {\n  return start + (end - start) * Math.random();\n}\n\n/**\n * @function random\n * @public\n * @param {Integer} start - Start of the range.\n * @param {Integer} end - End of the range.\n * @returns {Number} Random integer.\n * @description Returns a random integer number in the range specified by the arguments.\n *\n * @example\n * random(1, 5); // 3\n * random(1, 5); // 1\n */\nexport function random(start, end) {\n  validate([start, end], ['intLike', 'intLike'], 'random');\n\n  if (end <= start) {\n    throw new Error('The second argument must be greater than the first!', 'random');\n  }\n\n  return Math.floor(rand(start, end + 1));\n}\n\nexport default Num;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Num.js\n **/","/**\r\n * @module Func\r\n * @private\r\n * @mixin\r\n * @description Exports Func class.\r\n */\r\n\r\nimport Super from './Super';\r\nimport Promise from './Promise';\r\nimport constructors from './constants/constructors';\r\nimport { isFunction, validate, toArray, Symbol, defineProperties, iterate } from './helpers';\r\n\r\n/**\r\n * @callback BeforeMiddleware\r\n * @param {Array} args - Previous arguments.\r\n * @param {Func} func - This function.\r\n * @returns {Array} - New arguments.\r\n */\r\n\r\n/**\r\n * @callback AfterMiddleware\r\n * @param {*} returnValue - Previous return value.\r\n * @param {Func} func - This function.\r\n * @returns {*} - New return value.\r\n */\r\n\r\n/**\r\n * @class Func\r\n * @extends Super\r\n * @public\r\n * @param {Function} [func = function () {}] - Function to wrap.\r\n * @returns {Func} Instance of Func.\r\n * @description A wrap of a function.\r\n *\r\n * @example\r\n * const func = new Func(Math.max);\r\n *\r\n * func(1, 4, -2, 5); // 5\r\n */\r\nexport class Func extends Super {\r\n  constructor(func = () => {}) {\r\n    super();\r\n\r\n    if (func instanceof Func) {\r\n      return func;\r\n    }\r\n\r\n    function proxy() {\r\n      if (++proxy.$$.called < proxy.$$.canBeCalled) {\r\n        const { before, after, sync, contextLocked } = proxy.$$;\r\n        let { context, args } = proxy.$$;\r\n        let ret;\r\n\r\n        context = contextLocked ? context : context || this;\r\n        args = args.concat(toArray(arguments));\r\n\r\n        if (sync) {\r\n          iterate(before, (middleware) => {\r\n            args = middleware.call(context, toArray(args), proxy);\r\n          });\r\n\r\n          ret = func.apply(context, toArray(args));\r\n\r\n          iterate(after, (middleware) => {\r\n            ret = middleware.call(context, ret, proxy);\r\n          });\r\n\r\n          return ret;\r\n        }\r\n\r\n        let promise = Promise.resolve(args);\r\n\r\n        iterate(before, (middleware) => {\r\n          promise = promise.then((args) => middleware.call(context, toArray(args), proxy));\r\n        });\r\n\r\n        promise = promise.then((args) => func.apply(context, toArray(args)));\r\n\r\n        iterate(after, (middleware) => {\r\n          promise = promise.then((ret) => middleware.call(context, ret, proxy));\r\n        });\r\n\r\n        return promise;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @member {Object} Func#$$\r\n     * @type {Object}\r\n     * @protected\r\n     * @property {Array} after - After middleware array.\r\n     * @property {Array} args - Locked and bound arguments.\r\n     * @property {Array} argsLocked - Locked arguments.\r\n     * @property {Array} before - Before middleware array.\r\n     * @property {Number} called - How many times the function was called.\r\n     * @property {Number} canBeCalled - How many times the function can be actually called.\r\n     * @property {*} context - Locked or bound context.\r\n     * @property {Boolean} contextLocked - Is context locked or not.\r\n     * @property {Boolean} sync - Is function synchronous or not.\r\n     * @description Config parameters.\r\n     */\r\n    Object.defineProperty(proxy, '$$', {\r\n      value: {\r\n        after: [],\r\n        args: [],\r\n        argsLocked: [],\r\n        before: [],\r\n        called: 0,\r\n        canBeCalled: Infinity,\r\n        context: null,\r\n        contextLocked: false,\r\n        sync: true\r\n      }\r\n    });\r\n\r\n    /**\r\n     * @member {Function} Func#$\r\n     * @type {Function}\r\n     * @public\r\n     * @description Original function.\r\n     */\r\n    Object.defineProperty(proxy, '$', { value: func });\r\n    Object.setPrototypeOf(proxy, Func.prototype);\r\n\r\n    return proxy;\r\n  }\r\n\r\n  /**\r\n   * @method Func#after\r\n   * @public\r\n   * @param {AfterMiddleware} middleware - After middleware.\r\n   * @param {Boolean|*} [afterAll = true] - Boolean parameter where to put middleware.\r\n   * Truthy parameter stands for \"to the end\" and falsey for \"to the beginning\".\r\n   * @returns {Func} Returns this.\r\n   * @description Adds after middleware.\r\n   *\r\n   * @example\r\n   * const func = new Func((a) => a + 1)\r\n   *   .after((result) => result * result);\r\n   *\r\n   * func(4);  // 25\r\n   * func(-4); // 9\r\n   */\r\n  after(middleware, afterAll = true) {\r\n    validate([middleware], ['function'], 'Func#after');\r\n\r\n    const { after } = this.$$;\r\n\r\n    if (afterAll) {\r\n      after.push(middleware);\r\n    } else {\r\n      after.unshift(middleware);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Func#apply\r\n   * @public\r\n   * @param {*} [context] - Context to call with.\r\n   * @param {(Array|Arguments)} [args] - Arguments to call with.\r\n   * @returns {*} Return of function call.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\r\n   * @description Synonym for\r\n   * [Function#apply]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Function/apply}.\r\n   */\r\n  apply(context, args) {\r\n    return (() => {}).apply.apply(this, arguments);\r\n  }\r\n\r\n  /**\r\n   * @method Func#async\r\n   * @public\r\n   * @param {Boolean|*} [condition] - If the function should be synchronous or not.\r\n   * @returns {Func} Returns this.\r\n   * @description If the function should be synchronous or not.\r\n   *\r\n   * @example\r\n   * const func = new Func((a) => a + 1).async();\r\n   *\r\n   * func(4).then((result) => {\r\n   *   console.log(result); // 5\r\n   * });\r\n   */\r\n  async(condition = true) {\r\n    this.$$.sync = !condition;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Func#before\r\n   * @public\r\n   * @param {BeforeMiddleware} middleware - Before middleware.\r\n   * @param {Boolean|*} [beforeAll = true] - Boolean parameter where to put middleware.\r\n   * Truthy parameter stands for \"to the beginning\" and falsey for \"to the end\".\r\n   * @returns {Func} Returns this.\r\n   * @description Adds before middleware.\r\n   *\r\n   * @example\r\n   * const func = new Func((a) => a + 1)\r\n   *   .before(([arg]) => [arg * arg]);\r\n   *\r\n   * func(4); // 17\r\n   * func(3); // 10\r\n   */\r\n  before(middleware, beforeAll = true) {\r\n    validate([middleware], ['function'], 'Func#before');\r\n\r\n    const { before } = this.$$;\r\n\r\n    if (beforeAll) {\r\n      before.unshift(middleware);\r\n    } else {\r\n      before.push(middleware);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Func#bind\r\n   * @public\r\n   * @param {*} context - Context to bind.\r\n   * @param {...(Array|Arguments|*)} args - Arguments to bind.\r\n   * @returns {Func} Returns this.\r\n   * @description Composition of {@link Func#bindContext} and {@link Func#bindArgs}.\r\n   *\r\n   * @example\r\n   * const func = new Func(function (a, b) {\r\n   *   return this.a + a + b;\r\n   * }).bind({ a: 2 }, 1);\r\n   *\r\n   * func(1); // 4\r\n   * func(3); // 6\r\n   */\r\n  bind(context, ...args) {\r\n    return this\r\n      .bindContext(context)\r\n      .bindArgs(toArray(arguments).slice(1));\r\n  }\r\n\r\n  /**\r\n   * @method Func#bindArgs\r\n   * @public\r\n   * @param {(Array|Arguments)} args - Arguments to bind.\r\n   * @returns {Func} Returns this.\r\n   * @description Binds arguments in addition to already locked and bound ones.\r\n   *\r\n   * @example\r\n   * const func = new Func((...args) => {\r\n   *   let sum = 0;\r\n   *\r\n   *   for (let i = 0; i < args.length; i++) {\r\n   *     sum += args[i];\r\n   *   }\r\n   *\r\n   *   return sum;\r\n   * });\r\n   *\r\n   * func(1, 2, 3); // 6\r\n   *\r\n   * func.bindArgs([4]);\r\n   *\r\n   * func(1, 2, 3); // 10\r\n   *\r\n   * func.bindArgs([5]);\r\n   *\r\n   * func(1, 2, 3); // 15\r\n   */\r\n  bindArgs(args) {\r\n    const func = this.$$;\r\n\r\n    func.args = func.args.concat(toArray(args));\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Func#bindContext\r\n   * @public\r\n   * @param {*} context - Context to bind.\r\n   * @returns {Func} Returns this.\r\n   * @description Bind new context if it's not already locked.\r\n   *\r\n   * @example\r\n   * const func = new Func(function () {\r\n   *   return this.a;\r\n   * }).bindContext({ a: 1 });\r\n   *\r\n   * func(); // 1\r\n   *\r\n   * func.bindContext({ a: 2 });\r\n   *\r\n   * func(); // 2\r\n   */\r\n  bindContext(context) {\r\n    const func = this.$$;\r\n\r\n    if (!func.contextLocked) {\r\n      func.context = context;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Func#call\r\n   * @public\r\n   * @param {*} [context] - Context to call with.\r\n   * @param {...*} [args] - Arguments to call with.\r\n   * @returns {*} Return of function call.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Function/call\r\n   * @description Synonym for\r\n   * [Function#call]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Function/call}.\r\n   */\r\n  call(context, ...args) {\r\n    return (() => {}).call.apply(this, arguments);\r\n  }\r\n\r\n  /**\r\n   * @member {Number} Func#called\r\n   * @public\r\n   * @readonly\r\n   * @description Returns how many times the function was called.\r\n   *\r\n   * @example\r\n   * const func = new Func((a) => a + 1);\r\n   *\r\n   * func();\r\n   * func();\r\n   *\r\n   * func.called // 2\r\n   */\r\n  get called() {\r\n    return this.$$.called;\r\n  }\r\n\r\n  /**\r\n   * @method Func#canBeCalled\r\n   * @public\r\n   * @param {Number} times - Number of maximum times the function is called (middlewares are also taken for a count).\r\n   * @returns {Func} Returns this.\r\n   * @description Method for limiting call times of function.\r\n   *\r\n   * @example\r\n   * const func = new Func((a) => a + 1)\r\n   *   .canBeCalled(1);\r\n   *\r\n   * func(1); // 2\r\n   * func(1); // undefined\r\n   */\r\n  canBeCalled(times) {\r\n    this.$$.canBeCalled = times;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Func#limitArgsTo\r\n   * @public\r\n   * @param {Number} number - Number of arguments to limit to.\r\n   * @returns {Func} Returns this.\r\n   * @description Built-in before middleware for limiting number of arguments\r\n   * that is put to the end of before middlewares.\r\n   *\r\n   * @example\r\n   * const func = new Func((a, b) => [a, b]);\r\n   *\r\n   * func(1, 2); // [1, 2]\r\n   *\r\n   * func.limitArgsTo(1);\r\n   *\r\n   * func(1, 2); // [1, undefined]\r\n   */\r\n  limitArgsTo(number) {\r\n    return this.before((args) => args.slice(0, number), false);\r\n  }\r\n\r\n  /**\r\n   * @method Func#lock\r\n   * @public\r\n   * @param {*} context - Context to lock.\r\n   * @param {(Array|Arguments|*)} args - Arguments to lock.\r\n   * @returns {Func} Returns this.\r\n   * @description Composition of {@link Func#lockContext} and {@link Func#lockArgs}.\r\n   *\r\n   * @example\r\n   * const func = new Func(function (a, b) {\r\n   *   return this.a + a + b;\r\n   * }).lock({ a: 2 }, [1]);\r\n   *\r\n   * func(1); // 4\r\n   * func(3); // 6\r\n   */\r\n  lock(context, args) {\r\n    return this\r\n      .lockContext(context)\r\n      .lockArgs(args);\r\n  }\r\n\r\n  /**\r\n   * @method Func#lockArgs\r\n   * @public\r\n   * @param {(Array|Arguments|*)} args - Arguments to lock.\r\n   * @returns {Func} Returns this.\r\n   * @description Erases bound arguments and adds new arguments to already locked ones.\r\n   *\r\n   * @example\r\n   * const func = new Func((...args) => {\r\n   *   let sum = 0;\r\n   *\r\n   *   for (let i = 0; i < args.length; i++) {\r\n   *     sum += args[i];\r\n   *   }\r\n   *\r\n   *   return sum;\r\n   * });\r\n   *\r\n   * func(1, 2, 3); // 6\r\n   *\r\n   * func.lockArgs([4]);\r\n   *\r\n   * func(1, 2, 3); // 10\r\n   *\r\n   * func.bindArgs([6, 7]);\r\n   * func.lockArgs([5]);\r\n   *\r\n   * func(1, 2, 3); // 15\r\n   */\r\n  lockArgs(args) {\r\n    const func = this.$$;\r\n\r\n    func.args = func.argsLocked = func.argsLocked.concat(toArray(args));\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Func#lockContext\r\n   * @public\r\n   * @param {*} context - Context to lock.\r\n   * @returns {Func} Returns this.\r\n   * @description Locks context if it's not already locked.\r\n   *\r\n   * @example\r\n   * const func = new Func(function () {\r\n   *   return this.a;\r\n   * }).lockContext({ a: 1 });\r\n   *\r\n   * func(); // 1\r\n   *\r\n   * func.lockContext({ a: 2 });\r\n   *\r\n   * func(); // 1\r\n   */\r\n  lockContext(context) {\r\n    const func = this.$$;\r\n\r\n    if (!func.contextLocked) {\r\n      func.context = context;\r\n      func.contextLocked = true;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Func#timing\r\n   * @public\r\n   * @param {String} mark - Argument that is passed to console.time() and console.timeEnd().\r\n   * By default name of the original function, or if it's not present, 'anonymous' is used.\r\n   * @returns {Func} Returns this.\r\n   * @description Built-in before and after middlewares for noting calling time.\r\n   * In case of asynchronous functions it notes time between calling function and resolving or rejecting the result.\r\n   *\r\n   * @example\r\n   * const func = new Func((a) => a + 1)\r\n   *   .timing('plus 1');\r\n   *\r\n   * func(2); // plus 1: 0.010ms\r\n   *\r\n   * const async = new Func(() => new Promise(() => {\r\n   *     setTimeout(resolve, 1000);\r\n   *   }))\r\n   *   .async()\r\n   *   .timing();\r\n   *\r\n   * async();\r\n   * // After 1 second...\r\n   * // anonymous: 1000.010ms\r\n   */\r\n  timing(mark) {\r\n    mark = arguments.length ? String(mark) : this.$.name || 'anonymous';\r\n\r\n    this.before((args) => {\r\n      console.time(mark);\r\n\r\n      return args;\r\n    }, false);\r\n\r\n    this.after((ret) => {\r\n      console.timeEnd(mark);\r\n\r\n      return ret;\r\n    }, false);\r\n\r\n    return this;\r\n  }\r\n\r\n  toString() {\r\n    return (() => {}).toString.call(this.$);\r\n  }\r\n\r\n  /**\r\n   * @method Func#unbind\r\n   * @public\r\n   * @returns {Func} Returns this.\r\n   * @description Composition of {@link Func#unbindContext} and {@link Func#unbindArgs}.\r\n   *\r\n   * @example\r\n   * const func = new Func(function (a) {\r\n   *   return this.foo + ' & ' +  a;\r\n   * }).bind({ foo: 2 }, 1);\r\n   *\r\n   * func(); // '2 & 1'\r\n   *\r\n   * func.unbind();\r\n   *\r\n   * func(); // 'undefined & undefined'\r\n   */\r\n  unbind() {\r\n    return this\r\n      .unbindContext()\r\n      .unbindArgs();\r\n  }\r\n\r\n  /**\r\n   * @method Func#unbindArgs\r\n   * @public\r\n   * @returns {Func} Returns this.\r\n   * @description Erases all bound arguments.\r\n   *\r\n   * @example\r\n   * const func = new Func((...args) => {\r\n   *   let sum = 0;\r\n   *\r\n   *   for (let i = 0; i < args.length; i++) {\r\n   *     sum += args[i];\r\n   *   }\r\n   *\r\n   *   return sum;\r\n   * }).bindArgs([4, 5]);\r\n   *\r\n   * func(1, 2, 3); // 15\r\n   *\r\n   * func.unbindArgs();\r\n   *\r\n   * func(1, 2, 3); // 6\r\n   */\r\n  unbindArgs() {\r\n    const func = this.$$;\r\n\r\n    func.args = func.argsLocked;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Func#unbindContext\r\n   * @public\r\n   * @returns {Func} Returns this.\r\n   * @description Erases context if it's not locked.\r\n   *\r\n   * @example\r\n   * const func = new Func(function () {\r\n   *   return this.foo;\r\n   * }).bindContext({ foo: 1 });\r\n   *\r\n   * func(); // 1\r\n   *\r\n   * func.unbindArgs();\r\n   *\r\n   * func(); // undefined\r\n   */\r\n  unbindContext() {\r\n    const func = this.$$;\r\n\r\n    if (!func.contextLocked) {\r\n      func.context = null;\r\n    }\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\ndefineProperties(Func.prototype, {\r\n  [Symbol.toStringTag]: 'Func'\r\n});\r\n\r\nconstructors[1].push({\r\n  check: isFunction,\r\n  cls: Func\r\n});\r\n\r\n/**\r\n * @function method\r\n * @public\r\n * @param {String} method - Method to call.\r\n * @param {(Array|Arguments|*)} args - Arguments to call the method with.\r\n * @returns {Function} Function that calls stated method with given arguments.\r\n * @description Function that returns the function\r\n * that calls stated method of its first argument with given arguments.\r\n *\r\n * @example\r\n * [1.2345, 2.789, 3.14].map(method('toFixed', [2])); // ['1.23', '2.79', '3.14']\r\n */\r\nexport function method(method, args = []) {\r\n  return (x) => x[method].apply(x, toArray(args));\r\n}\r\n\r\n/**\r\n * @function noop\r\n * @public\r\n * @returns {void}\r\n * @description Empty function.\r\n */\r\nexport function noop() {}\r\n\r\n/**\r\n * @function self\r\n * @public\r\n * @returns {*} First argument itself.\r\n * @description Function that returns the first argument.\r\n *\r\n * @example\r\n * [1, 2].map(self);                     // [1, 2]\r\n * [1, 3, NaN, 0, 7, null].filter(self); // [1, 3, 7]\r\n */\r\nexport function self() {\r\n  return arguments[0];\r\n}\r\n\r\nexport default Func;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Func.js\n **/","/**\n * @module Str\n * @private\n * @mixin\n * @description Exports Str class.\n */\n\nimport D from './D';\nimport Super from './Super';\nimport constructors from './constants/constructors';\nimport regexpSpecialCharacters from './constants/regexpSpecialCharacters';\nimport {\n  isFunction, isNumberLike, isObject, isString,\n  validate, Symbol, defineProperties, iterate\n} from './helpers';\n\nconst htmlSpecials = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;'\n};\nconst regexpSpecialsRegexp = new RegExp(\n  new Super(regexpSpecialCharacters)\n    .word((x) => `\\\\${ x }|`)\n    .replace(/\\|$/, ''),\n  'g'\n);\n\n/**\n * @class Str\n * @extends Super\n * @public\n * @param {String} [string = ''] - A string to wrap.\n * @returns {Str} Instance of Str.\n * @description Wrap of a string.\n *\n * @example\n * const s = new Num('1');\n */\nexport class Str extends Super {\n  constructor(string = '') {\n    super(string);\n\n    /**\n     * @member Str#$\n     * @type {String}\n     * @public\n     * @description Original string.\n     */\n  }\n\n  /**\n   * @method Str#capitalizeFirst\n   * @public\n   * @returns {Str} Capitalized string.\n   * @description Method capitalizing the first symbol.\n   *\n   * @example\n   * new Str('foo').capitalizeFirst().$; // 'Foo'\n   */\n  capitalizeFirst() {\n    const string = this.$;\n\n    return new Str(string.slice(0, 1).toUpperCase() + string.slice(1));\n  }\n\n  /**\n   * @method Str#endsWith\n   * @public\n   * @param {String} searchString - See the link.\n   * @param {Number} [position = string.length] - See the link.\n   * @returns {Boolean} If the string ends with the argument string.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n   * @description Synonym for\n   * [String#endsWith]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith}.\n   */\n  endsWith(searchString, position) {\n    if (arguments.length < 2) {\n      position = this.$.length;\n    }\n\n    return this\n      .slice(0, position)\n      .revert()\n      .startsWith(new Str(searchString).revert().$);\n  }\n\n  /**\n   * @method Str#escapeHTML\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Methods escaping \"&\", \"<\" and \">\" symbols.\n   *\n   * @example\n   * new Str('\"1 < 2\" & \"7 > 4\" are true expressions.').escapeHTML().$;\n   * // '\"1 &lt; 2\" &amp \"7 &gt; 2\" are true expressions.'\n   */\n  escapeHTML() {\n    let string = this.$;\n\n    iterate(htmlSpecials, (escaped, symbol) => {\n      string = string.replace(new RegExp(symbol, 'g'), escaped);\n    });\n\n    return new Str(string);\n  }\n\n  /**\n   * @method Str#escapeRegExp\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Method escaping RegExp special characters.\n   *\n   * @example\n   * new Str('(213.98 - [] {})').escapeRegExp().$; // '\\(213\\.98 \\- \\[\\] \\{\\}\\)'\n   */\n  escapeRegExp() {\n    return this.replace(regexpSpecialsRegexp, '\\\\$&');\n  }\n\n  /**\n   * @method Str#in\n   * @public\n   * @param {*} object - Object to check the string as a property in.\n   * @returns {Boolean} If it is in the object or not.\n   * @description Returns string in object.\n   *\n   * @example\n   * new Str('a').in({ a: 1 }); // true\n   * new Str('toFixed').in(1);  // false\n   * new Str('a').in(null);     // false\n   */\n  in(object) {\n    if (!isObject(object)) {\n      return false;\n    }\n\n    return this.$ in object;\n  }\n\n  /**\n   * @method Str#indexOf\n   * @public\n   * @param {String} searchValue - See the link.\n   * @param {Number} [fromIndex = 0] - See the link.\n   * @returns {Number} Found index or -1.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf\n   * @description Synonym for\n   * [String#indexOf]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf}.\n   */\n  indexOf(searchValue, fromIndex) {\n    return this.$.indexOf.apply(this.$, arguments);\n  }\n\n  /**\n   * @method Str#lastIndexOf\n   * @public\n   * @param {String} searchValue - See the link.\n   * @param {Number} [fromIndex = string.length] - See the link.\n   * @returns {Number} Found index or -1.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf\n   * @description Synonym for\n   * [String#lastIndexOf]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf}.\n   */\n  lastIndexOf(searchValue, fromIndex) {\n    return this.$.lastIndexOf.apply(this.$, arguments);\n  }\n\n  /**\n   * @member Str#length\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/length\n   * @description Synonym for\n   * [String#length]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/length}.\n   */\n  get length() {\n    return this.$.length;\n  }\n\n  /**\n   * @method Str#match\n   * @public\n   * @returns {Arr|Super} D-Wrap of found match.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/match\n   * @description Synonym for\n   * [String#match]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/match}.\n   */\n  match(regexp) {\n    return D(this.$.match.apply(this.$, arguments));\n  }\n\n  /**\n   * @method Str#repeat\n   * @public\n   * @param {Integer} times - Times to repeat the string.\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n   * @description Synonym for\n   * [String#repeat]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/repeat}.\n   *\n   * @example\n   * new Str('123').repeat(2).$; // '123123'\n   * new Str('123').repeat(0).$; // ''\n   */\n  repeat(times) {\n    validate([times], [['intLike', '>=0']], 'Str#repeat');\n\n    times = +times;\n\n    const string = this.$;\n\n    let s = '';\n\n    for (let i = 0; i < times; i++) {\n      s += string;\n    }\n\n    return new Str(s);\n  }\n\n  /**\n   * @method Str#replace\n   * @public\n   * @param {RegExp|String} regexp - See the link.\n   * @param {String|Function} [replacer = ''] - See the link.\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/replace\n   * @description Synonym for\n   * [String#replace]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/replace}\n   * besides that replacer has a default value of ''.\n   */\n  replace(regexp, replacer = '') {\n    return new Str(this.$.replace(regexp, replacer));\n  }\n\n  /**\n   * @method Str#replaceString\n   * @public\n   * @param {String} string - String to replace.\n   * @param {String} [replacer = ''] - String to replace with.\n   * @returns {Str} New instance of Str.\n   * @description Method for global string replaceing.\n   *\n   * @example\n   * new Str('123123').replaceString('1', '4').$; // '423423'\n   * new Str('123123').replaceString('1').$;      // '2323'\n   */\n  replaceString(string, replacer = '') {\n    string = new Super(string).$;\n\n    validate([string], ['string'], 'Str#replaceString');\n\n    return new Str(this.$.split(string).join(replacer));\n  }\n\n  /**\n   * @method Str#revert\n   * @public\n   * @returns {Str} New instance of string.\n   * @description Method for reverting a string.\n   *\n   * @example\n   * new Str('1234').revert().$; // '4321'\n   */\n  revert() {\n    const string = this.$;\n    let str = '';\n\n    for (let i = string.length - 1; i >= 0; i--) {\n      str += string[i];\n    }\n\n    return new Str(str);\n  }\n\n  /**\n   * @method Str#search\n   * @public\n   * @param {RegExp} regexp - See the link.\n   * @returns {Number} Index of the first match, if found, and -1 if not.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/search\n   * @description Synonym for\n   * [String#search]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/search}.\n   */\n  search(regexp) {\n    validate([regexp], ['regexp']);\n\n    return this.$.search.apply(this.$, arguments);\n  }\n\n  /**\n   * @method Str#slice\n   * @public\n   * @param {Number} [beginSlice = 0] - See the link.\n   * @param {Number} [endSlice = string.length] - See the link.\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/slice\n   * @description Synonym for\n   * [String#slice]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/slice}.\n   */\n  slice(beginSlice, endSlice) {\n    return new Str(this.$.slice.apply(this.$, arguments));\n  }\n\n  /**\n   * @method Str#split\n   * @public\n   * @param {RegExp|String} [separator] - See the link.\n   * @returns {Arr|Super} D-Wrap of the array.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/split\n   * @description Synonym for\n   * [String#split]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/split}.\n   */\n  split(separator) {\n    return D(this.$.split.apply(this.$, arguments));\n  }\n\n  /**\n   * @method Str#startsWith\n   * @public\n   * @param {String} searchString - See the link.\n   * @param {Number} [position = 0] - See the link.\n   * @returns {Boolean} If the string ends with the argument string.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n   * @description Synonym for\n   * [String#startsWith]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith}.\n   */\n  startsWith(searchString, position = 0) {\n    return this.$.indexOf.apply(this.$, arguments) === position;\n  }\n\n  /**\n   * @method Str#substr\n   * @public\n   * @param {Number} [start = 0] - See the link.\n   * @param {Number} [length = string.length] - See the link.\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/substr\n   * @description Synonym for\n   * [String#substr]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/substr}.\n   */\n  substr(start, length) {\n    return new Str(this.$.substr.apply(this.$, arguments));\n  }\n\n  /**\n   * @method Str#substring\n   * @public\n   * @param {Number} [indexStart = 0] - See the link.\n   * @param {Number} [indexEnd = string.length] - See the link.\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/substring\n   * @description Synonym for\n   * [String#substring]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/substring}.\n   */\n  substring(indexStart, indexEnd) {\n    return new Str(this.$.substring.apply(this.$, arguments));\n  }\n\n  /**\n   * @method Str#toCamelCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Removes following regexp /\\s\\-_\\./ making the string camel cased.\n   *\n   * @example\n   * new Str('spinal-case').toCamelCase().$;  // 'spinalCase'\n   * new Str('_snake_case_').toCamelCase().$; // 'snakeCase'\n   */\n  toCamelCase() {\n    return new Str(trim(this.$)\n      .replace(/[\\s\\-_\\.]+/g, '-')\n      .replace(/\\-[^\\-]/g, (match) => match[1].toUpperCase())\n      .replace(/^[\\S]/, (match) => match.toLowerCase())\n    );\n  }\n\n  /**\n   * @method Str#toCapitalCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Removes following regexp /\\-_\\./ making the string capital letter cased.\n   *\n   * @example\n   * new Str('spinal-case').toCapitalCase().$;  // 'Spinal Case'\n   * new Str('_snake_case_').toCapitalCase().$; // 'Snake Case'\n   */\n  toCapitalCase() {\n    return new Str(trim(this.$)\n      .replace(/[\\s\\-_\\.]+/g, ' ')\n      .replace(/[\\S]/g, (match) => (\n        match.toLowerCase() === match ? match : ` ${ match }`\n      ))\n      .replace(/\\s[\\S]/g, (match) => match.toUpperCase())\n      .replace(/\\s+/g, ' ')\n      .replace(/^\\s/, '')\n      .replace(/^[\\S]/, (match) => match.toUpperCase())\n    );\n  }\n\n  /**\n   * @method Str#toDotCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Removes following regexp /\\-_\\./ making the string dot cased.\n   *\n   * @example\n   * new Str('spinal-case').toDotCase().$;  // 'spinal.case'\n   * new Str('_snake_case_').toDotCase().$; // 'snake.case'\n   */\n  toDotCase() {\n    return new Str(trim(this.$)\n      .replace(/[\\s\\-_\\.]+/g, '.')\n      .replace(/[^\\.]/g, (match) => (\n        match.toLowerCase() === match ? match : `.${ match }`\n      ))\n      .replace(/\\.+/g, '.')\n      .replace(/^\\./, '')\n      .toLowerCase()\n    );\n  }\n\n  /**\n   * @method Str#toHyphenCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Removes following regexp /\\s\\-_\\./ making the string camel cased.\n   *\n   * @example\n   * new Str('camelCase').toSpinalCase().$;    // 'camel-case'\n   * new Str('_snake_case_').toSpinalCase().$; // 'snake-case'\n   */\n  toHyphenCase() {\n    return new Str(trim(this.$)\n      .replace(/[\\s\\-_\\.]+/g, '-')\n      .replace(/[^\\-]/g, (match) => (\n        match.toLowerCase() === match ? match : `-${ match }`\n      ))\n      .replace(/\\-+/g, '-')\n      .replace(/^\\-/, '')\n      .toLowerCase()\n    );\n  }\n\n  /**\n   * @method Str#toLowerCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase\n   * @description Synonym for\n   * [String#toLowerCase]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase}.\n   *\n   * @example\n   * new Str('UPPER-CASE').toLowerCase().$;  // 'upper-case'\n   */\n  toLowerCase() {\n    return new Str(this.$.toLowerCase());\n  }\n\n  /**\n   * @method Str#toSnakeCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Removes following regexp /\\s\\-\\./ making the string spinal cased.\n   *\n   * @example\n   * new Str('spinal-case').toSnakeCase().$; // 'spinal_case'\n   * new Str('camelCase').toSnakeCase().$;   // 'camel_case'\n   */\n  toSnakeCase() {\n    return new Str(trim(this.$)\n      .replace(/[\\s\\-_\\.]+/g, '_')\n      .replace(/[^_]/g, (match) => (\n        match.toLowerCase() === match ? match : `_${ match }`\n      ))\n      .replace(/_+/g, '_')\n      .replace(/^_/, '')\n      .toLowerCase()\n    );\n  }\n\n  /**\n   * @method Str#toSpaceCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Removes following regexp /\\-_\\./ making the string space cased.\n   *\n   * @example\n   * new Str('spinal-case').toSpaceCase().$;  // 'spinal case'\n   * new Str('_snake_case_').toSpaceCase().$; // 'snake case'\n   */\n  toSpaceCase() {\n    return new Str(trim(this.$)\n      .replace(/[\\s\\-_\\.]+/g, ' ')\n      .replace(/[\\S]/g, (match) => (\n        match.toLowerCase() === match ? match : ` ${ match }`\n      ))\n      .replace(/\\s+/g, ' ')\n      .replace(/^\\s/, '')\n      .toLowerCase()\n    );\n  }\n\n  toString() {\n    return this.$;\n  }\n\n  /**\n   * @method Str#toUpperCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase\n   * @description Synonym for\n   * [String#toUpperCase]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase}.\n   *\n   * @example\n   * new Str('lower-case').toUpperCase().$;  // 'LOWER-CASE'\n   */\n  toUpperCase() {\n    return new Str(this.$.toUpperCase());\n  }\n\n  /**\n   * @method Str#trim\n   * @public\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trim\n   * @description Synonym for\n   * [String#trim]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trim}.\n   */\n  trim() {\n    return new Str(this.$.replace(/^[\\s\\ufeff\\u00a0]+|[\\s\\ufeff\\u00a0]+$/g, ''));\n  }\n\n  /**\n   * @method Str#trimLeft\n   * @public\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trimLeft\n   * @description Synonym for\n   * [String#trimLeft]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trimLeft}.\n   */\n  trimLeft() {\n    return new Str(this.$.replace(/^[\\s\\ufeff\\u00a0]+/, ''));\n  }\n\n  /**\n   * @method Str#trimRight\n   * @public\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trimRight\n   * @description Synonym for\n   * [String#trimRight]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trimRight}.\n   */\n  trimRight() {\n    return new Str(this.$.replace(/[\\s\\ufeff\\u00a0]+$/, ''));\n  }\n}\n\ndefineProperties(Str.prototype, {\n  [Symbol.toStringTag]: 'Str'\n});\n\nfunction trim(string) {\n  return string.replace(/^[\\s\\-_\\.]+|[\\s\\-_\\.]+$/g, '');\n}\n\n/**\n * @function parseJSON\n * @public\n * @param {String} [json = null] - String to parse.\n * @param {Object} [options] - Options.\n * @param {Boolean|*} [options.numbers] - If it is needed to parse number-like strings as numbers.\n * @param {Boolean|*} [options.dates] - If it is needed to parse date-like string as dates.\n * Date-like string is considered to match ^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d\\.\\d\\d\\dZ?$\n * @param {JSONCallback} [callback] - Callback that called on every iteration.\n * @returns {DWrap} D-Wrap of found match.\n * @description Method for parsing json.\n *\n * @example\n * parseJSON('{ \"a\": 1 }').$;                                           // { a: 1 }\n * parseJSON('{ \"a\": \"1\" }', { numbers: true }).$;                      // { numbers: true }\n * parseJSON('{ \"a\": \"1999-12-31T23:59:59.999Z\" }', { dates: true }).$; // { a: Date {...} }\n */\nexport function parseJSON(json = null, options = {}, callback) {\n  if (arguments.length <= 1) {\n    return D(JSON.parse(json));\n  }\n\n  if (isFunction(options)) {\n    callback = options;\n    options = {};\n  }\n\n  const { numbers, dates } = options;\n  const parsed = JSON.parse(json, function (key, value) {\n    if (dates && /^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d\\.\\d\\d\\dZ?$/.test(value)) {\n      value = new Date(value);\n    } else if (numbers && isNumberLike(value) && isString(value)) {\n      value = Number(value);\n    }\n\n    return callback ? callback.apply(this, arguments) : value;\n  });\n\n  return D(parsed);\n}\n\nconstructors[2].push({\n  check: isString,\n  cls: Str\n});\n\nexport default Str;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Str.js\n **/","/**\n * @module constants/regexpSpecialCharacters\n * @private\n * @description Exports special characters for RegExp.\n */\n\n/**\n * @const\n * @name module:constants/regexpSpecialCharacters~regexpSpecialCharacters\n * @type {String[]}\n */\nexport default [\n  '.',\n  '+', '*', '?',\n  '(', ')',\n  '[', ']',\n  '{', '}',\n  '<', '>',\n  '^', '$',\n  '!',\n  '=',\n  ':',\n  '-',\n  '|',\n  ',',\n  '\\\\'\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/constants/regexpSpecialCharacters.js\n **/","/**\r\n * @module constants/formats\r\n * @private\r\n * @description Exports different types of formatting for {@link Date#format}.\r\n */\r\n\r\nimport Super from '../Super';\r\nimport Str from '../Str';\r\n\r\nconst zero = new Str('0');\r\nconst daysOfTheWeekNames = [\r\n  'Sunday',\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday'\r\n];\r\nconst daysOfTheWeekAliases = new Super(daysOfTheWeekNames).map((value) => value.slice(0, 3)).$;\r\nconst monthsNames = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'Jule',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December'\r\n];\r\nconst monthsAliases = new Super(monthsNames).map((value) => value.slice(0, 3)).$;\r\n\r\n/**\r\n * @callback module:constants/formats~matchCallback\r\n * @param {Dat} date - D-wrap of a date to apply format to.\r\n * @param {String} string - Matched applied expression.\r\n */\r\n\r\n/**\r\n * @typedef {Object} module:constants/formats~formatExpr\r\n * @property {String} format - Matched format.\r\n * @property {module:constants/formats~matchCallback} match - Callback if there was a match.\r\n */\r\n\r\n/**\r\n * @type {module:constants/formats~formatExpr[]}\r\n * @description Array of different formats.\r\n */\r\nexport default [\r\n  {\r\n    format: 'ccc',\r\n    match: (date, utc) => round(date[utc]('c'), 3)\r\n  },\r\n  {\r\n    format: 'c',\r\n    match: (date, utc) => date[utc]('c')\r\n  },\r\n  {\r\n    format: 'ss',\r\n    match: (date, utc) => round(date[utc]('s'), 2)\r\n  },\r\n  {\r\n    format: 's',\r\n    match: (date, utc) => date[utc]('s')\r\n  },\r\n  {\r\n    format: 'mm',\r\n    match: (date, utc) => round(date[utc]('m'), 2)\r\n  },\r\n  {\r\n    format: 'm',\r\n    match: (date, utc) => date[utc]('m')\r\n  },\r\n  {\r\n    format: 'hh',\r\n    match: (date, utc) => round(date[utc]('h'), 2)\r\n  },\r\n  {\r\n    format: 'h',\r\n    match: (date, utc) => date[utc]('h')\r\n  },\r\n  {\r\n    format: 'dddd',\r\n    match: (date, utc) => daysOfTheWeekNames[date[utc]('dw')]\r\n  },\r\n  {\r\n    format: 'ddd',\r\n    match: (date, utc) => daysOfTheWeekAliases[date[utc]('dw')]\r\n  },\r\n  {\r\n    format: 'dd',\r\n    match: (date, utc) => round(date[utc]('d'), 2)\r\n  },\r\n  {\r\n    format: 'd',\r\n    match: (date, utc) => date[utc]('d')\r\n  },\r\n  {\r\n    format: 'MMMM',\r\n    match: (date, utc) => monthsNames[date[utc]('M') - 1]\r\n  },\r\n  {\r\n    format: 'MMM',\r\n    match: (date, utc) => monthsAliases[date[utc]('M') - 1]\r\n  },\r\n  {\r\n    format: 'MM',\r\n    match: (date, utc) => round(date[utc]('M'), 2)\r\n  },\r\n  {\r\n    format: 'M',\r\n    match: (date, utc) => date[utc]('M')\r\n  },\r\n  {\r\n    format: 'yyyy',\r\n    match: (date, utc) => round(date[utc]('y'), 4)\r\n  },\r\n  {\r\n    format: 'yy',\r\n    match: (date, utc) => String(date[utc]('y')).slice(-2)\r\n  },\r\n  {\r\n    format: 'y',\r\n    match: (date, utc) => date[utc]('y')\r\n  }\r\n];\r\n\r\n/**\r\n * @function round\r\n * @private\r\n * @param {Number} number - Number to round.\r\n * @param {Number} digits - Number of the digits of the output.\r\n * @returns {String} String with necessary additional starting zeroes.\r\n */\r\nfunction round(number, digits) {\r\n  const string = String(number);\r\n  let zeroes = digits - string.length;\r\n\r\n  zeroes = zeroes < 0 ? 0 : zeroes;\r\n\r\n  return zero.repeat(zeroes).$ + string;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/constants/formats.js\n **/","/**\r\n * @module Elem\r\n * @private\r\n * @mixin\r\n * @description Exports Elem class.\r\n */\r\n\r\nimport Super from './Super';\r\nimport Arr, { array } from './Arr';\r\nimport { blob } from './BlobObject';\r\nimport Fetch from './Fetch';\r\nimport Promise from './Promise';\r\nimport Str from './Str';\r\nimport { switcher } from './Switcher';\r\nimport constructors from './constants/constructors';\r\nimport appliedRegExps from './constants/appliedRegExps';\r\nimport elements from './constants/elements';\r\nimport { canvasGetMethods, canvasRestMethods } from './constants/canvasMethods';\r\nimport {\r\n  isArray, isArrayLike, isElement, isFunction,\r\n  isInteger, isNumber, isNull, isString,\r\n  assign, dynamicDefineProperties, defineProperties, toArray,\r\n  validate, toStringTag, iterate, crossClassMethods, Symbol\r\n} from './helpers';\r\n\r\n/**\r\n * @typedef {String} ElemEventString\r\n * @public\r\n * @description A string containing events separated by a comma with zero or more spaces or just spaces.\r\n */\r\n\r\n/**\r\n * @callback ElemValueCallback\r\n * @public\r\n * @param {String} value - Old value.\r\n * @param {Elem} elem - Current element.\r\n * @param {Number} index - Index in the set of the elements.\r\n */\r\n\r\n/**\r\n * @callback ElemSetOfCallback\r\n * @public\r\n * @param {Element} created - Created element.\r\n * @param {*} value - Value of the iterated element in the object.\r\n * @param {Key} key - Key of the iterated element in the object.\r\n * @param {*} object - Object that is iterated over.\r\n * @param {Element} elem - Current element.\r\n * @param {Number} index - Index of the current element.\r\n */\r\n\r\n/**\r\n * @callback ValidateCallback\r\n * @public\r\n * @param {*} value - Element value.\r\n * @param {Element} elem - Element to validate.\r\n * @param {Number} index - Index of the element.\r\n */\r\n\r\n/**\r\n * @callback CtxCallback\r\n * @public\r\n * @param {CanvasRenderingContext2D} ctx - Canvas rendering context.\r\n */\r\n\r\n/**\r\n * @callback Listener\r\n * @public\r\n * @param {Event} e - Fired event.\r\n * @param {Element} elem - Element on which the listener was called.\r\n * @param {Number} index - Index of the element on which the listener was called.\r\n */\r\n\r\n/**\r\n * @callback ElemRemoveListeners\r\n * @public\r\n * @param {...ElemEventString} events - If at least one argument present only removes event listeners specified\r\n * by the events in the arguments.\r\n */\r\n\r\nconst nativeDocument = global.document;\r\nconst empty = nativeDocument.createElement('div');\r\nconst eventSeparator = /, *| +/;\r\nconst textProperty = new Super(Node.prototype).propertyDescriptor('textContent') ? 'textContent' : 'innerText';\r\nconst classes = {};\r\nconst attrs = {};\r\nconst windowsDwayneData = new Arr();\r\nconst inputElements = 'input, select, textarea, datalist, keygen, output';\r\nconst dataURLFetch = new Fetch({ responseType: 'arraybuffer' });\r\nconst refSwitcher = switcher('strictEquals', 'href')\r\n  .case(\r\n    ['img', 'script', 'iframe', 'audio', 'video'],\r\n    'src'\r\n  )\r\n  .case(\r\n    'form',\r\n    'action'\r\n  );\r\nconst filterSwitcher = switcher('call', (selector) => selector)\r\n  .case(\r\n    isString,\r\n    (selector) =>\r\n      (elem) => new Elem(elem).is(selector)\r\n  )\r\n  .case(\r\n    [isArray, isElem],\r\n    (elems) => {\r\n      elems = new Arr(elems);\r\n\r\n      return (elem) => elems.indexOf(elem) !== -1;\r\n    }\r\n  );\r\nconst formDataSwitcher = switcher('strictEquals', ({ value }) => value)\r\n  .case('file', ({ files }) => files);\r\nconst innerSwitcher = switcher('strictEquals', 0)\r\n  .case('padding-box', (paddings) => paddings)\r\n  .case('border-box', (paddings, borders) => paddings + borders);\r\nconst outerSwitcher = switcher('strictEquals', (borders, paddings) => borders + paddings)\r\n  .case('padding-box', (borders) => borders)\r\n  .case('border-box', 0);\r\n\r\n/**\r\n * @class Elem\r\n * @extends Arr\r\n * @public\r\n * @param {Element|Element[]} [elem = []] - An element or an array of elements to wrap.\r\n * @returns {Elem} Instance of Elem.\r\n * @description Wrap of an elements set. Also has all methods from from\r\n * [CanvasRenderingContext2D]{@link https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D}.\r\n * Getters methods return the same as methods from CanvasRenderingContext2D and the rest return this.\r\n * Work for the first canvas element in the set.\r\n *\r\n * @example\r\n * new Elem(document.body);\r\n * new Elem(document.querySelectorAll('.cls'));\r\n * new Elem(document.getElementsByClassName('cls'));\r\n */\r\nexport class Elem extends Arr {\r\n  constructor(elem = []) {\r\n    super((() => {\r\n      let element = elem;\r\n\r\n      if (isArrayLike(element) && (\r\n        isWindow(element) ||\r\n        isHTMLDocument(element) ||\r\n        isElement(element)\r\n      )) {\r\n        element = [element];\r\n      }\r\n\r\n      return new Arr(toArray(new Super(element).$, true)).object((elems, elem) => {\r\n        if ((isElement(elem) || isWindow(elem) || isHTMLDocument(elem) || toStringTag(elem) === 'CSSStyleRule') && elems.indexOf(elem) === -1) {\r\n          elems.push(elem);\r\n        }\r\n      }, []).$;\r\n    })());\r\n\r\n    this.$$ = elem;\r\n\r\n    this.forEach(addDwayneData);\r\n\r\n    /**\r\n     * @member {Element[]} Elem#$\r\n     * @type {Element[]}\r\n     * @public\r\n     * @description Constructed element set.\r\n     */\r\n\r\n    /**\r\n     * @member {*} Elem#$$\r\n     * @type {*}\r\n     * @public\r\n     * @description Initial element set.\r\n     */\r\n  }\r\n\r\n  /**\r\n   * @method Elem#add\r\n   * @public\r\n   * @param {...(String|Elem|Element|Element[])} elements - Each argument is a selector, or Elem, or Element, or array of Elements.\r\n   * @returns {Elem} Returns this.\r\n   * @description Method for adding new elements to the set.\r\n   *\r\n   * @example\r\n   *\r\n   */\r\n  add(...elements) {\r\n    iterate(arguments, (elem) => {\r\n      toFind(elem).forEach((elem) => {\r\n        if (this.indexOf(elem) === -1) {\r\n          this.push(elem);\r\n        }\r\n      });\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Elem#addClass\r\n   * @public\r\n   * @param {...String} classes - Classes to add.\r\n   * @returns {Elem} Returns this.\r\n   * @description Method for adding classes to the all the elements in the set.\r\n   *\r\n   * @example\r\n   * elem.addClass('red', 'round');\r\n   */\r\n  addClass(...classes) {\r\n    return this.forEach((elem) => {\r\n      const list = elem.classList;\r\n\r\n      list.add.apply(list, classes);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem#addHTML\r\n   * @public\r\n   * @param {String} html - HTML to add.\r\n   * @returns {Elem} Returns this.\r\n   * @description Method for adding HTML to the all elements in the set.\r\n   *\r\n   * @example\r\n   * elem.addHTML('&lt;div&gt;1&lt;/div&gt;');\r\n   */\r\n  addHTML(html) {\r\n    return this.forEach((elem) => {\r\n      elem.innerHTML += html;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem#addRule\r\n   * @public\r\n   * @param {String} name - Name of the rule.\r\n   * @param {String} selector - Selector for the rule\r\n   * @param {Object.<String, String>} style - Style for the selector.\r\n   * @returns {Elem} Returns this.\r\n   * @description Method for adding css styles into the first style tag in the set.\r\n   * Note: style element should be inside the document.\r\n   *\r\n   * @example\r\n   * style.addRule('img-size', 'img.square', {\r\n   *   width: '40px !important',\r\n   *   height: '40px !important'\r\n   * });\r\n   */\r\n  addRule(name, selector, style) {\r\n    this.some((elem) => {\r\n      if (getName(elem) === 'style') {\r\n        const { sheet } = elem;\r\n        const { length } = sheet.cssRules;\r\n        const rules = new Super(style).word((value, property) => (\r\n          `${ new Str(property).toHyphenCase() }: ${ value };\\n`\r\n        ));\r\n\r\n        sheet.insertRule(\r\n          `${ selector } {${ rules && '\\n' }${ rules }}`,\r\n          length\r\n        );\r\n        sheet.cssRules[length].dwayneData = { name };\r\n\r\n        return true;\r\n      }\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Elem#addText\r\n   * @public\r\n   * @param {String} text - Text to add.\r\n   * @returns {Elem} Returns this.\r\n   * @description Method for adding text to the all elements in the set.\r\n   *\r\n   * @example\r\n   * elem.addText('123');\r\n   */\r\n  addText(text) {\r\n    return this.forEach((elem) => {\r\n      elem.appendChild(nativeDocument.createTextNode(text));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem#apply\r\n   * @public\r\n   * @param {...String} strings - Strings to apply.\r\n   * @returns {Elem} Returns this.\r\n   * @description Method that is a shorthand for many other methods.\r\n   * All shorthands can be separated with space and written within one string.\r\n   *\r\n   * @example\r\n   * elem.apply(\r\n   *   '#id .c1 .c2 @border(1px solid black) $disabled $attr(some value) *(Click me!)'\r\n   * );\r\n   * // shorthand for\r\n   * // elem\r\n   * //   .id('id')\r\n   * //   .addClass('c1', 'c2')\r\n   * //   .border('1px solid black')\r\n   * //   .disabled()\r\n   * //   .attr('attr', 'some value')\r\n   * //   .text('Click me!');\r\n   * // There is a full list of possible types of syntax below...\r\n   *\r\n   * elem.apply('#id');                         // shorthand for elem.id('id');\r\n   * elem.apply('.c1 .c2');                     // shorthand for elem.addClass('c1', 'c2');\r\n   * elem.apply('-.c1 -.c2');                   // shorthand for elem.removeClass('c1', 'c2');\r\n   * elem.apply('-@float -@display');           // shorthand for elem.removeCSS('float', 'display');\r\n   * elem.apply('-$a1 -$a2');                   // shorthand for elem.removeAttr('a1', 'a2');\r\n   * elem.apply('*(some text)');                // shorthand for elem.text('set text');\r\n   * elem.apply('&(&lt;div&gt;1&lt;/div&gt;)'); // shorthand for elem.html('&lt;div&gt;1&lt;/div&gt;');\r\n   * elem.apply('@float(right)');               // shorthand for elem.css('float', 'right');\r\n   * elem.apply('@transform(scale(5px))');      // shorthand for elem.css('float', 'right');\r\n   * elem.apply('@margin(2px 2px)');            // shorthand for elem.css('margin', '2px 2px');\r\n   * elem.apply('@marginLeft(2px)');            // shorthand for elem.css('marginLeft', '2px 2px');\r\n   * elem.apply('@margin-left(2px)');           // shorthand for elem.css('margin-left', '2px 2px');\r\n   * elem.apply('$attr(some value)');           // shorthand for elem.attr('attr', 'some value');\r\n   * elem.apply('$attr');                       // shorthand for elem.attr('attr', '');\r\n   */\r\n  apply(...strings) {\r\n    let applied;\r\n    let setApplied;\r\n    let callback;\r\n    let name;\r\n    let np1;\r\n    let slice;\r\n\r\n    new Str(new Arr(arguments).join(' '))\r\n      .split(/(\\s+)/)\r\n      .forEach((string) => {\r\n        if (!applied) {\r\n          np1 = string.slice(0, 1);\r\n          callback = appliedRegExps[np1];\r\n          slice = 1;\r\n\r\n          if (callback && !isFunction(callback)) {\r\n            callback = callback[string.slice(1, 2)];\r\n            slice = 2;\r\n          }\r\n\r\n          if (/^\\s+$/.test(string) || !callback) {\r\n            return;\r\n          }\r\n\r\n          name = string.slice(slice).match(/^[^()]+/);\r\n\r\n          if (!name && (np1 !== '*' && np1 !== '&')) {\r\n            return;\r\n          }\r\n\r\n          applied = {\r\n            name: name ? name[0] : '',\r\n            args: string.slice(slice + (name ? name[0] : '').length),\r\n            callback\r\n          };\r\n\r\n          setApplied = true;\r\n        }\r\n\r\n        if (!setApplied) {\r\n          applied.args += string;\r\n        }\r\n\r\n        if (!applied.args || /^\\([\\s\\S]+\\)$/.test(applied.args)) {\r\n          applied.callback(this, applied.name, applied.args.replace(/^\\(|\\)$/g, ''));\r\n          applied = null;\r\n        }\r\n\r\n        setApplied = false;\r\n      });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Elem#attr\r\n   * @public\r\n   * @param {String|Object.<String, String|ElemValueCallback>} [attr] - Name of the attribute to get or\r\n   * an object of the format { [attrName]: value, ... } to set attributes.\r\n   * @param {String|ElemValueCallback} [value] - If the first argument is a string\r\n   * it should be a value to set for that attribute.\r\n   * @returns {Super|String|Elem} If no arguments passed, D-Wrap of attributes of the first element in the set\r\n   * returned, if 1 string argument is passed the value of the attribute of the first element in the set\r\n   * returned otherwise returns this.\r\n   * @description Method for getting/setting attributes.\r\n   *\r\n   * @example\r\n   * elem.attr('attr1', 'value1'); // attribute attr1 set to 'value1' and this returned\r\n   * elem.attr('attr1');           // 'value1'\r\n   * elem.attr({\r\n   *   attr1: 'value3',            // attribute attr1 set to 'value3'\r\n   *   attr2: 'value2'             // attribute attr2 set to 'value2'\r\n   * });                           // this returned\r\n   * elem.attr().$;                // { attr1: 'value3', attr2: 'value2' }\r\n   */\r\n  attr(attr, value) {\r\n    const elem = getElem(this);\r\n\r\n    if (!arguments.length) {\r\n      return new Super(elem.attributes).object((o, attr) => {\r\n        o[attr.name] = attr.value;\r\n      });\r\n    }\r\n\r\n    if (arguments.length <= 1 && isString(attr)) {\r\n      return elem.getAttribute(attr);\r\n    }\r\n\r\n    if (arguments.length >= 2) {\r\n      attr = { [attr]: value };\r\n    }\r\n\r\n    new Super(attr).forEach((value, key) => {\r\n      this.forEach((elem, index) => {\r\n        elem.setAttribute(key, isFunction(value) ? value(elem.getAttribute(key), elem, index) : value);\r\n      });\r\n    });\r\n\r\n    crossClassMethods.transformAnchor(this);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Elem#blob\r\n   * @public\r\n   * @param {Object} [options = {}] - Options that are passed into {@link blob}.\r\n   * @returns {Promise.<BlobObject>} New instance of promise.\r\n   * @description Returns a {@link BlobObject} Promise. Works with image or canvas first element.\r\n   *\r\n   * @example\r\n   * image.blob().then((blob) => console.log(blob));  // BlobObject\r\n   * canvas.blob().then((blob) => console.log(blob)); // BlobObject\r\n   */\r\n  blob(options = {}) {\r\n    return new Promise((resolve, reject) => {\r\n      const elem = this.first();\r\n      const { name } = elem;\r\n\r\n      if (name !== 'img' && name !== 'canvas') {\r\n        reject(new Error('First element in the set isn\\'t an image or a canvas! (Elem#blob)'));\r\n      }\r\n\r\n      if (name === 'canvas') {\r\n        return resolve(elem);\r\n      }\r\n\r\n      elem\r\n        .load()\r\n        .then(() => {\r\n          if (elem.isBroken()) {\r\n            return reject(new Error('The image is broken! (Elem#blob)'));\r\n          }\r\n\r\n          const canvas = new Elem(nativeDocument).canvas();\r\n          const width = elem.width();\r\n          const height = elem.height();\r\n\r\n          canvas\r\n            .width(width)\r\n            .height(height)\r\n            .drawImage(elem.$[0], 0, 0);\r\n\r\n          resolve(canvas);\r\n        });\r\n    })\r\n      .then((canvas) => dataURLFetch(canvas.dataURL()))\r\n      .then(({ data: ab }) => blob(ab, options));\r\n  }\r\n\r\n  /**\r\n   * @method Elem#blur\r\n   * @returns {Elem} Returns this.\r\n   * @see https://developer.mozilla.org/en/docs/Web/API/HTMLElement/blur\r\n   * @description Synonym for\r\n   * [HTMLElement#blur]{@link https://developer.mozilla.org/en/docs/Web/API/HTMLElement/blur}.\r\n   */\r\n  blur() {\r\n    return this.forEach((elem) => {\r\n      elem.blur();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem#calcCSS\r\n   * @param {String} [pseudo] - See the link.\r\n   * @returns {CSSStyleDeclaration} See the link.\r\n   * @see https://developer.mozilla.org/en/docs/Web/API/Window/getComputedStyle\r\n   * @description Synonym for\r\n   * [getComputedStyle]{@link https://developer.mozilla.org/en/docs/Web/API/Window/getComputedStyle}.\r\n   * Returns computed style for the first element in the set or undefined.\r\n   */\r\n  calcCSS(pseudo = null) {\r\n    return getComputedStyle(getElem(this), pseudo);\r\n  }\r\n\r\n  /**\r\n   * @method Elem#changeRule\r\n   * @public\r\n   * @param {String} name - Name of the rule.\r\n   * @param {Object.<String, String>} style - Style for the selector.\r\n   * @returns {Elem} Returns this.\r\n   * @description Method for changing css styles in the first style tag in the set.\r\n   * Note: style element should be inside the document.\r\n   *\r\n   * @example\r\n   * style.changeRule('img-size', {\r\n   *   width: '50px !important',\r\n   *   height: '50px !important'\r\n   * });\r\n   */\r\n  changeRule(name, style) {\r\n    this.some((elem) => {\r\n      if (getName(elem) === 'style') {\r\n        const { value: rule } = new Arr(elem.sheet.cssRules).find((rule) => rule.dwayneData && rule.dwayneData.name === name) || {};\r\n\r\n        if (rule) {\r\n          new Elem(rule).css(style);\r\n\r\n          return true;\r\n        }\r\n      }\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Elem#child\r\n   * @public\r\n   * @param {Number|String|Elem|Element|Element[]} element - If the argument is a number a wrap of the set of the children\r\n   * of this index of each element in the set returned otherwise an element to put into this element, a collection\r\n   * or a selector of it.\r\n   * @returns {Elem} Returns a wrap of children or inserted elements.\r\n   * @description Method is similar to\r\n   * [Node#appendChild]{@link https://developer.mozilla.org/en/docs/Web/API/Node/appendChild}.\r\n   *\r\n   * @example\r\n   * const child = elem.child(1);\r\n   *\r\n   * elem.child(elem2);\r\n   * elem.child(document.getElementById('id'));\r\n   * elem.child('#id div.c1');\r\n   */\r\n  child(element) {\r\n    if (isInteger(element) && element >= 0) {\r\n      return this.children().elem(element);\r\n    }\r\n\r\n    return toFind(element).into(this);\r\n  }\r\n\r\n  /**\r\n   * @method Elem#children\r\n   * @public\r\n   * @returns {Elem} D-Wrap of the children of the first element in the set.\r\n   * @description Method for getting element's children.\r\n   *\r\n   * @example\r\n   * const children = elem.children();\r\n   */\r\n  children() {\r\n    return new Elem(this.length ? this.$[0].children : []);\r\n  }\r\n\r\n  /**\r\n   * @method Elem#class\r\n   * @public\r\n   * @param {String} [cls] - If it's present it has to contain class attribute to set.\r\n   * @returns {Arr|Elem} If the argument is present this returned otherwise a wrap of the classes array returned.\r\n   * @description Method for getting/setting classes.\r\n   *\r\n   * @example\r\n   * elem.class('c1 c2'); // class set to 'c1 c2'\r\n   * elem.class().$;      // ['c1', 'c2']\r\n   */\r\n  class(cls) {\r\n    if (!arguments.length) {\r\n      return new Arr(getElem(this).className.split(' '));\r\n    }\r\n\r\n    return this.forEach((elem) => {\r\n      elem.className = cls;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem#click\r\n   * @returns {Elem} Returns this.\r\n   * @see https://developer.mozilla.org/en/docs/Web/API/HTMLElement/click\r\n   * @description Synonym for\r\n   * [HTMLElement#click]{@link https://developer.mozilla.org/en/docs/Web/API/HTMLElement/click}.\r\n   */\r\n  click() {\r\n    return this.forEach((elem) => {\r\n      elem.click();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem#clone\r\n   * @public\r\n   * @param {Boolean|*} [deep = false] - See thee link.\r\n   * @returns {Elem} New instance of Elem.\r\n   * @see https://developer.mozilla.org/en/docs/Web/API/Node/cloneNode\r\n   * @description Synonym for\r\n   * [Node#cloneNode]{@link https://developer.mozilla.org/en/docs/Web/API/Node/cloneNode}.\r\n   */\r\n  clone(deep = false) {\r\n    return this.object((elems, elem) => {\r\n      elems.add(elem.cloneNode(!!deep));\r\n    }, new Elem());\r\n  }\r\n\r\n  /**\r\n   * @method Elem#closest\r\n   * @public\r\n   * @param {String} selector - See the link.\r\n   * @returns {Elem} Set of the closest elements.\r\n   * @description Synonym for\r\n   * [Element#closest]{@link https://developer.mozilla.org/en/docs/Web/API/Element/closest}.\r\n   */\r\n  closest(selector) {\r\n    return this.object((elems, elem) => {\r\n      while (elem) {\r\n        if (new Elem(elem).is(selector)) {\r\n          return elems.add(elem);\r\n        }\r\n\r\n        elem = elem.parentElement;\r\n      }\r\n    }, new Elem());\r\n  }\r\n\r\n  /**\r\n   * @method Elem#contains\r\n   * @public\r\n   * @param {String|Elem|Element} element - Element to find out if it's within the first element\r\n   * in the set or a selector of it.\r\n   * @returns {Boolean} Returns if the argument within this element.\r\n   * @description Method is extension for\r\n   * [Node#contains]{@link https://developer.mozilla.org/en/docs/Web/API/Node/contains}.\r\n   *\r\n   * @example\r\n   * elem1.contains(elem2);   // true|false\r\n   * elem.contains(selector); // true|false\r\n   */\r\n  contains(element) {\r\n    element = toFind(element);\r\n\r\n    return getElem(this).contains(getElem(element));\r\n  }\r\n\r\n  /**\r\n   * @method Elem#create\r\n   * @public\r\n   * @param {String} type - Type of created element.\r\n   * @param {...String} appliedExpressions - Strings that are passed into {@link Elem#apply}.\r\n   * @returns {Elem} New instance of Elem - wrap of the created element.\r\n   * @description Method for creating elements inside this element. If this element is a document it's just created.\r\n   *\r\n   * @example\r\n   * elem.create('div', '#id .c1 .c2 *Some text*');\r\n   *\r\n   * // also there are shorthands for almost every HTML-element\r\n   * elem.div();\r\n   * elem.input('$type(checkbox) $name(country)');\r\n   */\r\n  create(type, ...appliedExpressions) {\r\n    return this.object((elems, elem) => {\r\n      const element = new Elem(nativeDocument.createElement(type));\r\n\r\n      if (elem !== nativeDocument) {\r\n        element.into(elem);\r\n      }\r\n\r\n      elems.add(element.apply.apply(element, new Arr(arguments).slice(1).$));\r\n    }, new Elem());\r\n  }\r\n\r\n  /**\r\n   * @method Elem#css\r\n   * @public\r\n   * @param {String|Object.<String, String|ElemValueCallback>} [property] - Name of the property to get or\r\n   * an object of the format { [property]: value, ... } to set styles.\r\n   * @param {String|ElemValueCallback} [value] - If the first argument is a string it should be a value to set for that property.\r\n   * @returns {Super|String|Elem} If no arguments passed, D-Wrap of css styles of the element returned,\r\n   * if 1 string argument is passed the value of the property returned otherwise returns this.\r\n   * @description Method for getting/setting styles. Supports !important.\r\n   *\r\n   * @example\r\n   * elem.css('display', 'none'); // display set to 'none' and this returned\r\n   * elem.css('display');         // 'none'\r\n   * elem.css({\r\n   *   display: 'inline',         // display set to 'inline'\r\n   *   cursor: 'pointer'          // cursor set to 'pointer'\r\n   * });                          // this returned\r\n   * elem.css().$;                // { display: 'none', cursor: 'pointer' }\r\n   */\r\n  css(property, value) {\r\n    const style = getElem(this).style;\r\n\r\n    if (!arguments.length) {\r\n      return new Str(style.cssText)\r\n        .split(/; ?/)\r\n\r\n        .object((o, value) => {\r\n          if (value) {\r\n            property = value.split(/: /);\r\n\r\n            o[new Str(property[0]).toCamelCase().$] = property[1];\r\n          }\r\n        });\r\n    }\r\n\r\n    if (arguments.length <= 1 && isString(property)) {\r\n      property = new Str(property).toHyphenCase().$;\r\n\r\n      return style.getPropertyValue(property) + (style.getPropertyPriority(property) ? ' !important' : '');\r\n    }\r\n\r\n    if (arguments.length >= 2) {\r\n      property = { [property]: value };\r\n    }\r\n\r\n    return this.forEach((elem, index) => {\r\n      new Super(property).forEach((value, property) => {\r\n        property = new Str(property).toHyphenCase();\r\n\r\n        if (isFunction(value)) {\r\n          value = value(new Elem(elem).css(property.$), elem, index);\r\n        }\r\n\r\n        elem.style.setProperty(\r\n          property,\r\n          value.replace(/!important$/, ''),\r\n          /!important$/.test(value) ? 'important' : ''\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem#ctx\r\n   * @public\r\n   * @param {String|Object|CtxCallback} [property] - If present and object\r\n   * it's assigned to the canvas rendering context, if function\r\n   * it's called with canvas rendering context argument, if string\r\n   * the value from the second argument is used for assigning\r\n   * this property to canvas rendering context and if not present\r\n   * canvas rendering context returned.\r\n   * @param {*} [value] - See the property argument.\r\n   * @returns {CanvasRenderingContext2D|Elem}\r\n   * @description Rendering context of the first canvas in the set.\r\n   *\r\n   * @example\r\n   * canvas.ctx; // CanvasRenderingContext2D\r\n   */\r\n  ctx(property, value) {\r\n    let ctx;\r\n\r\n    this.some((elem) => {\r\n      if (getName(elem) === 'canvas') {\r\n        ctx = elem.dwayneData.ctx;\r\n\r\n        return true;\r\n      }\r\n    });\r\n\r\n    if (!arguments.length) {\r\n      return ctx;\r\n    }\r\n\r\n    if (isFunction(property)) {\r\n      property(ctx);\r\n    } else {\r\n      if (arguments.length >= 2) {\r\n        property = { [property]: value };\r\n      }\r\n\r\n      assign(ctx, property);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Elem#data\r\n   * @public\r\n   * @param {String|Object.<String, String|ElemValueCallback>} [key] - Name of the data attribute (without data- prefix)\r\n   * to get or an object of the format { [attrName]: value, ... } to set attributes.\r\n   * @param {String|ElemValueCallback} [value] - If the first argument is a string it should be a value to set for that attribute.\r\n   * @returns {Super|String|Elem} If no arguments passed, D-Wrap of dataset of the element returned,\r\n   * if 1 string argument is passed the value of the data attribute returned otherwise returns this.\r\n   * @description Method for getting/setting data attributes. See\r\n   * [HTMLElement#dataset]{@link https://developer.mozilla.org/en/docs/Web/API/HTMLElement/dataset}.\r\n   *\r\n   * @example\r\n   * elem.data('someKey1', 'value'); // attribute data-some-key1 set to 'value1' and this returned\r\n   * elem.data('someKey1');          // 'value1'\r\n   * elem.data({\r\n   *   someKey1: 'value3',           // attribute data-some-key1 set to 'value3'\r\n   *   someKey2: 'value2'            // attribute data-some-key2 set to 'value2'\r\n   * });                             // this returned\r\n   * elem.data().$;                  // { someKey1: 'value3', someKey2: 'value2' }\r\n   */\r\n  data(key, value) {\r\n    const dataset = getElem(this).dataset;\r\n\r\n    if (!arguments.length) {\r\n      return new Super(dataset).object((o, value, key) => {\r\n        o[key] = value;\r\n      });\r\n    }\r\n\r\n    if (arguments.length === 1 && isString(key)) {\r\n      return dataset[key];\r\n    }\r\n\r\n    if (arguments.length >= 2) {\r\n      key = { [key]: value };\r\n    }\r\n\r\n    iterate(key, (value, key) => {\r\n      this.forEach((elem, index) => {\r\n        elem.dataset[key] = isFunction(value) ? value(elem.dataset[key], elem, index) : value;\r\n      });\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Elem#dataURL\r\n   * @param {String} [type = 'image/png'] - See the link\r\n   * @param {Number} [encoderOptions = 0.92] - See the link.\r\n   * @returns {String} Data URL for the first canvas element in the set.\r\n   * @see https://developer.mozilla.org/en/docs/Web/API/HTMLCanvasElement/toDataURL\r\n   * @description Synonym for\r\n   * [HTMLCanvasElement#toDataURL]{@link https://developer.mozilla.org/en/docs/Web/API/HTMLCanvasElement/toDataURL}.\r\n   *\r\n   * @example\r\n   * canvas.dataURL();\r\n   */\r\n  dataURL(type, encoderOptions) {\r\n    const ctx = this.ctx();\r\n\r\n    if (!ctx) {\r\n      return '';\r\n    }\r\n\r\n    return ctx.canvas.toDataURL.apply(ctx.canvas, arguments);\r\n  }\r\n\r\n  /**\r\n   * @method Elem#deleteRule\r\n   * @public\r\n   * @param {String} name - Name of the rule.\r\n   * @returns {Elem} Returns this.\r\n   * @description Method for deleting css styles in a style tag.\r\n   * Note: style element should be inside the document.\r\n   *\r\n   * @example\r\n   * style.deleteRule('img-size');\r\n   */\r\n  deleteRule(name) {\r\n    this.some((elem) => {\r\n      if (getName(elem) === 'style') {\r\n        const rule = new Arr(elem.sheet.cssRules).find((rule) => rule.dwayneData && rule.dwayneData.name === name);\r\n\r\n        if (rule) {\r\n          elem.sheet.deleteRule(rule.key);\r\n\r\n          return true;\r\n        }\r\n      }\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Elem#dispatch\r\n   * @public\r\n   * @param {String|Event} event - Event or a string (new Event(event) is created).\r\n   * @param {Object} [eventInit = {}] - See the link.\r\n   * @param {Boolean} [eventInit.bubbles = true] - See the link.\r\n   * @param {Boolean} [eventInit.cancelable = true] - See the link.\r\n   * @param {Object} [details = {}] - Object that is assigned to the event.\r\n   * @returns {Elem} Returns this.\r\n   * @see https://developer.mozilla.org/en/docs/Web/API/Event/Event\r\n   * @description Synonym for\r\n   * [EventTarget#dispatchEvent]{@link https://developer.mozilla.org/en/docs/Web/API/EventTarget/dispatchEvent}.\r\n   *\r\n   * @example\r\n   * elem.dispatch('click');\r\n   * elem.dispatch('click', { bubbles: false, cancellable: false });\r\n   * elem.dispatch(new CustomEvent('custom-event'));\r\n   */\r\n  dispatch(event, eventInit = {}, details = {}) {\r\n    const { bubbles = true, cancelable = true } = eventInit || {};\r\n    let finalEvent = event;\r\n\r\n    if (!/Event$/.test(toStringTag(finalEvent))) {\r\n      try {\r\n        finalEvent = new Event(finalEvent, eventInit);\r\n      } catch (err) {\r\n        finalEvent = nativeDocument.createEvent('Event');\r\n        finalEvent.initEvent(event, bubbles, cancelable);\r\n      }\r\n\r\n      assign(finalEvent, details);\r\n    }\r\n\r\n    return this.forEach((elem) => {\r\n      elem.dispatchEvent(finalEvent);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem#elem\r\n   * @public\r\n   * @param {Number} [index = 0] - Index of the element of the set to get. Negative index means elem.length + index.\r\n   * @returns {Elem} New instance of Elem.\r\n   *\r\n   * @example\r\n   * elem.elem(1); // a wrap of the element in the set that has index 1\r\n   * elem.elem();  // a wrap of the element in the set that has index 0\r\n   */\r\n  elem(index = 0) {\r\n    if (index < 0) {\r\n      index = this.length + index;\r\n    }\r\n\r\n    return new Elem(this.$[index]);\r\n  }\r\n\r\n  /**\r\n   * @method Elem#filter\r\n   * @public\r\n   * @param {String|Function|Element[]|Elem} [selector = Boolean] - If it's a string the method filters elements with the selector\r\n   * otherwise super.filter is called.\r\n   * @returns {Elem} New instance of Elem.\r\n   * @description Method for filtering elements.\r\n   *\r\n   * @example\r\n   * elem.filter((elem) => new Elem(elem).closest('.parent'));\r\n   * elem.filter(elemsInArray);\r\n   * elem.filter(elemsInElem);\r\n   * elem.filter('.child');\r\n   */\r\n  filter(selector = Boolean) {\r\n    return new Elem(super.filter(filterSwitcher(selector)));\r\n  }\r\n\r\n  /**\r\n   * @method Elem#find\r\n   * @public\r\n   * @param {String|Function} selector - Selector to find.\r\n   * @returns {Elem|{ key: Key, value: * }|null} New instance of Elem if selector is a string\r\n   * otherwise super.find is called.\r\n   * @description Synonym for\r\n   * [Element#querySelectorAll]{@link https://developer.mozilla.org/en/docs/Web/API/Element/querySelectorAll}.\r\n   */\r\n  find(selector) {\r\n    if (!isString(selector)) {\r\n      return super.find(selector);\r\n    }\r\n\r\n    return this.object((elems, elem) => {\r\n      elems.add(find(selector, elem));\r\n    }, new Elem());\r\n  }\r\n\r\n  /**\r\n   * @method Elem#first\r\n   * @public\r\n   * @returns {Elem} New instance of Elem.\r\n   * @description Synonym for elem.elem(0).\r\n   */\r\n  first() {\r\n    return this.elem(0);\r\n  }\r\n\r\n  /**\r\n   * @method Elem#first\r\n   * @public\r\n   * @param {String} [selector = null] - If present, finds first child in every elem that matches the selector.\r\n   * If not, finds first child of each element in the set.\r\n   * @returns {Elem} New instance of Elem.\r\n   * @description Method for finding first children of each element in the set.\r\n   *\r\n   * @example\r\n   * elem.first();       // finds first child of each element in the elem set\r\n   * elem.first('.foo'); // find first child that has foo class of each element in the set\r\n   */\r\n  firstChild(selector = null) {\r\n    return this.object((elems, elem) => {\r\n      const { value: found } = new Arr(elem.children).find((elem) => new Elem(elem).is(selector)) || {};\r\n\r\n      elems.add(found);\r\n    }, new Elem());\r\n  }\r\n\r\n  /**\r\n   * @method Elem#focus\r\n   * @returns {Elem} Returns this.\r\n   * @see https://developer.mozilla.org/en/docs/Web/API/HTMLElement/focus\r\n   * @description Synonym for\r\n   * [HTMLElement#focus]{@link https://developer.mozilla.org/en/docs/Web/API/HTMLElement/focus}.\r\n   */\r\n  focus() {\r\n    return this.forEach((elem) => {\r\n      elem.focus();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem#getFormData\r\n   * @public\r\n   * @returns {Object} Form data object.\r\n   * @description Method allows you to get form data from the form.\r\n   */\r\n  getFormData() {\r\n    return this\r\n      .find(inputElements)\r\n      .object((data, input) => {\r\n        data[input.name] = formDataSwitcher(input.type, [input]);\r\n      }, {}).$;\r\n  }\r\n\r\n  /**\r\n   * @method Elem#getRule\r\n   * @public\r\n   * @param {String} name - Name of the rule.\r\n   * @returns {{ selector: (String|void), rules: Object }} Set of the css rules.\r\n   * @description Method for getting set of the rules under the name.\r\n   * Note: style element should be inside the document.\r\n   *\r\n   * @example\r\n   * style.addRule('img-size', 'img.square', {\r\n   *   width: '40px',\r\n   *   height: '40px'\r\n   * });\r\n   * style.getRule('img-size');\r\n   * // {\r\n   * //   selector: 'img.square',\r\n   * //   rules: {\r\n   * //     width: '40px',\r\n   * //     height: '40px'\r\n   * //   }\r\n   * // }\r\n   */\r\n  getRule(name) {\r\n    let found = {\r\n      selector: undefined,\r\n      rules: {}\r\n    };\r\n\r\n    this.some((elem) => {\r\n      if (getName(elem) === 'style') {\r\n        const { value: rule } = new Arr(elem.sheet.cssRules).find((rule) => rule.dwayneData && rule.dwayneData.name === name) || {};\r\n\r\n        if (rule) {\r\n          found = {\r\n            selector: rule.selectorText,\r\n            rules: new Elem(rule).css().$\r\n          };\r\n\r\n          return true;\r\n        }\r\n      }\r\n    });\r\n\r\n    return found;\r\n  }\r\n\r\n  /**\r\n   * @method Elem#hasAttr\r\n   * @public\r\n   * @param {String} attr - Name of the attribute.\r\n   * @returns {Boolean} If the first element in the set has the attribute.\r\n   * @description Method that returns if the first element in the set has the attribute or not.\r\n   *\r\n   * @example\r\n   * elem.attr('attr', 'value').hasAttr('attr'); // true\r\n   * elem.removeAttr('attr').hasAttr('attr');    // false\r\n   */\r\n  hasAttr(attr) {\r\n    return getElem(this).hasAttribute(attr);\r\n  }\r\n\r\n  /**\r\n   * @method Elem#hasClass\r\n   * @public\r\n   * @param {String} cls - Name of the class.\r\n   * @returns {Boolean} If the first element in the set has the class.\r\n   * @description Method that returns if the first element in the set has the class or not.\r\n   *\r\n   * @example\r\n   * elem.addClass('cls').hasClass('cls');    // true\r\n   * elem.removeClass('cls').hasClass('cls'); // false\r\n   */\r\n  hasClass(cls) {\r\n    return getElem(this).classList.contains(cls);\r\n  }\r\n\r\n  /**\r\n   * @method Elem#height\r\n   * @public\r\n   * @param {*|ElemValueCallback} [height] - Height to set.\r\n   * @returns {Elem|String} If no arguments passed height of the first element in the set returned.\r\n   * Otherwise all elements heights in the set are set to the height argument.\r\n   * @description Gets or sets height.\r\n   *\r\n   * @example\r\n   * elem.height(123);\r\n   * elem.height(); // 123\r\n   */\r\n  height(height) {\r\n    return this.prop.apply(this, new Arr(arguments).unshift('height').$);\r\n  }\r\n\r\n  /**\r\n   * @method Elem#hide\r\n   * @public\r\n   * @returns {Elem} Returns this.\r\n   * @description Hides all elements in the set.\r\n   *\r\n   * @example\r\n   * elem.hide();\r\n   */\r\n  hide() {\r\n    return this.forEach((elem) => {\r\n      elem = new Elem(elem);\r\n\r\n      elem.prop('dwayneData').previousDisplay = elem.css('display');\r\n      elem.css('display', 'none !important');\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem#html\r\n   * @public\r\n   * @param {String|ElemValueCallback|*} [html] - HTML to write instead of current HTML.\r\n   * @returns {Elem|String} If no arguments passed HTML of the first element in the set returned.\r\n   * Otherwise all elements HTML in the set are set to the html argument.\r\n   * @description Gets or sets HTML.\r\n   *\r\n   * @example\r\n   * elem.html('&lt;div&gt;1&lt;/div&gt;');\r\n   * elem.html(); // '&lt;div&gt;1&lt;/div&gt;'\r\n   */\r\n  html(html) {\r\n    if (!arguments.length) {\r\n      return getElem(this).innerHTML;\r\n    }\r\n\r\n    return this.forEach((elem, index) => {\r\n      elem.innerHTML = isFunction(html) ? html(elem.innerHTML, elem, index) : html;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem#id\r\n   * @public\r\n   * @param {String|*} [id] - Id to set.\r\n   * @returns {Elem|String} If no arguments passed id of the first element in the set returned.\r\n   * Otherwise all elements ids in the set are set to the id argument.\r\n   * @description Gets id or sets ids.\r\n   *\r\n   * @example\r\n   * elem.id('unique');\r\n   * elem.id(); // 'unique'\r\n   */\r\n  id(id) {\r\n    if (!arguments.length) {\r\n      return getElem(this).id;\r\n    }\r\n\r\n    return this.forEach((elem) => {\r\n      elem.id = id;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @member {Number} Elem#innerHeight\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @description Method for finding how much height content of the first element can be.\r\n   *\r\n   * @example\r\n   * elem.css({\r\n   *   boxSizing: 'border-box',\r\n   *   height: '200px',\r\n   *   paddingTop: '2px',\r\n   *   paddingBottom: '3px',\r\n   *   borderTop: '1px solid black',\r\n   *   borderBottom: '4px solid black'\r\n   * }).innerHeight; // 190\r\n   * elem\r\n   *   .css('box-sizing', 'content-box')\r\n   *   .innerHeight; // 200\r\n   * elem\r\n   *   .css('box-sizing', 'padding-box')\r\n   *   .innerHeight; // 195\r\n   */\r\n  get innerHeight() {\r\n    const elem = this.$[0];\r\n\r\n    if (!elem) {\r\n      return 0;\r\n    }\r\n\r\n    if (isWindow(elem)) {\r\n      return elem.innerHeight;\r\n    }\r\n\r\n    const {\r\n      borderTopWidth,\r\n      borderBottomWidth,\r\n      boxSizing,\r\n      height,\r\n      paddingTop,\r\n      paddingBottom\r\n    } = this.calcCSS();\r\n    const borders = px(borderTopWidth) + px(borderBottomWidth);\r\n    const paddings = px(paddingTop) + px(paddingBottom);\r\n\r\n    return px(height) - innerSwitcher(boxSizing, [paddings, borders]);\r\n  }\r\n\r\n  /**\r\n   * @member {Number} Elem#innerWidth\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @description Method for finding how much width content of the first element can be.\r\n   *\r\n   * @example\r\n   * elem.css({\r\n   *   boxSizing: 'border-box',\r\n   *   width: '200px',\r\n   *   paddingLeft: '2px',\r\n   *   paddingRight: '3px',\r\n   *   borderLeft: '1px solid black',\r\n   *   borderRight: '4px solid black'\r\n   * }).innerWidth; // 190\r\n   * elem\r\n   *   .css('box-sizing', 'content-box')\r\n   *   .innerWidth; // 200\r\n   * elem\r\n   *   .css('box-sizing', 'padding-box')\r\n   *   .innerWidth; // 195\r\n   */\r\n  get innerWidth() {\r\n    const elem = this.$[0];\r\n\r\n    if (!elem) {\r\n      return 0;\r\n    }\r\n\r\n    if (isWindow(elem)) {\r\n      return elem.innerWidth;\r\n    }\r\n\r\n    const {\r\n      borderLeftWidth,\r\n      borderRightWidth,\r\n      boxSizing,\r\n      paddingLeft,\r\n      paddingRight,\r\n      width\r\n    } = this.calcCSS();\r\n    const borders = px(borderLeftWidth) + px(borderRightWidth);\r\n    const paddings = px(paddingLeft) + px(paddingRight);\r\n\r\n    return px(width) - innerSwitcher(boxSizing, [paddings, borders]);\r\n  }\r\n\r\n  /**\r\n   * @method Elem#into\r\n   * @public\r\n   * @param {String|Elem|Element} element - Element to put this element into or a selector of it.\r\n   * @returns {Elem} Returns this.\r\n   * @description Method is similar to\r\n   * [Node#appendChild]{@link https://developer.mozilla.org/en/docs/Web/API/Node/appendChild}.\r\n   *\r\n   * @example\r\n   * elem.into(elem2);\r\n   * elem.into(document.getElementById('id'));\r\n   * elem.into('#id div.c1');\r\n   */\r\n  into(element) {\r\n    element = toFind(element).$[0];\r\n\r\n    if (!element) {\r\n      return this;\r\n    }\r\n\r\n    return this.forEach((elem) => {\r\n      element.appendChild(elem);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem#is\r\n   * @public\r\n   * @param {String} selector\r\n   * @returns {Boolean} If the first element in the set matches the selector.\r\n   * If the selector is undefined or null always returns true.\r\n   * @description Synonym for\r\n   * [Element#matches]{@link https://developer.mozilla.org/en/docs/Web/API/Element/matches}.\r\n   *\r\n   * @example\r\n   * elem.addClass('cls');\r\n   * elem.is('.cls');         // true\r\n   *\r\n   * elem.removeClass('cls');\r\n   * elem.is('.cls');         // false\r\n   */\r\n  is(selector) {\r\n    if (isNull(selector)) {\r\n      return true;\r\n    }\r\n\r\n    const elem = getElem(this);\r\n    const matches = elem.matches ||\r\n      elem.matchesSelector ||\r\n      elem.webkitMatchesSelector ||\r\n      elem.mozMatchesSelector ||\r\n      elem.msMatchesSelector ||\r\n      elem.oMatchesSelector;\r\n\r\n    try {\r\n      return matches.call(elem, selector);\r\n    } catch (err) {\r\n      console.error(`Selector '${ selector }' is not a valid selector (Elem#is)`);\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method Elem#isBroken\r\n   * @public\r\n   * @returns {Boolean} If the first image in the set is broken.\r\n   * @description Returns if the first element in the set is broken. Not image and not loaded image is considered proper.\r\n   *\r\n   * @example\r\n   * const img = elem.img().on({\r\n   *   'load': onload,\r\n   *   'error': onload\r\n   * });\r\n   *\r\n   * onload = () => {\r\n   *   console.log(img.isBroken()); // true\r\n   * };\r\n   *\r\n   * img.ref('/some/non-existent/site/not-found.png');\r\n   */\r\n  isBroken() {\r\n    let isBroken = false;\r\n\r\n    this.some((elem) => {\r\n      if (getName(elem) === 'img') {\r\n        isBroken = !!(elem.complete && (!elem.naturalWidth || !elem.naturalHeight));\r\n\r\n        return true;\r\n      }\r\n    });\r\n\r\n    return isBroken;\r\n  }\r\n\r\n  /**\r\n   * @method Elem#last\r\n   * @public\r\n   * @returns {Elem} New instance of Elem.\r\n   * @description Synonym for elem.elem(-1).\r\n   */\r\n  last() {\r\n    return this.elem(-1);\r\n  }\r\n\r\n  /**\r\n   * @method Elem#last\r\n   * @public\r\n   * @param {String} [selector = null] - If present, finds last child in every elem that matches the selector.\r\n   * If not, finds last child of each element in the set.\r\n   * @returns {Elem} New instance of Elem.\r\n   * @description Method for finding last children of each element in the set.\r\n   *\r\n   * @example\r\n   * elem.last();       // finds last child of each element in the elem set\r\n   * elem.last('.foo'); // find last child that has 'foo' class of each element in the set\r\n   */\r\n  lastChild(selector = null) {\r\n    return this.object((elems, elem) => {\r\n      const { value: found } = new Arr(elem.children)\r\n        .reverse()\r\n        .find((elem) => new Elem(elem).is(selector)) || {};\r\n\r\n      elems.add(found);\r\n    }, new Elem());\r\n  }\r\n\r\n  /**\r\n   * @method Elem#load\r\n   * @public\r\n   * @returns {Promise.<{ proper: Elem, broken: Elem }>} Promise with broken and proper images.\r\n   * @description Loads each image in the set and puts it to the proper or broken array.\r\n   *\r\n   * @example\r\n   * images.load().then(({ broken }) => {\r\n   *   broken.filter('img').ref('/fallback.png');\r\n   * });\r\n   */\r\n  load() {\r\n    const images = {\r\n      proper: new Elem(),\r\n      broken: new Elem()\r\n    };\r\n\r\n    return Promise.all(\r\n      this\r\n        .filter((elem) => getName(elem) === 'img')\r\n        .map((elem) => {\r\n          const $elem = new Elem(elem);\r\n\r\n          if (elem.complete) {\r\n            images[$elem.isBroken() ? 'broken' : 'proper'].push(elem);\r\n\r\n            return;\r\n          }\r\n\r\n          return new Promise((resolve) => {\r\n            const removeListeners = $elem.on({\r\n              load() {\r\n                images.proper.add(elem);\r\n\r\n                removeListeners();\r\n                resolve();\r\n              },\r\n              error() {\r\n                images.broken.add(elem);\r\n\r\n                removeListeners();\r\n                resolve();\r\n              }\r\n            });\r\n          });\r\n        })\r\n        .$\r\n    ).then(() => images);\r\n  }\r\n\r\n  /**\r\n   * @method Elem#moveAttr\r\n   * @public\r\n   * @param {String} attr - Attribute to move to the first element.\r\n   * @param {String} [value = ''] - Value to set for the attribute. If not set attribute of the previous element or '' used.\r\n   * @returns {Elem} Returns this.\r\n   * @description Method for moving an attribute from previous element to the next one (first element in this set).\r\n   *\r\n   * @example\r\n   * elem1.moveAttr('attr', 'value');     // attribute 'attr' set to 'value' on elem1\r\n   * elem2.moveAttr('attr');              // attribute 'attr' removed from elem1. set to 'value' on elem2\r\n   * elem3.moveAttr('attr', 'new value'); // attribute 'attr' removed from elem2. set to 'new value' on elem3\r\n   */\r\n  moveAttr(attr, value = '') {\r\n    const prev = attrs[attr];\r\n    const elem = this.elem();\r\n\r\n    if (prev && elem.length) {\r\n      if (arguments.length < 2) {\r\n        value = prev.attr(attr);\r\n      }\r\n\r\n      prev.removeAttr(attr);\r\n    }\r\n\r\n    if (elem.length) {\r\n      attrs[attr] = elem.attr(attr, value);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Elem#moveClass\r\n   * @public\r\n   * @param {String} cls - Class to move to the first element.\r\n   * @returns {Elem} Returns this.\r\n   * @description Method for moving a class from previous element to the next one (first element in this set).\r\n   *\r\n   * @example\r\n   * elem1.moveClass('cls'); // class 'cls' added to elem1\r\n   * elem2.moveClass('cls'); // class 'cls' removed from elem1. added to elem1\r\n   */\r\n  moveClass(cls) {\r\n    const prev = classes[cls];\r\n    const elem = this.elem();\r\n\r\n    if (prev && elem.length) {\r\n      prev.removeClass(cls);\r\n    }\r\n\r\n    if (elem.length) {\r\n      classes[cls] = elem.addClass(cls);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @member Elem#name\r\n   * @type {String}\r\n   * @public\r\n   * @readonly\r\n   * @description tagName (lowercased) of the first element in the set.\r\n   *\r\n   * @example\r\n   * const elem1 = elem.create('div');\r\n   * elem1.name // 'div'\r\n   */\r\n  get name() {\r\n    return getName(this.$[0]);\r\n  }\r\n\r\n  /**\r\n   * @method Elem#next\r\n   * @public\r\n   * @param {String} [selector = null] - If present, finds next element to every elem that matches the selector.\r\n   * If not, finds next element to each element in the set.\r\n   * @returns {Elem} New instance of Elem.\r\n   * @description Method for finding next element to each element in the set.\r\n   *\r\n   * @example\r\n   * elem.next();       // finds next element to each element in the set\r\n   * elem.next('.foo'); // finds next element to each element that has 'foo' class\r\n   */\r\n  next(selector = null) {\r\n    return this.object((elems, elem) => {\r\n      /* eslint no-cond-assign: 0 */\r\n      while (elem = elem.nextElementSibling) {\r\n        if (new Elem(elem).is(selector)) {\r\n          return elems.add(elem);\r\n        }\r\n      }\r\n    }, new Elem());\r\n  }\r\n\r\n  /**\r\n   * @method Elem#off\r\n   * @public\r\n   * @param {...ElemEventString} events - Events to remove.\r\n   * @returns {Elem} Returns this.\r\n   * @description Method that removes all the listeners from each element in the set specified by the events arguments.\r\n   *\r\n   * @example\r\n   * elem.off('click');\r\n   * elem.off('click, input');\r\n   * elem.off('click, input', 'focus');\r\n   */\r\n  off(...events) {\r\n    return this.forEach((elem) => {\r\n      const { listeners } = elem.dwayneData;\r\n\r\n      iterate(arguments, (event) => {\r\n        iterate(event.split(eventSeparator), (event) => {\r\n          (listeners[event] || new Super()).forEach(({ removeListener }) => removeListener());\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem#on\r\n   * @public\r\n   * @param {ElemEventString|Object.<ElemEventString|Listener>} event - Either a {@link ElemEventString} string\r\n   * or an object with event keys (a key is also ElemEventString) and listeners values.\r\n   * @param {String} [selector = null] - Selector to filter event targets.\r\n   * @param {Listener} [listener] - If the first argument is a string it must be a listener function for\r\n   * specified event(s).\r\n   * @returns {ElemRemoveListeners} Function that takes optional event argument.\r\n   * @description Adds event listeners for all the elements in the set.\r\n   * For debugging: If you need to know what listeners are in work (and what selectors filter targets)\r\n   * you can look at the base property of the only dwayne listener that listens for the event\r\n   * and find all working listeners in listener.base.dwayneData.listeners[event].$.\r\n   *\r\n   * @example\r\n   * elem.on(\r\n   *   'change, input',\r\n   *   'input, select, textarea, datalist, keygen, output',\r\n   *   (e, elem, index) => console.log(elem.value)\r\n   * );\r\n   * elem.on(\r\n   *   'change, input',\r\n   *   (e, elem, index) => console.log(elem.value)\r\n   * );\r\n   * elem.on(\r\n   *   {\r\n   *     'change, input': (e, elem, index) => console.log(elem.value),\r\n   *     'blur': console.log('blur')\r\n   *   },\r\n   *   'input, select, textarea, datalist, keygen, output'\r\n   * );\r\n   *\r\n   * const removeListeners = elem.on({\r\n   *   'change, input': (e, elem, index) => console.log(elem.value),\r\n   *   'blur': console.log('blur')\r\n   * });\r\n   *\r\n   * removeListeners('click');\r\n   * removeListeners('blur, change');\r\n   * removeListeners('blur, change', 'input');\r\n   * removeListeners();\r\n   */\r\n  on(event, selector = null, listener) {\r\n    const allListeners = new Super({});\r\n\r\n    if (isFunction(selector)) {\r\n      listener = selector;\r\n      selector = null;\r\n    }\r\n\r\n    if (isString(event)) {\r\n      event = { [event]: listener };\r\n    }\r\n\r\n    event = new Super(event).object((listeners, listener, event) => {\r\n      iterate(event.split(eventSeparator), (event) => {\r\n        listeners[event] = listener;\r\n      });\r\n    });\r\n\r\n    this.forEach((elem) => {\r\n      const { listeners } = elem.dwayneData || windowsDwayneData.find(({ element }) => element === elem);\r\n\r\n      event.forEach((listener, event) => {\r\n        const removeEventListeners = listeners[event] = listeners[event] || new Super({}).define('index', {\r\n          value: 0,\r\n          configurable: true,\r\n          writable: true\r\n        });\r\n        const index = removeEventListeners.prop('index');\r\n\r\n        if (!removeEventListeners.has('listener')) {\r\n          const newListener = (e) => {\r\n            removeEventListeners.forEach(({ selector, listener }) => {\r\n              if (new Elem(e.target).is(selector)) {\r\n                listener.call(elem, e, elem, index);\r\n              }\r\n            });\r\n          };\r\n\r\n          newListener.base = elem;\r\n\r\n          elem.addEventListener(event, newListener, false);\r\n          removeEventListeners.define('listener', {\r\n            value: newListener,\r\n            configurable: true,\r\n            writable: true\r\n          });\r\n        }\r\n\r\n        const removeListener = () => {\r\n          removeEventListeners.delete(index);\r\n\r\n          if (!removeEventListeners.count) {\r\n            elem.removeEventListener(event, removeEventListeners.prop('listener'), false);\r\n            removeEventListeners.delete('listener');\r\n          }\r\n        };\r\n\r\n        allListeners.prop(event, (allListeners.prop(event) || new Arr()).push(removeListener));\r\n\r\n        removeEventListeners.assign({\r\n          index: index + 1,\r\n          [index]: {\r\n            selector,\r\n            listener,\r\n            removeListener\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    return function removeEventListeners(event) {\r\n      if (arguments.length) {\r\n        iterate(arguments, (event) => {\r\n          iterate(event.split(eventSeparator), (event) => {\r\n            if (allListeners.has(event)) {\r\n              allListeners.prop(event).forEach((removeListener) => removeListener());\r\n              allListeners.delete(event);\r\n            }\r\n          });\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      allListeners.forEach((removeListeners) => {\r\n        removeListeners.forEach((removeListener) => removeListener());\r\n      });\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @member {Number} Elem#outerWidth\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @description Method for finding how much height the element actually is.\r\n   *\r\n   * @example\r\n   * elem.css({\r\n   *   boxSizing: 'border-box',\r\n   *   height: '200px',\r\n   *   paddingTop: '2px',\r\n   *   paddingBottom: '3px',\r\n   *   borderTop: '1px solid black',\r\n   *   borderBottom: '4px solid black'\r\n   *   marginTop: '0px',\r\n   *   marginBottom: '5px'\r\n   * }).outerHeight; // 205\r\n   * elem\r\n   *   .css('box-sizing', 'content-box')\r\n   *   .outerHeight; // 215\r\n   * elem\r\n   *   .css('box-sizing', 'padding-box')\r\n   *   .outerHeight; // 210\r\n   */\r\n  get outerHeight() {\r\n    const elem = this.$[0];\r\n\r\n    if (!elem) {\r\n      return 0;\r\n    }\r\n\r\n    if (isWindow(elem)) {\r\n      return elem.outerHeight;\r\n    }\r\n\r\n    const {\r\n      borderTopWidth,\r\n      borderBottomWidth,\r\n      boxSizing,\r\n      height,\r\n      marginTop,\r\n      marginBottom,\r\n      paddingTop,\r\n      paddingBottom\r\n    } = this.calcCSS();\r\n    const borders = px(borderTopWidth) + px(borderBottomWidth);\r\n    const paddings = px(paddingTop) + px(paddingBottom);\r\n\r\n    return px(height) + px(marginTop) + px(marginBottom) + outerSwitcher(boxSizing, [borders, paddings]);\r\n  }\r\n\r\n  /**\r\n   * @member {Number} Elem#outerWidth\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @description Method for finding how much width the element actually is.\r\n   *\r\n   * @example\r\n   * elem.css({\r\n   *   boxSizing: 'border-box',\r\n   *   width: '200px',\r\n   *   paddingLeft: '2px',\r\n   *   paddingRight: '3px',\r\n   *   borderLeft: '1px solid black',\r\n   *   borderRight: '4px solid black'\r\n   *   marginLeft: '0px',\r\n   *   marginRight: '5px'\r\n   * }).outerWidth; // 205\r\n   * elem\r\n   *   .css('box-sizing', 'content-box')\r\n   *   .outerWidth; // 215\r\n   * elem\r\n   *   .css('box-sizing', 'padding-box')\r\n   *   .outerWidth; // 210\r\n   */\r\n  get outerWidth() {\r\n    const elem = this.$[0];\r\n\r\n    if (!elem) {\r\n      return 0;\r\n    }\r\n\r\n    if (isWindow(elem)) {\r\n      return elem.outerWidth;\r\n    }\r\n\r\n    const {\r\n      borderLeftWidth,\r\n      borderRightWidth,\r\n      boxSizing,\r\n      marginLeft,\r\n      marginRight,\r\n      paddingLeft,\r\n      paddingRight,\r\n      width\r\n    } = this.calcCSS();\r\n    const borders = px(borderLeftWidth) + px(borderRightWidth);\r\n    const paddings = px(paddingLeft) + px(paddingRight);\r\n\r\n    return px(width) + px(marginLeft) + px(marginRight) + outerSwitcher(boxSizing, [borders, paddings]);\r\n  }\r\n\r\n  /**\r\n   * @method Elem#parent\r\n   * @public\r\n   * @returns {Elem} New instance of Elem.\r\n   * @description Method returns wrap of the set of the parent elements of each element in the set.\r\n   */\r\n  parent() {\r\n    return this.object((elems, elem) => elems.add(elem.parentElement), new Elem());\r\n  }\r\n\r\n  /**\r\n   * @method Elem#parentTree\r\n   * @public\r\n   * @returns {Elem} New instance of Elem.\r\n   * @description Returns wrap of all parents of each element in the set.\r\n   *\r\n   * @example\r\n   * elem.parentTree(); // Elem\r\n   */\r\n  parentTree() {\r\n    return this.object((elems, elem) => {\r\n      while (elem = elem.parentNode) {\r\n        elems.add(elem);\r\n      }\r\n    }, new Elem());\r\n  }\r\n\r\n  /**\r\n   * @method Elem#prev\r\n   * @public\r\n   * @param {String} [selector = null] - If present, finds previous element to every elem that matches the selector.\r\n   * If not, finds previous element to each element in the set.\r\n   * @returns {Elem} New instance of Elem.\r\n   * @description Method for finding previous element to each element in the set.\r\n   *\r\n   * @example\r\n   * elem.next();       // finds previous element to each element in the set\r\n   * elem.next('.foo'); // finds previous element to each element that has 'foo' class\r\n   */\r\n  prev(selector = null) {\r\n    return this.object((elems, elem) => {\r\n      /* eslint no-cond-assign: 0 */\r\n      while (elem = elem.previousElementSibling) {\r\n        if (new Elem(elem).is(selector)) {\r\n          return elems.add(elem);\r\n        }\r\n      }\r\n    }, new Elem());\r\n  }\r\n\r\n  /**\r\n   * @method Elem#prop\r\n   * @public\r\n   * @param {String|Object.<String, ElemValueCallback|*>} property - Either a string of a property or an assigned object.\r\n   * @param {ElemValueCallback|*} [value] - If a property parameter is a string\r\n   * this has to be an assigned value if it's present.\r\n   * @returns {Elem|*} Returns this if it's setter or a value if getter.\r\n   * @description Method that is either a property getter for the first element in the set\r\n   * or a setter for every element in the set.\r\n   *\r\n   * @example\r\n   * elem.prop('draggable', false);\r\n   * elem.prop('draggable'); // false\r\n   */\r\n  prop(property, value) {\r\n    if (arguments.length <= 1 && isString(property)) {\r\n      return this.$[0] ? this.$[0][property] : undefined;\r\n    }\r\n\r\n    if (arguments.length >= 2) {\r\n      property = { [property]: value };\r\n    }\r\n\r\n    return this.forEach((elem, index) => {\r\n      iterate(property, (value, prop) => {\r\n        elem[prop] = isFunction(value) ? value(elem[prop], elem, index) : value;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem#ref\r\n   * @public\r\n   * @param {String|ElemValueCallback} [link] - If it's present link to a resource.\r\n   * @returns {Elem|String} If the link argument isn't present it's a getter of the 'src' attribute\r\n   * for the one of following elements: img, script, iframe, audio, video; of the 'action' attribute\r\n   * for a form element and of the 'href' attribute for the rest. If it's present it's a setter\r\n   * of the same attribute for all the element in the set.\r\n   * @description Method for getting resources links and setting them.\r\n   *\r\n   * @example\r\n   * elem.ref('/some/cool/image.png');\r\n   * elem.ref(); // '/some/cool/image.png'\r\n   */\r\n  ref(link) {\r\n    if (!arguments.length) {\r\n      return this.attr(refSwitcher(this.name));\r\n    }\r\n\r\n    return this.forEach((elem) => {\r\n      elem = new Elem(elem);\r\n\r\n      elem.attr(refSwitcher(elem.name), link);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem#remove\r\n   * @public\r\n   * @returns {Elem} Returns this.\r\n   * @description Removes all the elements from the set from the document.\r\n   * Note: it doesn't remove them from the set so watch out for the memory leaks.\r\n   *\r\n   * @example\r\n   * elem.remove();\r\n   */\r\n  remove() {\r\n    return this.forEach((elem) => {\r\n      elem.remove();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem@removeAttr\r\n   * @public\r\n   * @param {...String} attributes - Attributes to remove.\r\n   * @returns {Elem} Returns this.\r\n   * @description Removes all the attributes from arguments from all the elements in the set.\r\n   *\r\n   * @example\r\n   * elem.removeAttr('foo', 'bar', 'baz');\r\n   */\r\n  removeAttr(...attributes) {\r\n    return this.forEach((elem) => {\r\n      iterate(arguments, (attr) => {\r\n        elem.removeAttribute(attr);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem#removeClass\r\n   * @public\r\n   * @param {...String} classes - Classes to remove.\r\n   * @returns {Elem} Returns this.\r\n   * @description Removes all the classes from arguments from all the elements in the set.\r\n   *\r\n   * @example\r\n   * elem.removeClass('foo', 'bar', 'baz');\r\n   */\r\n  removeClass(...classes) {\r\n    return this.forEach((elem) => {\r\n      const list = elem.classList;\r\n\r\n      list.remove.apply(list, arguments);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem#removeCSS\r\n   * @public\r\n   * @param {...String} props - CSS properties to remove.\r\n   * @returns {Elem} Returns this.\r\n   * @description Removes all the CSS properties from arguments from all the elements in the set.\r\n   *\r\n   * @example\r\n   * elem.removeCSS('display', 'position', 'margin');\r\n   */\r\n  removeCSS(...props) {\r\n    return this.forEach((elem) => {\r\n      iterate(arguments, (css) => {\r\n        elem.style.removeProperty(css);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem#replace\r\n   * @public\r\n   * @param {String|Elem|Element} element - Element to replace the first element in the set with or a selector of it.\r\n   * @returns {Elem} Returns this.\r\n   * @description Method is similar to\r\n   * [Node#replaceChild]{@link https://developer.mozilla.org/en/docs/Web/API/Node/replaceChild}.\r\n   *\r\n   * @example\r\n   * elem.replace(elem2);\r\n   * elem.replace(document.getElementById('id'));\r\n   * elem.replace('#id div.c1');\r\n   */\r\n  replace(element) {\r\n    const elem = getElem(this);\r\n    const parent = elem.parentElement;\r\n\r\n    if (!parent) {\r\n      return this;\r\n    }\r\n\r\n    element = toFind(element).$[0];\r\n\r\n    if (element) {\r\n      parent.replaceChild(element, elem);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Elem#setOf\r\n   * @public\r\n   * @param {String} type - HTML element type.\r\n   * @param {Number|Object|*[]} iterator - A number (how many elements to create inside each element),\r\n   * an object or an array to iterate over.\r\n   * @param {ElemSetOfCallback} callback\r\n   * @returns {Elem} New instance of Elem.\r\n   * @description Function for creating set of elements inside each element in the set based on an array or an object.\r\n   *\r\n   * @example\r\n   * table.setOf('tr', [[1, 2], [3, 4], [5, 6]], (row, array) => {\r\n   *   D(row).setOf('td', array, (col, number) => {\r\n   *     D(col).text(number);\r\n   *   });\r\n   * });\r\n   */\r\n  setOf(type, iterator, callback) {\r\n    validate({ 2: callback }, { 2: ['function'] }, 'Elem#setOf');\r\n\r\n    iterator = new Super(iterator).$;\r\n\r\n    if (isNumber(iterator)) {\r\n      try {\r\n        validate({ 1: iterator }, { 1: ['intLike', '>=0'] }, 'Elem#setOf');\r\n      } catch (e) {\r\n        throw new Error(`\r\n\t\t\t\t\t2nd argument must be either or non-negative integer, or object!\r\n\t\t\t\t`);\r\n      }\r\n\r\n      iterator = array(iterator);\r\n    }\r\n\r\n    return this.object((elems, elem, index) => {\r\n      iterate(iterator, (value, key) => {\r\n        const created = new Elem(elem).create(type);\r\n\r\n        callback(created.$, value, key, iterator, elem, index);\r\n\r\n        elems.add(created);\r\n      });\r\n    }, new Elem());\r\n  }\r\n\r\n  /**\r\n   * @method Elem#show\r\n   * @public\r\n   * @returns {Elem} Returns this.\r\n   * @description Shows all elements in the set.\r\n   * If an element was hidden using {@link Elem#hide} previous display is set.\r\n   *\r\n   * @example\r\n   * elem.show();\r\n   */\r\n  show() {\r\n    return this.forEach((elem) => {\r\n      const { dwayneData } = elem;\r\n\r\n      elem = new Elem(elem);\r\n\r\n      if (elem.css('display').indexOf('none') === 0) {\r\n        elem.css('display', dwayneData.previousDisplay);\r\n      }\r\n\r\n      dwayneData.previousDisplay = '';\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem#text\r\n   * @public\r\n   * @param {String|ElemValueCallback|*} [text] - Text to write instead of current text.\r\n   * @returns {Elem|String} If no arguments passed text of the first element in the set returned.\r\n   * Otherwise all elements texts in the set are set to the text argument.\r\n   * @description Gets or sets text.\r\n   *\r\n   * @example\r\n   * elem.text('123');\r\n   * elem.text(); // '123'\r\n   */\r\n  text(text) {\r\n    if (!arguments.length) {\r\n      return this.prop(textProperty);\r\n    }\r\n\r\n    return this.forEach((elem, index) => {\r\n      new Elem(elem)\r\n        .html('')\r\n        .addText(\r\n          isFunction(text)\r\n            ? text(elem[textProperty], elem, index)\r\n            : text\r\n        );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem#toggleAttr\r\n   * @public\r\n   * @param {String} attr - Attribute to toggle.\r\n   * @param {Boolean|*} [condition] - If present and the condition is truthy method adds the attribute\r\n   * with the '' value and if falsey method removes the attribute. If not present method adds\r\n   * the attribute if it doesn't exist and removes if it does.\r\n   * @returns {Elem} Returns this.\r\n   * @description Method for toggling attributes.\r\n   *\r\n   * @example\r\n   * elem.toggleAttr('attr');\r\n   * elem.toggleAttr('attr', someCondition);\r\n   */\r\n  toggleAttr(attr, condition) {\r\n    return this.forEach((elem) => {\r\n      elem = new Elem(elem);\r\n\r\n      if (arguments.length < 2 ? !elem.hasAttr(attr) : condition) {\r\n        elem.attr(attr, '');\r\n      } else {\r\n        elem.removeAttr(attr);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @method Elem#toggleAttr\r\n   * @public\r\n   * @param {String} cls - Class to toggle.\r\n   * @param {Boolean|*} [condition] - If present and the condition is truthy method adds the class\r\n   * and if falsey method removes the class. If not present method adds\r\n   * the class if it doesn't exist and removes if it does.\r\n   * @returns {Elem} Returns this.\r\n   * @description Method for toggling classes.\r\n   *\r\n   * @example\r\n   * elem.toggleClass('cls');\r\n   * elem.toggleClass('cls', someCondition);\r\n   */\r\n  toggleClass(cls, condition) {\r\n    return (arguments.length < 2 ? !this.hasClass(cls) : condition)\r\n      ? this.addClass(cls)\r\n      : this.removeClass(cls);\r\n  }\r\n\r\n  get toStringTag() {\r\n    return toStringTag(this.$$);\r\n  }\r\n\r\n  /**\r\n   * @method Elem#up\r\n   * @param {Integer} [level = 1] - What level up along the tree should be the parent.\r\n   * @returns {Elem} New instance of Elem.\r\n   * @description Creates a collection of parents of level &lt;level&gt;.\r\n   *\r\n   * @example\r\n   * elem.up();\r\n   * elem.up(2);\r\n   */\r\n  up(level = 1) {\r\n    validate([level], [['intLike', '>=0']], 'Elem#up');\r\n\r\n    level = Number(level);\r\n\r\n    return this.object((elems, elem) => {\r\n      let n = level;\r\n\r\n      while (n-- && elem) {\r\n        elem = elem.parentElement;\r\n      }\r\n\r\n      elems.add(elem);\r\n    }, new Elem());\r\n  }\r\n\r\n  /**\r\n   * @method Elem#validate\r\n   * @public\r\n   * @param {ValidateCallback} [validator] - If present, function that validates inputs.\r\n   * @returns {Elem|Object.<String, Error|*>|{ form: Error?, inputs: <Object.<String, Error>>|null }|null}\r\n   * If a callback argument provided returns this. If no arguments provided returns either an object\r\n   * with input names keys and errors values or null if no errors found.\r\n   * @description If a callback argument provided adds it to the element validators list. If no arguments provided\r\n   * validates every input element in the set with its own functions. If an element is a form it validates all input elements inside it.\r\n   *\r\n   * @example\r\n   * form.on('input change', 'input', (value, input) => {\r\n   *   const $input = D(input);\r\n   *\r\n   *   if (Number(value) %3) {\r\n   *     $input.attr('invalid', '');\r\n   *\r\n   *     throw new Error('The value should be divided by 3!');\r\n   *   }\r\n   *\r\n   *   $input.removeAttr('invalid');\r\n   * });\r\n   */\r\n  validate(validator) {\r\n    validate([validator], ['function||!'], 'Elem#validate');\r\n\r\n    if (validator) {\r\n      return this.forEach(({ dwayneData }) => {\r\n        dwayneData.validators.push(validator);\r\n      });\r\n    }\r\n\r\n    let errors = null;\r\n\r\n    this\r\n      .filter(`${ inputElements }, form`)\r\n      .forEach((elem, index) => {\r\n        if (getName(elem) === 'form') {\r\n          return new Elem(elem)\r\n            .find(inputElements)\r\n            .forEach((input, index) => {\r\n              validatorWrap(input, index);\r\n            });\r\n        }\r\n\r\n        validatorWrap(elem, index);\r\n      });\r\n\r\n    function validatorWrap(input, index) {\r\n      try {\r\n        if (input.validity && !input.validity.valid) {\r\n          throw new Error(input.validationMessage);\r\n        }\r\n\r\n        input.dwayneData.validators.forEach((validator) => {\r\n          validator(input.value, input, index);\r\n        });\r\n      } catch (err) {\r\n        (errors = errors || {})[input.name] = err;\r\n      }\r\n    }\r\n\r\n    return errors;\r\n  }\r\n\r\n  /**\r\n   * @method Elem#width\r\n   * @public\r\n   * @param {*|ElemValueCallback} [width] - Width to set.\r\n   * @returns {Elem|String} If no arguments passed width of the first element in the set returned.\r\n   * Otherwise all elements widths in the set are set to the width argument.\r\n   * @description Gets or sets width.\r\n   *\r\n   * @example\r\n   * elem.width(123);\r\n   * elem.width(); // 123\r\n   */\r\n  width(width) {\r\n    return this.prop.apply(this, new Arr(arguments).unshift('width').$);\r\n  }\r\n}\r\n\r\ndefineProperties(Elem.prototype, {\r\n  [Symbol.toStringTag]: 'Elem'\r\n});\r\n\r\nexport const window = new Elem(global);\r\nexport const document = new Elem(nativeDocument);\r\nexport const html = new Elem(nativeDocument.documentElement);\r\nexport const body = new Elem(nativeDocument.body);\r\nexport const head = new Elem(nativeDocument.head);\r\n\r\ndynamicDefineProperties(Elem.prototype, elements, (elem) => function () {\r\n  return this.create.apply(this, new Arr(arguments).unshift(elem).$);\r\n});\r\n\r\ndynamicDefineProperties(Elem.prototype, canvasGetMethods, (method) => function () {\r\n  const ctx = this.ctx();\r\n\r\n  if (ctx) {\r\n    return ctx[method].apply(ctx, arguments);\r\n  }\r\n});\r\n\r\ndynamicDefineProperties(Elem.prototype, canvasRestMethods, (method) => function () {\r\n  const ctx = this.ctx();\r\n\r\n  if (ctx) {\r\n    ctx[method].apply(ctx, arguments);\r\n  }\r\n\r\n  return this;\r\n});\r\n\r\n/**\r\n * @function toFind\r\n * @private\r\n * @param {Element|Elem|String} elem - Element, selector of Elements or Elem.\r\n * @returns {Elem} Instance of Elem.\r\n */\r\nfunction toFind(elem) {\r\n  if (isString(elem)) {\r\n    elem = find(elem);\r\n  }\r\n\r\n  return new Elem(elem);\r\n}\r\n\r\n/**\r\n * @function isElem\r\n * @private\r\n * @param {*} value - Value to check if it's Elem.\r\n * @returns {Boolean} If the value is Elem.\r\n * @description Returns if the value is Elem or not.\r\n */\r\nfunction isElem(value) {\r\n  return value instanceof Elem;\r\n}\r\n\r\n/**\r\n * @function isWindow\r\n * @private\r\n * @param {*} value - Value to check if it's Window.\r\n * @returns {Boolean} If the value is Window.\r\n * @description Returns if the value is Window or not.\r\n */\r\nfunction isWindow(value) {\r\n  return toStringTag(value) === 'Window';\r\n}\r\n\r\n/**\r\n * @function isHTMLDocument\r\n * @private\r\n * @param {*} value - Value to check if it's HTMLDocument.\r\n * @returns {Boolean} If the value is HTMLDocument.\r\n * @description Returns if the value is HTMLDocument or not.\r\n */\r\nfunction isHTMLDocument(value) {\r\n  return toStringTag(value) === 'HTMLDocument';\r\n}\r\n\r\n/**\r\n * @function getElem\r\n * @private\r\n * @param {Elem} elem - Element to check.\r\n * @returns {Element} The argument or a fallback if needed.\r\n */\r\nfunction getElem(elem) {\r\n  return elem.$[0] || empty;\r\n}\r\n\r\n/**\r\n * @function getName\r\n * @private\r\n * @param {Element} [elem] - Element which name is needed to know.\r\n * @returns {String} Elements name\r\n */\r\nfunction getName(elem) {\r\n  return (elem && elem.tagName && elem.tagName.toLowerCase()) || '';\r\n}\r\n\r\n/**\r\n * @function addDwayneData\r\n * @private\r\n * @param {Element} elem - Element to add dwayneData to.\r\n * @returns {void}\r\n */\r\nfunction addDwayneData(elem) {\r\n  if (!{}.hasOwnProperty.call(elem, 'dwayneData') && !isWindow(elem)) {\r\n    /**\r\n     * @member Element#dwayneData\r\n     * @type {Object}\r\n     * @protected\r\n     * @property {String} previousDisplay - Parameter used for hiding/showing elements.\r\n     * @property {Object.<String, Super>} removeListeners - Parameter used for remove event listeners.\r\n     * @property {CanvasRenderingContext2D} [ctx] - Canvas rendering context.\r\n     * @property {Arr} validators - Validators assigned to element.\r\n     * @description D data.\r\n     */\r\n    Object.defineProperty(elem, 'dwayneData', {\r\n      value: {\r\n        previousDisplay: '',\r\n        listeners: {},\r\n        ctx: getName(elem) === 'canvas' && elem.getContext('2d'),\r\n        validators: new Arr([])\r\n      }\r\n    });\r\n  } else if (!windowsDwayneData.some(({ element }) => element === elem)) {\r\n    windowsDwayneData.push({\r\n      element: elem,\r\n      listeners: {}\r\n    });\r\n  }\r\n}\r\n\r\nconstructors[2].push({\r\n  check: (elem) => (\r\n    isElement(elem) ||\r\n    isWindow(elem) ||\r\n    isHTMLDocument(elem) ||\r\n    /^(HTMLCollection|NodeList)$/.test(toStringTag(elem))\r\n  ),\r\n  cls: Elem\r\n});\r\n\r\n/**\r\n * @function find\r\n * @public\r\n * @param {String} selector - Selector to find.\r\n * @param {Element} [base = document] - Base to find in.\r\n * @returns {Elem} New instance of Elem.\r\n * @description Synonym for\r\n * [Document#querySelectorAll]{@link https://developer.mozilla.org/en/docs/Web/API/Document/querySelectorAll}.\r\n */\r\nexport function find(selector, base = nativeDocument) {\r\n  return new Elem(base.querySelectorAll(String(selector)));\r\n}\r\n\r\n/**\r\n * @function parseHTML\r\n * @public\r\n * @param {String} html - HTML to parse.\r\n * @returns {Elem} New instance of Elem.\r\n * @description Parses HTML and returns the contents.\r\n *\r\n * @example\r\n * parseHTML('&lt;div&gt;123&lt;/div&gt;'); // Elem\r\n */\r\nexport function parseHTML(html) {\r\n  return document\r\n    .div()\r\n    .html(html)\r\n    .children();\r\n}\r\n\r\n/**\r\n * @function px\r\n * @public\r\n * @param {String|Number} size - String containing pixels value or a number.\r\n * @returns {Number} Number of pixels.\r\n * @description Function for parsing pixel strings.\r\n *\r\n * @example\r\n * px('0px');  // 0\r\n * px('42px'); // 42\r\n */\r\nexport function px(size) {\r\n  return Number(String(size).replace(/px$/, ''));\r\n}\r\n\r\nexport default Elem;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Elem.js\n **/","/**\r\n * @module Fetch\r\n * @private\r\n * @mixin\r\n * @description Exports Fetch class.\r\n */\r\n\r\nimport Promise from './Promise';\r\nimport Super from './Super';\r\nimport Arr from './Arr';\r\nimport Str from './Str';\r\nimport {\r\n  isArray, isFunction, isString,\r\n  assign, Symbol, validate, iterate, defineProperties\r\n} from './helpers';\r\nimport constructURL from './helpers/constructURL';\r\nimport parseHeaders from './helpers/parseHeaders';\r\nimport transformData from './helpers/transformData';\r\n\r\n/**\r\n * @typedef {'get'|'post'|'delete'|'head'|'put'|'patch'} FetchMethod\r\n * @public\r\n */\r\n\r\n/**\r\n * @typedef {Object} FetchConfig\r\n * @public\r\n * @property {Array.<AfterMiddleware|FetchErrorAfterMiddleware>} [after]\r\n * @property {Object} [auth]\r\n * @property {String} [auth.username]\r\n * @property {String} [auth.password]\r\n * @property {String} [baseURL]\r\n * @property {Array.<BeforeMiddleware|FetchErrorBeforeMiddleware>} [before]\r\n * @property {*} [data]\r\n * @property {Object.<String, String[]>} [headers]\r\n * @property {FetchMethod} [method]\r\n * @property {Object} [params]\r\n * @property {Object} [query]\r\n * @property {String} [responseType]\r\n * @property {Number} [timeout]\r\n * @property {String} [url]\r\n * @property {Boolean} [withCredentials]\r\n */\r\n\r\n/**\r\n * @typedef {Object} FetchResponse\r\n * @public\r\n * @property {FetchConfig} config\r\n * @property {*} data\r\n * @property {Object.<String, String>} headers\r\n * @property {Number} status\r\n * @property {String} statusText\r\n * @property {XMLHttpRequest} xhr\r\n */\r\n\r\n/**\r\n * @callback FetchAfterMiddleware\r\n * @public\r\n * @param {FetchResponse} config - Fetch response.\r\n */\r\n\r\n/**\r\n * @callback FetchErrorAfterMiddleware\r\n * @public\r\n * @param {Error|*} err - Thrown error.\r\n * @param {FetchResponse} config - Fetch response.\r\n */\r\n\r\n/**\r\n * @callback FetchBeforeMiddleware\r\n * @public\r\n * @param {FetchConfig} config - Fetch config.\r\n */\r\n\r\n/**\r\n * @callback FetchErrorBeforeMiddleware\r\n * @public\r\n * @param {Error|*} err - Thrown error.\r\n * @param {FetchConfig} config - Fetch config.\r\n */\r\n\r\n/**\r\n * @callback FetchConfigFunction\r\n * @public\r\n * @param {FetchConfig} config\r\n */\r\n\r\nconst defaults = {\r\n  after: [],\r\n  auth: {\r\n    username: '',\r\n    password: ''\r\n  },\r\n  baseURL: global.location.origin,\r\n  before: [],\r\n  data: null,\r\n  headers: {},\r\n  method: 'get',\r\n  params: {},\r\n  query: {},\r\n  responseType: '',\r\n  timeout: 0,\r\n  url: '',\r\n  withCredentials: false\r\n};\r\nconst uploadMethods = new Arr(['post', 'put']);\r\n\r\n/**\r\n * @class Fetch\r\n * @extends Function\r\n * @public\r\n * @param {FetchConfig} [config = {}] - A number to wrap.\r\n * @returns {Fetch} Instance of Fetch.\r\n * An instance of Fetch is a function that simply calls #request with the same arguments.\r\n * @description Class for fetching data.\r\n *\r\n * @example\r\n * const fetch = new Fetch();\r\n *\r\n * fetch('/data').then((res) => {\r\n *   console.log(res);\r\n * });\r\n */\r\nexport class Fetch extends Function {\r\n  constructor(config = {}) {\r\n    super();\r\n\r\n    function fetch() {\r\n      return fetch.request.apply(fetch, arguments);\r\n    }\r\n\r\n    const conf = new Super({}).deepAssign(defaults, config).$;\r\n\r\n    conf.before.push(fetchBeforeMiddleware);\r\n\r\n    /**\r\n     * @member {FetchConfig} Fetch#$$\r\n     * @type {FetchConfig}\r\n     * @public\r\n     * @description Fetch config.\r\n     */\r\n    Object.defineProperty(fetch, '$$', { value: conf });\r\n    Object.setPrototypeOf(fetch, Fetch.prototype);\r\n\r\n    return fetch;\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#after\r\n   * @public\r\n   * @param {FetchAfterMiddleware|FetchErrorAfterMiddleware} middleware - Middleware to add.\r\n   * @param {Boolean|*} [afterAll = true] - Boolean parameter where to put the middleware.\r\n   * Truthy parameter stands for \"to the end\" and falsey for \"to the beginning\".\r\n   * @returns {Fetch} Returns this.\r\n   * @description Middleware that is called after the request.\r\n   * If the middleware has 2 or less arguments it's treated as success middleware otherwise as an error one.\r\n   * If the middleware returns a promise it becomes a part of the middleware chain.\r\n   *\r\n   * @example\r\n   * const fetch = new Fetch()\r\n   *   .after((err, res) => {\r\n   *     console.log(err);\r\n   *\r\n   *     throw err;\r\n   *   })\r\n   *   .after((res) => {\r\n   *     res.json = D(res.data).parseJSON():\r\n   *   });\r\n   */\r\n  after(middleware, afterAll = true) {\r\n    validate([middleware], ['function'], 'Fetch#after');\r\n\r\n    const { after } = this.$$;\r\n\r\n    if (afterAll) {\r\n      after.push(middleware);\r\n    } else {\r\n      after.unshift(middleware);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#before\r\n   * @public\r\n   * @param {FetchBeforeMiddleware|FetchErrorBeforeMiddleware} middleware - Middleware to add.\r\n   * @param {Boolean|*} [beforeAll = true] - Boolean parameter where to put the middleware.\r\n   * Truthy parameter stands for \"to the beginning\" and falsey for \"to the end\".\r\n   * @returns {Fetch} Returns this.\r\n   * @description Middleware that is called before the request.\r\n   * If the middleware has 2 or less arguments it's treated as success middleware otherwise as an error one.\r\n   * If the middleware returns a promise it becomes a part of the middleware chain.\r\n   *\r\n   * @example\r\n   * const fetch = new Fetch()\r\n   *   .before((err, req) => {\r\n   *     console.log(err);\r\n   *\r\n   *     throw err;\r\n   *   })\r\n   *   .before((req) => {\r\n   *     if (req.url === '/veryLongRequest') {\r\n   *       req.timeout = 30000;\r\n   *     }\r\n   *   });\r\n   */\r\n  before(middleware, beforeAll = true) {\r\n    validate([middleware], ['function'], 'Fetch#before');\r\n\r\n    const { before } = this.$$;\r\n\r\n    if (beforeAll) {\r\n      before.unshift(middleware);\r\n    } else {\r\n      before.push(middleware);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#config\r\n   * @public\r\n   * @param {String|FetchConfig|FetchConfigFunction} [property] - If it's a function\r\n   * it's called with the fetch config argument, if it's a string the value argument\r\n   * is used for assigning this property to the fetch config\r\n   * otherwise it's assigned to the fetch config.\r\n   * @param {*} [value] - See the property argument.\r\n   * @returns {Fetch|FetchConfig} If the argument is present this is returned otherwise the fetch config is returned.\r\n   * @description Method for getting and setting config.\r\n   *\r\n   * @example\r\n   * const fetch = new Fetch();\r\n   *\r\n   * fetch.config({ baseURL: 5000 });\r\n   * fetch.config().timeout; // 5000\r\n   *\r\n   * fetch.config((config) => {\r\n   *   config.baseURL += '/api';\r\n   * });\r\n   */\r\n  config(property, value) {\r\n    const conf = this.$$;\r\n\r\n    if (!arguments.length) {\r\n      return conf;\r\n    }\r\n\r\n    if (isFunction(property)) {\r\n      property(conf);\r\n    } else {\r\n      if (arguments.length >= 2) {\r\n        property = { [property]: value };\r\n      }\r\n\r\n      new Super(conf).deepAssign(property);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#delete\r\n   * @public\r\n   * @param {String} [url] - See {@link Fetch#request}.\r\n   * @param {FetchConfig} [config] - See {@link Fetch#request}.\r\n   * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\r\n   * @description Shorthand for #request for delete requests.\r\n   *\r\n   * @example\r\n   * new Fetch().delete('/data').then((res) => {\r\n   *   console.log(res);\r\n   * });\r\n   */\r\n  delete(url, config = {}) {\r\n    if (!isString(url)) {\r\n      config = url;\r\n      url = undefined;\r\n    }\r\n\r\n    return this.request(url, assign({ method: 'delete' }, config));\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#get\r\n   * @public\r\n   * @param {String} [url] - See {@link Fetch#request}.\r\n   * @param {FetchConfig} [config] - See {@link Fetch#request}.\r\n   * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\r\n   * @description Shorthand for #request for get requests.\r\n   *\r\n   * @example\r\n   * new Fetch().get('/data').then((res) => {\r\n   *   console.log(res);\r\n   * });\r\n   */\r\n  get(url, config = {}) {\r\n    if (!isString(url)) {\r\n      config = url;\r\n      url = undefined;\r\n    }\r\n\r\n    return this.request(url, assign({ method: 'get' }, config));\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#head\r\n   * @public\r\n   * @param {String} [url] - See {@link Fetch#request}.\r\n   * @param {FetchConfig} [config] - See {@link Fetch#request}.\r\n   * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\r\n   * @description Shorthand for #request for head requests.\r\n   *\r\n   * @example\r\n   * new Fetch().head('/data').then((res) => {\r\n   *   console.log(res);\r\n   * });\r\n   */\r\n  head(url, config = {}) {\r\n    if (!isString(url)) {\r\n      config = url;\r\n      url = undefined;\r\n    }\r\n\r\n    return this.request(url, assign({ method: 'head' }, config));\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#headers\r\n   * @public\r\n   * @param {String|Object.<String, String|String[]>} header - A header string or an object of the following format:\r\n   * { [header]: [value1, value2, ...] }.\r\n   * @param {String|String[]} [value] - Header value. If the first argument is a string\r\n   * this has to be a header value or an array of header values.\r\n   * @returns {Fetch} Returns this.\r\n   * @description Method for setting request headers.\r\n   *\r\n   * @example\r\n   * const fetch = new Fetch()\r\n   *   .headers('Header1', 'Value')\r\n   *   .headers('Header2', ['Value1', 'Value2'])\r\n   *   .headers({\r\n   *     Header3: ['Value1', 'Value2']\r\n   *   });\r\n   */\r\n  headers(header, value) {\r\n    const { headers } = this.$$;\r\n\r\n    if (arguments.length >= 2) {\r\n      header = { [header]: value };\r\n    }\r\n\r\n    iterate(header, (value, header) => {\r\n      const array = headers[header] || [];\r\n      const toPush = isArray(value) ? value : [value];\r\n\r\n      (headers[header] = array).push.apply(array, toPush);\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#instance\r\n   * @public\r\n   * @param {FetchConfig} [config] - New config if needed.\r\n   * @returns {Fetch} New instance of Fetch.\r\n   * @description Method for creating new fetch instances based on already existent.\r\n   *\r\n   * @example\r\n   * const mainFetch = new Fetch({\r\n   *   baseURL: '//other.domain.com/api',\r\n   *   withCredentials: true\r\n   * });\r\n   *\r\n   * const longFetch = mainFetch.instance({\r\n   *   timeout: 10000\r\n   * });\r\n   */\r\n  instance(config = {}) {\r\n    const dataConfig = new Super(config).hasOwn('data')\r\n      ? { data: config.data }\r\n      : {};\r\n\r\n    delete config.data;\r\n\r\n    const conf = new Super({})\r\n      .deepAssign(this.$$, config)\r\n      .assign(dataConfig)\r\n      .$;\r\n\r\n    if (conf.before.indexOf(fetchBeforeMiddleware) === -1) {\r\n      conf.before.push(fetchBeforeMiddleware);\r\n    }\r\n\r\n    return new Fetch(conf);\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#patch\r\n   * @public\r\n   * @param {String} [url] - See {@link Fetch#request}.\r\n   * @param {*} [data] - Additional parameter for uploading data.\r\n   * @param {FetchConfig} [config] - See {@link Fetch#request}.\r\n   * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\r\n   * @description Shorthand for #request for head requests.\r\n   *\r\n   * @example\r\n   * new Fetch().patch('/data', { user: 'John' }).then((res) => {\r\n   *   console.log(res);\r\n   * });\r\n   */\r\n  patch(url, data = {}, config = {}) {\r\n    if (arguments.length && !isString(url)) {\r\n      config = data;\r\n      data = url;\r\n      url = undefined;\r\n    }\r\n\r\n    return this.request(url, assign({ method: 'patch', data }, config));\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#post\r\n   * @public\r\n   * @param {String} [url] - See {@link Fetch#request}.\r\n   * @param {*} [data] - Additional parameter for uploading data.\r\n   * @param {FetchConfig} [config] - See {@link Fetch#request}.\r\n   * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\r\n   * @description Shorthand for #request for head requests.\r\n   *\r\n   * @example\r\n   * new Fetch().post('/data', { user: 'John' }).then((res) => {\r\n   *   console.log(res);\r\n   * });\r\n   */\r\n  post(url, data = {}, config = {}) {\r\n    if (arguments.length && !isString(url)) {\r\n      config = data;\r\n      data = url;\r\n      url = undefined;\r\n    }\r\n\r\n    return this.request(url, assign({ method: 'post', data }, config));\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#put\r\n   * @public\r\n   * @param {String} [url] - See {@link Fetch#request}.\r\n   * @param {*} [data] - Additional parameter for uploading data.\r\n   * @param {FetchConfig} [config] - See {@link Fetch#request}.\r\n   * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\r\n   * @description Shorthand for #request for head requests.\r\n   *\r\n   * @example\r\n   * new Fetch().put('/data', { user: 'John' }).then((res) => {\r\n   *   console.log(res);\r\n   * });\r\n   */\r\n  put(url, data = {}, config = {}) {\r\n    if (arguments.length && !isString(url)) {\r\n      config = data;\r\n      data = url;\r\n      url = undefined;\r\n    }\r\n\r\n    return this.request(url, assign({ method: 'put', data }, config));\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#request\r\n   * @public\r\n   * @param {String} [url] - URL for the request.\r\n   * @param {FetchConfig} [config] - Additional config for this particular request.\r\n   * @returns {Promise.<FetchResponse, Error>} Promise that is resolved with the request response.\r\n   * @description Main function for making requests. All request methods call this method\r\n   * including the fetch instance itself.\r\n   *\r\n   * @example\r\n   * const fetch = new Fetch();\r\n   *\r\n   * fetch.request('/data', { timeout: 1000 }).then((res) => {\r\n   *   console.log(res);\r\n   * });\r\n   *\r\n   * fetch.request({ timeout: 1000 }).then((res) => {\r\n   *   console.log(res);\r\n   * });\r\n   *\r\n   * fetch.request().then((res) => {\r\n   *   console.log(res);\r\n   * });\r\n   */\r\n  request(url, config = {}) {\r\n    if (arguments.length === 1 && !isString(url)) {\r\n      config = url;\r\n    }\r\n\r\n    const dataConfig = new Super(config).hasOwn('data')\r\n      ? { data: config.data }\r\n      : {};\r\n    const urlConfig = isString(url)\r\n      ? { url }\r\n      : {};\r\n\r\n    delete config.data;\r\n\r\n    const conf = new Super(this.$$)\r\n      .deepClone()\r\n      .deepAssign(urlConfig, config)\r\n      .assign(dataConfig)\r\n      .$;\r\n\r\n    let xhr;\r\n    let promise = Promise.resolve();\r\n\r\n    iterate(conf.before, (middleware) => {\r\n      promise = promise.then(() => {\r\n        if (middleware.length >= 2) {\r\n          return Promise.resolve();\r\n        }\r\n\r\n        return new Promise((resolve) => {\r\n          resolve(middleware(conf));\r\n        });\r\n      }, (err) => {\r\n        if (middleware.length < 2) {\r\n          return Promise.reject(err);\r\n        }\r\n\r\n        return new Promise((resolve) => {\r\n          resolve(middleware(err, conf));\r\n        });\r\n      });\r\n    });\r\n\r\n    promise = promise.then(() => new Promise((resolve, reject) => {\r\n      const {\r\n        after,\r\n        auth: {\r\n          username,\r\n          password\r\n        },\r\n        data,\r\n        headers,\r\n        method,\r\n        onprogress,\r\n        responseType,\r\n        timeout,\r\n        url,\r\n        withCredentials\r\n      } = conf;\r\n\r\n      xhr = new XMLHttpRequest();\r\n\r\n      xhr.open(method, url, true, username, password);\r\n\r\n      iterate(headers, (value, header) => {\r\n        xhr.setRequestHeader(header, value);\r\n      });\r\n\r\n      if (onprogress) {\r\n        if (uploadMethods.indexOfStrict(method) === -1) {\r\n          xhr.onprogress = onprogress;\r\n        } else {\r\n          xhr.upload.onprogress = onprogress;\r\n        }\r\n      }\r\n\r\n      xhr.onabort = () => {\r\n        reject(new Error('Request was aborted'));\r\n\r\n        xhr = null;\r\n      };\r\n\r\n      xhr.onerror = () => {\r\n        reject(new Error('Network error'));\r\n\r\n        xhr = null;\r\n      };\r\n\r\n      xhr.ontimeout = () => {\r\n        reject(new Error('Request time exceeded'));\r\n\r\n        xhr = null;\r\n      };\r\n\r\n      xhr.onreadystatechange = () => {\r\n        if (!xhr || !xhr.status || xhr.readyState !== 4) {\r\n          return;\r\n        }\r\n\r\n        const response = {\r\n          config: conf,\r\n          data: !responseType || responseType === 'text' ? xhr.responseText : xhr.response,\r\n          headers: parseHeaders(xhr.getAllResponseHeaders()),\r\n          status: xhr.status === 1223 ? 204 : xhr.status,\r\n          statusText: xhr.status === 1223 ? 'No Content' : xhr.statusText,\r\n          xhr\r\n        };\r\n\r\n        let promise = Promise.resolve();\r\n\r\n        iterate(after, (middleware) => {\r\n          promise = promise.then(() => {\r\n            if (middleware.length >= 2) {\r\n              return Promise.resolve();\r\n            }\r\n\r\n            return new Promise((resolve) => {\r\n              resolve(middleware(response));\r\n            });\r\n          }, (err) => {\r\n            if (middleware.length < 2) {\r\n              return Promise.reject(err);\r\n            }\r\n\r\n            return new Promise((resolve) => {\r\n              resolve(middleware(err, response));\r\n            });\r\n          });\r\n        });\r\n\r\n        resolve(promise\r\n          .then(() => response)\r\n          .catch((err) => {\r\n            try {\r\n              err.response = response;\r\n            } catch (e) {\r\n              throw err;\r\n            }\r\n\r\n            throw err;\r\n          })\r\n        );\r\n      };\r\n\r\n      xhr.responseType = responseType;\r\n      xhr.timeout = Number(timeout) || 0;\r\n      xhr.withCredentials = !!withCredentials;\r\n\r\n      xhr.send(data);\r\n    }));\r\n\r\n    promise.abort = function abort() {\r\n      if (xhr) {\r\n        xhr.abort();\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\n    return promise;\r\n  }\r\n}\r\n\r\ndefineProperties(Fetch.prototype, {\r\n  [Symbol.toStringTag]: 'Fetch'\r\n});\r\n\r\n/**\r\n * @function fetchBeforeMiddleware\r\n * @private\r\n * @param {FetchConfig} config\r\n * @description Built-in before middleware for url, data, method, headers construction.\r\n */\r\nfunction fetchBeforeMiddleware(config) {\r\n  const {\r\n    baseURL,\r\n    data,\r\n    headers,\r\n    method,\r\n    params,\r\n    query,\r\n    url\r\n  } = config;\r\n  const METHOD = method.toUpperCase();\r\n\r\n  config.method = METHOD;\r\n  config.url = constructURL(baseURL, url, params, query);\r\n  config.data = transformData(data, METHOD, headers);\r\n  config.headers = new Super(headers).object((headers, values, header) => {\r\n    header = new Str(header)\r\n      .toCapitalCase()\r\n      .replace(/\\s+/g, '-')\r\n      .$;\r\n\r\n    headers[header] = values.join(', ');\r\n  }).$;\r\n}\r\n\r\n/**\r\n * @const {Fetch} fetch\r\n * @public\r\n * @description Empty instance of Fetch.\r\n */\r\nexport const fetch = new Fetch();\r\n\r\nexport default Fetch;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Fetch.js\n **/","/**\r\n * @module helpers/constructURL\r\n * @private\r\n * @description Exports Object.assign-like method.\r\n */\r\n\r\nimport Str from '../Str';\r\nimport { isArray, isObject } from './checkTypes';\r\nimport { iterate } from './iterate';\r\n\r\n/**\r\n * @type {RegExp}\r\n * @description Absolute URL pattern.\r\n */\r\nconst absoluteURLRegexp = /^(([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\/|data:[a-z]+\\/[a-z]+;base64,)/i;\r\n\r\n/**\r\n * @function constructURL\r\n * @param {String} baseURL - BaseURL of the output URL.\r\n * @param {String} url - Main part of the output URL.\r\n * @param {Object} params - Params to replace in the url expressions like \":param\".\r\n * @param {Object} query - Object with query params.\r\n * @param {Object} [hash = ''] - URL hash.\r\n * @returns {String} Constructed URL.\r\n * @description Function for constructing URL from the base URL, URL, params and query params.\r\n */\r\nexport default (baseURL, url, params, query, hash = '') => {\r\n  let URL = isAbsolute(url)\r\n    ? url\r\n    : `${ String(baseURL).replace(/\\/+$/, '') }/${ String(url).replace(/^\\/+/, '') }`;\r\n\r\n  iterate(params, (value, param) => {\r\n    URL = new Str(URL).replaceString(`:${ param }`, value).$;\r\n  });\r\n\r\n  const queryParams = [];\r\n\r\n  iterate(query, (value, param) => {\r\n    if (isArray(value)) {\r\n      param += '[]';\r\n    } else {\r\n      value = [value];\r\n    }\r\n\r\n    iterate(value, (value) => {\r\n      if (isObject(value)) {\r\n        value = JSON.stringify(value);\r\n      } else {\r\n        value = String(value);\r\n      }\r\n\r\n      queryParams.push(`${ encode(param) }=${ encode(value) }`);\r\n    });\r\n  });\r\n\r\n  if (queryParams.length) {\r\n    URL += (URL.indexOf('?') === -1 ? '?' : '&') + queryParams.join('&');\r\n  }\r\n\r\n  return `${ URL }${ hash ? `#${ hash }` : '' }`;\r\n};\r\n\r\n/**\r\n * @function isAbsolute\r\n * @param {String} url - URL to check if it is absolute or not.\r\n * @returns {Boolean} If the argument URL is absolute or not.\r\n */\r\nfunction isAbsolute(url) {\r\n  return absoluteURLRegexp.test(url);\r\n}\r\n\r\n/**\r\n * @function encode\r\n * @param {String} string - String to encode using encodeURIComponent\r\n * @returns {String} Encoded string.\r\n */\r\nfunction encode(string) {\r\n  return encodeURIComponent(string);\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/helpers/constructURL.js\n **/","/**\n * @module helpers/parseHeaders\n * @private\n * @description Exports parseHeaders method.\n */\n\nimport Str from '../Str';\nimport { iterate } from './iterate';\n\n/**\n * @function parseHeaders\n * @param {String} rawHeaders - Raw headers.\n * @returns {Object} Headers object\n * @description Function for parsing raw headers.\n */\nexport default (rawHeaders) => {\n  const headers = {};\n\n  iterate((rawHeaders || '').split('\\n'), (value) => {\n    const index = value.indexOf(':');\n    const key = new Str(value.substring(0, index))\n      .trim()\n      .toCamelCase().$;\n    const val = new Str(value.substring(index + 1)).trim().$;\n\n    if (key) {\n      headers[key] = (headers[key] ? `${ headers[key] }, ` : '') + val;\n    }\n  });\n\n  return headers;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/helpers/parseHeaders.js\n **/","/**\r\n * @module helpers/transformData\r\n * @private\r\n * @description Exports parseHeaders method.\r\n */\r\n\r\nimport Arr from '../Arr';\r\nimport Super from '../Super';\r\nimport { isObject, toStringTag } from './';\r\n\r\nconst notToTransform = new Arr(['FormData', 'File', 'Blob', 'ArrayBuffer', 'String', 'Number']);\r\nconst withoutBody = new Arr(['DELETE', 'GET', 'HEAD']);\r\n\r\n/**\r\n * @function transformData\r\n * @param {*} data - Data to transform\r\n * @param {String} method - HTTP method.\r\n * @param {Object} headers - Object with headers.\r\n * @returns {*} - Transformed data.\r\n */\r\nexport default (data, method, headers) => {\r\n  data = new Super(data).$;\r\n\r\n  if (withoutBody.indexOfStrict(method) !== -1) {\r\n    return null;\r\n  }\r\n\r\n  if (isObject(data) && notToTransform.keyOfStrict(toStringTag(data)) !== -1) {\r\n    if (!headers.contentType) {\r\n      headers.contentType = ['application/json;charset=utf-8'];\r\n    }\r\n\r\n    return new Super(data).json();\r\n  }\r\n\r\n  return data;\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/helpers/transformData.js\n **/","/**\r\n * @module constants/appliedRegExps\r\n * @private\r\n * @description Exports different types of syntax for {@link Elem#apply}.\r\n */\r\n\r\n/**\r\n * @callback matchAppliedExprCallback\r\n * @param {Elem} elem - D-elem of an element to apply expression to.\r\n * @param {String} string - Matched applied name.\r\n * @param {String} arg - Argument within the parentheses.\r\n */\r\n\r\n/**\r\n * @type {Object.<String, matchAppliedExprCallback|Object.<String, matchAppliedExprCallback>>}\r\n * @description Object of different types of syntax.\r\n */\r\n\r\nexport default {\r\n  '#'(elem, id) {\r\n    elem.id(id);\r\n  },\r\n  '.'(elem, cls) {\r\n    elem.addClass(cls);\r\n  },\r\n  $(elem, attr, value) {\r\n    elem.attr(attr, value);\r\n  },\r\n  '@'(elem, prop, value) {\r\n    elem.css(prop, value);\r\n  },\r\n  '&'(elem, name, html) {\r\n    elem.html(html);\r\n  },\r\n  '*'(elem, name, text) {\r\n    elem.text(text);\r\n  },\r\n  '-': {\r\n    '.'(elem, cls) {\r\n      elem.removeClass(cls);\r\n    },\r\n    $(elem, attr) {\r\n      elem.removeAttr(attr);\r\n    },\r\n    '@'(elem, prop) {\r\n      elem.removeCSS(prop);\r\n    }\r\n  }\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/constants/appliedRegExps.js\n **/","/**\n * @module constants/elements\n * @private\n * @description Exports methods for {@link Elem} for creating html-elements.\n */\n\n/**\n * @const\n * @type {String[]}\n */\nexport default [\n  /**\n   * @member {Function} Elem#a\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'a',\n\n  /**\n   * @member {Function} Elem#abbr\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'abbr',\n\n  /**\n   * @member {Function} Elem#address\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'address',\n\n  /**\n   * @member {Function} Elem#area\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'area',\n\n  /**\n   * @member {Function} Elem#article\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'article',\n\n  /**\n   * @member {Function} Elem#audio\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'audio',\n\n  /**\n   * @member {Function} Elem#b\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'b',\n\n  /**\n   * @member {Function} Elem#base\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'base',\n\n  /**\n   * @member {Function} Elem#bdi\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'bdi',\n\n  /**\n   * @member {Function} Elem#bdo\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'bdo',\n\n  /**\n   * @member {Function} Elem#blockquote\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'blockquote',\n\n  /**\n   * @member {Function} Elem#body\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'body',\n\n  /**\n   * @member {Function} Elem#br\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'br',\n\n  /**\n   * @member {Function} Elem#button\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'button',\n\n  /**\n   * @member {Function} Elem#canvas\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'canvas',\n\n  /**\n   * @member {Function} Elem#caption\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'caption',\n\n  /**\n   * @member {Function} Elem#cite\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'cite',\n\n  /**\n   * @member {Function} Elem#code\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'code',\n\n  /**\n   * @member {Function} Elem#col\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'col',\n\n  /**\n   * @member {Function} Elem#colgroup\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'colgroup',\n\n  /**\n   * @member {Function} Elem#content\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'content',\n\n  /**\n   * @member {Function} Elem#datalist\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'datalist',\n\n  /**\n   * @member {Function} Elem#dd\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'dd',\n\n  /**\n   * @member {Function} Elem#del\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'del',\n\n  /**\n   * @member {Function} Elem#details\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'details',\n\n  /**\n   * @member {Function} Elem#dfn\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'dfn',\n\n  /**\n   * @member {Function} Elem#dialog\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'dialog',\n\n  /**\n   * @member {Function} Elem#div\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'div',\n\n  /**\n   * @member {Function} Elem#dl\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'dl',\n\n  /**\n   * @member {Function} Elem#dt\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'dt',\n\n  /**\n   * @member {Function} Elem#element\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'element',\n\n  /**\n   * @member {Function} Elem#em\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'em',\n\n  /**\n   * @member {Function} Elem#embed\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'embed',\n\n  /**\n   * @member {Function} Elem#fieldset\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'fieldset',\n\n  /**\n   * @member {Function} Elem#figcaption\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'figcaption',\n\n  /**\n   * @member {Function} Elem#figure\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'figure',\n\n  /**\n   * @member {Function} Elem#footer\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'footer',\n\n  /**\n   * @member {Function} Elem#form\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'form',\n\n  /**\n   * @member {Function} Elem#h1\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'h1',\n\n  /**\n   * @member {Function} Elem#h2\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'h2',\n\n  /**\n   * @member {Function} Elem#h3\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'h3',\n\n  /**\n   * @member {Function} Elem#h4\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'h4',\n\n  /**\n   * @member {Function} Elem#h5\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'h5',\n\n  /**\n   * @member {Function} Elem#h6\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'h6',\n\n  /**\n   * @member {Function} Elem#head\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'head',\n\n  /**\n   * @member {Function} Elem#header\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'header',\n\n  /**\n   * @member {Function} Elem#hgroup\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'hgroup',\n\n  /**\n   * @member {Function} Elem#hr\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'hr',\n\n  /**\n   * @member {Function} Elem#i\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'i',\n\n  /**\n   * @member {Function} Elem#iframe\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'iframe',\n\n  /**\n   * @member {Function} Elem#img\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'img',\n\n  /**\n   * @member {Function} Elem#input\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'input',\n\n  /**\n   * @member {Function} Elem#ins\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'ins',\n\n  /**\n   * @member {Function} Elem#kbd\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'kbd',\n\n  /**\n   * @member {Function} Elem#label\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'label',\n\n  /**\n   * @member {Function} Elem#legend\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'legend',\n\n  /**\n   * @member {Function} Elem#li\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'li',\n\n  /**\n   * @member {Function} Elem#link\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'link',\n\n  /**\n   * @member {Function} Elem#main\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'main',\n\n  /**\n   * @member {Function} Elem#mark\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'mark',\n\n  /**\n   * @member {Function} Elem#menu\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'menu',\n\n  /**\n   * @member {Function} Elem#menuitem\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'menuitem',\n\n  /**\n   * @member {Function} Elem#meta\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'meta',\n\n  /**\n   * @member {Function} Elem#meter\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'meter',\n\n  /**\n   * @member {Function} Elem#nav\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'nav',\n\n  /**\n   * @member {Function} Elem#noscript\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'noscript',\n\n  /**\n   * @member {Function} Elem#null\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'null',\n\n  /**\n   * @member {Function} Elem#ol\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'ol',\n\n  /**\n   * @member {Function} Elem#optgroup\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'optgroup',\n\n  /**\n   * @member {Function} Elem#option\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'option',\n\n  /**\n   * @member {Function} Elem#output\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'output',\n\n  /**\n   * @member {Function} Elem#p\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'p',\n\n  /**\n   * @member {Function} Elem#param\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'param',\n\n  /**\n   * @member {Function} Elem#pre\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'pre',\n\n  /**\n   * @member {Function} Elem#progress\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'progress',\n\n  /**\n   * @member {Function} Elem#q\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'q',\n\n  /**\n   * @member {Function} Elem#rp\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'rp',\n\n  /**\n   * @member {Function} Elem#rt\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'rt',\n\n  /**\n   * @member {Function} Elem#rtc\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'rtc',\n\n  /**\n   * @member {Function} Elem#ruby\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'ruby',\n\n  /**\n   * @member {Function} Elem#s\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  's',\n\n  /**\n   * @member {Function} Elem#samp\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'samp',\n\n  /**\n   * @member {Function} Elem#script\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'script',\n\n  /**\n   * @member {Function} Elem#section\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'section',\n\n  /**\n   * @member {Function} Elem#select\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'select',\n\n  /**\n   * @member {Function} Elem#shadow\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'shadow',\n\n  /**\n   * @member {Function} Elem#small\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'small',\n\n  /**\n   * @member {Function} Elem#source\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'source',\n\n  /**\n   * @member {Function} Elem#span\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'span',\n\n  /**\n   * @member {Function} Elem#strong\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'strong',\n\n  /**\n   * @member {Function} Elem#style\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'style',\n\n  /**\n   * @member {Function} Elem#sub\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'sub',\n\n  /**\n   * @member {Function} Elem#summary\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'summary',\n\n  /**\n   * @member {Function} Elem#sup\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'sup',\n\n  /**\n   * @member {Function} Elem#table\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'table',\n\n  /**\n   * @member {Function} Elem#tbody\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'tbody',\n\n  /**\n   * @member {Function} Elem#td\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'td',\n\n  /**\n   * @member {Function} Elem#template\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'template',\n\n  /**\n   * @member {Function} Elem#textarea\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'textarea',\n\n  /**\n   * @member {Function} Elem#tfoot\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'tfoot',\n\n  /**\n   * @member {Function} Elem#th\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'th',\n\n  /**\n   * @member {Function} Elem#thead\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'thead',\n\n  /**\n   * @member {Function} Elem#time\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'time',\n\n  /**\n   * @member {Function} Elem#title\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'title',\n\n  /**\n   * @member {Function} Elem#tr\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'tr',\n\n  /**\n   * @member {Function} Elem#track\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'track',\n\n  /**\n   * @member {Function} Elem#u\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'u',\n\n  /**\n   * @member {Function} Elem#ul\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'ul',\n\n  /**\n   * @member {Function} Elem#var\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'var',\n\n  /**\n   * @member {Function} Elem#video\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'video',\n\n  /**\n   * @member {Function} Elem#wbr\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'wbr'\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/constants/elements.js\n **/","/**\n * @module constants/elements\n * @private\n * @description Exports different canvas methods for {@link Elem} for creating html-elements.\n */\n\n/**\n * @const\n * @type {String[]}\n */\nexport const canvasGetMethods = [\n  /**\n   * @member {Function} Elem#createImageData\n   * @type {Function}\n   * @param {...*} args\n   * @returns {ImageData|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/createImageData\n   */\n  'createImageData',\n\n  /**\n   * @member {Function} Elem#createLinearGradient\n   * @type {Function}\n   * @param {...*} args\n   * @returns {CanvasGradient|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/createLinearGradient\n   */\n  'createLinearGradient',\n\n  /**\n   * @member {Function} Elem#createPattern\n   * @type {Function}\n   * @param {...*} args\n   * @returns {CanvasPattern|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/createPattern\n   */\n  'createPattern',\n\n  /**\n   * @member {Function} Elem#createRadialGradient\n   * @type {Function}\n   * @param {...*} args\n   * @returns {CanvasGradient|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/createRadialGradient\n   */\n  'createRadialGradient',\n\n  /**\n   * @member {Function} Elem#getImageData\n   * @type {Function}\n   * @param {...*} args\n   * @returns {ImageData|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/getImageData\n   */\n  'getImageData',\n\n  /**\n   * @member {Function} Elem#getLineDash\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Number[]|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/getLineDash\n   */\n  'getLineDash',\n\n  /**\n   * @member {Function} Elem#isPointInPath\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Boolean|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/isPointInPath\n   */\n  'isPointInPath',\n\n  /**\n   * @member {Function} Elem#isPointInStroke\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Boolean|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/isPointInStroke\n   */\n  'isPointInStroke',\n\n  /**\n   * @member {Function} Elem#measureText\n   * @type {Function}\n   * @param {...*} args\n   * @returns {TextMetrics|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/measureText\n   */\n  'measureText'\n];\n\nexport const canvasRestMethods = [\n  /**\n   * @member {Function} Elem#arc\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/arc\n   */\n  'arc',\n\n  /**\n   * @member {Function} Elem#arcTo\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/arcTo\n   */\n  'arcTo',\n\n  /**\n   * @member {Function} Elem#beginPath\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/beginPath\n   */\n  'beginPath',\n\n  /**\n   * @member {Function} Elem#bezierCurveTo\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/bezierCurveTo\n   */\n  'bezierCurveTo',\n\n  /**\n   * @member {Function} Elem#clearRect\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/clearRect\n   */\n  'clearRect',\n\n  /**\n   * @member {Function} Elem#clip\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/clip\n   */\n  'clip',\n\n  /**\n   * @member {Function} Elem#closePath\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/closePath\n   */\n  'closePath',\n\n  /**\n   * @member {Function} Elem#drawFocusIfNeeded\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/drawFocusIfNeeded\n   */\n  'drawFocusIfNeeded',\n\n  /**\n   * @member {Function} Elem#drawImage\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/drawImage\n   */\n  'drawImage',\n\n  /**\n   * @member {Function} Elem#ellipse\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/ellipse\n   */\n  'ellipse',\n\n  /**\n   * @member {Function} Elem#fill\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/fill\n   */\n  'fill',\n\n  /**\n   * @member {Function} Elem#fillRect\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/fillRect\n   */\n  'fillRect',\n\n  /**\n   * @member {Function} Elem#fillText\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/fillText\n   */\n  'fillText',\n\n  /**\n   * @member {Function} Elem#lineTo\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/lineTo\n   */\n  'lineTo',\n\n  /**\n   * @member {Function} Elem#moveTo\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/moveTo\n   */\n  'moveTo',\n\n  /**\n   * @member {Function} Elem#putImageData\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/putImageData\n   */\n  'putImageData',\n\n  /**\n   * @member {Function} Elem#quadraticCurveTo\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/quadraticCurveTo\n   */\n  'quadraticCurveTo',\n\n  /**\n   * @member {Function} Elem#rect\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/rect\n   */\n  'rect',\n\n  /**\n   * @member {Function} Elem#resetTransform\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/resetTransform\n   */\n  'resetTransform',\n\n  /**\n   * @member {Function} Elem#restore\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/restore\n   */\n  'restore',\n\n  /**\n   * @member {Function} Elem#rotate\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/rotate\n   */\n  'rotate',\n\n  /**\n   * @member {Function} Elem#save\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/save\n   */\n  'save',\n\n  /**\n   * @member {Function} Elem#scale\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/scale\n   */\n  'scale',\n\n  /**\n   * @member {Function} Elem#setLineDash\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/setLineDash\n   */\n  'setLineDash',\n\n  /**\n   * @member {Function} Elem#setTransform\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/setTransform\n   */\n  'setTransform',\n\n  /**\n   * @member {Function} Elem#stroke\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/stroke\n   */\n  'stroke',\n\n  /**\n   * @member {Function} Elem#strokeRect\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/strokeRect\n   */\n  'strokeRect',\n\n  /**\n   * @member {Function} Elem#strokeText\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/strokeText\n   */\n  'strokeText',\n\n  /**\n   * @member {Function} Elem#transform\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/transform\n   */\n  'transform',\n\n  /**\n   * @member {Function} Elem#translate\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/translate\n   */\n  'translate'\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/constants/canvasMethods.js\n **/"],"sourceRoot":""}