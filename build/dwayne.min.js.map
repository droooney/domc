{"version":3,"file":"dwayne.min.js","sources":["../lib/helpers/toStringTag.js","../lib/helpers/checkTypes.js","../lib/D.js","../lib/helpers/iterate.js","../lib/helpers/assign.js","../lib/helpers/defineProperty.js","../lib/helpers/toArray.js","../lib/helpers/validate.js","../lib/Alphabet.js","../lib/Switcher.js","../lib/Super.js","../lib/Arr.js","../lib/BlobObject.js","../lib/Func.js","../lib/Num.js","../lib/Str.js","../lib/constants/formats.js","../lib/Dat.js","../lib/helpers/constructURL.js","../lib/Fetch.js","../lib/Elem.js","../lib/Router.js","../lib/constants/global.js","../lib/helpers/Symbol.js","../lib/constants/validateCheckExpressions.js","../lib/Promise.js","../lib/constants/regexpSpecialCharacters.js","../lib/helpers/parseHeaders.js","../lib/helpers/transformData.js","../lib/constants/appliedRegExps.js","../lib/constants/elements.js","../lib/constants/canvasMethods.js","../lib/helpers/resolveURL.js","../browser.js"],"sourcesContent":["/**\n * @module helpers/toStringTag\n * @private\n * @description Exports toStringTag method.\n */\n\n/**\n * @function toStringTag\n * @param {*} object - Object to get toStringTag of.\n * @returns {String} Cut string.\n * @description Cut \"Type\" string from \"[object Type]\" string that gotten from {}.toString,call(object).\n */\nexport function toStringTag(object) {\n  return {}.toString.call(object).replace(/^\\[object |]$/g, '');\n}\n","/**\r\n * @module helpers/checkTypes\r\n * @private\r\n * @mixin\r\n * @description Exports is<Type> methods.\r\n */\r\n\r\nimport { toStringTag } from './toStringTag';\r\n\r\n/**\r\n * @function isArray\r\n * @public\r\n * @param {*} value - Value to check if it is an array.\r\n * @returns {Boolean} If the argument is an array or not.\r\n * \r\n * @example\r\n * isArray([]);                             // true\r\n * isArray(0);                              // true\r\n * isArray(document.querySelectorAll('*')); // false\r\n */\r\nexport function isArray(value) {\r\n  return toStringTag(value) === 'Array';\r\n}\r\n\r\n/**\r\n * @function isArrayLike\r\n * @public\r\n * @param {*} value - Value to check if it is array-like.\r\n * @returns {Boolean} If the argument is array-like or not.\r\n * @description Basically returns if the argument has non-negative integer \"length\" property and isn't a function.\r\n * \r\n * @example\r\n * isArrayLike([]);                             // true\r\n * isArrayLike('');                             // true\r\n * isArrayLike(() => {});                       // false\r\n * isArrayLike(document.querySelectorAll('*')); // true\r\n */\r\nexport function isArrayLike(value) {\r\n  if (!value || isFunction(value)) {\r\n    return false;\r\n  }\r\n  \r\n  const length = value.length;\r\n  \r\n  return isInteger(length) && length >= 0;\r\n}\r\n\r\n/**\r\n * @function isBoolean\r\n * @public\r\n * @param {*} value - Value to check if it is a boolean.\r\n * @returns {Boolean} If the argument is a boolean or not.\r\n * \r\n * @example\r\n * isBoolean(true);               // true\r\n * isBoolean(new Boolean(false)); // true\r\n * isBoolean(null);               // false\r\n */\r\nexport function isBoolean(value) {\r\n  return toStringTag(value) === 'Boolean';\r\n}\r\n\r\n/**\r\n * @function isDate\r\n * @public\r\n * @param {*} value - Value to check if it is a date.\r\n * @returns {Boolean} If the argument is a date or not.\r\n * \r\n * @example\r\n * isDate(new Date());                 // true\r\n * isDate('1999-12-31T23:59:59.999Z'); // false\r\n */\r\nexport function isDate(value) {\r\n  return toStringTag(value) === 'Date';\r\n}\r\n\r\n/**\r\n * @function isDateLike\r\n * @public\r\n * @param {*} value - Value to check if it is date-like.\r\n * @returns {Boolean} If the argument is date-like or not.\r\n * @description Basically returns if new Date(argument) is not invalid date.\r\n * \r\n * @example\r\n * isDateLike(new Date());                 // true\r\n * isDateLike('1999-12-31T23:59:59.999Z'); // true\r\n * isDateLike(0);                          // true\r\n */\r\nexport function isDateLike(value) {\r\n  value = new Date(value);\r\n  \r\n  return !isNaN(value.getTime());\r\n}\r\n\r\n/**\r\n * @function isElement\r\n * @public\r\n * @param {*} value - Value to check if it is an element.\r\n * @returns {Boolean} If the argument is element or not.\r\n *\r\n * @example\r\n * isElement(document.querySelector('html')); // true\r\n */\r\nexport function isElement(value) {\r\n  return /Element$/.test(toStringTag(value));\r\n}\r\n\r\n/**\r\n * @function isFinite\r\n * @public\r\n * @param {*} value - Value to check if it is finite.\r\n * @returns {Boolean} If the argument is finite or not.\r\n * \r\n * @example\r\n * isFinite(0);        // true\r\n * isFinite('0');      // false\r\n * isFinite(Infinity); // false\r\n * isFinite(NaN);      // false\r\n */\r\nexport function isFinite(value) {\r\n  if (!isNumber(value)) {\r\n    return false;\r\n  }\r\n  \r\n  value = Number(value);\r\n\r\n  return !isNaN(value) && value !== Infinity && value !== -Infinity;\r\n}\r\n\r\n/**\r\n * @function isFunction\r\n * @public\r\n * @param {*} value - Value to check if it is a function.\r\n * @returns {Boolean} If the argument is a function or not.\r\n * \r\n * @example\r\n * isFunction(() => {});            // true\r\n * \r\n * const func = () => {};\r\n * Object.setPrototypeOf(func, {});\r\n * isFunction(func);                // true\r\n */\r\nexport function isFunction(value) {\r\n  return toStringTag(value) === 'Function' || typeof value === 'function';\r\n}\r\n\r\n/**\r\n * @function isInteger\r\n * @public\r\n * @param {*} value - Value to check if it is an integer.\r\n * @returns {Boolean} If the argument is an integer or not.\r\n *\r\n * @example\r\n * isInteger(0);             // true\r\n * isInteger(0.1);           // false\r\n * isInteger(new Number(0)); // true\r\n * isInteger('0');           // false\r\n * isInteger(Infinity);      // false\r\n * isInteger(NaN);           // false\r\n */\r\nexport function isInteger(value) {\r\n  return isNumber(value) && value % 1 === 0;\r\n}\r\n\r\n/**\r\n * @function isIntegerLike\r\n * @public\r\n * @param {*} value - Value to check if it is integer-like.\r\n * @returns {Boolean} If the argument is integer-like or not.\r\n *\r\n * @example\r\n * isIntegerLike(0);             // true\r\n * isIntegerLike(new Number(0)); // true\r\n * isIntegerLike(0.1);           // false\r\n * isIntegerLike('0');           // true\r\n */\r\nexport function isIntegerLike(value) {\r\n  value = parseInt(Number(value));\r\n\r\n  return !!(value || value === 0);\r\n}\r\n\r\n/**\r\n * @function isNaN\r\n * @public\r\n * @param {*} value - Value to check if it is NaN.\r\n * @returns {Boolean} If the argument is NaN or not.\r\n *\r\n * @example\r\n * isNaN(0);               // false\r\n * isNaN('NaN');           // false\r\n * isNaN(NaN);             // true\r\n * isNaN(new Number(NaN)); // true\r\n */\r\nexport function isNaN(value) {\r\n  if (!isNumber(value)) {\r\n    return false;\r\n  }\r\n  \r\n  value = Number(value);\r\n\r\n  return value !== value;\r\n}\r\n\r\n/**\r\n * @function isNull\r\n * @public\r\n * @param {*} value - Value to check if it is null.\r\n * @returns {Boolean} If the argument is null or not.\r\n *\r\n * @example\r\n * isNull(null);      // true\r\n * isNull(undefined); // false\r\n */\r\nexport function isNull(value) {\r\n  return value === null;\r\n}\r\n\r\n/**\r\n * @function isNullOrUndefined\r\n * @public\r\n * @param {*} value - Value to check if it is null or undefined.\r\n * @returns {Boolean} If the argument is null or undefined or not.\r\n *\r\n * @example\r\n * isNullOrUndefined(null);      // true\r\n * isNullOrUndefined(undefined); // true\r\n * isNullOrUndefined(false);     // false\r\n */\r\nexport function isNullOrUndefined(value) {\r\n  return value === null || typeof value === 'undefined';\r\n}\r\n\r\n/**\r\n * @function isNumber\r\n * @public\r\n * @param {*} value - Value to check if it is a number.\r\n * @returns {Boolean} If the argument is a number or not.\r\n *\r\n * @example\r\n * isNumber(0);             // true\r\n * isNumber(new Number(0)); // true\r\n * isNumber(NaN);           // true\r\n * isNumber('0');           // false\r\n */\r\nexport function isNumber(value) {\r\n  return toStringTag(value) === 'Number';\r\n}\r\n\r\n/**\r\n * @function isNumberLike\r\n * @public\r\n * @param {*} value - Value to check if it is number-like.\r\n * @returns {Boolean} If the argument is number-like or not.\r\n *\r\n * @example\r\n * isNumberLike(0);          // true\r\n * isNumberLike('0');        // true\r\n * isNumberLike('Infinity'); // true\r\n * isNumberLike('NaN');      // true\r\n * isNumberLike(NaN);        // true\r\n */\r\nexport function isNumberLike(value) {\r\n  if (isNaN(value) || value === 'NaN') {\r\n    return true;\r\n  }\r\n  \r\n  value = Number(value);\r\n  \r\n  return !!(value || value === 0);\r\n}\r\n\r\n/**\r\n * @function isObject\r\n * @public\r\n * @param {*} value - Value to check if it is an object.\r\n * @returns {Boolean} If the argument is an object or not.\r\n *\r\n * @example\r\n * isObject({});   // true\r\n * isObject(1);    // false\r\n * isObject(null); // false\r\n */\r\nexport function isObject(value) {\r\n  return !!value && (toStringTag(value) === 'Object' || typeof value === 'object' || value instanceof Object);\r\n}\r\n\r\n/**\r\n * @function isPlainObject\r\n * @public\r\n * @param {*} value - Value to check if it is a plain object.\r\n * @returns {Boolean} If the argument is a plain object or not.\r\n *\r\n * @example\r\n * const obj = {};\r\n *\r\n * ifPlainObject(obj); // true\r\n *\r\n * Object.setPrototypeOf(object, null);\r\n *\r\n * ifPlainObject(obj); // true\r\n *\r\n * Object.setPrototypeOf(object, {});\r\n *\r\n * ifPlainObject(obj); // false\r\n */\r\nexport function isPlainObject(value) {\r\n  if (isPrimitive(value)) {\r\n    return false;\r\n  }\r\n\r\n  const proto = Object.getPrototypeOf(value);\r\n\r\n  if (isNull(proto)) {\r\n    return true;\r\n  }\r\n\r\n  const constructor = proto.constructor;\r\n\r\n  return isFunction(constructor) &&\r\n    constructor instanceof constructor &&\r\n    isNull(Object.getPrototypeOf(proto));\r\n}\r\n\r\n/**\r\n * @function isPrimitive\r\n * @public\r\n * @param {*} value - Value to check if it is primitive.\r\n * @returns {Boolean} If the argument is primitive or not.\r\n *\r\n * @example\r\n * isPrimitive(1);             // true\r\n * isPrimitive({});            // false\r\n * isPrimitive('');            // true\r\n * isPrimitive(new Number(0)); // false\r\n * isPrimitive(true);          // true\r\n * isPrimitive(Symbol('foo')); // true\r\n * isPrimitive(null);          // true\r\n * isPrimitive(undefined);     // true\r\n */\r\nexport function isPrimitive(value) {\r\n  return isNull(value) || /^(number|string|boolean|symbol|undefined)$/.test(typeof value);\r\n}\r\n\r\n/**\r\n * @function isRegExp\r\n * @public\r\n * @param {*} value - Value to check if it is a regular expression.\r\n * @returns {Boolean} If the argument is a regular expression or not.\r\n *\r\n * @example\r\n * isRegExp(/foo/);             // true\r\n * isRegExp('/foo/');           // false\r\n * isRegExp(new RegExp('foo')); // true\r\n */\r\nexport function isRegExp(value) {\r\n  return toStringTag(value) === 'RegExp';\r\n}\r\n\r\n/**\r\n * @function isString\r\n * @public\r\n * @param {*} value - Value to check if it is a string.\r\n * @returns {Boolean} If the argument is a string or not.\r\n *\r\n * @example\r\n * isString('0');             // true\r\n * isString(new String('0')); // true\r\n */\r\nexport function isString(value) {\r\n  return toStringTag(value) === 'String';\r\n}\r\n\r\n/**\r\n * @function isSymbol\r\n * @public\r\n * @param {*} value - Value to check if it is a symbol.\r\n * @returns {Boolean} If the argument is a symbol or not.\r\n *\r\n * @example\r\n * isSymbol(Symbol('1')); // true\r\n */\r\nexport function isSymbol(value) {\r\n  return toStringTag(value) === 'Symbol';\r\n}\r\n\r\n/**\r\n * @function isUndefined\r\n * @public\r\n * @param {*} value - Value to check if it is undefined.\r\n * @returns {Boolean} If the argument is undefined or not.\r\n *\r\n * @example\r\n * isUndefined(null);      // false\r\n * isUndefined(undefined); // true\r\n */\r\nexport function isUndefined(value) {\r\n  return typeof value === 'undefined';\r\n}\r\n","/**\n * @module D\n * @private\n * @description Exports D function.\n */\n\nimport constructors from './constants/constructors';\n\nexport * from './helpers/checkTypes';\n\n/**\n * @function D\n * @public\n * @param {*} [value] - Any value.\n * @returns {DWrap} Wrap of the argument.\n * @description Function for creating a D-wrap of an object.\n *\n * @example\n * D({});            // Super\n * D(() => {});      // Func\n * D([]);            // Arr\n * D(1);             // Num\n * D('1');           // Str\n * D(new Date());    // Dat\n * D(document.body); // Elem\n */\nexport function D(value) {\n  for (let i = constructors.length - 1; i >= 0; i--) {\n    const levelConstructors = constructors[i];\n\n    for (let k = 0, len = levelConstructors.length; k < len; k++) {\n      const constructor = levelConstructors[k];\n\n      if (value instanceof constructor.cls) {\n        return value;\n      }\n\n      if (constructor.check(value)) {\n        return new constructor.cls(value);\n      }\n    }\n  }\n}\n\nexport default D;\n","/**\r\n * @module helpers/iterate\r\n * @private\r\n * @description Exports iterate method.\r\n */\r\n\r\nimport { isArrayLike, isUndefined } from './checkTypes';\r\n\r\n/**\r\n * @callback IterationCallback\r\n * @param {*} value - Iteration value.\r\n * @param {String|Number} key - Iteration key.\r\n * @param {*} object - Initial iterable object.\r\n */\r\n\r\n/**\r\n * @function iterate\r\n * @param {(Object|Array|null|undefined)} object - Value to iterate over.\r\n * @param {IterationCallback} callback - Callback that is called on every iteration.\r\n * @returns {*} If callback returns not undefined then iterate returns this value.\r\n * @description Function for iterating over all types of values.\r\n */\r\nexport function iterate(object, callback) {\r\n  const array = isArrayLike(object);\r\n\r\n  let iterated = 0;\r\n\r\n  for (const key in object) {\r\n    if ({}.hasOwnProperty.call(object, key)) {\r\n      if (array && iterated++ >= object.length) {\r\n        break;\r\n      }\r\n\r\n      const value = callback(object[key], array ? Number(key) : key, object);\r\n\r\n      if (!isUndefined(value)) {\r\n        return value;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\n * @module helpers/assign\n * @private\n * @description Exports Object.assign-like method.\n */\n\nimport { iterate } from './iterate';\n\n/**\n * @const\n * @function assign\n * @param {Object} target - Object to assign rest of arguments to.\n * @param {...Object} objects - Objects that are assigned to the target.\n * @returns {Object} Target.\n */\nexport function assign(target) {\n  iterate(arguments, (source, index) => {\n    if (index) {\n      iterate(source, (value, key) => {\n        target[key] = value;\n      });\n    }\n  });\n    \n  return target;\n}\n","/**\n * @module helpers/defineProperty\n * @private\n * @description Exports defineProperty and dynamicDefineProperties methods.\n */\n\nimport { iterate } from './iterate';\n\n/**\n * @callback propertyGeneratorCallback\n * @param {String} name - Name of the property.\n * @returns {*} Generated property.\n */\n\n/**\n * @function dynamicDefineProperties\n * @param {Object} target - Object to define properties for.\n * @param {Array} properties - Object which keys are properties.\n * @param {propertyGeneratorCallback} propertyGenerator - Callback for every property.\n * @returns {void}\n * @description Function for dynamic creating properties based on name of the method.\n */\nexport function dynamicDefineProperties(target, properties, propertyGenerator) {\n  iterate(properties, (name) => {\n    Object.defineProperty(target, name, {\n      value: propertyGenerator(name),\n      writable: true,\n      enumerable: false,\n      configurable: true\n    });\n  });\n}\n\n/**\n * @function defineProperties\n * @param {Object} target - Target to define properties for.\n * @param {Object} properties - Object with properties needed to be assign to the target.\n * @returns {void}\n * @description Function for defining properties of an object.\n */\nexport function defineProperties(target, properties) {\n  iterate(properties, (method, name) => {\n    if (/^get /.test(name)) {\n      Object.defineProperty(target, name.replace(/^get /, ''), {\n        get: method,\n        set: undefined,\n        enumerable: false,\n        configurable: true\n      });\n\n      return;\n    }\n\n    if (/^set /.test(name)) {\n      Object.defineProperty(target, name.replace(/^set /, ''), {\n        set: method,\n        get: undefined,\n        enumerable: false,\n        configurable: true\n      });\n\n      return;\n    }\n\n    if (/^get\\/set /.test(name)) {\n      Object.defineProperty(target, name.replace(/^get\\/set /, ''), {\n        get: method.get,\n        set: method.set,\n        enumerable: false,\n        configurable: true\n      });\n\n      return;\n    }\n\n    if (name !== 'Symbol.toStringTag') {\n      Object.defineProperty(target, name, {\n        value: method,\n        writable: true,\n        enumerable: false,\n        configurable: true\n      });\n    }\n  });\n}\n","/**\n * @module helpers/toArray\n * @private\n * @description Exports toArray method.\n */\n\nimport { isArray, isArrayLike, isString } from './checkTypes';\nimport { iterate } from './iterate';\n\n/**\n * @function toArray\n * @param {*} value - Any value.\n * @param {Boolean} [createNewArray = false] - If it is needed to create new array.\n * @returns {Array} Create array.\n * @description Function for creating an array of any value.\n */\nexport function toArray(value, createNewArray) {\n  if (isArray(value) && !createNewArray) {\n    return value;\n  }\n\n  const array = [];\n\n  if (isArrayLike(value) && !isString(value)) {\n    iterate(value, (value) => {\n      array.push(value);\n    });\n  } else {\n    array.push(value);\n  }\n\n  return array;\n}\n","/**\r\n * @module helpers/validate\r\n * @private\r\n * @description Exports validate method.\r\n */\r\n\r\nimport checkExpressions from '../constants/validateCheckExpressions';\r\nimport { iterate } from './iterate';\r\nimport { isArray } from './checkTypes';\r\n\r\nconst numbers = ['1st', '2nd', '3rd', '4th', '5th', '6th', '7th'];\r\n\r\n/**\r\n * @function validate\r\n * @private\r\n * @param {Object} args - Arguments of function.\r\n * @param {Object} options - Object with validate parameters.\r\n * @param {String} [name] - Name of the function what called validate.\r\n * @returns {void}\r\n * @description Function for checking arguments of other functions.\r\n */\r\nexport function validate(args, options, name) {\r\n  iterate(options, (array, number) => {\r\n    if (!isArray(array)) {\r\n      array = [array];\r\n    }\r\n\r\n    iterate(array, (checker) => {\r\n      checker = checkExpressions[checker];\r\n\r\n      if (!checker.check(args[number])) {\r\n        throw new checker.error(checker.text.replace('$n', numbers[number]) + (name ? ` (at ${ name })` : ''));\r\n      }\r\n    });\r\n  });\r\n}\r\n","/**\r\n * @module Alphabet\r\n * @private\r\n * @mixin\r\n * @description Exports Alphabet class.\r\n */\r\n\r\nimport { isString, validate, defineProperties, Symbol } from './helpers';\r\n\r\n/**\r\n * @typedef {String} Char\r\n * @public\r\n * @description A string of one char.\r\n */\r\n\r\n/**\r\n * @class Alphabet\r\n * @public\r\n * @param {ArrayLike} alphabet - Alphabet to wrap.\r\n * @returns {Alphabet} Instance of Alphabet.\r\n * @description Class for alphabet manipulations: add, delete symbols, generate a token from an alphabet,\r\n * check if an alphabet contains a word.\r\n *\r\n * @example\r\n * new Alphabet(['a', 'b', 'c']);\r\n */\r\nexport class Alphabet {\r\n  constructor(alphabet = []) {\r\n    const a = {};\r\n\r\n    for (let i = 0, length = alphabet.length; i < length; i++) {\r\n      const char = alphabet[i];\r\n\r\n      if (!check(char)) {\r\n        throw new Error('Each element of an array must be a single char! (in Alphabet)');\r\n      }\r\n\r\n      a[char] = char;\r\n    }\r\n\r\n    /**\r\n     * @member {Object} Alphabet#$$\r\n     * @public\r\n     * @description The alphabet.\r\n     */\r\n    Object.defineProperty(this, '$$', { value: a });\r\n  }\r\n\r\n  /**\r\n   * @method Alphabet#add\r\n   * @public\r\n   * @param {...Char} chars - Chars to add.\r\n   * @returns {Alphabet} Returns this.\r\n   * @description Method for adding new letters to the alphabet.\r\n   *\r\n   * @example\r\n   * const alphabet = new Alphabet(['a', 'b', 'c']);\r\n   *\r\n   * alphabet.add('d', 'e');\r\n   *\r\n   * alphabet.get().$; // ['a', 'b', 'c', 'd', 'e']\r\n   */\r\n  add(...chars) {\r\n    for (let i = 0, length = chars.length; i < length; i++) {\r\n      const char = chars[i];\r\n\r\n      if (!check(char)) {\r\n        throw new Error('Each argument must be a single char! (in Alphabet#add)');\r\n      }\r\n\r\n      this.$$[char] = char;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Alphabet#contains\r\n   * @public\r\n   * @param {String} word - Word to check if it is in the alphabet or not.\r\n   * @returns {Boolean} If the word in the alphabet or not.\r\n   * @description Method that returns if a word is in alphabet or not.\r\n   *\r\n   * @example\r\n   * const alphabet = new Alphabet(['f', 'b', 'o', 'a', 'r']);\r\n   *\r\n   * alphabet.contains('foo'); // true\r\n   * alphabet.contains('bar'); // true\r\n   * alphabet.contains('baz'); // false\r\n   */\r\n  contains(word) {\r\n    validate([word], ['string'], 'Alphabet#contains');\r\n\r\n    const alphabet = this.$$;\r\n\r\n    for (let i = 0, length = word.length; i < length; i++) {\r\n      if (!alphabet[word[i]]) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @method Alphabet#delete\r\n   * @public\r\n   * @param {...Char} chars - Chars to delete.\r\n   * @returns {Alphabet} Returns this.\r\n   * @description Method for deleting letters from the alphabet.\r\n   *\r\n   * @example\r\n   * const alphabet = new Alphabet(['a', 'b', 'c', 'd']);\r\n   *\r\n   * alphabet.delete('a');\r\n   *\r\n   * alphabet.get().$; // ['b', 'c', 'd']\r\n   *\r\n   * alphabet.delete('b', 'd');\r\n   *\r\n   * alphabet.get().$; // ['c']\r\n   */\r\n  delete(...chars) {\r\n    for (let i = 0, length = chars.length; i < length; i++) {\r\n      const char = chars[i];\r\n\r\n      if (!check(char)) {\r\n        throw new Error('Each argument must be a single char! (in Alphabet#delete)');\r\n      }\r\n\r\n      delete this.$$[char];\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Alphabet#get\r\n   * @returns {Array} Wrap of an array of alphabet letters.\r\n   * @description Method for getting array of alphabet letters.\r\n   *\r\n   * @example\r\n   * new Alphabet(['a', 'b', 'c']).get().$; // ['a', 'b', 'c']\r\n   */\r\n  get() {\r\n    return Object.keys(this.$$);\r\n  }\r\n\r\n  /**\r\n   * @method Alphabet#token\r\n   * @public\r\n   * @param {Number} length - Token length.\r\n   * @returns {String} Token.\r\n   * @description Method for generating random token with given length.\r\n   *\r\n   * @example\r\n   * new Alphabet(['a', 'b', 'c']).token(4); // 'abcb'\r\n   */\r\n  token(length) {\r\n    validate([length], [['intLike', '>0']], 'Alphabet#token');\r\n\r\n    const alphabet = Object.keys(this.$$);\r\n    const len = alphabet.length;\r\n    let token = '';\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      token += alphabet[Math.floor(Math.random() * len)];\r\n    }\r\n\r\n    return token;\r\n  }\r\n}\r\n\r\ndefineProperties(Alphabet.prototype, {\r\n  [Symbol.toStringTag]: 'Alphabet'\r\n});\r\n\r\nfunction check(char) {\r\n  return isString(char) && char.length === 1;\r\n}\r\n\r\n/**\r\n * @function alphabet\r\n * @public\r\n * @param {String} string - String to generate an alphabet from.\r\n * @returns {Alphabet} New instance of Alphabet.\r\n * @description Function for creating an alphabet from a string that has format like this:\r\n * '&lt;char1&gt;-&lt;char2&gt; &lt;char3&gt;-&lt;char4&gt;'\r\n *\r\n * @example\r\n * const a1 = alphabet('a-c 1-3');\r\n * const a2 = alphabet('5-5f-g');\r\n *\r\n * a1.get().$; // ['1', '2', '3', 'a', 'b', 'c']\r\n * a2.get().$; // ['5', 'f', 'g']\r\n */\r\nexport function alphabet(string) {\r\n  validate([string], ['string']);\r\n\r\n  const ranges = string.split(/([\\s\\S]\\-+[\\s\\S])?/g);\r\n  const length = ranges.length;\r\n  const alphabet = [];\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    const range = ranges[i];\r\n\r\n    if (!range || range === ' ') {\r\n      continue;\r\n    }\r\n\r\n    if (/\\-/.test(range) && !/[\\s\\S]\\-+[\\s\\S]/.test(range)) {\r\n      throw new Error(`Wrong part of the string (${ range })! (in alphabet)`);\r\n    }\r\n\r\n    if (/\\-/.test(range)) {\r\n      const start = range.charCodeAt(0);\r\n      const end = range.charCodeAt(2);\r\n\r\n      if (start > end) {\r\n        throw new Error('Start of the range must be before its end! (in alphabet)');\r\n      }\r\n\r\n      for (let k = 0, len = end - start + 1; k < len; k++) {\r\n        alphabet.push(String.fromCharCode(start + k));\r\n      }\r\n\r\n      continue;\r\n    }\r\n\r\n    if (range.length === 1) {\r\n      alphabet.push(range);\r\n    }\r\n  }\r\n\r\n  return new Alphabet(alphabet);\r\n}\r\n\r\nexport default Alphabet;\r\n","/**\r\n * @module Switcher\r\n * @private\r\n * @mixin\r\n * @description Exports Switcher class.\r\n */\r\n\r\nimport {\r\n  isArray, isFunction, isString, isUndefined,\r\n  iterate, Symbol, toArray, defineProperties\r\n} from './helpers';\r\n\r\n/**\r\n * @typedef {'boolean'|'equals'|'strictEquals'|'call'} SwitcherMode\r\n * @public\r\n * @description Enum type of switcher modes.\r\n */\r\n\r\n/**\r\n * @callback SwitcherCallCallback\r\n * @public\r\n * @param {*} value - Switcher value.\r\n * @returns {Boolean|*} On what the callback returns depends if the case is a match (truthy for the match).\r\n */\r\n\r\n/**\r\n * @callback SwitcherMatchCallback\r\n * @public\r\n * @param {...*} args - Arguments from the second argument that switcher was called with.\r\n * @param {*} value - Switcher value.\r\n * @param {*} matched - Switcher matched case.\r\n */\r\n\r\n/**\r\n * @class Switcher\r\n * @public\r\n * @param {Object} [cases = {}] - Object of cases.\r\n * @param {SwitcherMode} [mode = 'equals'] - Switcher mode.\r\n * @param {*} [defaultValue] - Switcher default value.\r\n * @returns {Switcher} - Instance of Switcher.\r\n * @description Switcher class for creating functions working similar to switch (value) {} construction,\r\n * but with the value assignment. Switcher instance is a function that accepts a value argument and an optional\r\n * args argument. Args with additional switcher value and matched case\r\n * are passed into the function of the matched case (if it is a function).\r\n *\r\n * @example\r\n * const switcher = new Switcher();\r\n * const switcher = new Switcher({\r\n *   case1: 'value1',\r\n *   case2: 'value2'\r\n * });\r\n * const switcher = new Switcher('strictEquals');\r\n * const switcher = new Switcher({\r\n *   case1: 'value1',\r\n *   case2: 'value2'\r\n * }, 'strictEquals');\r\n * const switcher = new Switcher('strictEquals', 'defaultValue');\r\n * const switcher = new Switcher({\r\n *   case1: 'value1',\r\n *   case2: 'value2'\r\n * }, 'strictEquals', 'defaultValue');\r\n *\r\n * // See [switcher]{@link switcher} examples for more information.\r\n */\r\nexport class Switcher extends Function {\r\n  constructor(cases = {}, mode = 'equals', defaultValue) {\r\n    super();\r\n\r\n    if (isString(cases)) {\r\n      if (!isUndefined(arguments[1])) {\r\n        defaultValue = mode;\r\n      }\r\n\r\n      mode = cases;\r\n      cases = {};\r\n    }\r\n\r\n    const eventualCases = [];\r\n\r\n    iterate(cases, (value, Case) => {\r\n      eventualCases.push({ case: Case, value });\r\n    });\r\n\r\n    function switcher(value, args = []) {\r\n      const { mode, default: def, cases } = switcher.$$;\r\n\r\n      let ret = iterate(cases, ({ value: val, case: Case }) => {\r\n        if (\r\n          (mode === 'boolean' && Case) ||\r\n          /* eslint eqeqeq: 0 */\r\n          (mode === 'equals' && Case == value) ||\r\n          (mode === 'strictEquals' && Case === value) ||\r\n          (mode === 'call' && Case(value))\r\n        ) {\r\n          return { case: Case, value: val };\r\n        }\r\n      });\r\n\r\n      if (isUndefined(ret)) {\r\n        ret = { value: def };\r\n      }\r\n\r\n      if (!isFunction(ret.value)) {\r\n        return ret.value;\r\n      }\r\n\r\n      args = toArray(args, true);\r\n      args.push(value, ret.case);\r\n\r\n      return ret.value.apply(null, args);\r\n    }\r\n\r\n    /**\r\n     * @member Switcher#$$\r\n     * @type {Object}\r\n     * @protected\r\n     * @property {Array} cases - Array of cases.\r\n     * @property {SwitcherMode} mode - Switcher mode.\r\n     * @property {*} default - Switcher default value.\r\n     * @description Config parameters.\r\n     */\r\n    Object.defineProperty(switcher, '$$', {\r\n      value: {\r\n        cases: eventualCases,\r\n        mode,\r\n        default: defaultValue\r\n      }\r\n    });\r\n    Object.setPrototypeOf(switcher, Switcher.prototype);\r\n\r\n    return switcher;\r\n  }\r\n\r\n  /**\r\n   * @method Switcher#case\r\n   * @public\r\n   * @param {*|SwitcherCallCallback|Array.<*|SwitcherCallCallback>} cases - Case or an array of cases.\r\n   * @param {*|SwitcherMatchCallback} value - Value that has to be assigned or a function\r\n   * that is called with switcher value, if it's the case.\r\n   * @returns {Switcher} Returns this.\r\n   * @description Method for defining new cases.\r\n   *\r\n   * @example\r\n   * const sw = new Switcher()\r\n   *   .case(1, 'one')\r\n   *   .case(2, 'two');\r\n   *\r\n   * sw(1); // 'one'\r\n   * sw(2); // 'two'\r\n   */\r\n  case(cases, value) {\r\n    if (!isArray(cases)) {\r\n      cases = [cases];\r\n    }\r\n\r\n    iterate(cases, (Case) => {\r\n      this.$$.cases.push({ case: Case, value });\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Switcher#default\r\n   * @public\r\n   * @param {*} def - New default value.\r\n   * @returns {Switcher} Returns this.\r\n   * @description Method for redefining default switcher value.\r\n   *\r\n   * @example\r\n   * const sw = new Switcher()\r\n   *   .case(1, 'one')\r\n   *   .default('three');\r\n   *\r\n   * sw(1); // 'one'\r\n   * sw(2); // 'three'\r\n   */\r\n  default(def) {\r\n    this.$$.default = def;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Switcher#mode\r\n   * @public\r\n   * @param {SwitcherMode} mode - New switcher mode.\r\n   * @returns {Switcher} Returns this.\r\n   * @description Method for redefining switcher mode.\r\n   *\r\n   * @example\r\n   * const sw = new Switcher()\r\n   *   .mode('strictEquals')\r\n   *   .case(1, 'number')\r\n   *   .case('1', 'string');\r\n   *\r\n   * sw(1);   // 'number'\r\n   * sw('1'); // 'string'\r\n   */\r\n  mode(mode) {\r\n    this.$$.mode = mode;\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\ndefineProperties(Switcher.prototype, {\r\n  [Symbol.toStringTag]: 'Switcher'\r\n});\r\n\r\n/**\r\n * @function switcher\r\n * @public\r\n * @param {Object} [cases = {}] - Object of cases.\r\n * @param {SwitcherMode} [mode = 'equals'] - Switcher mode.\r\n * @param {*} [defaultValue] - Switcher default value.\r\n * @returns {Switcher} New instance of Switcher.\r\n * @description Simple wrap of [new Switcher(...)]{@link Switcher}.\r\n * \r\n * @example\r\n * const sw = switcher({\r\n *   1: 'foo',\r\n *   2: 'bar'\r\n * });\r\n * sw(1); // 'foo'\r\n * sw(2); // 'bar'\r\n * sw(3); // undefined\r\n * \r\n * @example\r\n * const sw = switcher()\r\n *   .case([1, 2], 'foo')\r\n *   .case(3, 'bar');\r\n *   \r\n * sw(1); // 'foo'\r\n * sw(2); // 'foo'\r\n * sw(3); // 'bar'\r\n * \r\n * @example\r\n * const sw = switcher('call')\r\n *   .case(isArray, 'array')\r\n *   .case(isString, 'string')\r\n *   .case(isNumber, 'number')\r\n *   .default('rest');\r\n *   \r\n * sw([]);    // 'array'\r\n * sw('foo'); // 'string'\r\n * sw(123);   // 'number'\r\n * sw({});    // 'rest'\r\n * \r\n * @example\r\n * const sw = switcher({\r\n *   1: (value) => {\r\n *     console.log(value + 1);\r\n *   },\r\n *   2: () => {\r\n *     console.log(value - 1);\r\n *   }\r\n * });\r\n * \r\n * sw(1); // 2\r\n * sw(2); // 1\r\n * \r\n * @example\r\n * const sw = switcher({\r\n *   first: (array) => array[0],\r\n *   last: (array) => array[array.length - 1]\r\n * }, 'equals', (array, index) => array[index]);\r\n * const array = [1, 2, 3, 4];\r\n * \r\n * sw('first', [array]); // 1\r\n * sw('last', [array]);  // 4\r\n * sw(1, [array]);       // 2\r\n * sw(2, [array]);       // 3\r\n */\r\nexport function switcher(cases, mode, defaultValue) {\r\n  return new Switcher(...arguments);\r\n}\r\n\r\n/**\r\n * @function when\r\n * @public\r\n * @param {Boolean|*} condition - Condition used for returning the proper value.\r\n * @param {*} value1 - Value if the condition is truthy.\r\n * @param {*} value2 - Value if the condition is falsey.\r\n * @returns {*} value1 or value2.\r\n * @description Synonym for\r\n * [ternary operator]{@link https://developer.mozilla.org/nl/docs/Web/JavaScript/Reference/Operators/Conditional_Operator}.\r\n * \r\n * @example\r\n * when(true, 'true', 'false'); // 'true'\r\n */\r\nexport function when(condition, value1, value2) {\r\n  return condition ? value1 : value2;\r\n}\r\n\r\nexport default Switcher;\r\n","/**\n * @module Super\n * @private\n * @mixin\n * @description Exports Super class.\n */\n\nimport D from './D';\nimport { switcher } from './Switcher';\nimport constructors from './constants/constructors';\nimport {\n  isArray, isArrayLike, isDate, isElement, isFunction, isNaN, isNull, isNullOrUndefined,\n  isObject, isPlainObject, isPrimitive, isRegExp, isString, isUndefined,\n  validate, toStringTag, iterate, Symbol, defineProperties\n} from './helpers';\n\n/**\n * @typedef {Super|Arr|Func|Elem|Str|Num|Dat|BlobObject} DWrap\n * @public\n * @description Any kind of D-Wrap.\n */\n\n/**\n * @typedef {String|Number|null} Key\n * @public\n * @description Key type used in many methods.\n */\n\n/**\n * @typedef {TreeElement[]} Tree\n * @public\n */\n\n/**\n * @typedef {Object} TreeElement\n * @public\n * @property {Key} key - Tree element key.\n * @property {*} value - Tree element value.\n * @description {@link Tree} element.\n */\n\n/**\n * @callback DeepIterationCallback\n * @public\n * @param {*} value - Current iteration value.\n * @param {String|Number} key - Current iteration key/index.\n * @param {*} object - Iteration object.\n * @param {Tree} tree - Tree of { key, value } elements.\n */\n\n/**\n * @callback DeepReduceCallback\n * @public\n * @param {*} previousValue - Previous value.\n * @param {*} value - Current iteration value.\n * @param {String|Number} key - Current iteration key/index.\n * @param {*} object - Iteration object.\n * @param {Tree} tree - Tree of { key, value } elements.\n */\n\n/**\n * @callback IterationCallback\n * @public\n * @param {*} value - Current iteration value.\n * @param {String|Number} key - Current iteration key/index.\n * @param {*} object - Iteration object.\n */\n\n/**\n * @callback JSONCallback\n * @public\n * @param {String|null} key - Current value.\n * @param {*} value - Current key.\n * @param {Object} object - Iteration object.\n */\n\n/**\n * @callback ObjectCallback\n * @public\n * @param {Object} newObject - The new object.\n * @param {*} value - Current iteration value.\n * @param {String|Number} key - Current iteration key/index.\n * @param {*} object - Iteration object.\n */\n\n/**\n * @callback ReduceCallback\n * @public\n * @param {*} previousValue - Previous value.\n * @param {*} value - Current iteration value.\n * @param {String|Number} key - Current iteration key/index.\n * @param {*} object - Iteration object.\n */\n\n/**\n * @callback SuperMethod\n * @public\n * @this {DWrap}\n */\n\nconst cloneSwitcher = switcher('call', (object) => object)\n  .case(\n    (object) => new Super(object) === object,\n    (object) => new (object.proto().$.constructor)(object)\n  )\n  .case(isElement, (object, deep) => object.clone(deep))\n  .case(isDate, (object) => new Date(object))\n  .case(isRegExp, (object) => new RegExp(object.source, object.toString().match(/[gimuy]*$/)[0]))\n  .case(isArray, () => [])\n  .case(isPlainObject, () => ({}));\n\n/**\n * @class Super\n * @public\n * @param {*} [object] - An object to wrap.\n * @returns {DWrap} Instance of Super.\n * @description Wrap of any value. And there is no way to create a nested wrap.\n *\n * @example\n * new Super({}); // Super\n */\nexport class Super {\n  constructor(object) {\n    if (object instanceof Super) {\n      return object;\n    }\n\n    /**\n     * @member Super#$\n     * @type {*}\n     * @public\n     * @description Wrapped object.\n     */\n    Object.defineProperty(this, '$', { value: object });\n  }\n\n  /**\n   * @method Super.addStaticProperties\n   * @public\n   * @param {String|Object} property - Either a string of a property or an object\n   * with properties keys and values values.\n   * @param {Object} [value] - If a property parameter is a string this has to be a property value.\n   * @returns {this} Returns this.\n   * @description Sets static properties for DWrap constructors.\n   *\n   * @example\n   * Super.addStaticProperties('cool', 42);\n   * Super.addStaticProperties('superCool', 42*42);\n   */\n  static addStaticProperties(property, value) {\n    if (arguments.length >= 2) {\n      property = { [property]: value };\n    }\n\n    defineProperties(this, property);\n\n    return this;\n  }\n\n  /**\n   * @method Super.addInstanceProperties\n   * @public\n   * @param {String|Object} property - Either a string of a property or an object\n   * with properties keys and values values.\n   * @param {Object} [value] - If a property parameter is a string this has to be a property value.\n   * @returns {this} Returns this.\n   * @description Sets static properties for DWrap prototypes.\n   *\n   * @example\n   * Super.addInstanceProperties('cool', 42);\n   * Super.addInstanceProperties('superCool', 42*42);\n   */\n  static addInstanceProperties(property, value) {\n    if (arguments.length >= 2) {\n      property = { [property]: value };\n    }\n\n    defineProperties(this.prototype, property);\n\n    return this;\n  }\n\n  /**\n   * @method Super#assign\n   * @public\n   * @param {...(Object|Super|*)} objects - Objects to be assigned to the object.\n   * @returns {DWrap} Returns this.\n   * @description Synonym for\n   * [Object.assign]\n   * {@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign}.\n   *\n   * @example\n   * new Super({ a: 1, b: 2 }).assign({ a: 3 }, { c: 3, d: 4 }, { d: 5 }).$; // { a: 3, b: 2, c: 3, d: 5 }\n   */\n  assign(...objects) {\n    const object = this.$;\n\n    iterate(object && arguments, (o) => {\n      iterate(new Super(o).$, (value, key) => {\n        object[key] = value;\n      });\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Super#average\n   * @public\n   * @param {IterationCallback} [callback = null] - Callback that is passed to {@link Super#sum}.\n   * @returns {Number} Average value.\n   * @description Synonym for object.sum(callback) / object.count.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).average();                         // 2\n   * new Super({ a: 1, b: 2, c: 5 }).average((value) => value * value); // 10\n   */\n  average(callback = null) {\n    validate([callback], ['function||!'], 'Super#average');\n\n    return this.sum(callback) / this.count;\n  }\n\n  /**\n   * @method Super#call\n   * @public\n   * @param {SuperMethod} func - Function to be called with this context.\n   * @param {...*} args - Arguments to be called with.\n   * @returns {*} Return of function call.\n   * @description Synonym for func.call(DObject, ...args);\n   *\n   * @example\n   * new Super({ a: 1 }).call(function (b, c) {\n   *   return this.a + b + c;\n   * }, 2, 3); // 6\n   */\n  call(func, ...args) {\n    validate([func], ['function'], 'Super#call');\n\n    return func.apply(this, args);\n  }\n\n  /**\n   * @method Super#clone\n   * @returns {DWrap} New object.\n   * @description Method assigns properties of the object to an empty one and returns the new one.\n   *\n   * @example\n   * new Super({ a: 1, b: { c: 2 } }).clone().$; // { a: 1, b: { c: 2 } }\n   */\n  clone() {\n    const object = this.$;\n    const clone = cloneSwitcher(object, [object, false]);\n\n    if (clone !== object) {\n      iterate(object, (value, key) => {\n        clone[key] = value;\n      });\n    }\n\n    return new this.constructor(clone);\n  }\n\n  /**\n   * @member Super#count\n   * @type {Number}\n   * @public\n   * @readonly\n   * @description Returns number of own enumerable keys of the object.\n   *\n   * @example\n   * new Super({ a: 1, b: 2 }).count; // 2\n   */\n  get count() {\n    const object = this.$;\n\n    if (!isObject(object)) {\n      return 0;\n    }\n\n    return isArrayLike(object) ? object.length : Object.keys(object).length;\n  }\n\n  /**\n   * @method Super#create\n   * @public\n   * @param {Object} [descriptors] - Descriptors passed to Object.create.\n   * @returns {DWrap} New instance of D-Wrap.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n   * @description Synonym for\n   * [Object.create]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/create}.\n   *\n   * @example\n   * new Super({}).create({\n   *   a: {\n   *     value: 1,\n   *     enumerable: false,\n   *     writable: true,\n   *     configurable: false\n   *   }\n   * }).$; // { a: 1 }\n   */\n  create(descriptors) {\n    return D(isPrimitive(this.$) ? undefined : Object.create(this.$, descriptors));\n  }\n\n  /**\n   * @method Super#deepAssign\n   * @public\n   * @param {...*} objects - Objects to be assigned to the object.\n   * @returns {DWrap} Returns this.\n   * @description Deep analogue of {@link Super#assign}.\n   *\n   * @example\n   * new Super({ a: 1 }).deepAssign(\n   *   {\n   *     b: {\n   *       c: 2\n   *     }\n   *   },\n   *   {\n   *     a: {\n   *       b: 1\n   *     }\n   *   },\n   *   {\n   *     a: {\n   *       c: {\n   *         d: 1\n   *       }\n   *     },\n   *     b: 2\n   *   },\n   *   null\n   * });\n   * // {\n   * //   a: {\n   * //     b: 1,\n   * //     c: {\n   * //       d: 1\n   * //     }\n   * //   },\n   * //   b: 2,\n   * // }\n   */\n  deepAssign(...objects) {\n    const object = this.$;\n\n    if (isPrimitive(object)) {\n      return this;\n    }\n\n    iterate(arguments, (o) => {\n      deepAssign(object, o);\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Super#deepClone\n   * @public\n   * @returns {DWrap} New instance of DWrap.\n   * @description Deep cloning method. Clones plain objects, arrays, regular expressions and elements, the rest stays the same.\n   *\n   * @example\n   * new Super({ a: 1, b: [2, 3], c: { d: 4 } }).deepClone().$;\n   * // {\n   * //   a: 1,\n   * //   b: [2, 3],\n   * //   c: { d: 4 }\n   * // }\n   */\n  deepClone() {\n    return new this.constructor(deepClone(this.$));\n  }\n\n  /**\n   * @method Super#deepEquals\n   * @public\n   * @param {*} [object] - Object to compare to.\n   * @returns {Boolean} - If the objects are deep equal or not.\n   * @description Method for deep comparison of two objects.\n   *\n   * @example\n   * new Super({ a: 1 }).deepEquals({ a: '1' }); // true\n   * new Super(/1/).deepEquals(/1/);             // true\n   */\n  deepEquals(object = null) {\n    return deepEqual(this.$, object, false);\n  }\n\n  /**\n   * @method Super#deepEvery\n   * @public\n   * @param {DeepIterationCallback} [callback = Boolean] - Called on each iteration.\n   * If returns truthy iteration goes on and if falsey it stops.\n   * @param {Number} [n = Infinity] - Iteration depth.\n   * @returns {Boolean} If all the callback calls returned truthy value.\n   * @description Returns boolean if all the callback calls returned truthy value.\n   * Otherwise false. Deep analogue of {@link Super#every}.\n   *\n   * @example\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepEvery((value) => value < 4); // true\n   * new Super({ a: {}, b: {}, c: {} }).deepEvery(() => false);              // true\n   */\n  deepEvery(callback, n) {\n    if (arguments.length === 1 && !isFunction(callback)) {\n      n = callback;\n      callback = Boolean;\n    } else if (arguments.length === 1) {\n      n = Infinity;\n    } else if (!arguments.length) {\n      n = Infinity;\n      callback = Boolean;\n    }\n\n    validate([callback, n], ['function', ['numberLike', '>0']], 'Super#deepEvery');\n\n    n = Number(n);\n\n    return deepEvery(this.$, callback, n, [{ key: null, value: this.$ }]);\n  }\n\n  /**\n   * @method Super#deepFilter\n   * @public\n   * @param {DeepIterationCallback} [callback = Boolean] - Called on each iteration.\n   * If returns truthy the element is included and if falsey it's excluded.\n   * @param {Number} [n = Infinity] - Iteration depth.\n   * @returns {DWrap} New D-Wrap of filtered object.\n   * @description Returns filtered by the callback object. Deep analogue of {@link Super#filter}.\n   *\n   * @example\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepFilter((value) => value%2).$;     // { a: 1, b: { d: 3 } }\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepFilter((value) => value === 1).$; // { a: 1 }\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepFilter((value) => value > 3).$;   // {}\n   */\n  deepFilter(callback, n) {\n    if (arguments.length === 1 && !isFunction(callback)) {\n      n = callback;\n      callback = Boolean;\n    } else if (arguments.length === 1) {\n      n = Infinity;\n    } else if (!arguments.length) {\n      n = Infinity;\n      callback = Boolean;\n    }\n\n    validate([callback, n], ['function', ['numberLike', '>0']], 'Super#deepFilter');\n\n    const filtered = deepFilter(this.$, callback, n, [{ key: null, value: this.$ }]);\n\n    return D(isNullOrUndefined(filtered) ? filtered : filtered || {});\n  }\n\n  /**\n   * @method Super#deepFind\n   * @public\n   * @param {DeepIterationCallback} [callback = Boolean] - Called on each iteration.\n   * If returns truthy iteration stops and if falsey it continues.\n   * @param {Number} [n = Infinity] - Iteration depth.\n   * @returns {Tree|null} Tree of { key, value } if something found and null if not.\n   * @description Returns tree of the elements if something found and null if nothing found.\n   * Deep analogue of {@link Super#find}.\n   *\n   * @example\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepFind((value) => value === 2);\n   * // [\n   * //   { key: 'c', value: 2 },\n   * //   { key: 'b', value: { c: 2, d: 3 } },\n   * //   { key: null, value: <initial object> }\n   * // ]\n   */\n  deepFind(callback, n) {\n    if (arguments.length === 1 && !isFunction(callback)) {\n      n = callback;\n      callback = Boolean;\n    } else if (arguments.length === 1) {\n      n = Infinity;\n    } else if (!arguments.length) {\n      n = Infinity;\n      callback = Boolean;\n    }\n\n    validate([callback, n], ['function', ['numberLike', '>0']], 'Super#deepFind');\n\n    return deepFind(this.$, callback, n, [{ key: null, value: this.$ }]);\n  }\n\n  /**\n   * @method Super#deepForEach\n   * @public\n   * @param {DeepIterationCallback} callback - Called on each iteration.\n   * @param {Number} [n = Infinity] - Iteration depth.\n   * @returns {DWrap} Returns this.\n   * @description Method for iterating over any object. Deep analogue of {@link Super#forEach}.\n   *\n   * @example\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepForEach((value, key, object) => object[key] = value * value).$;\n   * // { a: 1, b: { c: 4, d: 9 } }\n   */\n  deepForEach(callback, n = Infinity) {\n    validate([callback, n], ['function', ['numberLike', '>0']], 'Super#deepForEach');\n\n    n = Number(n);\n\n    deepForEach(this.$, callback, n, [{ key: null, value: this.$ }]);\n\n    return this;\n  }\n\n  /**\n   * @method Super#deepFreeze\n   * @public\n   * @returns {DWrap} Returns this.\n   * @description Deep analogue of {@link Super#freeze}.\n   *\n   * @example\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepFreeze(); // Super\n   */\n  deepFreeze() {\n    deepFreeze(this.$);\n\n    return this;\n  }\n\n  /**\n   * @method Super#deepMap\n   * @public\n   * @param {DeepIterationCallback} callback - Called on each iteration.\n   * Return value is used for creating a new object.\n   * @param {Number} [n = Infinity] - Iteration depth.\n   * @returns {DWrap} D-Wrap of the new object.\n   * @description Returns a wrap of a new object using the callback. Deep analogue of {@link Super#map}.\n   *\n   * @example\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepMap((value) => value * value).$;\n   * // { a: 1, b: { c: 4, d: 9 } }\n   */\n  deepMap(callback, n = Infinity) {\n    validate([callback, n], ['function', ['numberLike', '>0']], 'Super#deepMap');\n\n    n = Number(n);\n\n    return D(deepMap(this.$, callback, n, [{ key: null, value: this.$ }]));\n  }\n\n  /**\n   * @method Super#deepReduce\n   * @public\n   * @param {DeepReduceCallback} callback - Called on each iteration.\n   * Return value is passed to the next callback call.\n   * @param {Number} [n = Infinity] - Iteration depth.\n   * @param {*} [IV = <first value>|undefined] - Initial value.\n   * @returns {*} Modified IV.\n   * @description Returns modified IV. Deep analogue of {@link Super#reduce}.\n   *\n   * @example\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepReduce((sum, value) => sum + value * value, Infinity, 0); // 14\n   */\n  deepReduce(callback, n = Infinity, IV) {\n    validate([callback, n], ['function', ['numberLike', '>0']], 'Super#deepReduce');\n\n    n = Number(n);\n\n    const object = this.$;\n    const tree = [{ key: null, value: this.$ }];\n\n    if (arguments.length < 3) {\n      return deepReduce(object, callback, n, false, undefined, tree).IV;\n    }\n\n    return deepReduce(object, callback, n, false, { IV }, tree).IV;\n  }\n\n  /**\n   * @method Super#deepSome\n   * @public\n   * @param {DeepIterationCallback} [callback = Boolean] - Called on each iteration.\n   * If returns truthy iteration stops and if falsey it continues.\n   * @param {Number} [n = Infinity] - Iteration depth.\n   * @returns {Boolean} If all the callback calls returned truthy value.\n   * @description Returns true if some of the callback calls returned truthy value.\n   * Otherwise false. Deep analogue of {@link Super#some}.\n   *\n   * @example\n   * new Super({ a: 1, b: { c: 2, d: 3 } }).deepSome((value) => value > 4); // false\n   * new Super({ a: {}, b: {}, c: {} }).deepSome(() => true);               // false\n   */\n  deepSome(callback, n) {\n    if (arguments.length === 1 && !isFunction(callback)) {\n      n = callback;\n      callback = Boolean;\n    } else if (arguments.length === 1) {\n      n = Infinity;\n    } else if (!arguments.length) {\n      n = Infinity;\n      callback = Boolean;\n    }\n\n    validate([callback, n], ['function', ['numberLike', '>0']], 'Super#deepSome');\n\n    n = Number(n);\n\n    return deepSome(this.$, callback, n, [{ key: null, value: this.$ }]);\n  }\n\n  /**\n   * @method Super#deepStrictEquals\n   * @public\n   * @param {*} [object] - Object to compare to.\n   * @returns {Boolean} - If the objects are deep strict equal or not.\n   * @description Method for deep strict comparison of two objects.\n   *\n   * @example\n   * new Super({ a: 1 }).deepStrictEquals({ a: '1' }); // false\n   * new Super(/1/).deepStrictEquals(/1/);             // true\n   */\n  deepStrictEquals(object = null) {\n    return deepEqual(this.$, object, true);\n  }\n\n  /**\n   * @method Super#define\n   * @param {String|Object} property - Either a string of a property or a descriptors object.\n   * @param {Object} [descriptor] - If a property parameter is a string this has to be a property descriptor.\n   * @returns {DWrap} Returns this.\n   * @description Synonym for both\n   * [Object.defineProperty]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty}\n   * and\n   * [Object.defineProperties]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties}.\n   *\n   * @example\n   * new Super({}).define('a', {\n   *   value: 1,\n   *   enumerable: false,\n   *   writable: true,\n   *   configurable: false\n   * }).$; // { a: 1 }\n   * new Super({}).define({\n   *   a: {\n   *     value: 1,\n   *     enumerable: false,\n   *     writable: true,\n   *     configurable: false\n   *   }\n   * }).$; // { a: 1 }\n   */\n  define(property, descriptor) {\n    if (arguments.length >= 2) {\n      property = { [property]: descriptor };\n    }\n\n    property = new Super(property).$;\n\n    if (isObject(this.$)) {\n      Object.defineProperties(this.$, property);\n    }\n\n    return this;\n  }\n\n  /**\n   * @method Super#delete\n   * @public\n   * @param {...String} props - List of properties to delete.\n   * @returns {DWrap} Returns this.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/delete\n   * @description Synonym for multiple\n   * [\"delete\" operator]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/delete}.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).delete('c', 'a').$; // { b: 2 }\n   */\n  delete(...props) {\n    const object = this.$;\n\n    iterate(object && props, (property) => {\n      delete object[property];\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Super#equals\n   * @public\n   * @param {*} [object] - Object to compare.\n   * @returns {Boolean} If the objects are equal or not.\n   * @description Returns true if objects are equal using '==' operator and false if not. NaNs are considered to be equal.\n   *\n   * @example\n   * new Super(3).equals('3');   // true\n   * new Super(NaN).equals(NaN); // true\n   */\n  equals(object) {\n    const o = this.$;\n\n    object = new Super(object).$;\n\n    /* eslint eqeqeq: 0 */\n    return o == object || (isNaN(o) && isNaN(object));\n  }\n\n  /**\n   * @method Super#every\n   * @public\n   * @param {IterationCallback} [callback = Boolean] - Called on each iteration.\n   * If returns truthy iteration goes on and if falsey it stops.\n   * @returns {Boolean} If all the callback calls returned truthy value.\n   * @description Returns boolean if all the callback calls returned truthy value.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).every((value) => value < 4); // true\n   * new Super({}).every(() => false);                            // true\n   */\n  every(callback = Boolean) {\n    validate([callback], ['function'], 'Super#every');\n\n    return iterate(this.$, (value, key, object) => {\n      if (!callback(value, key, object)) {\n        return false;\n      }\n    }) !== false;\n  }\n\n  /**\n   * @method Super#filter\n   * @public\n   * @param {IterationCallback} [callback = Boolean] - Called on each iteration.\n   * If returns truthy the element is included and if falsey it's excluded.\n   * @returns {DWrap} New D-Wrap of filtered object.\n   * @description Returns filtered by the callback object.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).filter((value) => value%2).$; // { a: 1, c: 3 }\n   * new Super(null).filter((value) => value%2).$;                 // null\n   */\n  filter(callback = Boolean) {\n    validate([callback], ['function'], 'Super#filter');\n\n    const object = this.$;\n    const array = isArrayLike(object);\n\n    /* eslint no-nested-ternary: 0 */\n    const o = array ? [] : isNullOrUndefined(object) ? object : {};\n\n    iterate(object, (value, key) => {\n      if (callback(value, key, object)) {\n        if (array) {\n          o.push(value);\n        } else {\n          o[key] = value;\n        }\n      }\n    });\n\n    return D(o);\n  }\n\n  /**\n   * @method Super#find\n   * @public\n   * @param {IterationCallback} [callback = Boolean] - Called on each iteration.\n   * If returns truthy iteration stops and if falsey it continues.\n   * @returns {{ key: Key, value: * }|null} { key, value } if found and null if not.\n   * @description Returns found { key, value } if something found and null if nothing found.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).find((value) => value === 2); // { key: 'b', value: 2 }\n   * new Super([1, 2, 3]).find((value) => value === 2);            // { key: 1, value: 2 }\n   */\n  find(callback) {\n    validate([callback], ['function'], 'Super#find');\n\n    return iterate(this.$, (value, key, object) => {\n      if (callback(value, key, object)) {\n        return { key, value };\n      }\n    }) || null;\n  }\n\n  /**\n   * @method Super#forEach\n   * @public\n   * @param {IterationCallback} callback - Called on each iteration.\n   * @returns {DWrap} Returns this.\n   * @description Method for iterating over any object.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).forEach((value, key, object) => {\n   *   object[key] = value * value;\n   * }).$; // { a: 1, b: { c: 4, d: 5 } }\n   */\n  forEach(callback) {\n    validate([callback], ['function'], 'Super#forEach');\n\n    iterate(this.$, (value, key, object) => {\n      callback(value, key, object);\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Super#freeze\n   * @public\n   * @returns {DWrap} Returns this.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n   * @description Synonym for\n   * [Object.freeze]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze}.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).freeze(); // Super\n   */\n  freeze() {\n    Object.freeze(this.$);\n\n    return this;\n  }\n\n  /**\n   * @method Super#get\n   * @public\n   * @param {String|Object.<String, Function>} property - Either a string of a property or a getters object.\n   * @param {Function} [getter] - If a property parameter is a string this has to be a getter function.\n   * @returns {DWrap} Returns this.\n   * @description Method for defining getters.\n   *\n   * @example\n   * const object1 = new Super({}).get('a', () => 1).$;\n   * object1.a; // 1\n   *\n   * const object2 = new Super({}).get({\n   *   a: () => 2\n   * }).$;\n   * object2.a; // 2\n   */\n  get(property, getter) {\n    if (arguments.length >= 2) {\n      property = { [property]: getter };\n    }\n\n    const object = this.$;\n\n    iterate(isObject(object) && new Super(property).$, (getter, property) => {\n      Object.defineProperty(object, property, { get: getter });\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Super#has\n   * @public\n   * @param {String|*} key - Property to check.\n   * @returns {Boolean} Returns true if the object has the key and false if not.\n   * @see https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/in\n   * @description Synonym for\n   * [\"in\" operator]{@link https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/in}.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).has('b'); // true\n   */\n  has(key) {\n    const object = this.$;\n\n    if (!isObject(object)) {\n      return false;\n    }\n\n    return key in object;\n  }\n\n  /**\n   * @method Super#hasOwn\n   * @public\n   * @param {String|*} key - Property to check.\n   * @returns {Boolean} Returns true if the object has its own key and false if not.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\n   * @description Synonym for\n   * [Object#hasOwnProperty]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty}.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).hasOwn('b');              // true\n   * new Super({ a: 1, b: 2, c: 3 }).hasOwn('hasOwnProperty'); // false\n   */\n  hasOwn(key) {\n    const object = this.$;\n\n    if (!isObject(object)) {\n      return false;\n    }\n\n    return {}.hasOwnProperty.call(object, key);\n  }\n\n  /**\n   * @method Super#instanceof\n   * @public\n   * @param {Function} constructor - Constructor to check.\n   * @returns {Boolean} If the object is an instance of constructor.\n   * @see https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/instanceof\n   * @description Synonym for\n   * [\"instanceof\" operator]{@link https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/instanceof}.\n   */\n  instanceof(constructor) {\n    return this.$ instanceof constructor;\n  }\n\n  /**\n   * @method Super#isFrozen\n   * @public\n   * @returns {Boolean} If the object is frozen.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\n   * @description Synonym for\n   * [Object.isFrozen]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen}.\n   *\n   * @example\n   * new Super({}).freeze().isFrozen(); // true\n   */\n  isFrozen() {\n    return Object.isFrozen(this.$);\n  }\n\n  /**\n   * @method Super#json\n   * @public\n   * @param {JSONCallback|String[]} [replacer] - See the link.\n   * @param {String|Number} [space] - See the link.\n   * @returns {String} JSON string.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\n   * @description Synonym for\n   * [JSON.stringify]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify}.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).json(); // '{\"a\":1,\"b\":2,\"c\":3}'\n   * new Super({ a: 1, b: 2, c: 3 }).json('    ');\n   * // {\n   * //     \"a\": 1,\n   * //     \"b\": 2,\n   * //     \"c\": 3\n   * // }\n   * new Super({ a: 1, b: 2, c: 3 }).json((key, value) => {\n   *   if (typeof value === 'number') {\n   *     return value%2 ? key + value0 : undefined;\n   *   }\n   *\n   *   return value;\n   * }, 2);\n   * // {\n   * //   \"a\": \"a1\",\n   * //   \"c\": \"c3\"\n   * // }\n   */\n  json(replacer, space) {\n    if (arguments.length === 1 && !isFunction(replacer) && !isArray(replacer)) {\n      [].unshift.call(arguments, null);\n    }\n\n    [].unshift.call(arguments, this.$);\n\n    return JSON.stringify.apply(JSON, arguments);\n  }\n\n  /**\n   * @method Super#keyOf\n   * @public\n   * @param {*} value - Value to find.\n   * @returns {String|Number|null} A key or an index if found and null if not.\n   * @description Method for finding equal to the argument value in the object. NaNs are considered to be equal.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).keyOf(2);   // 'b'\n   * new Super({ a: 1, b: 2, c: 3 }).keyOf('2'); // 'b'\n   */\n  keyOf(value) {\n    const key = iterate(this.$, (val, key) => {\n      if (val == value || (isNaN(val) && isNaN(value))) {\n        return key;\n      }\n    });\n\n    return isUndefined(key) ? null : key;\n  }\n\n  /**\n   * @method Super#keyOfStrict\n   * @public\n   * @param {*} value - Value to find.\n   * @returns {String|Number|null} A key or an index if found and null if not.\n   * @description Method for finding strict equal to the argument value in the object. NaNs are considered to be equal.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).keyOfStrict(2);   // 'b'\n   * new Super({ a: 1, b: 2, c: 3 }).keyOfStrict('2'); // 'b'\n   */\n  keyOfStrict(value) {\n    const key = iterate(this.$, (val, key) => {\n      if (val === value || (isNaN(val) && isNaN(value))) {\n        return key;\n      }\n    });\n\n    return isUndefined(key) ? null : key;\n  }\n\n  /**\n   * @method Super#keys\n   * @public\n   * @returns {DWrap} A wrap of the keys array.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n   * @description Synonym for\n   * [Object.keys]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/keys}.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).keys().$; // ['a', 'b', 'c']\n   * new Super(null).keys().$;                 // []\n   */\n  keys() {\n    const object = this.$;\n\n    return D(isObject(object) ? Object.keys(object) : []);\n  }\n\n  /**\n   * @method Super#map\n   * @public\n   * @param {IterationCallback} callback - Called on each iteration.\n   * Return value is used for creating a new object.\n   * @returns {DWrap} D-Wrap of the new object.\n   * @description Returns a wrap of a new object using the callback.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).map((value) => value * 2).$; // { a: 2, b: 4, c: 6 }\n   * new Super(null).map((value) => value * 2).$;                 // null\n   */\n  map(callback) {\n    validate([callback], ['function'], 'Super#map');\n\n    const object = this.$;\n    const o = isArrayLike(object) ? [] : isNull(object) ? null : {};\n\n    iterate(object, (value, key) => {\n      o[key] = callback(value, key, object);\n    });\n\n    return D(o);\n  }\n\n  /**\n   * @method Super#max\n   * @public\n   * @param {IterationCallback} callback - Called on each iteration.\n   * Return value is used for comparison with the previous max value.\n   * @returns {{key: Key, value: Number}} Object with max value and key of the max value.\n   * @description Method for finding max value in the object.\n   * If no callback is present comparison is between values of the object.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).max();                     // { key: 'c', value: 3 }\n   * new Super({ a: 1, b: 2, c: 3 }).max((value) => 4 - value); // { key: 'a', value: 3 }\n   * new Super({ a: 'a', b: 'b', c: 'c' }).max();               // { key: null, value: -Infinity }\n   */\n  max(callback = null) {\n    validate([callback], ['function||!'], 'Super#max');\n\n    return this.object((max, value, key, object) => {\n      const val = Number(callback ? callback(value, key, object) : value);\n\n      if (val > max.value) {\n        max.key = key;\n        max.value = val;\n      }\n    }, { key: null, value: -Infinity }).$;\n  }\n\n  /**\n   * @method Super#min\n   * @public\n   * @param {IterationCallback} callback - Called on each iteration.\n   * Return value is used for comparison with the previous min value.\n   * @returns {{key: Key, value: Number}} Object with min value and key of the min value.\n   * @description Method for finding min value in the object.\n   * If no callback is present comparison is between values of the object.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).min();                     // { key: 'a', value: 1 }\n   * new Super({ a: 1, b: 2, c: 3 }).min((value) => 4 - value); // { key: 'c', value: 1 }\n   * new Super({ a: 'a', b: 'b', c: 'c' }).min();               // { key: null, value: Infinity }\n   */\n  min(callback = null) {\n    validate([callback], ['function||!'], 'Super#min');\n\n    return this.object((min, value, key, object) => {\n      const val = Number(callback ? callback(value, key, object) : value);\n\n      if (val < min.value) {\n        min.key = key;\n        min.value = val;\n      }\n    }, { key: null, value: Infinity }).$;\n  }\n\n  /**\n   * @method Super#object\n   * @public\n   * @param {ObjectCallback} callback - Called on each iteration.\n   * @param {Object|*} [object = {}] - Object that is passed to the callback.\n   * @returns {DWrap} Wrap of the new object.\n   * @description Type of {@link Super#reduce}.\n   * The object is passed as an argument into the callback. The output is this object.\n   *\n   * @example\n   * new Super({ a: 1, b: 2 }).object((object, value, key) => {\n   *   object[key] = value;\n   *   object[key + key] = value * 2;\n   * }).$; // { a: 1, aa: 2, b: 2, bb: 4 }\n   */\n  object(callback, object = {}) {\n    validate([callback], ['function'], 'Super#object');\n\n    iterate(this.$, (value, key, obj) => {\n      callback(object, value, key, obj);\n    });\n\n    return D(object);\n  }\n\n  /**\n   * @method Super#prop\n   * @public\n   * @param {String|Object.<String, *>} property - Either a string of a property or an assigned object.\n   * @param {*} [value] - If a property parameter is a string\n   * this has to be an assigned value if it's present.\n   * @returns {DWrap|*} Returns this if it's a setter or a value if getter.\n   * @description Method for getting and setting properties.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).prop('a');              // 1\n   * new Super({ a: 1, b: 2, c: 3 }).prop('a', 7).$;         // { a: 7, b: 2, c: 3 }\n   * new Super({ a: 1, b: 2, c: 3 }).prop({ a: 7, b: 8 }).$; // { a: 7, b: 8, c: 3 }\n   */\n  prop(property, value) {\n    if (arguments.length <= 1 && isString(property)) {\n      return this.$ ? this.$[property] : undefined;\n    }\n\n    if (arguments.length >= 2) {\n      property = { [property]: value };\n    }\n\n    return this.assign(property);\n  }\n\n  /**\n   * @method Super#propertyDescriptor\n   * @public\n   * @param {String} property - Property of the object.\n   * @returns {Object|undefined} Property descriptor.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor\n   * @descriptor Synonym for\n   * [Object.getOwnPropertyDescriptor]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor}.\n   *\n   * @example\n   * new Super({ a: 1 }).propertyDescriptor('a');\n   * // {\n   * //   value: 1,\n   * //   enumerable: true,\n   * //   writable: true,\n   * //   configurable: true\n   * // }\n   */\n  propertyDescriptor(property) {\n    const object = this.$;\n\n    return isObject(object) ? Object.getOwnPropertyDescriptor(object, property) : undefined;\n  }\n\n  /**\n   * @method Super#propertyNames\n   * @public\n   * @returns {DWrap} D-Wrap of the names array.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\n   * @descriptor Synonym for\n   * [Object.getOwnPropertyNames]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames}.\n   *\n   * @example\n   * new Super({ a: 1, b: 2 }).define('c', { value: 3 }).$; // ['a', 'b', 'c']\n   */\n  propertyNames() {\n    const object = this.$;\n\n    return D(isObject(object) ? Object.getOwnPropertyNames(object) : []);\n  }\n\n  /**\n   * @method Super#propertySymbols\n   * @public\n   * @returns {DWrap} D-Wrap of the names array.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols\n   * @descriptor Synonym for\n   * [Object.getOwnPropertySymbols]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols}.\n   *\n   * @example\n   * new Super({ [Symbol('foo')]: 1 }).define(Symbol('bar'), { value: 2 }).$; // [Symbol('foo'), Symbol('bar')]\n   */\n  propertySymbols() {\n    const object = this.$;\n\n    return D(isObject(object) ? Object.getOwnPropertySymbols(object) : []);\n  }\n\n  /**\n   * @method Super#proto\n   * @public\n   * @param {*} [proto] - If it's present it's set as a prototype to the object.\n   * @returns {DWrap} In getter mode returns wrap of the prototype and in setter mode returns this.\n   * @description Synonym for both\n   * [Object.getPrototypeOf]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf}\n   * and\n   * [Object.setPrototypeOf]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf}.\n   */\n  proto(proto) {\n    const object = this.$;\n    const isContextObject = !isNullOrUndefined(object);\n\n    if (arguments.length) {\n      if (isContextObject && (isObject(proto) || isNull(proto))) {\n        Object.setPrototypeOf(object, proto);\n      }\n\n      return this;\n    }\n\n    return isContextObject ? new Super(Object.getPrototypeOf(object)) : new Super();\n  }\n\n  /**\n   * @method Super#reduce\n   * @public\n   * @param {ReduceCallback} callback - Called on each iteration.\n   * Return value is passed to the next callback call.\n   * @param {*} [IV = <first value>|undefined] - Initial value.\n   * @returns {*} Modified IV.\n   * @description Returns modified IV. If the second argument is not present first value in the object is taken\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).reduce((sum, value) => sum + value * value, 0); // 14\n   */\n  reduce(callback, IV) {\n    validate([callback], ['function'], 'Super#reduce');\n\n    const object = this.$;\n\n    let startKey;\n\n    if (arguments.length === 1) {\n      iterate(object, (value, key) => {\n        startKey = key;\n        IV = value;\n\n        return true;\n      });\n    }\n\n    iterate(object, (value, key) => {\n      if (key !== startKey) {\n        IV = callback(IV, value, key, object);\n      }\n    });\n\n    return IV;\n  }\n\n  /**\n   * @method Super#set\n   * @public\n   * @param {String|Object.<String, Function>} property - Either a string of a property or a setters object.\n   * @param {Function} [setter] - If a property parameter is a string this has to be a setter function.\n   * @returns {DWrap} Returns this.\n   * @description Method for defining setters.\n   *\n   * @example\n   * const object = new Super({})\n   *   .get('public', function () {\n   *     return this._private;\n   *   })\n   *   .set('public', function (value) {\n   *     if (typeof value === 'number') {\n   *       this._private = value;\n   *     }\n   *   });\n   * object.prop('public', '1').$; // { public: undefined }\n   * object.prop('public', 1).$;   // { public: 1, _private: 1 }\n   *\n   * new Super({}).set({\n   *   public(value) {\n   *     if (typeof value === 'number') {\n   *       this._private = value;\n   *     }\n   *   }\n   * });\n   */\n  set(property, setter) {\n    if (arguments.length >= 2) {\n      property = { [property]: setter };\n    }\n\n    const object = this.$;\n\n    iterate(isObject(object) && new Super(property).$, (setter, property) => {\n      Object.defineProperty(object, property, { set: setter });\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Super#some\n   * @public\n   * @param {IterationCallback} [callback = Boolean] - Called on each iteration.\n   * If returns truthy iteration stops and if falsey it continues.\n   * @returns {Boolean} If all the callback calls returned truthy value.\n   * @description Returns true if some of the callback calls returned truthy value. Otherwise false.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).some((value) => value > 4); // false\n   * new Super({}).some(() => true);                             // false\n   */\n  some(callback = Boolean) {\n    validate([callback], ['function'], 'Super#some');\n\n    return iterate(this.$, (value, key, object) => {\n      if (callback(value, key, object)) {\n        return true;\n      }\n    }) || false;\n  }\n\n  /**\n   * @method Super#strictEquals\n   * @public\n   * @param {*} [object] - Object to compare.\n   * @returns {Boolean} If the objects are equal or not.\n   * @description Returns true if objects are equal using '===' operator and false if not.\n   * NaNs are considered to be strict equal.\n   *\n   * @example\n   * new Super(3).strictEquals('3');   // false\n   * new Super(NaN).strictEquals(NaN); // true\n   */\n  strictEquals(object) {\n    const o = this.$;\n\n    object = new Super(object).$;\n\n    return o === object || (isNaN(o) && isNaN(object));\n  }\n\n  /**\n   * @method Super#sum\n   * @public\n   * @param {IterationCallback} [callback = null] - Called on each iteration.\n   * @returns {Number} Sum.\n   * @description Type of {@link Super#reduce}.\n   * If the callback is present it's used for summing. If not the value is used.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).sum();                         // 6\n   * new Super({ a: 1, b: 2, c: 3 }).sum((value) => value * value); // 14\n   */\n  sum(callback = null) {\n    validate([callback], ['function||!'], 'Super#sum');\n\n    return this.reduce((sum, value, key, object) => (\n      sum + Number(callback ? callback(value, key, object) : value)\n    ), 0);\n  }\n\n  toJSON() {\n    return this.$;\n  }\n\n  /**\n   * @member Super#toStringTag\n   * @type {String}\n   * @public\n   * @readonly\n   * @description Returns toString tag of the object.\n   *\n   * @example\n   * new Super({}).toStringTag; // 'Object'\n   * new Super([]).toStringTag; // 'Array'\n   * new Super(1).toStringTag;  // 'Number'\n   */\n  get toStringTag() {\n    return toStringTag(this.$);\n  }\n\n  /**\n   * @member Super#type\n   * @type {String}\n   * @public\n   * @readonly\n   * @description Synonym for\n   * [\"typeof\" operator]{@link https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/instanceof}..\n   *\n   * @example\n   * new Super({}).type;   // 'object'\n   * new Super(1).type;    // 'number'\n   * new Super('1').type;  // 'string'\n   * new Super(true).type; // 'boolean'\n   */\n  get type() {\n    return typeof this.$;\n  }\n\n  /**\n   * @method Super#value\n   * @public\n   * @param {String|Object.<String, *>} property - Either a string of a property or a values object.\n   * @param {Object.<String, *>} [value] - If a property parameter is a string this has to be a value to be set.\n   * @returns {DWrap} Returns this.\n   * @description Method for defining non-enumerable, non-writable, non-configurable values.\n   * Synonym for object.define(property, { value: value }).\n   *\n   * @example\n   * new Super({}).value('a', 1).$; // { a: 1 }\n   * new Super({}).value({\n   *   a: 1\n   * }).$;                          // { a: 1 }\n   */\n  value(property, value) {\n    if (arguments.length >= 2) {\n      property = { [property]: value };\n    }\n\n    const object = this.$;\n\n    iterate(isObject(object) && new Super(property).$, (value, property) => {\n      Object.defineProperty(object, property, { value });\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Super#values\n   * @public\n   * @returns {DWrap} A wrap of the values array.\n   * @description Returns D-Wrap of the values array.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).values().$; // [1, 2, 3]\n   * new Super(null).values().$;                 // []\n   */\n  values() {\n    const array = [];\n\n    iterate(this.$, (value) => {\n      array.push(value);\n    });\n\n    return D(array);\n  }\n\n  /**\n   * @method Super#word\n   * @public\n   * @param {IterationCallback} callback - Called on each iteration.\n   * @returns {String} Concatenated string.\n   * @description Type of {@link Super#reduce}.\n   * If the callback is present it's used for concatenating. If not the value is used.\n   *\n   * @example\n   * new Super({ a: 1, b: 2, c: 3 }).word();                         // '123'\n   * new Super({ a: 1, b: 2, c: 3 }).word((value) => value + value); // '112233'\n   */\n  word(callback = null) {\n    validate([callback], ['function||!'], 'Super#word');\n\n    return this.reduce((word, value, key, object) => (\n      word + String(callback ? callback(value, key, object) : value)\n    ), '');\n  }\n}\n\ndefineProperties(Super.prototype, {\n  [Symbol.toStringTag]: 'Super'\n});\n\n/**\n * @function deepAssign\n * @private\n * @param {*} target - Object to assign properties to.\n * @param {*} object - Object to assign properties from.\n * @returns {void}\n */\nfunction deepAssign(target, object) {\n  iterate(object, (value, key) => {\n    if (isPrimitive(target[key]) || !{}.hasOwnProperty.call(target, key)) {\n      target[key] = deepClone(value);\n\n      return;\n    }\n\n    if (!isPrimitive(target[key])) {\n      deepAssign(target[key], value);\n    }\n  });\n}\n\n/**\n * @function deepClone\n * @private\n * @param {*} object - Object to clone.\n * @description Does the deep cloning.\n */\nfunction deepClone(object) {\n  const clone = cloneSwitcher(object, [object, true]);\n\n  if (clone !== object) {\n    iterate(object, (value, key) => {\n      clone[key] = deepClone(value);\n    });\n  }\n\n  return clone;\n}\n\n/**\n * @function deepEqual\n * @private\n * @param {*} o1 - First object to compare.\n * @param {*} o2 - Second object to compare.\n * @param {Boolean} strict - If comparison should be strict or not.\n * @returns {Boolean} - If the object are deep equal or not.\n */\nfunction deepEqual(o1, o2, strict) {\n  if (o1 === o2) {\n    return true;\n  }\n\n  if (isNaN(o1) && isNaN(o2) && isPrimitive(o1) && isPrimitive(o2)) {\n    return true;\n  }\n\n  if (isNaN(o1) || isNaN(o2)) {\n    return false;\n  }\n\n  if (isPrimitive(o1) || isPrimitive(o2)) {\n    return strict ? o1 === o2 : o1 == o2;\n  }\n\n  if (isDate(o1) && isDate(o2)) {\n    return o1.getTime() === o2.getTime();\n  }\n\n  if (isDate(o1) || isDate(o2)) {\n    return false;\n  }\n\n  if (isRegExp(o1) && isRegExp(o2)) {\n    return o1.source === o2.source &&\n      o1.toString().match(/[gimuy]*$/)[0] === o2.toString().match(/[gimuy]*$/)[0] &&\n      o1.lastIndex === o2.lastIndex;\n  }\n\n  if (isRegExp(o1) || isRegExp(o2)) {\n    return false;\n  }\n\n  if ((!isPlainObject(o1) && !isArray(o1)) || (!isPlainObject(o2) && !isArray(o2))) {\n    return false;\n  }\n\n  const p1 = Object.getPrototypeOf(o1);\n  const p2 = Object.getPrototypeOf(o1);\n\n  if (Object.keys(o1).length !== Object.keys(o2).length) {\n    return false;\n  }\n\n  if (p1 && p2 && (toStringTag(p1.constructor) !== toStringTag(p2.constructor))) {\n    return false;\n  }\n\n  return iterate(o1, (value, key) => {\n    if (!(key in o2) || !deepEqual(value, o2[key], strict)) {\n      return false;\n    }\n  }) !== false;\n}\n\n/**\n * @function deepEvery\n * @private\n * @param {*} object - Object to iterate over.\n * @param {DeepIterationCallback} callback - Callback that is called on every element.\n * If returns truthy the iteration goes on and if not it stops.\n * @param {Number} n - Depth of iteration.\n * @param {Tree} tree - Tree of { key, value } objects of iteration.\n * @returns {Boolean} - If all the callback calls returned truthy value.\n */\nfunction deepEvery(object, callback, n, tree) {\n  const end = n === 1;\n\n  return iterate(object, (value, key, object) => {\n    const newTree = [{ key, value }].concat(tree);\n\n    if (\n      end || isPrimitive(value)\n        ? !callback(value, key, object, newTree)\n        : !deepEvery(value, callback, n - 1, newTree)\n    ) {\n      return false;\n    }\n  }) !== false;\n}\n\n/**\n * @function deepFilter\n * @private\n * @param {*} object - Object to iterate over.\n * @param {DeepIterationCallback} callback - Callback that is called on every element.\n * If returns truthy the element is included in the output and if not it's excluded.\n * @param {Number} n - Depth of iteration.\n * @param {Tree} tree - Tree of { key, value } objects of iteration.\n * @returns {*} Filtered object.\n */\nfunction deepFilter(object, callback, n, tree) {\n  const array = isArrayLike(object);\n  const nul = isNullOrUndefined(object);\n  const o = array ? [] : nul ? object : {};\n  const end = n === 1;\n\n  iterate(object, (value, key, object) => {\n    const newTree = [{ key, value }].concat(tree);\n\n    if ((end || isPrimitive(value)) && callback(value, key, object, newTree)) {\n      if (array) {\n        o.push(value);\n      } else {\n        o[key] = value;\n      }\n\n      return;\n    }\n\n    if (!end) {\n      const filtered = deepFilter(value, callback, n - 1, newTree);\n\n      if (filtered) {\n        if (array) {\n          o.push(filtered);\n        } else {\n          o[key] = filtered;\n        }\n      }\n    }\n  });\n\n  if (array) {\n    return o.length ? o : undefined;\n  }\n\n  if (!nul) {\n    return Object.keys(o).length ? o : undefined;\n  }\n\n  return o;\n}\n\n/**\n * @function deepFind\n * @private\n * @param {*} object - Object to iterate over.\n * @param {DeepIterationCallback} callback - Callback that is called on every element.\n * If returns truthy the iteration stops and if not it continues.\n * @param {Number} n - Depth of iteration.\n * @param {Tree} tree - Tree of { key, value } objects of iteration.\n * @returns {Tree|null} - If found the whole tree is returned and if not it's null what's returned.\n */\nfunction deepFind(object, callback, n, tree) {\n  const end = n === 1;\n\n  return iterate(object, (value, key, object) => {\n    const newTree = [{ key, value }].concat(tree);\n\n    if (end || isPrimitive(value)) {\n      if (callback(value, key, object, newTree)) {\n        return newTree;\n      }\n\n      return;\n    }\n\n    const result = deepFind(value, callback, n - 1, newTree);\n\n    if (result) {\n      return result;\n    }\n  }) || null;\n}\n\n/**\n * @function deepFreeze\n * @private\n * @param {*} object - Object to freeze.\n * @returns {void}\n */\nfunction deepFreeze(object) {\n  Object.freeze(object);\n  iterate(object, deepFreeze);\n}\n\n/**\n * @function deepForEach\n * @private\n * @param {*} object - Object to iterate over.\n * @param {DeepIterationCallback} callback - Callback that is called on every element.\n * @param {Number} n - Depth of iteration.\n * @param {Tree} tree - Tree of { key, value } objects of iteration.\n * @returns {void}\n */\nfunction deepForEach(object, callback, n, tree) {\n  const end = n === 1;\n\n  iterate(object, (value, key, object) => {\n    const newTree = [{ key, value }].concat(tree);\n\n    if (end || isPrimitive(value)) {\n      callback(value, key, object, newTree);\n    } else {\n      deepForEach(value, callback, n - 1, newTree);\n    }\n  });\n}\n\n/**\n * @function deepMap\n * @private\n * @param {*} object - Object to iterate over.\n * @param {DeepIterationCallback} callback - Callback that is called on every element.\n * Returned value is used to create to new object.\n * @param {Number} n - Depth of iteration.\n * @param {Tree} tree - Tree of { key, value } objects of iteration.\n * @returns {*} New object.\n */\nfunction deepMap(object, callback, n, tree) {\n  const o = isArrayLike(object) ? [] : isNullOrUndefined(object) ? object : {};\n  const end = n === 1;\n\n  iterate(object, (value, key, object) => {\n    const newTree = [{ key, value }].concat(tree);\n\n    o[key] = end || isPrimitive(value)\n      ? callback(value, key, object, newTree)\n      : deepMap(value, callback, n - 1, newTree);\n  });\n\n  return o;\n}\n\n/**\n * @function deepReduce\n * @private\n * @param {*} object - Object to iterate over.\n * @param {DeepReduceCallback} callback - Callback that is called on every element.\n * Returned value is used to create to new object.\n * @param {Number} n - Depth of iteration.\n * @param {Boolean} start - If callback was called already or not.\n * @param {{ IV: * }|undefined} IV - If callback was called already or not.\n * @param {Tree} tree - Tree of { key, value } objects of iteration.\n * @returns {{ IV: * }} Transformed IV.\n */\nfunction deepReduce(object, callback, n, start, IV, tree) {\n  const end = n === 1;\n\n  iterate(object, (value, key, object) => {\n    if (!IV && (end || isPrimitive(value)) && !start) {\n      IV = { IV: value };\n      start = true;\n\n      return;\n    }\n\n    const newTree = [{ key, value }].concat(tree);\n\n    IV = end || isPrimitive(value)\n      ? { IV: callback(IV.IV, value, key, object, newTree) }\n      : deepReduce(value, callback, n - 1, start, IV, newTree);\n  });\n\n  return IV;\n}\n\n/**\n * @function deepSome\n * @private\n * @param {*} object - Object to iterate over.\n * @param {DeepIterationCallback} callback - Callback that is called on every element.\n * If returns truthy the iteration stops and if not it continues.\n * @param {Number} n - Depth of iteration.\n * @param {Tree} tree - Tree of { key, value } objects of iteration.\n * @returns {Boolean} - If some of the callback calls returned truthy value.\n */\nfunction deepSome(object, callback, n, tree) {\n  const end = n === 1;\n\n  return iterate(object, (value, key, object) => {\n    const newTree = [{ key, value }].concat(tree);\n\n    if (\n      end || isPrimitive(value)\n        ? callback(value, key, object, newTree)\n        : deepSome(value, callback, n - 1, newTree)\n    ) {\n      return true;\n    }\n  }) || false;\n}\n\nconstructors[0].push({\n  check: () => true,\n  cls: Super\n});\n\nexport default Super;\n","/**\n * @module Arr\n * @private\n * @mixin\n * @description Exports Arr class.\n */\n\nimport Super from './Super';\nimport constructors from './constants/constructors';\nimport {\n  isArrayLike, isNaN, isNumber, isString,\n  toArray, validate, iterate as iterator, Symbol, defineProperties\n} from './helpers';\n\n/**\n * @typedef {Array|*} ArrayLike\n * @public\n * @description Array-like type.\n */\n\n/**\n * @callback ArrayCallback\n * @public\n * @param {Number} i - Iteration index.\n */\n\n/**\n * @callback IterateCallback\n * @public\n * @param {Number} i - Iteration index.\n */\n\n/**\n * @callback CompareFunction\n * @public\n * @param {*} x - First value to be compared.\n * @param {*} y - Second value to be compared.\n */\n\n/**\n * @class Arr\n * @extends Super\n * @public\n * @param {Array} [array = []] - An array to wrap.\n * @returns {Arr} Instance of Arr.\n * @description Wrap of an array.\n *\n * @example\n * new Arr([1, 2]);\n */\nexport class Arr extends Super {\n  constructor(array = []) {\n    super(toArray(array instanceof Arr ? array.$ : array));\n\n    /**\n     * @member Arr#$\n     * @type {Array}\n     * @public\n     * @description Made array.\n     */\n  }\n\n  /**\n   * @method Arr#concat\n   * @public\n   * @param {...(Array|Arr|*)} values - Arrays or any other values to concat the array with.\n   * @returns {Arr} New instance of Arr.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\n   * @description Synonym for\n   * [Array#concat]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/concat}.\n   */\n  concat(...values) {\n    const array = toArray(this.$, true);\n\n    iterator(arguments, (value) => {\n      value = new Super(value).$;\n\n      if (isArrayLike(value) && !isString(value)) {\n        iterator(value, (value) => {\n          array.push(value);\n        });\n\n        return;\n      }\n\n      array.push(value);\n    });\n\n    return new this.constructor(array);\n  }\n\n  /**\n   * @member Arr#first\n   * @type {*}\n   * @public\n   * @readonly\n   * @description Returns the first element of the array.\n   *\n   * @example\n   * new Arr([1, 2, 3]).first; // 1\n   * new Arr([]).first;        // undefined\n   */\n  get first() {\n    return this.$[0];\n  }\n\n  /**\n   * @method Arr#indexOf\n   * @public\n   * @param {*} value - Value to search.\n   * @returns {Number} Index of the argument.\n   * @description Almost the same as {@link Super#keyOf}. The difference is that if the value is not found\n   * -1 returned instead of null and if found Number(key) returned.\n   *\n   * @example\n   * new Arr([1, 2, 3]).indexOf(1);       // 0\n   * new Arr([1, 2, 3]).indexOf('1');     // 0\n   * new Arr([1, 2, 3]).indexOf(3);       // -1\n   * new Arr([1, 2, NaN]).indexOf(NaN);   // 2\n   */\n  indexOf(value) {\n    const key = this.keyOf(value);\n\n    return key === null ? -1 : Number(key);\n  }\n\n  /**\n   * @method Arr#indexOfStrict\n   * @public\n   * @param {*} value - Value to search.\n   * @returns {Number} Index of the argument.\n   * @description Almost the same as {@link Super#keyOfStrict}. The difference is that if the value is not found\n   * -1 returned instead of null and if found Number(key) returned.\n   *\n   * @example\n   * new Arr([1, 2, 3]).indexOfStrict(1);       // 0\n   * new Arr([1, 2, 3]).indexOfStrict('1');     // -1\n   * new Arr([1, 2, 3]).indexOfStrict(3);       // -1\n   * new Arr([1, 2, NaN]).indexOfStrict(NaN);   // 2\n   */\n  indexOfStrict(value) {\n    const key = this.keyOfStrict(value);\n\n    return key === null ? -1 : Number(key);\n  }\n\n  /**\n   * @method Arr#join\n   * @public\n   * @param {String} [separator = ','] - See the link.\n   * @returns {String} - String of joined array.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/join\n   * @description Synonym for\n   * [Array#join]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/join}.\n   */\n  join(separator) {\n    return this.$.join.apply(this.$, arguments);\n  }\n\n  /**\n   * @member Arr#last\n   * @type {*}\n   * @public\n   * @readonly\n   * @description The last element of the array.\n   *\n   * @example\n   * new Arr([1, 2, 3]).last; // 3\n   * new Arr([]).last;        // undefined\n   */\n  get last() {\n    const array = this.$;\n\n    return array[array.length - 1];\n  }\n\n  /**\n   * @member Arr#length\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/length\n   * @description Synonym for\n   * [Array#length]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/length}.\n   */\n  get length() {\n    return this.$.length;\n  }\n\n  /**\n   * @method Arr#pop\n   * @public\n   * @returns {*} Returns deleted element.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/pop\n   * @description Synonym for\n   * [Array#pop]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/pop}.\n   */\n  pop() {\n    return this.$.pop();\n  }\n\n  /**\n   * @method Arr#push\n   * @public\n   * @param {...*} values See the link.\n   * @this {Arr}\n   * @returns {Arr} Returns this.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push\n   * @description Synonym for\n   * [Array#push]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push}\n   * besides returning this.\n   */\n  push(...values) {\n    this.$.push.apply(this.$, arguments);\n\n    return this;\n  }\n\n  /**\n   * @method Arr#reverse\n   * @public\n   * @returns {Arr} A wrap of the reversed array.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse\n   * @description Synonym for\n   * [Array#reverse]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse}.\n   */\n  reverse() {\n    this.$.reverse();\n\n    return this;\n  }\n\n  /**\n   * @method Arr#shift\n   * @public\n   * @returns {*} Returns deleted element.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/shift\n   * @description Synonym for\n   * [Array#shift]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/shift}.\n   */\n  shift() {\n    return this.$.shift();\n  }\n\n  /**\n   * @method Arr#shuffle\n   * @public\n   * @returns {Arr} Returns this.\n   * @description Method for shuffling.\n   *\n   * @example\n   * new Arr([1, 2, 3, 4]).shuffle().$; // [4, 2, 3, 1]\n   * new Arr([1, 2, 3, 4]).shuffle().$; // [1, 3, 4, 2]\n   */\n  shuffle() {\n    const length = this.$.length;\n\n    return this.forEach((value, index, array) => {\n      const randomIndex = index + Math.floor((length - index) * Math.random());\n\n      array[index] = array[randomIndex];\n      array[randomIndex] = value;\n    });\n  }\n\n  /**\n   * @method Arr#slice\n   * @public\n   * @param {Number} [begin = 0] - See the link.\n   * @param {Number} [end = array.length] - See the link.\n   * @returns {Arr} A wrap of a sliced array.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\n   * @description Synonym for\n   * [Array#slice]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/slice}.\n   */\n  slice(begin, end) {\n    return new this.constructor(this.$.slice.apply(this.$, arguments));\n  }\n\n  /**\n   * @method Arr#sort\n   * @public\n   * @param {CompareFunction} [compareFunction] - See the link.\n   * @returns {Arr} Returns this.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n   * @description Synonym for\n   * [Array#sort]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/sort}.\n   */\n  sort(compareFunction) {\n    validate([compareFunction], ['function||!'], 'Arr#sort');\n\n    this.$.sort(compareFunction);\n\n    return this;\n  }\n\n  /**\n   * @method Arr#sortAsc\n   * @public\n   * @returns {Arr} Returns this.\n   * @description Method for ascending sorting. Puts non-numbers first, then NaNs, then sorted values.\n   *\n   * @example\n   * new Arr([NaN, 1, -7, '100', 5]).sortAsc().$; // ['100', NaN, -7, 1, 5]\n   */\n  sortAsc() {\n    return this.sort(asc);\n  }\n\n  /**\n   * @method Arr#sortDesc\n   * @public\n   * @returns {Arr} Returns this.\n   * @description Method for descending sorting. Puts sorted values first, then NaNs, then non-numbers.\n   *\n   * @example\n   * new Arr([NaN, 1, -7, '100', 5]).sortDesc().$; // [5, 1, -7, NaN, '100']\n   */\n  sortDesc() {\n    return this.sort((y, x) => asc(x, y));\n  }\n\n  /**\n   * @method Arr#splice\n   * @public\n   * @param {Number} [start] - See the link.\n   * @param {Number} [deleteCount] - See the link.\n   * @param {...*} [items] - See the link.\n   * @returns {Arr} A wrap of return value of #splice call.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n   * @description Synonym for\n   * [Array#splice]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/splice}.\n   */\n  splice(start, deleteCount, ...items) {\n    return new Arr(this.$.splice.apply(this.$, arguments));\n  }\n\n  /**\n   * @method Arr#string\n   * @public\n   * @returns {String} Concatenated array.\n   * @description Synonym for array.join('').\n   *\n   * @example\n   * new Arr([1, 2, 3]).string(); // '123'\n   */\n  string() {\n    return this.join('');\n  }\n\n  /**\n   * @method Arr#unshift\n   * @public\n   * @param {...*} [values] - See the link.\n   * @returns {Arr} Returns this.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift\n   * @description Synonym for\n   * [Array#unshift]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift}\n   * besides returning this.\n   */\n  unshift(...values) {\n    this.$.unshift.apply(this.$, arguments);\n\n    return this;\n  }\n}\n\ndefineProperties(Arr.prototype, {\n  [Symbol.toStringTag]: 'Arr'\n});\n\n/**\n * @function asc\n * @private\n * @param {*} x - First value to be compared.\n * @param {*} y - Second value to be compared.\n * @returns {Number} Where to put the first element: before or after.\n */\nfunction asc(x, y) {\n  if (!isNumber(x) && !isNumber(y)) {\n    return 0;\n  }\n\n  if (!isNumber(x)) {\n    return -1;\n  }\n\n  if (!isNumber(y)) {\n    return 1;\n  }\n\n  if (isNaN(x) && isNaN(y)) {\n    return 0;\n  }\n\n  if (isNaN(x)) {\n    return -1;\n  }\n\n  if (isNaN(y)) {\n    return 1;\n  }\n\n  return x - y;\n}\n\nconstructors[1].push({\n  check: isArrayLike,\n  cls: Arr\n});\n\n/**\n * @function array\n * @public\n * @param {Number} number - Length of the array.\n * @param {ArrayCallback} [callback] - If it's present it has to be a function\n * that returns the element that is pushed to the new array.\n * @returns {Arr} New instance of Arr.\n * @description Method for creating new array from the length using optional callback.\n *\n * @example\n * array(3).$;               // [0, 1, 2]\n * array(3, (i) => i * 2).$; // [0, 2, 4]\n */\nexport function array(number, callback) {\n  validate([number, callback], [['intLike', '>=0'], 'function||!'], 'array');\n\n  const array = [];\n\n  for (let i = 0; i < number; i++) {\n    array.push(callback ? callback(i) : i);\n  }\n\n  return new Arr(array);\n}\n\n/**\n * @function iterate\n * @public\n * @param {Number} number - Number of iterations.\n * @param {IterateCallback} callback - Callback that is called on each iteration with the iteration index.\n * @returns {void}\n * @description Method for replacing for (...) construction.\n *\n * @example\n * iterate();\n */\nexport function iterate(number, callback) {\n  validate([number, callback], [['intLike', '>=0'], 'function'], 'iterate');\n\n  for (let i = 0; i < number; i++) {\n    callback(i);\n  }\n}\n\nexport default Arr;\n","/**\r\n * @module BlobObject\r\n * @private\r\n * @mixin\r\n * @description Exports BlobObject class.\r\n */\r\n\r\nimport Super from './Super';\r\nimport Promise from './Promise';\r\nimport constructors from './constants/constructors';\r\nimport {\r\n  isArray, isFunction,\r\n  toStringTag, Symbol, defineProperties\r\n} from './helpers';\r\n\r\n/**\r\n * @typedef {{ buffer: String, binary: String, dataURL: String, text: String }} methods\r\n * @private\r\n * @description List of read blob methods.\r\n */\r\nconst methods = {\r\n  buffer: 'ArrayBuffer',\r\n  binary: 'BinaryString',\r\n  dataURL: 'DataURL',\r\n  text: 'Text'\r\n};\r\nconst { URL } = global;\r\n\r\n/**\r\n * @typedef {('buffer'|'binary'|'dataURL'|'text')} ReadBlobMethod\r\n * @public\r\n * @description Enum type of read blob methods.\r\n */\r\n\r\n/**\r\n * @typedef {ArrayBuffer|ArrayBufferView|Blob|String} BlobParts\r\n * @public\r\n * @description Allowed blob parts.\r\n */\r\n\r\n/**\r\n * @callback ReaderEventListener\r\n * @public\r\n * @param {Event} e - Fired event.\r\n * @param {FileReader} reader - FileReader.\r\n */\r\n\r\n/**\r\n * @class BlobObject\r\n * @extends Super\r\n * @public\r\n * @param {Blob} blob - Blob to wrap.\r\n * @returns {BlobObject} Instance of BlobObject.\r\n * @description Wrap of a blob.\r\n *\r\n * @example\r\n * new BlobObject(new Blob(['{\"foo\":\"bar\"}'], { type: 'application/json' }));\r\n */\r\nexport class BlobObject extends Super {\r\n  /**\r\n   * @member BlobObject#$\r\n   * @type {Blob}\r\n   * @public\r\n   * @description Original Blob.\r\n   */\r\n\r\n  /**\r\n   * @member {String} BlobObject#dataURL\r\n   * @type {String}\r\n   * @public\r\n   * @readonly\r\n   * @description Returns dataURL representation of the blob.\r\n   */\r\n  get dataURL() {\r\n    return URL.createObjectURL(this.$);\r\n  }\r\n\r\n  /**\r\n   * @method BlobObject#readAs\r\n   * @public\r\n   * @param {ReadBlobMethod} method - Method that is used for reading from blob.\r\n   * @param {ReaderEventListener} [progress] - Progress listener.\r\n   * @returns {Promise} Promise that could be aborted.\r\n   * @description Method for reading from blobs.\r\n   *\r\n   * @example\r\n   * new BlobObject(new Blob(['{\"foo\":\"bar\"}'], { type: 'application/json' }))\r\n   *   .readAs('text')\r\n   *   .then((value) => {\r\n   *     console.log(value); // '{\"foo\":\"bar\"}'\r\n   *   });\r\n   */\r\n  readAs(method, progress) {\r\n    if (!methods[method]) {\r\n      throw new Error('1st argument must be one of following values: buffer, binary, dataURL, text');\r\n    }\r\n\r\n    let reader = new FileReader();\r\n    let toReject;\r\n\r\n    if (isFunction(progress)) {\r\n      reader.onprogress = function (e) {\r\n        progress(e, this);\r\n      };\r\n    }\r\n\r\n    const promise = new Promise((resolve, reject) => {\r\n      toReject = reject;\r\n\r\n      reader.onerror = ({ target }) => {\r\n        if (reader) {\r\n          reject(target.error);\r\n        }\r\n      };\r\n\r\n      reader.onload = ({ target }) => {\r\n        resolve(target.result);\r\n      };\r\n\r\n      reader[`readAs${ methods[method] }`](this.$);\r\n    });\r\n\r\n    promise.abort = function abort() {\r\n      toReject(new Error('Reading was aborted'));\r\n\r\n      reader.abort();\r\n\r\n      reader = null;\r\n\r\n      return this;\r\n    };\r\n\r\n    return promise;\r\n  }\r\n\r\n  /**\r\n   * @method BlobObject#saveAs\r\n   * @public\r\n   * @param {String} [name] - Name that is used for saving file.\r\n   * @returns {BlobObject} Returns this.\r\n   * @description Method for saving blobs.\r\n   *\r\n   * @example\r\n   * new BlobObject(new Blob(['{\"foo\":\"bar\"}'], { type: 'application/json' }))\r\n   *   .saveAs('blob.json');\r\n   */\r\n  saveAs(name = 'download') {\r\n    const anchor = document.createElement('a');\r\n\r\n    anchor.href = this.dataURL;\r\n    anchor.setAttribute('download', name);\r\n    anchor.click();\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\ndefineProperties(BlobObject.prototype, {\r\n  [Symbol.toStringTag]: 'BlobObject'\r\n});\r\n\r\nconstructors[1].push({\r\n  check: (blob) => /^(Blob|File)$/.test(toStringTag(blob)),\r\n  cls: BlobObject\r\n});\r\n\r\n/**\r\n * @function blob\r\n * @public\r\n * @param {(BlobParts[]|BlobParts)} blobParts - Blob parts that are passed to\r\n * [Blob]{@link https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob} constructor.\r\n * @param {Object} [options] - Options that are passed to\r\n * [Blob]{@link https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob} constructor.\r\n * @returns {BlobObject} New instance of BlobObject.\r\n * @description Function for creating blobs not involving BlobObject and Blob constructors.\r\n */\r\nexport function blob(blobParts, options = {}) {\r\n  if (!isArray(blobParts)) {\r\n    blobParts = [blobParts];\r\n  }\r\n\r\n  return new BlobObject(new Blob(blobParts, options));\r\n}\r\n\r\nexport default BlobObject;\r\n","/**\r\n * @module Func\r\n * @private\r\n * @mixin\r\n * @description Exports Func class.\r\n */\r\n\r\nimport Super from './Super';\r\nimport Promise from './Promise';\r\nimport constructors from './constants/constructors';\r\nimport { isFunction, validate, toArray, Symbol, defineProperties, iterate } from './helpers';\r\n\r\n/**\r\n * @callback BeforeMiddleware\r\n * @param {Array} args - Previous arguments.\r\n * @param {Func} func - This function.\r\n * @returns {Array} - New arguments.\r\n */\r\n\r\n/**\r\n * @callback AfterMiddleware\r\n * @param {*} returnValue - Previous return value.\r\n * @param {Func} func - This function.\r\n * @returns {*} - New return value.\r\n */\r\n\r\n/**\r\n * @class Func\r\n * @extends Super\r\n * @public\r\n * @param {Function} [func = function () {}] - Function to wrap.\r\n * @returns {Func} Instance of Func.\r\n * @description A wrap of a function.\r\n *\r\n * @example\r\n * const func = new Func(Math.max);\r\n *\r\n * func(1, 4, -2, 5); // 5\r\n */\r\nexport class Func extends Super {\r\n  constructor(func = () => {}) {\r\n    super();\r\n\r\n    function proxy() {\r\n      if (++proxy.$$.called < proxy.$$.canBeCalled) {\r\n        const { before, after, sync, contextLocked } = proxy.$$;\r\n        let { context, args } = proxy.$$;\r\n        let ret;\r\n\r\n        context = contextLocked ? context : context || this;\r\n        args = args.concat(toArray(arguments));\r\n\r\n        if (sync) {\r\n          iterate(before, (middleware) => {\r\n            args = middleware.call(context, toArray(args), proxy);\r\n          });\r\n\r\n          ret = func.apply(context, toArray(args));\r\n\r\n          iterate(after, (middleware) => {\r\n            ret = middleware.call(context, ret, proxy);\r\n          });\r\n\r\n          return ret;\r\n        }\r\n\r\n        let promise = Promise.resolve(args);\r\n\r\n        iterate(before, (middleware) => {\r\n          promise = promise.then((args) => middleware.call(context, toArray(args), proxy));\r\n        });\r\n\r\n        promise = promise.then((args) => func.apply(context, toArray(args)));\r\n\r\n        iterate(after, (middleware) => {\r\n          promise = promise.then((ret) => middleware.call(context, ret, proxy));\r\n        });\r\n\r\n        return promise;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @member {Object} Func#$$\r\n     * @type {Object}\r\n     * @protected\r\n     * @property {Array} after - After middleware array.\r\n     * @property {Array} args - Locked and bound arguments.\r\n     * @property {Array} argsLocked - Locked arguments.\r\n     * @property {Array} before - Before middleware array.\r\n     * @property {Number} called - How many times the function was called.\r\n     * @property {Number} canBeCalled - How many times the function can be actually called.\r\n     * @property {*} context - Locked or bound context.\r\n     * @property {Boolean} contextLocked - Is context locked or not.\r\n     * @property {Boolean} sync - Is function synchronous or not.\r\n     * @description Config parameters.\r\n     */\r\n    Object.defineProperty(proxy, '$$', {\r\n      value: {\r\n        after: [],\r\n        args: [],\r\n        argsLocked: [],\r\n        before: [],\r\n        called: 0,\r\n        canBeCalled: Infinity,\r\n        context: null,\r\n        contextLocked: false,\r\n        sync: true\r\n      }\r\n    });\r\n\r\n    /**\r\n     * @member {Function} Func#$\r\n     * @type {Function}\r\n     * @public\r\n     * @description Original function.\r\n     */\r\n    Object.defineProperty(proxy, '$', { value: func });\r\n    Object.setPrototypeOf(proxy, Func.prototype);\r\n\r\n    return proxy;\r\n  }\r\n\r\n  /**\r\n   * @method Func#after\r\n   * @public\r\n   * @param {AfterMiddleware} middleware - After middleware.\r\n   * @param {Boolean|*} [afterAll = true] - Boolean parameter where to put middleware.\r\n   * Truthy parameter stands for \"to the end\" and falsey for \"to the beginning\".\r\n   * @returns {Func} Returns this.\r\n   * @description Adds after middleware.\r\n   *\r\n   * @example\r\n   * const func = new Func((a) => a + 1)\r\n   *   .after((result) => result * result);\r\n   *\r\n   * func(4);  // 25\r\n   * func(-4); // 9\r\n   */\r\n  after(middleware, afterAll = true) {\r\n    validate([middleware], ['function'], 'Func#after');\r\n\r\n    const { after } = this.$$;\r\n\r\n    if (afterAll) {\r\n      after.push(middleware);\r\n    } else {\r\n      after.unshift(middleware);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Func#apply\r\n   * @public\r\n   * @param {*} [context] - Context to call with.\r\n   * @param {(Array|Arguments)} [args] - Arguments to call with.\r\n   * @returns {*} Return of function call.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\r\n   * @description Synonym for\r\n   * [Function#apply]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Function/apply}.\r\n   */\r\n  apply(context, args) {\r\n    return (() => {}).apply.apply(this, arguments);\r\n  }\r\n\r\n  /**\r\n   * @method Func#async\r\n   * @public\r\n   * @param {Boolean|*} [condition] - If the function should be synchronous or not.\r\n   * @returns {Func} Returns this.\r\n   * @description If the function should be synchronous or not.\r\n   *\r\n   * @example\r\n   * const func = new Func((a) => a + 1).async();\r\n   *\r\n   * func(4).then((result) => {\r\n   *   console.log(result); // 5\r\n   * });\r\n   */\r\n  async(condition = true) {\r\n    this.$$.sync = !condition;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Func#before\r\n   * @public\r\n   * @param {BeforeMiddleware} middleware - Before middleware.\r\n   * @param {Boolean|*} [beforeAll = true] - Boolean parameter where to put middleware.\r\n   * Truthy parameter stands for \"to the beginning\" and falsey for \"to the end\".\r\n   * @returns {Func} Returns this.\r\n   * @description Adds before middleware.\r\n   *\r\n   * @example\r\n   * const func = new Func((a) => a + 1)\r\n   *   .before(([arg]) => [arg * arg]);\r\n   *\r\n   * func(4); // 17\r\n   * func(3); // 10\r\n   */\r\n  before(middleware, beforeAll = true) {\r\n    validate([middleware], ['function'], 'Func#before');\r\n\r\n    const { before } = this.$$;\r\n\r\n    if (beforeAll) {\r\n      before.unshift(middleware);\r\n    } else {\r\n      before.push(middleware);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Func#bind\r\n   * @public\r\n   * @param {*} context - Context to bind.\r\n   * @param {...(Array|Arguments|*)} args - Arguments to bind.\r\n   * @returns {Func} Returns this.\r\n   * @description Composition of {@link Func#bindContext} and {@link Func#bindArgs}.\r\n   *\r\n   * @example\r\n   * const func = new Func(function (a, b) {\r\n   *   return this.a + a + b;\r\n   * }).bind({ a: 2 }, 1);\r\n   *\r\n   * func(1); // 4\r\n   * func(3); // 6\r\n   */\r\n  bind(context, ...args) {\r\n    return this\r\n      .bindContext(context)\r\n      .bindArgs(args);\r\n  }\r\n\r\n  /**\r\n   * @method Func#bindArgs\r\n   * @public\r\n   * @param {(Array|Arguments)} args - Arguments to bind.\r\n   * @returns {Func} Returns this.\r\n   * @description Binds arguments in addition to already locked and bound ones.\r\n   *\r\n   * @example\r\n   * const func = new Func((...args) => {\r\n   *   let sum = 0;\r\n   *\r\n   *   for (let i = 0; i < args.length; i++) {\r\n   *     sum += args[i];\r\n   *   }\r\n   *\r\n   *   return sum;\r\n   * });\r\n   *\r\n   * func(1, 2, 3); // 6\r\n   *\r\n   * func.bindArgs([4]);\r\n   *\r\n   * func(1, 2, 3); // 10\r\n   *\r\n   * func.bindArgs([5]);\r\n   *\r\n   * func(1, 2, 3); // 15\r\n   */\r\n  bindArgs(args) {\r\n    const func = this.$$;\r\n\r\n    func.args = func.args.concat(toArray(args));\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Func#bindContext\r\n   * @public\r\n   * @param {*} context - Context to bind.\r\n   * @returns {Func} Returns this.\r\n   * @description Bind new context if it's not already locked.\r\n   *\r\n   * @example\r\n   * const func = new Func(function () {\r\n   *   return this.a;\r\n   * }).bindContext({ a: 1 });\r\n   *\r\n   * func(); // 1\r\n   *\r\n   * func.bindContext({ a: 2 });\r\n   *\r\n   * func(); // 2\r\n   */\r\n  bindContext(context) {\r\n    const func = this.$$;\r\n\r\n    if (!func.contextLocked) {\r\n      func.context = context;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Func#call\r\n   * @public\r\n   * @param {*} [context] - Context to call with.\r\n   * @param {...*} [args] - Arguments to call with.\r\n   * @returns {*} Return of function call.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Function/call\r\n   * @description Synonym for\r\n   * [Function#call]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Function/call}.\r\n   */\r\n  call(context, ...args) {\r\n    return (() => {}).call.apply(this, arguments);\r\n  }\r\n\r\n  /**\r\n   * @member {Number} Func#called\r\n   * @public\r\n   * @readonly\r\n   * @description Returns how many times the function was called.\r\n   *\r\n   * @example\r\n   * const func = new Func((a) => a + 1);\r\n   *\r\n   * func();\r\n   * func();\r\n   *\r\n   * func.called // 2\r\n   */\r\n  get called() {\r\n    return this.$$.called;\r\n  }\r\n\r\n  /**\r\n   * @method Func#canBeCalled\r\n   * @public\r\n   * @param {Number} times - Number of maximum times the function is called (middlewares are also taken for a count).\r\n   * @returns {Func} Returns this.\r\n   * @description Method for limiting call times of function.\r\n   *\r\n   * @example\r\n   * const func = new Func((a) => a + 1)\r\n   *   .canBeCalled(1);\r\n   *\r\n   * func(1); // 2\r\n   * func(1); // undefined\r\n   */\r\n  canBeCalled(times) {\r\n    this.$$.canBeCalled = times;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Func#limitArgsTo\r\n   * @public\r\n   * @param {Number} number - Number of arguments to limit to.\r\n   * @returns {Func} Returns this.\r\n   * @description Built-in before middleware for limiting number of arguments\r\n   * that is put to the end of before middlewares.\r\n   *\r\n   * @example\r\n   * const func = new Func((a, b) => [a, b]);\r\n   *\r\n   * func(1, 2); // [1, 2]\r\n   *\r\n   * func.limitArgsTo(1);\r\n   *\r\n   * func(1, 2); // [1, undefined]\r\n   */\r\n  limitArgsTo(number) {\r\n    return this.before((args) => args.slice(0, number), false);\r\n  }\r\n\r\n  /**\r\n   * @method Func#lock\r\n   * @public\r\n   * @param {*} context - Context to lock.\r\n   * @param {(Array|Arguments|*)} args - Arguments to lock.\r\n   * @returns {Func} Returns this.\r\n   * @description Composition of {@link Func#lockContext} and {@link Func#lockArgs}.\r\n   *\r\n   * @example\r\n   * const func = new Func(function (a, b) {\r\n   *   return this.a + a + b;\r\n   * }).lock({ a: 2 }, [1]);\r\n   *\r\n   * func(1); // 4\r\n   * func(3); // 6\r\n   */\r\n  lock(context, args) {\r\n    return this\r\n      .lockContext(context)\r\n      .lockArgs(args);\r\n  }\r\n\r\n  /**\r\n   * @method Func#lockArgs\r\n   * @public\r\n   * @param {(Array|Arguments|*)} args - Arguments to lock.\r\n   * @returns {Func} Returns this.\r\n   * @description Erases bound arguments and adds new arguments to already locked ones.\r\n   *\r\n   * @example\r\n   * const func = new Func((...args) => {\r\n   *   let sum = 0;\r\n   *\r\n   *   for (let i = 0; i < args.length; i++) {\r\n   *     sum += args[i];\r\n   *   }\r\n   *\r\n   *   return sum;\r\n   * });\r\n   *\r\n   * func(1, 2, 3); // 6\r\n   *\r\n   * func.lockArgs([4]);\r\n   *\r\n   * func(1, 2, 3); // 10\r\n   *\r\n   * func.bindArgs([6, 7]);\r\n   * func.lockArgs([5]);\r\n   *\r\n   * func(1, 2, 3); // 15\r\n   */\r\n  lockArgs(args) {\r\n    const func = this.$$;\r\n\r\n    func.args = func.argsLocked = func.argsLocked.concat(toArray(args));\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Func#lockContext\r\n   * @public\r\n   * @param {*} context - Context to lock.\r\n   * @returns {Func} Returns this.\r\n   * @description Locks context if it's not already locked.\r\n   *\r\n   * @example\r\n   * const func = new Func(function () {\r\n   *   return this.a;\r\n   * }).lockContext({ a: 1 });\r\n   *\r\n   * func(); // 1\r\n   *\r\n   * func.lockContext({ a: 2 });\r\n   *\r\n   * func(); // 1\r\n   */\r\n  lockContext(context) {\r\n    const func = this.$$;\r\n\r\n    if (!func.contextLocked) {\r\n      func.context = context;\r\n      func.contextLocked = true;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Func#timing\r\n   * @public\r\n   * @param {String} mark - Argument that is passed to console.time() and console.timeEnd().\r\n   * By default name of the original function, or if it's not present, 'anonymous' is used.\r\n   * @returns {Func} Returns this.\r\n   * @description Built-in before and after middlewares for noting calling time.\r\n   * In case of asynchronous functions it notes time between calling function and resolving or rejecting the result.\r\n   *\r\n   * @example\r\n   * const func = new Func((a) => a + 1)\r\n   *   .timing('plus 1');\r\n   *\r\n   * func(2); // plus 1: 0.010ms\r\n   *\r\n   * const async = new Func(() => new Promise(() => {\r\n   *     setTimeout(resolve, 1000);\r\n   *   }))\r\n   *   .async()\r\n   *   .timing();\r\n   *\r\n   * async();\r\n   * // After 1 second...\r\n   * // anonymous: 1000.010ms\r\n   */\r\n  timing(mark) {\r\n    mark = arguments.length ? String(mark) : this.$.name || 'anonymous';\r\n\r\n    this.before((args) => {\r\n      console.time(mark);\r\n\r\n      return args;\r\n    }, false);\r\n\r\n    this.after((ret) => {\r\n      console.timeEnd(mark);\r\n\r\n      return ret;\r\n    }, false);\r\n\r\n    return this;\r\n  }\r\n\r\n  toString() {\r\n    return (() => {}).toString.call(this.$);\r\n  }\r\n\r\n  /**\r\n   * @method Func#unbind\r\n   * @public\r\n   * @returns {Func} Returns this.\r\n   * @description Composition of {@link Func#unbindContext} and {@link Func#unbindArgs}.\r\n   *\r\n   * @example\r\n   * const func = new Func(function (a) {\r\n   *   return this.foo + ' & ' +  a;\r\n   * }).bind({ foo: 2 }, 1);\r\n   *\r\n   * func(); // '2 & 1'\r\n   *\r\n   * func.unbind();\r\n   *\r\n   * func(); // 'undefined & undefined'\r\n   */\r\n  unbind() {\r\n    return this\r\n      .unbindContext()\r\n      .unbindArgs();\r\n  }\r\n\r\n  /**\r\n   * @method Func#unbindArgs\r\n   * @public\r\n   * @returns {Func} Returns this.\r\n   * @description Erases all bound arguments.\r\n   *\r\n   * @example\r\n   * const func = new Func((...args) => {\r\n   *   let sum = 0;\r\n   *\r\n   *   for (let i = 0; i < args.length; i++) {\r\n   *     sum += args[i];\r\n   *   }\r\n   *\r\n   *   return sum;\r\n   * }).bindArgs([4, 5]);\r\n   *\r\n   * func(1, 2, 3); // 15\r\n   *\r\n   * func.unbindArgs();\r\n   *\r\n   * func(1, 2, 3); // 6\r\n   */\r\n  unbindArgs() {\r\n    const func = this.$$;\r\n\r\n    func.args = func.argsLocked;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Func#unbindContext\r\n   * @public\r\n   * @returns {Func} Returns this.\r\n   * @description Erases context if it's not locked.\r\n   *\r\n   * @example\r\n   * const func = new Func(function () {\r\n   *   return this.foo;\r\n   * }).bindContext({ foo: 1 });\r\n   *\r\n   * func(); // 1\r\n   *\r\n   * func.unbindArgs();\r\n   *\r\n   * func(); // undefined\r\n   */\r\n  unbindContext() {\r\n    const func = this.$$;\r\n\r\n    if (!func.contextLocked) {\r\n      func.context = null;\r\n    }\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\ndefineProperties(Func.prototype, {\r\n  [Symbol.toStringTag]: 'Func'\r\n});\r\n\r\nconstructors[1].push({\r\n  check: isFunction,\r\n  cls: Func\r\n});\r\n\r\n/**\r\n * @function method\r\n * @public\r\n * @param {String} method - Method to call.\r\n * @param {(Array|Arguments|*)} args - Arguments to call the method with.\r\n * @returns {Function} Function that calls stated method with given arguments.\r\n * @description Function that returns the function\r\n * that calls stated method of its first argument with given arguments.\r\n *\r\n * @example\r\n * [1.2345, 2.789, 3.14].map(method('toFixed', [2])); // ['1.23', '2.79', '3.14']\r\n */\r\nexport function method(method, args = []) {\r\n  return (x) => x[method].apply(x, toArray(args));\r\n}\r\n\r\n/**\r\n * @function noop\r\n * @public\r\n * @returns {void}\r\n * @description Empty function.\r\n */\r\nexport function noop() {}\r\n\r\n/**\r\n * @function self\r\n * @public\r\n * @returns {*} First argument itself.\r\n * @description Function that returns the first argument.\r\n *\r\n * @example\r\n * [1, 2].map(self);                     // [1, 2]\r\n * [1, 3, NaN, 0, 7, null].filter(self); // [1, 3, 7]\r\n */\r\nexport function self() {\r\n  return arguments[0];\r\n}\r\n\r\nexport default Func;\r\n","/**\r\n * @module Num\r\n * @private\r\n * @mixin\r\n * @description Exports Num class.\r\n */\r\n\r\nimport Super from './Super';\r\nimport Func from './Func';\r\nimport Promise from './Promise';\r\nimport constructors from './constants/constructors';\r\nimport {\r\n  isNumber, isFinite, toArray,\r\n  defineProperties, validate, Symbol\r\n} from './helpers';\r\n\r\nconst toRadian = Math.PI / 180;\r\nconst toDegree = 180 / Math.PI;\r\nconst ln2 = Math.LN2;\r\nconst ln10 = Math.LN10;\r\n\r\n/**\r\n * @class Num\r\n * @extends Super\r\n * @public\r\n * @param {Number} [number = 0] - A number to wrap.\r\n * @returns {Num} Instance of Num.\r\n * @description Wrap of a number.\r\n *\r\n * @example\r\n * const num = new Num(1);\r\n */\r\nexport class Num extends Super {\r\n  constructor(number = 0) {\r\n    super(number);\r\n\r\n    /**\r\n     * @member Num#$\r\n     * @type {Number}\r\n     * @public\r\n     * @description Original number.\r\n     */\r\n  }\r\n\r\n  /**\r\n   * @member Num#abs\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/abs\r\n   * @description Synonym for\r\n   * [Math.abs]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/abs}.\r\n   *\r\n   * @example\r\n   * new Num(1).abs;  // 1\r\n   * new Num(-1).abs; // 1\r\n   */\r\n  get abs() {\r\n    return Math.abs(this.$);\r\n  }\r\n\r\n  /**\r\n   * @method Num#acos\r\n   * @public\r\n   * @param {Boolean|*} [toDegrees = false] If it is truthy the return value is transformed into degrees.\r\n   * @returns {Number} Arccosine of the number.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/acos\r\n   * @description Synonym for\r\n   * [Math.acos]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/acos}.\r\n   */\r\n  acos(toDegrees) {\r\n    return (toDegrees ? toDegree : 1) * Math.acos(this.$);\r\n  }\r\n\r\n  /**\r\n   * @member Num#acosh\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/acosh\r\n   * @description Synonym for\r\n   * [Math.acosh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/acosh}.\r\n   */\r\n  get acosh() {\r\n    const number = this.$;\r\n\r\n    return Math.log(number + Math.sqrt(number * number - 1));\r\n  }\r\n\r\n  /**\r\n   * @member Num#asinh\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/asinh\r\n   * @description Synonym for\r\n   * [Math.asinh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/asinh}.\r\n   */\r\n  get asinh() {\r\n    const number = this.$;\r\n\r\n    return Math.log(number + Math.sqrt(number * number + 1));\r\n  }\r\n\r\n  /**\r\n   * @method Num#asin\r\n   * @public\r\n   * @param {Boolean|*} [toDegrees = false] If it is truthy the return value is transformed into degrees.\r\n   * @returns {Number} Arcsine of the number.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/asin\r\n   * @description Synonym for\r\n   * [Math.asin]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/asin}.\r\n   */\r\n  asin(toDegrees) {\r\n    return (toDegrees ? toDegree : 1) * Math.asin(this.$);\r\n  }\r\n\r\n  /**\r\n   * @method Num#atan\r\n   * @public\r\n   * @param {Boolean|*} [toDegrees = false] If it is truthy the return value is transformed into degrees.\r\n   * @returns {Number} Arcsine of the number.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/atan\r\n   * @description Synonym for\r\n   * [Math.atan]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/atan}.\r\n   */\r\n  atan(toDegrees) {\r\n    return (toDegrees ? toDegree : 1) * Math.atan(this.$);\r\n  }\r\n\r\n  /**\r\n   * @member Num#atanh\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/atanh\r\n   * @description Synonym for\r\n   * [Math.atanh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/atanh}.\r\n   */\r\n  get atanh() {\r\n    const number = this.$;\r\n\r\n    return Math.log((1 + number) / (1 - number)) / 2;\r\n  }\r\n\r\n  /**\r\n   * @member Num#cbrt\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cbrt\r\n   * @description Synonym for\r\n   * [Math.cbrt]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cbrt}.\r\n   */\r\n  get cbrt() {\r\n    const cbrt = Math.pow(Math.abs(this.$), 1 / 3);\r\n\r\n    return this.$ > 0 ? cbrt : -cbrt;\r\n  }\r\n\r\n  /**\r\n   * @member Num#ceil\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil\r\n   * @description Synonym for\r\n   * [Math.ceil]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil}.\r\n   *\r\n   * @example\r\n   * new Num(1.1).ceil;  // 2\r\n   * new Num(-1.1).ceil; // -1\r\n   */\r\n  get ceil() {\r\n    return Math.ceil(this.$);\r\n  }\r\n\r\n  /**\r\n   * @method Num#cos\r\n   * @public\r\n   * @param {Boolean|*} [asDegrees = false] If it is truthy the number is treated as a degree value.\r\n   * @returns {Number} Cosine of the number.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cos\r\n   * @description Synonym for\r\n   * [Math.cos]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cos}.\r\n   */\r\n  cos(asDegrees) {\r\n    return Math.cos((asDegrees ? toRadian : 1) * this.$);\r\n  }\r\n\r\n  /**\r\n   * @member Num#cosh\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cosh\r\n   * @description Synonym for\r\n   * [Math.cosh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/cosh}.\r\n   */\r\n  get cosh() {\r\n    const exp = this.exp;\r\n\r\n    return (exp + 1 / exp) / 2;\r\n  }\r\n\r\n  /**\r\n   * @member Num#cube\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @description Cube of the number.\r\n   *\r\n   * @example\r\n   * new Num(2).cube;  // 8\r\n   * new Num(-3).ceil; // -27\r\n   */\r\n  get cube() {\r\n    return this.$ * this.$ * this.$;\r\n  }\r\n\r\n  /**\r\n   * @member Num#exp\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/exp\r\n   * @description Synonym for\r\n   * [Math.exp]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/exp}.\r\n   */\r\n  get exp() {\r\n    return Math.exp(this.$);\r\n  }\r\n\r\n  /**\r\n   * @member Num#floor\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/floor\r\n   * @description Synonym for\r\n   * [Math.floor]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/floor}.\r\n   *\r\n   * @example\r\n   * new Num(1.1).floor;  // 1\r\n   * new Num(-1.1).floor; // -2\r\n   */\r\n  get floor() {\r\n    return Math.floor(this.$);\r\n  }\r\n\r\n  /**\r\n   * @method Num#interval\r\n   * @public\r\n   * @param {Function} func - Function that is called every <number> milliseconds.\r\n   * @param {Array} [args] - Arguments passed to the function.\r\n   * @returns {Function} Function that aborts the interval. The context of the function (if it's not already bound)\r\n   * is the object with the abort method.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/setInterval\r\n   * @description Analogue of the\r\n   * [setInterval]{@link https://developer.mozilla.org/en/docs/Web/API/WindowTimers/setInterval}.\r\n   *\r\n   * @example\r\n   * const times = 0;\r\n   * new Num(50).interval(function () {\r\n   *   if (++times === 10) {\r\n   *     this.abort();\r\n   *   }\r\n   * });\r\n   */\r\n  interval(func, args = []) {\r\n    validate([func], ['function'], 'Num#interval');\r\n\r\n    func = new Func(func).bindContext({ abort });\r\n    args = toArray(args);\r\n\r\n    const number = this.$;\r\n\r\n    let timeout;\r\n    let aborted;\r\n\r\n    setTimeout(function interval() {\r\n      func.apply(null, args);\r\n\r\n      if (!aborted) {\r\n        timeout = setTimeout(interval, number);\r\n      }\r\n    }, 0);\r\n\r\n    return abort;\r\n\r\n    function abort() {\r\n      aborted = true;\r\n\r\n      return clearTimeout(timeout);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @member Num#ln\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log\r\n   * @description Synonym for\r\n   * [Math.log]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log}.\r\n   */\r\n  get ln() {\r\n    return Math.log(this.$);\r\n  }\r\n\r\n  /**\r\n   * @method Num#log\r\n   * @public\r\n   * @param {Number} number - Number to get logarithm of.\r\n   * @returns {Number} Logarithm of the argument number to the number base.\r\n   * @description Returns the logarithm of the argument number to the number base.\r\n   *\r\n   * @example\r\n   * new Num(2).log(16);  // 4\r\n   * new Num(3).log(243); // 5\r\n   */\r\n  log(number) {\r\n    return Math.log(number) / Math.log(this.$);\r\n  }\r\n\r\n  /**\r\n   * @member Num#log2\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log2\r\n   * @description Synonym for\r\n   * [Math.log2]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log2}.\r\n   */\r\n  get log2() {\r\n    return this.ln / ln2;\r\n  }\r\n\r\n  /**\r\n   * @member Num#log10\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log10\r\n   * @description Synonym for\r\n   * [Math.log10]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/log10}.\r\n   */\r\n  get log10() {\r\n    return this.ln / ln10;\r\n  }\r\n\r\n  /**\r\n   * @method Num#pow\r\n   * @public\r\n   * @param {Number} power - Power the number should be raised to.\r\n   * @returns {Number} The number to the <power> power.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/pow\r\n   * @description Synonym for\r\n   * [Math.pow]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/pow}.\r\n   *\r\n   * @example\r\n   * new Num(4).pow(.5); // 2\r\n   * new Num(3).pow(2);  // 9\r\n   */\r\n  pow(power) {\r\n    return Math.pow(this.$, power);\r\n  }\r\n\r\n  /**\r\n   * @method Num#root\r\n   * @public\r\n   * @param {Number} power - Power the number should be raised to.\r\n   * @returns {Number} The <power> root of the number.\r\n   * @description Synonym for number.pow(1 / power);\r\n   *\r\n   * @example\r\n   * new Num(4).root(2);   // 0.5\r\n   * new Num(243).root(5); // 3\r\n   */\r\n  root(power) {\r\n    return Math.pow(this.$, 1 / power);\r\n  }\r\n\r\n  /**\r\n   * @member Num#round\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/round\r\n   * @description Synonym for\r\n   * [Math.round]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/round}.\r\n   *\r\n   * @example\r\n   * new Num(1.1).floor;  // 1\r\n   * new Num(-1.1).floor; // -1\r\n   * new Num(1.5).floor;  // 2\r\n   */\r\n  get round() {\r\n    return Math.round(this.$);\r\n  }\r\n\r\n  /**\r\n   * @member Num#sign\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n   * @description Synonym for\r\n   * [Math.sign]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sign}.\r\n   */\r\n  get sign() {\r\n    const number = this.$;\r\n\r\n    if (!number) {\r\n      return number;\r\n    }\r\n\r\n    return number > 0 ? 1 : -1;\r\n  }\r\n\r\n  /**\r\n   * @method Num#sin\r\n   * @public\r\n   * @param {Boolean|*} [asDegrees = false] If it is truthy the number is treated as a degree value.\r\n   * @returns {Number} Sine of the number.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sin\r\n   * @description Synonym for\r\n   * [Math.sin]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sin}.\r\n   */\r\n  sin(asDegrees) {\r\n    return Math.sin((asDegrees ? toRadian : 1) * this.$);\r\n  }\r\n\r\n  /**\r\n   * @member Num#sinh\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sinh\r\n   * @description Synonym for\r\n   * [Math.sinh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sinh}.\r\n   */\r\n  get sinh() {\r\n    const exp = this.exp;\r\n\r\n    return (exp - 1 / exp) / 2;\r\n  }\r\n\r\n  /**\r\n   * @member Num#sq\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @description The square of the number.\r\n   *\r\n   * @example\r\n   * new Num(2).sq;  // 4\r\n   * new Num(-3).sq; // 9\r\n   */\r\n  get sq() {\r\n    return this.$ * this.$;\r\n  }\r\n\r\n  /**\r\n   * @member Num#sqrt\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sqrt\r\n   * @description Synonym for\r\n   * [Math.sqrt]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/sqrt}.\r\n   */\r\n  get sqrt() {\r\n    return Math.sqrt(this.$);\r\n  }\r\n\r\n  /**\r\n   * @method Num#tan\r\n   * @public\r\n   * @param {Boolean|*} [asDegrees = false] If it is truthy the number is treated as a degree value.\r\n   * @returns {Number} Tangent of the number.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/tan\r\n   * @description Synonym for\r\n   * [Math.tan]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/tan}.\r\n   */\r\n  tan(asDegrees) {\r\n    return Math.tan((asDegrees ? toRadian : 1) * this.$);\r\n  }\r\n\r\n  /**\r\n   * @member Num#tanh\r\n   * @type {Number}\r\n   * @public\r\n   * @readonly\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/tanh\r\n   * @description Synonym for\r\n   * [Math.tanh]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/tanh}.\r\n   */\r\n  get tanh() {\r\n    const number = this.$;\r\n\r\n    if (!isFinite(number)) {\r\n      return this.sign;\r\n    }\r\n\r\n    const exp = Math.exp(2 * number);\r\n\r\n    return (exp - 1) / (exp + 1);\r\n  }\r\n\r\n  /**\r\n   * @method Num#timeout\r\n   * @public\r\n   * @param {*} [value] - Value to be resolved by the promise.\r\n   * @returns {Promise} Promise that could be aborted.\r\n   * @see https://developer.mozilla.org/en/docs/Web/API/WindowTimers/setTimeout\r\n   * @description Promise-based analogue of\r\n   * [setTimeout]{@link https://developer.mozilla.org/en/docs/Web/API/WindowTimers/setTimeout}.\r\n   *\r\n   * @example\r\n   * new Num(50).timeout('resolved').then((value) => {\r\n   *   console.log(value); // 'resolved'\r\n   * });\r\n   *\r\n   * const promise = new Num(50).timeout();\r\n   * promise.abort();\r\n   */\r\n  timeout(value) {\r\n    let timeout;\r\n    let reject;\r\n\r\n    const promise = new Promise((resolve, rej) => {\r\n      reject = rej;\r\n      timeout = setTimeout(resolve, this.$, value);\r\n    });\r\n\r\n    promise.abort = function abort() {\r\n      clearTimeout(timeout);\r\n\r\n      reject(new Error('Timeout was aborted'));\r\n\r\n      return this;\r\n    };\r\n\r\n    return promise;\r\n  }\r\n\r\n  /**\r\n   * @method Num#toBase\r\n   * @public\r\n   * @param {Number} [base = 10] - Base that the number should inverted to.\r\n   * @returns {String} A string representation of the number in <base> base.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toString\r\n   * @description Synonym for\r\n   * [Number#toString]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toString}.\r\n   *\r\n   * @example\r\n   * new Num(4).toBase(2); // 100\r\n   * new Num(3).toBase();  // 3\r\n   */\r\n  toBase(base = 10) {\r\n    return this.$.toString(base);\r\n  }\r\n\r\n  /**\r\n   * @method Num#toExponential\r\n   * @public\r\n   * @param {Number} [fractionDigits] - See the link.\r\n   * @returns {String} A string representation of the number in the exponential format.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential\r\n   * @description Synonym for\r\n   * [Number#toExponential]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential}.\r\n   */\r\n  toExponential(fractionDigits) {\r\n    return this.$.toExponential(fractionDigits);\r\n  }\r\n\r\n  /**\r\n   * @method Num#toFixed\r\n   * @public\r\n   * @param {Number} [digits = 0] - See the link.\r\n   * @returns {String} Fixed-point formatted number.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed\r\n   * @description Synonym for\r\n   * [Number#toFixed]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed}.\r\n   */\r\n  toFixed(digits) {\r\n    return this.$.toFixed(digits);\r\n  }\r\n\r\n  /**\r\n   * @method Num#toPrecision\r\n   * @public\r\n   * @param {Number} [precision] - See the link.\r\n   * @returns {String} A string representation of the number to the specified precision.\r\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toPrecision\r\n   * @description Synonym for\r\n   * [Number#toPrecision]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/toPrecision}.\r\n   */\r\n  toPrecision(precision) {\r\n    return this.$.toPrecision(precision);\r\n  }\r\n\r\n  valueOf() {\r\n    return Number(this.$);\r\n  }\r\n}\r\n\r\ndefineProperties(Num.prototype, {\r\n  [Symbol.toStringTag]: 'Num'\r\n});\r\n\r\nconstructors[1].push({\r\n  check: isNumber,\r\n  cls: Num\r\n});\r\n\r\n/**\r\n * @function rand\r\n * @public\r\n * @param {Number} [start = 0] - Start of the range.\r\n * @param {Number} [end = 1] - End of the range.\r\n * @returns {Number} Random number.\r\n * @description Returns a random number in the range specified by the arguments.\r\n *\r\n * @example\r\n * rand(1, 5); // 2.315\r\n * rand(1, 5); // 4.356763\r\n */\r\nexport function rand(start = 0, end = 1) {\r\n  return start + (end - start) * Math.random();\r\n}\r\n\r\n/**\r\n * @function random\r\n * @public\r\n * @param {Integer} start - Start of the range.\r\n * @param {Integer} end - End of the range.\r\n * @returns {Number} Random integer.\r\n * @description Returns a random integer number in the range specified by the arguments.\r\n *\r\n * @example\r\n * random(1, 5); // 3\r\n * random(1, 5); // 1\r\n */\r\nexport function random(start, end) {\r\n  validate([start, end], ['intLike', 'intLike'], 'random');\r\n\r\n  if (end <= start) {\r\n    throw new Error('The second argument must be greater than the first!', 'random');\r\n  }\r\n\r\n  return Math.floor(rand(start, end + 1));\r\n}\r\n\r\nexport default Num;\r\n","/**\n * @module Str\n * @private\n * @mixin\n * @description Exports Str class.\n */\n\nimport D from './D';\nimport Super from './Super';\nimport constructors from './constants/constructors';\nimport regexpSpecialCharacters from './constants/regexpSpecialCharacters';\nimport {\n  isFunction, isNumberLike, isObject, isString,\n  validate, Symbol, defineProperties, iterate\n} from './helpers';\n\nconst htmlSpecials = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;'\n};\nconst regexpSpecialsRegexp = new RegExp(\n  new Super(regexpSpecialCharacters)\n    .word((x) => `\\\\${ x }|`)\n    .replace(/\\|$/, ''),\n  'g'\n);\n\n/**\n * @class Str\n * @extends Super\n * @public\n * @param {String} [string = ''] - A string to wrap.\n * @returns {Str} Instance of Str.\n * @description Wrap of a string.\n *\n * @example\n * const s = new Num('1');\n */\nexport class Str extends Super {\n  constructor(string = '') {\n    super(string);\n\n    /**\n     * @member Str#$\n     * @type {String}\n     * @public\n     * @description Original string.\n     */\n  }\n\n  /**\n   * @method Str#capitalizeFirst\n   * @public\n   * @returns {Str} Capitalized string.\n   * @description Method capitalizing the first symbol.\n   *\n   * @example\n   * new Str('foo').capitalizeFirst().$; // 'Foo'\n   */\n  capitalizeFirst() {\n    const string = this.$;\n\n    return new Str(string.slice(0, 1).toUpperCase() + string.slice(1));\n  }\n\n  /**\n   * @method Str#endsWith\n   * @public\n   * @param {String} searchString - See the link.\n   * @param {Number} [position = string.length] - See the link.\n   * @returns {Boolean} If the string ends with the argument string.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n   * @description Synonym for\n   * [String#endsWith]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith}.\n   */\n  endsWith(searchString, position) {\n    if (arguments.length < 2) {\n      position = this.$.length;\n    }\n\n    return this\n      .slice(0, position)\n      .revert()\n      .startsWith(new Str(searchString).revert().$);\n  }\n\n  /**\n   * @method Str#escapeHTML\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Methods escaping \"&\", \"<\" and \">\" symbols.\n   *\n   * @example\n   * new Str('\"1 < 2\" & \"7 > 4\" are true expressions.').escapeHTML().$;\n   * // '\"1 &lt; 2\" &amp \"7 &gt; 2\" are true expressions.'\n   */\n  escapeHTML() {\n    let string = this.$;\n\n    iterate(htmlSpecials, (escaped, symbol) => {\n      string = string.replace(new RegExp(symbol, 'g'), escaped);\n    });\n\n    return new Str(string);\n  }\n\n  /**\n   * @method Str#escapeRegExp\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Method escaping RegExp special characters.\n   *\n   * @example\n   * new Str('(213.98 - [] {})').escapeRegExp().$; // '\\(213\\.98 \\- \\[\\] \\{\\}\\)'\n   */\n  escapeRegExp() {\n    return this.replace(regexpSpecialsRegexp, '\\\\$&');\n  }\n\n  /**\n   * @method Str#in\n   * @public\n   * @param {*} object - Object to check the string as a property in.\n   * @returns {Boolean} If it is in the object or not.\n   * @description Returns string in object.\n   *\n   * @example\n   * new Str('a').in({ a: 1 }); // true\n   * new Str('toFixed').in(1);  // false\n   * new Str('a').in(null);     // false\n   */\n  in(object) {\n    if (!isObject(object)) {\n      return false;\n    }\n\n    return this.$ in object;\n  }\n\n  /**\n   * @method Str#indexOf\n   * @public\n   * @param {String} searchValue - See the link.\n   * @param {Number} [fromIndex = 0] - See the link.\n   * @returns {Number} Found index or -1.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf\n   * @description Synonym for\n   * [String#indexOf]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf}.\n   */\n  indexOf(searchValue, fromIndex) {\n    return this.$.indexOf.apply(this.$, arguments);\n  }\n\n  /**\n   * @method Str#lastIndexOf\n   * @public\n   * @param {String} searchValue - See the link.\n   * @param {Number} [fromIndex = string.length] - See the link.\n   * @returns {Number} Found index or -1.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf\n   * @description Synonym for\n   * [String#lastIndexOf]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf}.\n   */\n  lastIndexOf(searchValue, fromIndex) {\n    return this.$.lastIndexOf.apply(this.$, arguments);\n  }\n\n  /**\n   * @member Str#length\n   * @type {Number}\n   * @public\n   * @readonly\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/length\n   * @description Synonym for\n   * [String#length]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/length}.\n   */\n  get length() {\n    return this.$.length;\n  }\n\n  /**\n   * @method Str#match\n   * @public\n   * @returns {Arr|Super} D-Wrap of found match.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/match\n   * @description Synonym for\n   * [String#match]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/match}.\n   */\n  match(regexp) {\n    return D(this.$.match.apply(this.$, arguments));\n  }\n\n  /**\n   * @method Str#repeat\n   * @public\n   * @param {Integer} times - Times to repeat the string.\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n   * @description Synonym for\n   * [String#repeat]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/repeat}.\n   *\n   * @example\n   * new Str('123').repeat(2).$; // '123123'\n   * new Str('123').repeat(0).$; // ''\n   */\n  repeat(times) {\n    validate([times], [['intLike', '>=0']], 'Str#repeat');\n\n    times = +times;\n\n    const string = this.$;\n\n    let s = '';\n\n    for (let i = 0; i < times; i++) {\n      s += string;\n    }\n\n    return new Str(s);\n  }\n\n  /**\n   * @method Str#replace\n   * @public\n   * @param {RegExp|String} regexp - See the link.\n   * @param {String|Function} [replacer = ''] - See the link.\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/replace\n   * @description Synonym for\n   * [String#replace]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/replace}\n   * besides that replacer has a default value of ''.\n   */\n  replace(regexp, replacer = '') {\n    return new Str(this.$.replace(regexp, replacer));\n  }\n\n  /**\n   * @method Str#replaceString\n   * @public\n   * @param {String} string - String to replace.\n   * @param {String} [replacer = ''] - String to replace with.\n   * @returns {Str} New instance of Str.\n   * @description Method for global string replaceing.\n   *\n   * @example\n   * new Str('123123').replaceString('1', '4').$; // '423423'\n   * new Str('123123').replaceString('1').$;      // '2323'\n   */\n  replaceString(string, replacer = '') {\n    string = new Super(string).$;\n\n    validate([string], ['string'], 'Str#replaceString');\n\n    return new Str(this.$.split(string).join(replacer));\n  }\n\n  /**\n   * @method Str#revert\n   * @public\n   * @returns {Str} New instance of string.\n   * @description Method for reverting a string.\n   *\n   * @example\n   * new Str('1234').revert().$; // '4321'\n   */\n  revert() {\n    const string = this.$;\n    let str = '';\n\n    for (let i = string.length - 1; i >= 0; i--) {\n      str += string[i];\n    }\n\n    return new Str(str);\n  }\n\n  /**\n   * @method Str#search\n   * @public\n   * @param {RegExp} regexp - See the link.\n   * @returns {Number} Index of the first match, if found, and -1 if not.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/search\n   * @description Synonym for\n   * [String#search]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/search}.\n   */\n  search(regexp) {\n    validate([regexp], ['regexp']);\n\n    return this.$.search.apply(this.$, arguments);\n  }\n\n  /**\n   * @method Str#slice\n   * @public\n   * @param {Number} [beginSlice = 0] - See the link.\n   * @param {Number} [endSlice = string.length] - See the link.\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/slice\n   * @description Synonym for\n   * [String#slice]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/slice}.\n   */\n  slice(beginSlice, endSlice) {\n    return new Str(this.$.slice.apply(this.$, arguments));\n  }\n\n  /**\n   * @method Str#split\n   * @public\n   * @param {RegExp|String} [separator] - See the link.\n   * @returns {Arr|Super} D-Wrap of the array.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/split\n   * @description Synonym for\n   * [String#split]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/split}.\n   */\n  split(separator) {\n    return D(this.$.split.apply(this.$, arguments));\n  }\n\n  /**\n   * @method Str#startsWith\n   * @public\n   * @param {String} searchString - See the link.\n   * @param {Number} [position = 0] - See the link.\n   * @returns {Boolean} If the string ends with the argument string.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n   * @description Synonym for\n   * [String#startsWith]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith}.\n   */\n  startsWith(searchString, position = 0) {\n    return this.$.indexOf.apply(this.$, arguments) === position;\n  }\n\n  /**\n   * @method Str#substr\n   * @public\n   * @param {Number} [start = 0] - See the link.\n   * @param {Number} [length = string.length] - See the link.\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/substr\n   * @description Synonym for\n   * [String#substr]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/substr}.\n   */\n  substr(start, length) {\n    return new Str(this.$.substr.apply(this.$, arguments));\n  }\n\n  /**\n   * @method Str#substring\n   * @public\n   * @param {Number} [indexStart = 0] - See the link.\n   * @param {Number} [indexEnd = string.length] - See the link.\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/substring\n   * @description Synonym for\n   * [String#substring]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/substring}.\n   */\n  substring(indexStart, indexEnd) {\n    return new Str(this.$.substring.apply(this.$, arguments));\n  }\n\n  /**\n   * @method Str#toCamelCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Removes following regexp /\\s\\-_\\./ making the string camel cased.\n   *\n   * @example\n   * new Str('spinal-case').toCamelCase().$;  // 'spinalCase'\n   * new Str('_snake_case_').toCamelCase().$; // 'snakeCase'\n   */\n  toCamelCase() {\n    return new Str(trim(this.$)\n      .replace(/[\\s\\-_\\.]+/g, '-')\n      .replace(/\\-[^\\-]/g, (match) => match[1].toUpperCase())\n      .replace(/^[\\S]/, (match) => match.toLowerCase())\n    );\n  }\n\n  /**\n   * @method Str#toCapitalCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Removes following regexp /\\-_\\./ making the string capital letter cased.\n   *\n   * @example\n   * new Str('spinal-case').toCapitalCase().$;  // 'Spinal Case'\n   * new Str('_snake_case_').toCapitalCase().$; // 'Snake Case'\n   */\n  toCapitalCase() {\n    return new Str(trim(this.$)\n      .replace(/[\\s\\-_\\.]+/g, ' ')\n      .replace(/[\\S]/g, (match) => (\n        match.toLowerCase() === match ? match : ` ${ match }`\n      ))\n      .replace(/\\s[\\S]/g, (match) => match.toUpperCase())\n      .replace(/\\s+/g, ' ')\n      .replace(/^\\s/, '')\n      .replace(/^[\\S]/, (match) => match.toUpperCase())\n    );\n  }\n\n  /**\n   * @method Str#toDotCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Removes following regexp /\\-_\\./ making the string dot cased.\n   *\n   * @example\n   * new Str('spinal-case').toDotCase().$;  // 'spinal.case'\n   * new Str('_snake_case_').toDotCase().$; // 'snake.case'\n   */\n  toDotCase() {\n    return new Str(trim(this.$)\n      .replace(/[\\s\\-_\\.]+/g, '.')\n      .replace(/[^\\.]/g, (match) => (\n        match.toLowerCase() === match ? match : `.${ match }`\n      ))\n      .replace(/\\.+/g, '.')\n      .replace(/^\\./, '')\n      .toLowerCase()\n    );\n  }\n\n  /**\n   * @method Str#toHyphenCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Removes following regexp /\\s\\-_\\./ making the string camel cased.\n   *\n   * @example\n   * new Str('camelCase').toSpinalCase().$;    // 'camel-case'\n   * new Str('_snake_case_').toSpinalCase().$; // 'snake-case'\n   */\n  toHyphenCase() {\n    return new Str(trim(this.$)\n      .replace(/[\\s\\-_\\.]+/g, '-')\n      .replace(/[^\\-]/g, (match) => (\n        match.toLowerCase() === match ? match : `-${ match }`\n      ))\n      .replace(/\\-+/g, '-')\n      .replace(/^\\-/, '')\n      .toLowerCase()\n    );\n  }\n\n  /**\n   * @method Str#toLowerCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase\n   * @description Synonym for\n   * [String#toLowerCase]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase}.\n   *\n   * @example\n   * new Str('UPPER-CASE').toLowerCase().$;  // 'upper-case'\n   */\n  toLowerCase() {\n    return new Str(this.$.toLowerCase());\n  }\n\n  /**\n   * @method Str#toSnakeCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Removes following regexp /\\s\\-\\./ making the string spinal cased.\n   *\n   * @example\n   * new Str('spinal-case').toSnakeCase().$; // 'spinal_case'\n   * new Str('camelCase').toSnakeCase().$;   // 'camel_case'\n   */\n  toSnakeCase() {\n    return new Str(trim(this.$)\n      .replace(/[\\s\\-_\\.]+/g, '_')\n      .replace(/[^_]/g, (match) => (\n        match.toLowerCase() === match ? match : `_${ match }`\n      ))\n      .replace(/_+/g, '_')\n      .replace(/^_/, '')\n      .toLowerCase()\n    );\n  }\n\n  /**\n   * @method Str#toSpaceCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @description Removes following regexp /\\-_\\./ making the string space cased.\n   *\n   * @example\n   * new Str('spinal-case').toSpaceCase().$;  // 'spinal case'\n   * new Str('_snake_case_').toSpaceCase().$; // 'snake case'\n   */\n  toSpaceCase() {\n    return new Str(trim(this.$)\n      .replace(/[\\s\\-_\\.]+/g, ' ')\n      .replace(/[\\S]/g, (match) => (\n        match.toLowerCase() === match ? match : ` ${ match }`\n      ))\n      .replace(/\\s+/g, ' ')\n      .replace(/^\\s/, '')\n      .toLowerCase()\n    );\n  }\n\n  toString() {\n    return this.$;\n  }\n\n  /**\n   * @method Str#toUpperCase\n   * @public\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase\n   * @description Synonym for\n   * [String#toUpperCase]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase}.\n   *\n   * @example\n   * new Str('lower-case').toUpperCase().$;  // 'LOWER-CASE'\n   */\n  toUpperCase() {\n    return new Str(this.$.toUpperCase());\n  }\n\n  /**\n   * @method Str#trim\n   * @public\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trim\n   * @description Synonym for\n   * [String#trim]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trim}.\n   */\n  trim() {\n    return new Str(this.$.replace(/^[\\s\\ufeff\\u00a0]+|[\\s\\ufeff\\u00a0]+$/g, ''));\n  }\n\n  /**\n   * @method Str#trimLeft\n   * @public\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trimLeft\n   * @description Synonym for\n   * [String#trimLeft]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trimLeft}.\n   */\n  trimLeft() {\n    return new Str(this.$.replace(/^[\\s\\ufeff\\u00a0]+/, ''));\n  }\n\n  /**\n   * @method Str#trimRight\n   * @public\n   * @returns {Str} New instance of Str.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trimRight\n   * @description Synonym for\n   * [String#trimRight]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/trimRight}.\n   */\n  trimRight() {\n    return new Str(this.$.replace(/[\\s\\ufeff\\u00a0]+$/, ''));\n  }\n}\n\ndefineProperties(Str.prototype, {\n  [Symbol.toStringTag]: 'Str'\n});\n\nfunction trim(string) {\n  return string.replace(/^[\\s\\-_\\.]+|[\\s\\-_\\.]+$/g, '');\n}\n\n/**\n * @function parseJSON\n * @public\n * @param {String} [json = null] - String to parse.\n * @param {Object} [options] - Options.\n * @param {Boolean|*} [options.numbers] - If it is needed to parse number-like strings as numbers.\n * @param {Boolean|*} [options.dates] - If it is needed to parse date-like string as dates.\n * Date-like string is considered to match ^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d\\.\\d\\d\\dZ?$\n * @param {JSONCallback} [callback] - Callback that called on every iteration.\n * @returns {DWrap} D-Wrap of found match.\n * @description Method for parsing json.\n *\n * @example\n * parseJSON('{ \"a\": 1 }').$;                                           // { a: 1 }\n * parseJSON('{ \"a\": \"1\" }', { numbers: true }).$;                      // { numbers: true }\n * parseJSON('{ \"a\": \"1999-12-31T23:59:59.999Z\" }', { dates: true }).$; // { a: Date {...} }\n */\nexport function parseJSON(json = null, options = {}, callback) {\n  if (arguments.length <= 1) {\n    return D(JSON.parse(json));\n  }\n\n  if (isFunction(options)) {\n    callback = options;\n    options = {};\n  }\n\n  const { numbers, dates } = options;\n  const parsed = JSON.parse(json, function (key, value) {\n    if (dates && /^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d\\.\\d\\d\\dZ?$/.test(value)) {\n      value = new Date(value);\n    } else if (numbers && isNumberLike(value) && isString(value)) {\n      value = Number(value);\n    }\n\n    return callback ? callback.apply(this, arguments) : value;\n  });\n\n  return D(parsed);\n}\n\nconstructors[2].push({\n  check: isString,\n  cls: Str\n});\n\nexport default Str;\n","/**\r\n * @module constants/formats\r\n * @private\r\n * @description Exports different types of formatting for {@link Date#format}.\r\n */\r\n\r\nimport Super from '../Super';\r\nimport Str from '../Str';\r\n\r\nconst zero = new Str('0');\r\nconst daysOfTheWeekNames = [\r\n  'Sunday',\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday'\r\n];\r\nconst daysOfTheWeekAliases = new Super(daysOfTheWeekNames).map((value) => value.slice(0, 3)).$;\r\nconst monthsNames = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'Jule',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December'\r\n];\r\nconst monthsAliases = new Super(monthsNames).map((value) => value.slice(0, 3)).$;\r\n\r\n/**\r\n * @callback module:constants/formats~matchCallback\r\n * @param {Dat} date - D-wrap of a date to apply format to.\r\n * @param {String} string - Matched applied expression.\r\n */\r\n\r\n/**\r\n * @typedef {Object} module:constants/formats~formatExpr\r\n * @property {String} format - Matched format.\r\n * @property {module:constants/formats~matchCallback} match - Callback if there was a match.\r\n */\r\n\r\n/**\r\n * @type {module:constants/formats~formatExpr[]}\r\n * @description Array of different formats.\r\n */\r\nexport default [\r\n  {\r\n    format: 'ccc',\r\n    match: (date, utc) => round(date[utc]('c'), 3)\r\n  },\r\n  {\r\n    format: 'c',\r\n    match: (date, utc) => date[utc]('c')\r\n  },\r\n  {\r\n    format: 'ss',\r\n    match: (date, utc) => round(date[utc]('s'), 2)\r\n  },\r\n  {\r\n    format: 's',\r\n    match: (date, utc) => date[utc]('s')\r\n  },\r\n  {\r\n    format: 'mm',\r\n    match: (date, utc) => round(date[utc]('m'), 2)\r\n  },\r\n  {\r\n    format: 'm',\r\n    match: (date, utc) => date[utc]('m')\r\n  },\r\n  {\r\n    format: 'hh',\r\n    match: (date, utc) => round(date[utc]('h'), 2)\r\n  },\r\n  {\r\n    format: 'h',\r\n    match: (date, utc) => date[utc]('h')\r\n  },\r\n  {\r\n    format: 'dddd',\r\n    match: (date, utc) => daysOfTheWeekNames[date[utc]('dw')]\r\n  },\r\n  {\r\n    format: 'ddd',\r\n    match: (date, utc) => daysOfTheWeekAliases[date[utc]('dw')]\r\n  },\r\n  {\r\n    format: 'dd',\r\n    match: (date, utc) => round(date[utc]('d'), 2)\r\n  },\r\n  {\r\n    format: 'd',\r\n    match: (date, utc) => date[utc]('d')\r\n  },\r\n  {\r\n    format: 'MMMM',\r\n    match: (date, utc) => monthsNames[date[utc]('M') - 1]\r\n  },\r\n  {\r\n    format: 'MMM',\r\n    match: (date, utc) => monthsAliases[date[utc]('M') - 1]\r\n  },\r\n  {\r\n    format: 'MM',\r\n    match: (date, utc) => round(date[utc]('M'), 2)\r\n  },\r\n  {\r\n    format: 'M',\r\n    match: (date, utc) => date[utc]('M')\r\n  },\r\n  {\r\n    format: 'yyyy',\r\n    match: (date, utc) => round(date[utc]('y'), 4)\r\n  },\r\n  {\r\n    format: 'yy',\r\n    match: (date, utc) => String(date[utc]('y')).slice(-2)\r\n  },\r\n  {\r\n    format: 'y',\r\n    match: (date, utc) => date[utc]('y')\r\n  }\r\n];\r\n\r\n/**\r\n * @function round\r\n * @private\r\n * @param {Number} number - Number to round.\r\n * @param {Number} digits - Number of the digits of the output.\r\n * @returns {String} String with necessary additional starting zeroes.\r\n */\r\nfunction round(number, digits) {\r\n  const string = String(number);\r\n  let zeroes = digits - string.length;\r\n\r\n  zeroes = zeroes < 0 ? 0 : zeroes;\r\n\r\n  return zero.repeat(zeroes).$ + string;\r\n}\r\n","/**\n * @module Dat\n * @private\n * @mixin\n * @description Exports Dat class.\n */\n\nimport Super from './Super';\nimport Num from './Num';\nimport Str from './Str';\nimport { switcher } from './Switcher';\nimport constructors from './constants/constructors';\nimport formats from './constants/formats';\nimport { isDate, iterate, Symbol, defineProperties } from './helpers';\n\n/**\n * @typedef {*} DateLike\n * @public\n */\n\n/**\n * @typedef {'c'|'s'|'m'|'h'|'d'|'w'|'M'|'y'} AddPeriod\n * @public\n */\n\n/**\n * @typedef {'c'|'s'|'m'|'h'|'d'|'dw'|'M'|'y'} GetPeriod\n * @public\n */\n\n/**\n * @typedef {'c'|'s'|'m'|'h'|'d'|'M'|'y'} OfOnePeriod\n * @public\n */\n\n/**\n * @typedef {'c'|'s'|'m'|'h'|'d'|'M'|'y'} SetPeriod\n * @public\n */\n\n/**\n * @typedef {'ccc'|'c'|'ss'|'s'|'mm'|'m'|'hh'|'h'|'dddd'|'ddd'|'dd'|'d'|'MMMM'|'MMM'|'MM'|'M'|'yyyy'|'yy'|'y'} Format\n * @public\n */\n\nconst coeffs = {\n  c: 1,\n  s: 1000,\n  m: 60000,\n  h: 3600000,\n  d: 86400000,\n  w: 604800000,\n  M: 2592000000,\n  y: 31536000000\n};\n\nconst getSwitcher = switcher({\n  c: (date, utc) => date[`${ utc }Milliseconds`](),\n  s: (date, utc) => date[`${ utc }Seconds`](),\n  m: (date, utc) => date[`${ utc }Minutes`](),\n  h: (date, utc) => date[`${ utc }Hours`](),\n  d: (date, utc) => date[`${ utc }Date`](),\n  dw: (date, utc) => date[`${ utc }Day`](),\n  M: (date, utc) => date[`${ utc }Month`]() + 1,\n  y: (date, utc) => date[`${ utc }FullYear`]()\n}, 'equals', NaN);\nconst setSwitcher = switcher({\n  c: (date, value, utc) => date[`${ utc }Milliseconds`](value),\n  s: (date, value, utc) => date[`${ utc }Seconds`](value),\n  m: (date, value, utc) => date[`${ utc }Minutes`](value),\n  h: (date, value, utc) => date[`${ utc }Hours`](value),\n  d: (date, value, utc) => date[`${ utc }Date`](value),\n  M: (date, value, utc) => date[`${ utc }Month`](value - 1),\n  y: (date, value, utc) => date[`${ utc }FullYear`](value)\n});\n\n/**\n * @class Dat\n * @extends Super\n * @public\n * @param {Date} [date = new Date()] - A date to wrap.\n * @returns {Dat} Instance of Dat.\n * @description Wrap of a date.\n *\n * @example\n * const date = new Dat(new Date());\n */\nexport class Dat extends Super {\n  constructor(date = new Date()) {\n    super(date);\n\n    /**\n     * @member Dat#$\n     * @type {Date}\n     * @public\n     * @description Original date.\n     */\n  }\n\n  /**\n   * @method Dat#add\n   * @public\n   * @param {AddPeriod|Object.<AddPeriod, Number>} what - What to add.\n   * @param {Number} [number] - Number of what to add if the first argument is a period string.\n   * @returns {Dat} Returns this.\n   * @description Method for adding amounts of time to the date. Returns new instance of Dat.\n   *\n   * @example\n   * new Dat(new Date('1999-12-31T23:59:59.999Z')).add('c', 2).toISOString();         // '2000-01-01T00:00:00.001Z'\n   * new Dat(new Date('1999-12-31T23:59:59.999Z')).add({ c: 2, d: 5 }).toISOString(); // '2000-01-06T00:00:00.001Z'\n   */\n  add(what, number) {\n    if (arguments.length >= 2) {\n      what = { [what]: number };\n    }\n\n    return this.time(this.time() + new Super(what).sum((value, what) => coeffs[what] * value));\n  }\n\n  /**\n   * @method Dat#expires\n   * @public\n   * @param {*} [value = this] - Value to resolve after the date expires.\n   * @returns {Promise} New instance of Promise.\n   * @description Method for defining when the date expires.\n   *\n   * @example\n   * new Dat().add('c', 500).expires('Expired').then((value) => {\n   *   // After 500 milliseconds\n   *   console.log(value); // 'Expired'\n   * });\n   */\n  expires(value) {\n    if (!arguments.length) {\n      value = this;\n    }\n\n    return new Num(this.$ - now()).timeout(value);\n  }\n\n  /**\n   * @method Dat#format\n   * @public\n   * @param {String} string - Template for the output.\n   * @param {String} [prefix = ''] - If needed [all special strings]{@link Format}\n   * are treated as they should be prefix with prefix.\n   * @returns {String} Formatted string.\n   * @description Method for creating formatted output based on a string.\n   *\n   * @example\n   * new Dat('1999-12-31T23:59:59.999Z').format('Seconds: $ss, milliseconds: $ccc.', '$');\n   * // 'Seconds: 59, milliseconds: 999.'\n   */\n  format(string, prefix = '') {\n    string = new Str(new Super(string).$);\n    prefix = String(new Super(prefix).$);\n\n    iterate(formats, (format) => {\n      string = string.replaceString(prefix + format.format, format.match(this, 'get'));\n    });\n\n    return string.$;\n  }\n\n  /**\n   * @method Dat#formatUTC\n   * @public\n   * @param {String} string - See {@link Dat#format}.\n   * @param {String} [prefix = ''] - See {@link Dat#format}.\n   * @returns {String} Formatted string.\n   * @description UTC version of {@link Dat#format}.\n   *\n   * @example\n   * new Dat('1999-07-07T03:09:09.099Z').formatUTC(\n   *   `\n   *     Milliseconds: $ccc|$c.\n   *     Seconds:      $ss|$s.\n   *     Minutes:      $mm|$m.\n   *     Hours:        $hh|$h.\n   *     Day:          $dddd|$ddd|$dd|$d.\n   *     Month:        $MMMM|$MMM|$MM|$M.\n   *     Year:         $yyyy|$yy|$y.\n   *   `,\n   *   '$'\n   * );\n   * // Milliseconds: 099|99.\n   * // Seconds:      09|9.\n   * // Minutes:      09|9.\n   * // Hours:        03|3.\n   * // Day:          Friday|Fri|07|7.\n   * // Month:        July|Jul|07|7.\n   * // Year:         1999|99|1999.\n   */\n  formatUTC(string, prefix = '') {\n    string = new Str(new Super(string).$);\n    prefix = String(new Super(prefix).$);\n\n    iterate(formats, (format) => {\n      string = string.replaceString(prefix + format.format, format.match(this, 'getUTC'));\n    });\n\n    return string.$;\n  }\n\n  /**\n   * @method Dat#get\n   * @public\n   * @param {GetPeriod} what - What to get.\n   * @returns {Number} Number of what to get.\n   * @description Method for getting values such as seconds or minutes.\n   *\n   * @example\n   * new Dat(new Date('1999-12-31T23:59:59.999Z')).get('s'); // 59\n   */\n  get(what) {\n    return getSwitcher(what, [this.$, 'get']);\n  }\n\n  /**\n   * @method Dat#getUTC\n   * @public\n   * @param {GetPeriod} what - See {@link Dat#get}.\n   * @returns {Number} Number of what to get.\n   * @description UTC version of {@link Dat#get}.\n   *\n   * @example\n   * const date = new Dat(new Date('1999-12-31T23:59:59.999Z'));\n   *\n   * date.getUTC('c');  // 999\n   * date.getUTC('s');  // 59\n   * date.getUTC('m');  // 59\n   * date.getUTC('h');  // 23\n   * date.getUTC('d');  // 31\n   * date.getUTC('dw'); // 5\n   * date.getUTC('M');  // 12\n   * date.getUTC('y');  // 1999\n   */\n  getUTC(what) {\n    return getSwitcher(what, [this.$, 'getUTC']);\n  }\n\n  /**\n   * @method Dat#isAfter\n   * @public\n   * @param {DateLike} date - Date to be compared to this date.\n   * @returns {Boolean} If this date is after the argument one.\n   * @description Finds out if this date is after the argument one.\n   *\n   * @example\n   * new Dat(new Date(333)).isAfter(new Date(334)); // false\n   * new Dat(new Date(333)).isAfter(new Date(332)); // true\n   */\n  isAfter(date) {\n    date = new Date(new Super(date).$);\n\n    return date.getTime() < this.$.getTime();\n  }\n\n  /**\n   * @method Dat#isBefore\n   * @public\n   * @param {DateLike} date - Date to be compared to this date.\n   * @returns {Boolean} If this date is before the argument one.\n   * @description Finds out if this date is before the argument one.\n   *\n   * @example\n   * new Dat(new Date(333)).isBefore(new Date(334)); // true\n   * new Dat(new Date(333)).isBefore(new Date(332)); // false\n   */\n  isBefore(date) {\n    date = new Date(new Super(date).$);\n\n    return date.getTime() > this.$.getTime();\n  }\n\n  /**\n   * @method Dat#isBetween\n   * @public\n   * @param {DateLike} date1 - Start of the range.\n   * @param {DateLike} date2 - End of the range.\n   * @returns {Boolean} If this date is after date1 and before date2.\n   * @description Finds out if this date is after date1 and before date2.\n   *\n   * @example\n   * new Dat(new Date(333)).isBetween(new Date(332), new Date(334)); // true\n   * new Dat(new Date(333)).isBetween(new Date(334), new Date(332)); // false\n   */\n  isBetween(date1, date2) {\n    const time = this.$.getTime();\n\n    date1 = new Date(new Super(date1).$);\n    date2 = new Date(new Super(date2).$);\n\n    return time > date1.getTime() && time < date2.getTime();\n  }\n\n  /**\n   * @method Dat#isInvalid\n   * @public\n   * @returns {Boolean} If the date is invalid.\n   * @description Returns if the date is invalid.\n   *\n   * @example\n   * new Dat(new Date('a')).isInvalid(); // true\n   * new Dat(new Date(1)).isInvalid();   // false\n   */\n  isInvalid() {\n    return this.$.toString() === 'Invalid Date';\n  }\n\n  /**\n   * @method Dat#isPassed\n   * @public\n   * @returns {Boolean} If the date is passed.\n   * @description Returns if the date is passed.\n   *\n   * @example\n   * new Dat(new Date(1)).isPassed(); // true\n   */\n  isPassed() {\n    return this.isBefore(now());\n  }\n\n  /**\n   * @method Dat#ofOne\n   * @public\n   * @param {OfOnePeriod} what - Period to check.\n   * @param {DateLike} date - Date to check.\n   * @returns {Boolean} If two dates are of one second, minute or something else.\n   * @description Returns if two dates are of one second, minute or something else.\n   *\n   * @example\n   * new Dat(new Date('1999-12-31T23:59:59.000Z')).ofOne('s', new Date(1999-12-31T23:59:59.333Z')); // true\n   * new Dat(new Date('1999-12-31T23:59:59.000Z')).ofOne('s', new Date(1999-12-31T23:59:58.999Z')); // false\n   */\n  ofOne(what, date) {\n    if (!(what in coeffs) || what === 'w') {\n      return false;\n    }\n\n    date = new Dat(new Date(date));\n\n    let started;\n\n    return iterate(coeffs, (coeff, w) => {\n      if (w === what) {\n        started = true;\n      }\n\n      if (!started || w === 'w') {\n        return;\n      }\n\n      if (started && this.get(w) !== date.get(w)) {\n        return false;\n      }\n    }) !== false;\n  }\n\n  /**\n   * @method Dat#set\n   * @public\n   * @param {SetPeriod|Object.<SetPeriod, Number>} what - What to add.\n   * @param {Number} [number] - Number of what to set if the first argument is a period string.\n   * @returns {Dat} Returns this.\n   * @description Method for setting values such as seconds or minutes.\n   *\n   * @example\n   * new Dat(new Date('1999-12-31T23:59:59.999Z')).set('s', 58).get('s');           // 58\n   * new Dat(new Date('1999-12-31T23:59:59.999Z')).set({ c: 998, s: 58 }).get('c'); // 998\n   */\n  set(what, number) {\n    const date = this.$;\n\n    if (arguments.length >= 2) {\n      what = { [what]: number };\n    }\n\n    what = new Super(what).$;\n\n    iterate(what, (value, what) => {\n      setSwitcher(what, [date, value, 'set']);\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Dat#setUTC\n   * @public\n   * @param {SetPeriod|Object.<SetPeriod, Number>} what - See {@link Dat#set}.\n   * @param {Number} [number] - See {@link Dat#set}.\n   * @returns {Dat} Returns this.\n   * @description UTC version of {@link Dat#set}.\n   *\n   * @example\n   * const date = new Dat(new Date('1999-12-31T23:59:59.999Z'));\n   *\n   * date.setUTC('ccc', 998).getUTC('ccc'); // 998\n   * date.setUTC({\n   *   s: 58,\n   *   m: 58,\n   *   h: 22\n   * });\n   *\n   * date.getUTC('s'); // 58\n   * date.getUTC('m'); // 58\n   * date.getUTC('h'); // 23\n   */\n  setUTC(what, number) {\n    const date = this.$;\n\n    if (arguments.length >= 2) {\n      what = { [what]: number };\n    }\n\n    what = new Super(what).$;\n\n    iterate(what, (value, what) => {\n      setSwitcher(what, [date, value, 'setUTC']);\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Dat#setUTC\n   * @public\n   * @param {Number} [time] - Time to set.\n   * @returns {Dat|Number} - If the time argument is present this is returned otherwise the time is returned.\n   * @description Synonym for both\n   * [Date#getTime]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime} and\n   * [Date#setTime]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/setTime}.\n   */\n  time(time) {\n    const date = this.$;\n\n    if (arguments.length) {\n      date.setTime(time);\n    }\n\n    return date.getTime();\n  }\n\n  toISOString() {\n    return this.$.toISOString();\n  }\n\n  toLocaleString() {\n    return this.$.toLocaleString();\n  }\n\n  toString() {\n    return this.$.toString();\n  }\n\n  valueOf() {\n    return this.$.valueOf();\n  }\n}\ndefineProperties(Dat.prototype, {\n  [Symbol.toStringTag]: 'Dat'\n});\n\nconstructors[1].push({\n  check: isDate,\n  cls: Dat\n});\n\n/**\n * @function now\n * @public\n * @returns {Number} Number of milliseconds.\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/now\n * @description Synonym for\n * [Date.now]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/now}.\n */\nexport function now() {\n  return Date.now();\n}\n\n/**\n * @function date\n * @public\n * @param {DateLike} [date = new Date()] - Date-like value that is passed to the Date constructor.\n * @returns {Dat} New instance of Dat.\n * @description Synonym for new Dat(new Date(date));\n */\nexport function date(date) {\n  if (!arguments.length) {\n    return new Dat(new Date(now()));\n  }\n\n  date = new Super(date).$;\n\n  return new Dat(new Date(date));\n}\n\nexport default Dat;\n","/**\r\n * @module helpers/constructURL\r\n * @private\r\n * @description Exports constructURL method.\r\n */\r\n\r\nimport Arr from '../Arr';\r\nimport Str from '../Str';\r\nimport { switcher } from '../Switcher';\r\nimport { isArray, isObject, isPlainObject } from './checkTypes';\r\nimport { iterate } from './iterate';\r\n\r\n/**\r\n * @type {RegExp}\r\n * @description Absolute URL pattern.\r\n */\r\nconst absoluteURLRegexp = /^(([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\/|data:[a-z]+\\/[a-z]+;base64,)/i;\r\nconst querySwitcher = switcher('call', () => new Arr([]))\r\n  .case(isArray, (prefix, query) => {\r\n    let queryParams = new Arr([]);\r\n\r\n    iterate(query, (value) => {\r\n      if (isPlainObject(value) || isArray(value)) {\r\n        queryParams = queryParams.concat(querySwitcher(value, [`${ prefix }[]`]));\r\n\r\n        return;\r\n      }\r\n\r\n      queryParams.push({\r\n        param: `${ prefix }[]`,\r\n        value\r\n      });\r\n    });\r\n\r\n    return queryParams.$;\r\n  })\r\n  .case(isPlainObject, (prefix, query) => {\r\n    let queryParams = new Arr([]);\r\n\r\n    iterate(query, (value, param) => {\r\n      if (isPlainObject(value) || isArray(value)) {\r\n        queryParams = queryParams.concat(querySwitcher(value, [prefix ? `${ prefix }[${ param }]` : param]));\r\n\r\n        return;\r\n      }\r\n\r\n      queryParams.push({\r\n        param: prefix ? `${ prefix }[${ param }]` : param,\r\n        value: isObject(value) ? JSON.stringify(value) : String(value)\r\n      });\r\n    });\r\n\r\n    return queryParams.$;\r\n  });\r\n\r\n/**\r\n * @function constructURL\r\n * @param {String} baseURL - BaseURL of the output URL.\r\n * @param {String} url - Main part of the output URL.\r\n * @param {Object} params - Params to replace in the url expressions like \":param\".\r\n * @param {Object} query - Object with query params.\r\n * @param {Object} [hash = ''] - URL hash.\r\n * @param {Object} [encodeOptions = {}] - If you need to encode something.\r\n * @param {Object} [encodeOptions.params = true] - If you need to encode params.\r\n * @param {Object} [encodeOptions.query = true] - If you need to encode query params.\r\n * @returns {String} Constructed URL.\r\n * @description Function for constructing URL from the base URL, URL, params and query params.\r\n */\r\nexport default (baseURL, url, params, query, hash = '', encodeOptions = {}) => {\r\n  const {\r\n    params: encodeParams = true,\r\n    query: encodeQuery = true\r\n  } = encodeOptions;\r\n  let URL = isAbsolute(url)\r\n    ? url\r\n    : `${ String(baseURL).replace(/\\/+$/, '') }/${ String(url).replace(/^\\/+/, '') }`;\r\n\r\n  iterate(params, (value, param) => {\r\n    URL = new Str(URL).replaceString(`:${ param }`, encode(value, encodeParams)).$;\r\n  });\r\n\r\n  const queryParams = querySwitcher(query, ['']);\r\n\r\n  if (queryParams.length) {\r\n    URL += (URL.indexOf('?') === -1 ? '?' : '&') + queryParams\r\n      .map(({ param, value }) => `${ encode(param, encodeQuery) }=${ encode(value, encodeQuery) }`)\r\n      .join('&');\r\n  }\r\n\r\n  return `${ URL }${ hash ? `#${ hash }` : '' }`;\r\n};\r\n\r\n/**\r\n * @function isAbsolute\r\n * @param {String} url - URL to check if it is absolute or not.\r\n * @returns {Boolean} If the argument URL is absolute or not.\r\n */\r\nfunction isAbsolute(url) {\r\n  return absoluteURLRegexp.test(url);\r\n}\r\n\r\n/**\r\n * @function encode\r\n * @param {String} string - String to encode using encodeURIComponent.\r\n * @param {Boolean} isEncoded - If the string should be encoded.\r\n * @returns {String} Encoded string.\r\n */\r\nfunction encode(string, isEncoded) {\r\n  return isEncoded ? encodeURIComponent(string) : string;\r\n}\r\n","/**\r\n * @module Fetch\r\n * @private\r\n * @mixin\r\n * @description Exports Fetch class.\r\n */\r\n\r\nimport Promise from './Promise';\r\nimport Super from './Super';\r\nimport Arr from './Arr';\r\nimport Str from './Str';\r\nimport {\r\n  isArray, isFunction, isString,\r\n  assign, Symbol, validate, iterate, defineProperties\r\n} from './helpers';\r\nimport constructURL from './helpers/constructURL';\r\nimport parseHeaders from './helpers/parseHeaders';\r\nimport transformData from './helpers/transformData';\r\n\r\n/**\r\n * @typedef {'get'|'post'|'delete'|'head'|'put'|'patch'} FetchMethod\r\n * @public\r\n */\r\n\r\n/**\r\n * @typedef {Object} FetchConfig\r\n * @public\r\n * @property {Array.<AfterMiddleware|FetchErrorAfterMiddleware>} [after]\r\n * @property {Object} [auth]\r\n * @property {String} [auth.username]\r\n * @property {String} [auth.password]\r\n * @property {String} [baseURL]\r\n * @property {Array.<BeforeMiddleware|FetchErrorBeforeMiddleware>} [before]\r\n * @property {*} [data]\r\n * @property {Object.<String, String[]>} [headers]\r\n * @property {FetchMethod} [method]\r\n * @property {Object} [params]\r\n * @property {Object} [query]\r\n * @property {String} [responseType]\r\n * @property {Number} [timeout]\r\n * @property {String} [url]\r\n * @property {Boolean} [withCredentials]\r\n */\r\n\r\n/**\r\n * @typedef {Object} FetchResponse\r\n * @public\r\n * @property {FetchConfig} config\r\n * @property {*} data\r\n * @property {Object.<String, String>} headers\r\n * @property {Number} status\r\n * @property {String} statusText\r\n * @property {XMLHttpRequest} xhr\r\n */\r\n\r\n/**\r\n * @callback FetchAfterMiddleware\r\n * @public\r\n * @param {FetchResponse} config - Fetch response.\r\n */\r\n\r\n/**\r\n * @callback FetchErrorAfterMiddleware\r\n * @public\r\n * @param {Error|*} err - Thrown error.\r\n * @param {FetchResponse} config - Fetch response.\r\n */\r\n\r\n/**\r\n * @callback FetchBeforeMiddleware\r\n * @public\r\n * @param {FetchConfig} config - Fetch config.\r\n */\r\n\r\n/**\r\n * @callback FetchErrorBeforeMiddleware\r\n * @public\r\n * @param {Error|*} err - Thrown error.\r\n * @param {FetchConfig} config - Fetch config.\r\n */\r\n\r\n/**\r\n * @callback FetchConfigFunction\r\n * @public\r\n * @param {FetchConfig} config\r\n */\r\n\r\nconst defaults = {\r\n  after: [],\r\n  auth: {\r\n    username: '',\r\n    password: ''\r\n  },\r\n  baseURL: global.location.origin,\r\n  before: [],\r\n  data: null,\r\n  headers: {},\r\n  method: 'get',\r\n  params: {},\r\n  query: {},\r\n  responseType: '',\r\n  timeout: 0,\r\n  url: '',\r\n  withCredentials: false\r\n};\r\nconst uploadMethods = new Arr(['post', 'put']);\r\n\r\n/**\r\n * @class Fetch\r\n * @extends Function\r\n * @public\r\n * @param {FetchConfig} [config = {}] - A number to wrap.\r\n * @returns {Fetch} Instance of Fetch.\r\n * An instance of Fetch is a function that simply calls #request with the same arguments.\r\n * @description Class for fetching data.\r\n *\r\n * @example\r\n * const fetch = new Fetch();\r\n *\r\n * fetch('/data').then((res) => {\r\n *   console.log(res);\r\n * });\r\n */\r\nexport class Fetch extends Function {\r\n  constructor(config = {}) {\r\n    super();\r\n\r\n    function fetch() {\r\n      return fetch.request.apply(fetch, arguments);\r\n    }\r\n\r\n    const conf = new Super({}).deepAssign(defaults, config).$;\r\n\r\n    if (conf.before.indexOf(fetchBeforeMiddleware) === -1) {\r\n      conf.before.push(fetchBeforeMiddleware);\r\n    }\r\n\r\n    /**\r\n     * @member {FetchConfig} Fetch#$$\r\n     * @type {FetchConfig}\r\n     * @public\r\n     * @description Fetch config.\r\n     */\r\n    Object.defineProperty(fetch, '$$', { value: conf });\r\n    Object.setPrototypeOf(fetch, Fetch.prototype);\r\n\r\n    return fetch;\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#after\r\n   * @public\r\n   * @param {FetchAfterMiddleware|FetchErrorAfterMiddleware} middleware - Middleware to add.\r\n   * @param {Boolean|*} [afterAll = true] - Boolean parameter where to put the middleware.\r\n   * Truthy parameter stands for \"to the end\" and falsey for \"to the beginning\".\r\n   * @returns {Fetch} Returns this.\r\n   * @description Middleware that is called after the request.\r\n   * If the middleware has 2 or less arguments it's treated as success middleware otherwise as an error one.\r\n   * If the middleware returns a promise it becomes a part of the middleware chain.\r\n   *\r\n   * @example\r\n   * const fetch = new Fetch()\r\n   *   .after((err, res) => {\r\n   *     console.log(err);\r\n   *\r\n   *     throw err;\r\n   *   })\r\n   *   .after((res) => {\r\n   *     res.json = D(res.data).parseJSON():\r\n   *   });\r\n   */\r\n  after(middleware, afterAll = true) {\r\n    validate([middleware], ['function'], 'Fetch#after');\r\n\r\n    const { after } = this.$$;\r\n\r\n    if (afterAll) {\r\n      after.push(middleware);\r\n    } else {\r\n      after.unshift(middleware);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#before\r\n   * @public\r\n   * @param {FetchBeforeMiddleware|FetchErrorBeforeMiddleware} middleware - Middleware to add.\r\n   * @param {Boolean|*} [beforeAll = true] - Boolean parameter where to put the middleware.\r\n   * Truthy parameter stands for \"to the beginning\" and falsey for \"to the end\".\r\n   * @returns {Fetch} Returns this.\r\n   * @description Middleware that is called before the request.\r\n   * If the middleware has 2 or less arguments it's treated as success middleware otherwise as an error one.\r\n   * If the middleware returns a promise it becomes a part of the middleware chain.\r\n   *\r\n   * @example\r\n   * const fetch = new Fetch()\r\n   *   .before((err, req) => {\r\n   *     console.log(err);\r\n   *\r\n   *     throw err;\r\n   *   })\r\n   *   .before((req) => {\r\n   *     if (req.url === '/veryLongRequest') {\r\n   *       req.timeout = 30000;\r\n   *     }\r\n   *   });\r\n   */\r\n  before(middleware, beforeAll = true) {\r\n    validate([middleware], ['function'], 'Fetch#before');\r\n\r\n    const { before } = this.$$;\r\n\r\n    if (beforeAll) {\r\n      before.unshift(middleware);\r\n    } else {\r\n      before.push(middleware);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#config\r\n   * @public\r\n   * @param {String|FetchConfig|FetchConfigFunction} [property] - If it's a function\r\n   * it's called with the fetch config argument, if it's a string the value argument\r\n   * is used for assigning this property to the fetch config\r\n   * otherwise it's assigned to the fetch config.\r\n   * @param {*} [value] - See the property argument.\r\n   * @returns {Fetch|FetchConfig} If the argument is present this is returned otherwise the fetch config is returned.\r\n   * @description Method for getting and setting config.\r\n   *\r\n   * @example\r\n   * const fetch = new Fetch();\r\n   *\r\n   * fetch.config({ baseURL: 5000 });\r\n   * fetch.config().timeout; // 5000\r\n   *\r\n   * fetch.config((config) => {\r\n   *   config.baseURL += '/api';\r\n   * });\r\n   */\r\n  config(property, value) {\r\n    const conf = this.$$;\r\n\r\n    if (!arguments.length) {\r\n      return conf;\r\n    }\r\n\r\n    if (isFunction(property)) {\r\n      property(conf);\r\n    } else {\r\n      if (arguments.length >= 2) {\r\n        property = { [property]: value };\r\n      }\r\n\r\n      new Super(conf).deepAssign(property);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#delete\r\n   * @public\r\n   * @param {String} [url] - See {@link Fetch#request}.\r\n   * @param {FetchConfig} [config] - See {@link Fetch#request}.\r\n   * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\r\n   * @description Shorthand for #request for delete requests.\r\n   *\r\n   * @example\r\n   * new Fetch().delete('/data').then((res) => {\r\n   *   console.log(res);\r\n   * });\r\n   */\r\n  delete(url, config = {}) {\r\n    if (!isString(url)) {\r\n      config = url;\r\n      url = undefined;\r\n    }\r\n\r\n    return this.request(url, assign({ method: 'delete' }, config));\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#get\r\n   * @public\r\n   * @param {String} [url] - See {@link Fetch#request}.\r\n   * @param {FetchConfig} [config] - See {@link Fetch#request}.\r\n   * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\r\n   * @description Shorthand for #request for get requests.\r\n   *\r\n   * @example\r\n   * new Fetch().get('/data').then((res) => {\r\n   *   console.log(res);\r\n   * });\r\n   */\r\n  get(url, config = {}) {\r\n    if (!isString(url)) {\r\n      config = url;\r\n      url = undefined;\r\n    }\r\n\r\n    return this.request(url, assign({ method: 'get' }, config));\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#head\r\n   * @public\r\n   * @param {String} [url] - See {@link Fetch#request}.\r\n   * @param {FetchConfig} [config] - See {@link Fetch#request}.\r\n   * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\r\n   * @description Shorthand for #request for head requests.\r\n   *\r\n   * @example\r\n   * new Fetch().head('/data').then((res) => {\r\n   *   console.log(res);\r\n   * });\r\n   */\r\n  head(url, config = {}) {\r\n    if (!isString(url)) {\r\n      config = url;\r\n      url = undefined;\r\n    }\r\n\r\n    return this.request(url, assign({ method: 'head' }, config));\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#headers\r\n   * @public\r\n   * @param {String|Object.<String, String|String[]>} header - A header string or an object of the following format:\r\n   * { [header]: [value1, value2, ...] }.\r\n   * @param {String|String[]} [value] - Header value. If the first argument is a string\r\n   * this has to be a header value or an array of header values.\r\n   * @returns {Fetch} Returns this.\r\n   * @description Method for setting request headers.\r\n   *\r\n   * @example\r\n   * const fetch = new Fetch()\r\n   *   .headers('Header1', 'Value')\r\n   *   .headers('Header2', ['Value1', 'Value2'])\r\n   *   .headers({\r\n   *     Header3: ['Value1', 'Value2']\r\n   *   });\r\n   */\r\n  headers(header, value) {\r\n    const { headers } = this.$$;\r\n\r\n    if (arguments.length >= 2) {\r\n      header = { [header]: value };\r\n    }\r\n\r\n    iterate(header, (value, header) => {\r\n      const array = headers[header] || [];\r\n      const toPush = isArray(value) ? value : [value];\r\n\r\n      (headers[header] = array).push.apply(array, toPush);\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#instance\r\n   * @public\r\n   * @param {FetchConfig} [config] - New config if needed.\r\n   * @returns {Fetch} New instance of Fetch.\r\n   * @description Method for creating new fetch instances based on already existent.\r\n   *\r\n   * @example\r\n   * const mainFetch = new Fetch({\r\n   *   baseURL: '//other.domain.com/api',\r\n   *   withCredentials: true\r\n   * });\r\n   *\r\n   * const longFetch = mainFetch.instance({\r\n   *   timeout: 10000\r\n   * });\r\n   */\r\n  instance(config = {}) {\r\n    const dataConfig = new Super(config).hasOwn('data')\r\n      ? { data: config.data }\r\n      : {};\r\n\r\n    delete config.data;\r\n\r\n    const conf = new Super({})\r\n      .deepAssign(this.$$, config)\r\n      .assign(dataConfig)\r\n      .$;\r\n\r\n    return new Fetch(conf);\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#patch\r\n   * @public\r\n   * @param {String} [url] - See {@link Fetch#request}.\r\n   * @param {*} [data] - Additional parameter for uploading data.\r\n   * @param {FetchConfig} [config] - See {@link Fetch#request}.\r\n   * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\r\n   * @description Shorthand for #request for head requests.\r\n   *\r\n   * @example\r\n   * new Fetch().patch('/data', { user: 'John' }).then((res) => {\r\n   *   console.log(res);\r\n   * });\r\n   */\r\n  patch(url, data = {}, config = {}) {\r\n    if (arguments.length && !isString(url)) {\r\n      config = data;\r\n      data = url;\r\n      url = undefined;\r\n    }\r\n\r\n    return this.request(url, assign({ method: 'patch', data }, config));\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#post\r\n   * @public\r\n   * @param {String} [url] - See {@link Fetch#request}.\r\n   * @param {*} [data] - Additional parameter for uploading data.\r\n   * @param {FetchConfig} [config] - See {@link Fetch#request}.\r\n   * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\r\n   * @description Shorthand for #request for head requests.\r\n   *\r\n   * @example\r\n   * new Fetch().post('/data', { user: 'John' }).then((res) => {\r\n   *   console.log(res);\r\n   * });\r\n   */\r\n  post(url, data = {}, config = {}) {\r\n    if (arguments.length && !isString(url)) {\r\n      config = data;\r\n      data = url;\r\n      url = undefined;\r\n    }\r\n\r\n    return this.request(url, assign({ method: 'post', data }, config));\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#put\r\n   * @public\r\n   * @param {String} [url] - See {@link Fetch#request}.\r\n   * @param {*} [data] - Additional parameter for uploading data.\r\n   * @param {FetchConfig} [config] - See {@link Fetch#request}.\r\n   * @returns {Promise.<FetchResponse, Error>} See {@link Fetch#request}.\r\n   * @description Shorthand for #request for head requests.\r\n   *\r\n   * @example\r\n   * new Fetch().put('/data', { user: 'John' }).then((res) => {\r\n   *   console.log(res);\r\n   * });\r\n   */\r\n  put(url, data = {}, config = {}) {\r\n    if (arguments.length && !isString(url)) {\r\n      config = data;\r\n      data = url;\r\n      url = undefined;\r\n    }\r\n\r\n    return this.request(url, assign({ method: 'put', data }, config));\r\n  }\r\n\r\n  /**\r\n   * @method Fetch#request\r\n   * @public\r\n   * @param {String} [url] - URL for the request.\r\n   * @param {FetchConfig} [config] - Additional config for this particular request.\r\n   * @returns {Promise.<FetchResponse, Error>} Promise that is resolved with the request response.\r\n   * @description Main function for making requests. All request methods call this method\r\n   * including the fetch instance itself.\r\n   *\r\n   * @example\r\n   * const fetch = new Fetch();\r\n   *\r\n   * fetch.request('/data', { timeout: 1000 }).then((res) => {\r\n   *   console.log(res);\r\n   * });\r\n   *\r\n   * fetch.request({ timeout: 1000 }).then((res) => {\r\n   *   console.log(res);\r\n   * });\r\n   *\r\n   * fetch.request().then((res) => {\r\n   *   console.log(res);\r\n   * });\r\n   */\r\n  request(url, config = {}) {\r\n    if (arguments.length === 1 && !isString(url)) {\r\n      config = url;\r\n    }\r\n\r\n    const dataConfig = new Super(config).hasOwn('data')\r\n      ? { data: config.data }\r\n      : {};\r\n    const urlConfig = isString(url)\r\n      ? { url }\r\n      : {};\r\n\r\n    delete config.data;\r\n\r\n    const conf = new Super(this.$$)\r\n      .deepClone()\r\n      .deepAssign(urlConfig, config)\r\n      .assign(dataConfig)\r\n      .$;\r\n\r\n    let xhr;\r\n    let promise = Promise.resolve();\r\n\r\n    iterate(conf.before, (middleware) => {\r\n      promise = promise.then(() => {\r\n        if (middleware.length >= 2) {\r\n          return Promise.resolve();\r\n        }\r\n\r\n        return new Promise((resolve) => {\r\n          resolve(middleware(conf));\r\n        });\r\n      }, (err) => {\r\n        if (middleware.length < 2) {\r\n          return Promise.reject(err);\r\n        }\r\n\r\n        return new Promise((resolve) => {\r\n          resolve(middleware(err, conf));\r\n        });\r\n      });\r\n    });\r\n\r\n    promise = promise.then(() => new Promise((resolve, reject) => {\r\n      const {\r\n        after,\r\n        auth: {\r\n          username,\r\n          password\r\n        },\r\n        data,\r\n        headers,\r\n        method,\r\n        onprogress,\r\n        responseType,\r\n        timeout,\r\n        url,\r\n        withCredentials\r\n      } = conf;\r\n\r\n      xhr = new XMLHttpRequest();\r\n\r\n      xhr.open(method, url, true, username, password);\r\n\r\n      iterate(headers, (value, header) => {\r\n        xhr.setRequestHeader(header, value);\r\n      });\r\n\r\n      if (onprogress) {\r\n        if (uploadMethods.indexOfStrict(method) === -1) {\r\n          xhr.onprogress = onprogress;\r\n        } else {\r\n          xhr.upload.onprogress = onprogress;\r\n        }\r\n      }\r\n\r\n      xhr.onabort = () => {\r\n        reject(new Error('Request was aborted'));\r\n\r\n        xhr = null;\r\n      };\r\n\r\n      xhr.onerror = () => {\r\n        reject(new Error('Network error'));\r\n\r\n        xhr = null;\r\n      };\r\n\r\n      xhr.ontimeout = () => {\r\n        reject(new Error('Request time exceeded'));\r\n\r\n        xhr = null;\r\n      };\r\n\r\n      xhr.onreadystatechange = () => {\r\n        if (!xhr || !xhr.status || xhr.readyState !== 4) {\r\n          return;\r\n        }\r\n\r\n        const response = {\r\n          config: conf,\r\n          data: !responseType || responseType === 'text' ? xhr.responseText : xhr.response,\r\n          headers: parseHeaders(xhr.getAllResponseHeaders()),\r\n          status: xhr.status === 1223 ? 204 : xhr.status,\r\n          statusText: xhr.status === 1223 ? 'No Content' : xhr.statusText,\r\n          xhr\r\n        };\r\n\r\n        let promise = Promise.resolve();\r\n\r\n        iterate(after, (middleware) => {\r\n          promise = promise.then(() => {\r\n            if (middleware.length >= 2) {\r\n              return Promise.resolve();\r\n            }\r\n\r\n            return new Promise((resolve) => {\r\n              resolve(middleware(response));\r\n            });\r\n          }, (err) => {\r\n            if (middleware.length < 2) {\r\n              return Promise.reject(err);\r\n            }\r\n\r\n            return new Promise((resolve) => {\r\n              resolve(middleware(err, response));\r\n            });\r\n          });\r\n        });\r\n\r\n        resolve(promise\r\n          .then(() => response)\r\n          .catch((err) => {\r\n            try {\r\n              err.response = response;\r\n            } catch (e) {\r\n              throw err;\r\n            }\r\n\r\n            throw err;\r\n          })\r\n        );\r\n      };\r\n\r\n      xhr.responseType = responseType;\r\n      xhr.timeout = Number(timeout) || 0;\r\n      xhr.withCredentials = !!withCredentials;\r\n\r\n      xhr.send(data);\r\n    }));\r\n\r\n    promise.abort = function abort() {\r\n      if (xhr) {\r\n        xhr.abort();\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\n    return promise;\r\n  }\r\n}\r\n\r\ndefineProperties(Fetch.prototype, {\r\n  [Symbol.toStringTag]: 'Fetch'\r\n});\r\n\r\n/**\r\n * @function fetchBeforeMiddleware\r\n * @private\r\n * @param {FetchConfig} config\r\n * @description Built-in before middleware for url, data, method, headers construction.\r\n */\r\nfunction fetchBeforeMiddleware(config) {\r\n  const {\r\n    baseURL,\r\n    data,\r\n    headers,\r\n    method,\r\n    params,\r\n    query,\r\n    url\r\n  } = config;\r\n  const METHOD = method.toUpperCase();\r\n\r\n  config.method = METHOD;\r\n  config.url = constructURL(baseURL, url, params, query);\r\n  config.data = transformData(data, METHOD, headers);\r\n  config.headers = new Super(headers).object((headers, values, header) => {\r\n    header = new Str(header)\r\n      .toCapitalCase()\r\n      .replace(/\\s+/g, '-')\r\n      .$;\r\n\r\n    headers[header] = values.join(', ');\r\n  }).$;\r\n}\r\n\r\n/**\r\n * @const {Fetch} fetch\r\n * @type {Fetch}\r\n * @public\r\n * @description Empty instance of Fetch.\r\n */\r\nexport const fetch = new Fetch();\r\n\r\nexport default Fetch;\r\n","/**\n * @module Elem\n * @private\n * @mixin\n * @description Exports Elem class.\n */\n\nimport Super from './Super';\nimport Arr, { array } from './Arr';\nimport { blob } from './BlobObject';\nimport Fetch from './Fetch';\nimport { method } from './Func';\nimport Promise from './Promise';\nimport Str from './Str';\nimport { switcher } from './Switcher';\nimport constructors from './constants/constructors';\nimport appliedRegExps from './constants/appliedRegExps';\nimport elements from './constants/elements';\nimport { canvasGetMethods, canvasRestMethods } from './constants/canvasMethods';\nimport {\n  isArray, isArrayLike, isElement, isFunction,\n  isInteger, isNumber, isNull, isString,\n  assign, dynamicDefineProperties, defineProperties, toArray,\n  validate, toStringTag, iterate, Symbol\n} from './helpers';\n\n/**\n * @typedef {String} ElemEventString\n * @public\n * @description A string containing events separated by a comma with zero or more spaces or just spaces.\n */\n\n/**\n * @callback ElemValueCallback\n * @public\n * @param {String} value - Old value.\n * @param {Elem} elem - Current element.\n * @param {Number} index - Index in the set of the elements.\n */\n\n/**\n * @callback ElemSetOfCallback\n * @public\n * @param {Element} created - Created element.\n * @param {*} value - Value of the iterated element in the object.\n * @param {Key} key - Key of the iterated element in the object.\n * @param {*} object - Object that is iterated over.\n * @param {Element} elem - Current element.\n * @param {Number} index - Index of the current element.\n */\n\n/**\n * @callback ValidateCallback\n * @public\n * @param {*} value - Element value.\n * @param {Element} elem - Element to validate.\n * @param {Number} index - Index of the element.\n */\n\n/**\n * @callback CtxCallback\n * @public\n * @param {CanvasRenderingContext2D} ctx - Canvas rendering context.\n */\n\n/**\n * @callback Listener\n * @public\n * @param {Event} e - Fired event.\n * @param {Element} elem - Element on which the listener was called.\n * @param {Number} index - Index of the element on which the listener was called.\n */\n\n/**\n * @callback ElemRemoveListeners\n * @public\n * @param {...ElemEventString} events - If at least one argument present only removes event listeners specified\n * by the events in the arguments.\n */\n\nconst nativeDocument = global.document;\nconst emptyDiv = nativeDocument.createElement('div');\nconst eventSeparator = /, *| +/;\nconst textProperty = new Super(Node.prototype).propertyDescriptor('textContent') ? 'textContent' : 'innerText';\nconst classes = {};\nconst attrs = {};\nconst windowsDwayneData = new Arr([]);\nconst inputElements = 'input, select, textarea, datalist, keygen, output';\nconst dataURLFetch = new Fetch({ responseType: 'arraybuffer' });\nconst click = method('click');\nconst refSwitcher = switcher('strictEquals', 'href')\n  .case(\n    ['img', 'script', 'iframe', 'audio', 'video'],\n    'src'\n  )\n  .case(\n    'form',\n    'action'\n  );\nconst filterSwitcher = switcher('call', (selector) => selector)\n  .case(\n    isString,\n    (selector) =>\n      (elem) => new Elem(elem).is(selector)\n  )\n  .case(\n    [isArray, isElem],\n    (elems) => {\n      elems = new Arr(elems);\n\n      return (elem) => elems.indexOf(elem) !== -1;\n    }\n  );\nconst innerSwitcher = switcher('strictEquals', 0)\n  .case('padding-box', (paddings) => paddings)\n  .case('border-box', (paddings, borders) => paddings + borders);\nconst outerSwitcher = switcher('strictEquals', (borders, paddings) => borders + paddings)\n  .case('padding-box', (borders) => borders)\n  .case('border-box', 0);\n\n/**\n * @class Elem\n * @extends Arr\n * @public\n * @param {Element|Element[]} [elem = []] - An element or an array of elements to wrap.\n * @returns {Elem} Instance of Elem.\n * @description Wrap of an elements set. Also has all methods from from\n * [CanvasRenderingContext2D]{@link https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D}.\n * Getters methods return the same as methods from CanvasRenderingContext2D and the rest return this.\n * Work for the first canvas element in the set.\n *\n * @example\n * new Elem(document.body);\n * new Elem(document.querySelectorAll('.cls'));\n * new Elem(document.getElementsByClassName('cls'));\n */\nexport class Elem extends Arr {\n  constructor(elem = []) {\n    super((() => {\n      let element = elem;\n\n      if (isArrayLike(element) && (\n        isWindow(element) ||\n        isHTMLDocument(element) ||\n        isElement(element)\n      )) {\n        element = [element];\n      }\n\n      return new Arr(toArray(new Super(element).$, true)).object((elems, elem) => {\n        if ((isElement(elem) || isWindow(elem) || isHTMLDocument(elem) || toStringTag(elem) === 'CSSStyleRule') && elems.indexOf(elem) === -1) {\n          return elems.push(elem);\n        }\n\n        if (isElem(elem)) {\n          elems.push.apply(elems, elem.$);\n        }\n      }, []).$;\n    })());\n\n    this.$$ = elem;\n\n    this.forEach(addDwayneData);\n\n    /**\n     * @member {Element[]} Elem#$\n     * @type {Element[]}\n     * @public\n     * @description Constructed element set.\n     */\n\n    /**\n     * @member {*} Elem#$$\n     * @type {*}\n     * @public\n     * @description Initial element set.\n     */\n  }\n\n  /**\n   * @method Elem#add\n   * @public\n   * @param {...(String|Elem|Element|Element[])} elements - Each argument is a selector, or Elem, or Element, or array of Elements.\n   * @returns {Elem} Returns this.\n   * @description Method for adding new elements to the set.\n   *\n   * @example\n   *\n   */\n  add(...elements) {\n    iterate(arguments, (elem) => {\n      toFind(elem).forEach((elem) => {\n        if (this.indexOf(elem) === -1) {\n          this.push(elem);\n        }\n      });\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Elem#addClass\n   * @public\n   * @param {...String} classes - Classes to add.\n   * @returns {Elem} Returns this.\n   * @description Method for adding classes to the all the elements in the set.\n   *\n   * @example\n   * elem.addClass('red', 'round');\n   */\n  addClass(...classes) {\n    return this.forEach((elem) => {\n      const list = elem.classList;\n\n      iterate(arguments, (cls) => list.add(cls));\n    });\n  }\n\n  /**\n   * @method Elem#addHTML\n   * @public\n   * @param {String} html - HTML to add.\n   * @returns {Elem} Returns this.\n   * @description Method for adding HTML to the all elements in the set.\n   *\n   * @example\n   * elem.addHTML('&lt;div&gt;1&lt;/div&gt;');\n   */\n  addHTML(html) {\n    return this.forEach((elem) => {\n      elem.innerHTML += html;\n    });\n  }\n\n  /**\n   * @method Elem#addRule\n   * @public\n   * @param {String} name - Name of the rule.\n   * @param {String} selector - Selector for the rule\n   * @param {Object.<String, String>} style - Style for the selector.\n   * @returns {Elem} Returns this.\n   * @description Method for adding css styles into the first style tag in the set.\n   * Note: style element should be inside the document.\n   *\n   * @example\n   * style.addRule('img-size', 'img.square', {\n   *   width: '40px !important',\n   *   height: '40px !important'\n   * });\n   */\n  addRule(name, selector, style) {\n    this.some((elem) => {\n      if (getName(elem) === 'style') {\n        const { sheet } = elem;\n        const { length } = sheet.cssRules;\n        const rules = new Super(style).word((value, property) => (\n          `${ new Str(property).toHyphenCase() }: ${ value };\\n`\n        ));\n\n        sheet.insertRule(\n          `${ selector } {${ rules && '\\n' }${ rules }}`,\n          length\n        );\n        sheet.cssRules[length].dwayneData = { name };\n\n        return true;\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Elem#addText\n   * @public\n   * @param {String} text - Text to add.\n   * @returns {Elem} Returns this.\n   * @description Method for adding text to the all elements in the set.\n   *\n   * @example\n   * elem.addText('123');\n   */\n  addText(text) {\n    return this.forEach((elem) => {\n      elem.appendChild(nativeDocument.createTextNode(text));\n    });\n  }\n\n  /**\n   * @method Elem#apply\n   * @public\n   * @param {...String} strings - Strings to apply.\n   * @returns {Elem} Returns this.\n   * @description Method that is a shorthand for many other methods.\n   * All shorthands can be separated with space and written within one string.\n   *\n   * @example\n   * elem.apply(\n   *   '#id .c1 .c2 @border(1px solid black) $disabled $attr(some value) *(Click me!)'\n   * );\n   * // shorthand for\n   * // elem\n   * //   .id('id')\n   * //   .addClass('c1', 'c2')\n   * //   .border('1px solid black')\n   * //   .disabled()\n   * //   .attr('attr', 'some value')\n   * //   .text('Click me!');\n   * // There is a full list of possible types of syntax below...\n   *\n   * elem.apply('#id');                         // shorthand for elem.id('id');\n   * elem.apply('.c1 .c2');                     // shorthand for elem.addClass('c1', 'c2');\n   * elem.apply('-.c1 -.c2');                   // shorthand for elem.removeClass('c1', 'c2');\n   * elem.apply('-@float -@display');           // shorthand for elem.removeCSS('float', 'display');\n   * elem.apply('-$a1 -$a2');                   // shorthand for elem.removeAttr('a1', 'a2');\n   * elem.apply('*(some text)');                // shorthand for elem.text('set text');\n   * elem.apply('&(&lt;div&gt;1&lt;/div&gt;)'); // shorthand for elem.html('&lt;div&gt;1&lt;/div&gt;');\n   * elem.apply('@float(right)');               // shorthand for elem.css('float', 'right');\n   * elem.apply('@transform(scale(5px))');      // shorthand for elem.css('float', 'right');\n   * elem.apply('@margin(2px 2px)');            // shorthand for elem.css('margin', '2px 2px');\n   * elem.apply('@marginLeft(2px)');            // shorthand for elem.css('marginLeft', '2px 2px');\n   * elem.apply('@margin-left(2px)');           // shorthand for elem.css('margin-left', '2px 2px');\n   * elem.apply('$attr(some value)');           // shorthand for elem.attr('attr', 'some value');\n   * elem.apply('$attr');                       // shorthand for elem.attr('attr', '');\n   */\n  apply(...strings) {\n    let applied;\n    let setApplied;\n    let callback;\n    let name;\n    let np1;\n    let slice;\n\n    new Str(new Arr(arguments).join(' '))\n      .split(/(\\s+)/)\n      .forEach((string) => {\n        if (!applied) {\n          np1 = string.slice(0, 1);\n          callback = appliedRegExps[np1];\n          slice = 1;\n\n          if (callback && !isFunction(callback)) {\n            callback = callback[string.slice(1, 2)];\n            slice = 2;\n          }\n\n          if (/^\\s+$/.test(string) || !callback) {\n            return;\n          }\n\n          name = string.slice(slice).match(/^[^()]+/);\n\n          if (!name && (np1 !== '*' && np1 !== '&')) {\n            return;\n          }\n\n          applied = {\n            name: name ? name[0] : '',\n            args: string.slice(slice + (name ? name[0] : '').length),\n            callback\n          };\n\n          setApplied = true;\n        }\n\n        if (!setApplied) {\n          applied.args += string;\n        }\n\n        if (!applied.args || /^\\([\\s\\S]+\\)$/.test(applied.args)) {\n          applied.callback(this, applied.name, applied.args.replace(/^\\(|\\)$/g, ''));\n          applied = null;\n        }\n\n        setApplied = false;\n      });\n\n    return this;\n  }\n\n  /**\n   * @method Elem#attr\n   * @public\n   * @param {String|Object.<String, String|ElemValueCallback>} [attr] - Name of the attribute to get or\n   * an object of the format { [attrName]: value, ... } to set attributes.\n   * @param {String|ElemValueCallback} [value] - If the first argument is a string\n   * it should be a value to set for that attribute.\n   * @returns {Super|String|Elem} If no arguments passed, D-Wrap of attributes of the first element in the set\n   * returned, if 1 string argument is passed the value of the attribute of the first element in the set\n   * returned otherwise returns this.\n   * @description Method for getting/setting attributes.\n   *\n   * @example\n   * elem.attr('attr1', 'value1'); // attribute attr1 set to 'value1' and this returned\n   * elem.attr('attr1');           // 'value1'\n   * elem.attr({\n   *   attr1: 'value3',            // attribute attr1 set to 'value3'\n   *   attr2: 'value2'             // attribute attr2 set to 'value2'\n   * });                           // this returned\n   * elem.attr().$;                // { attr1: 'value3', attr2: 'value2' }\n   */\n  attr(attr, value) {\n    const elem = getElem(this);\n\n    if (!arguments.length) {\n      return new Super(elem.attributes).object((o, attr) => {\n        o[attr.name] = attr.value;\n      });\n    }\n\n    if (arguments.length <= 1 && isString(attr)) {\n      return elem.getAttribute(attr);\n    }\n\n    if (arguments.length >= 2) {\n      attr = { [attr]: value };\n    }\n\n    return this.forEach((elem, index) => {\n      new Super(attr).forEach((value, key) => {\n        elem.setAttribute(key, isFunction(value) ? value(elem.getAttribute(key), elem, index) : value);\n      });\n    });\n  }\n\n  /**\n   * @method Elem#blob\n   * @public\n   * @param {Object} [options = {}] - Options that are passed into {@link blob}.\n   * @returns {Promise.<BlobObject>} New instance of promise.\n   * @description Returns a {@link BlobObject} Promise. Works with image or canvas first element.\n   *\n   * @example\n   * image.blob().then((blob) => console.log(blob));  // BlobObject\n   * canvas.blob().then((blob) => console.log(blob)); // BlobObject\n   */\n  blob(options = {}) {\n    // TODO: write using ArrayBuffer\n\n    return new Promise((resolve, reject) => {\n      const elem = this.first();\n      const { name } = elem;\n\n      if (name !== 'img' && name !== 'canvas') {\n        reject(new Error('First element in the set isn\\'t an image or a canvas! (Elem#blob)'));\n      }\n\n      if (name === 'canvas') {\n        return resolve(elem);\n      }\n\n      elem\n        .load()\n        .then(() => {\n          if (elem.isBroken()) {\n            return reject(new Error('The image is broken! (Elem#blob)'));\n          }\n\n          const canvas = new Elem(nativeDocument).canvas();\n          const width = elem.width();\n          const height = elem.height();\n\n          canvas\n            .width(width)\n            .height(height)\n            .drawImage(elem.$[0], 0, 0);\n\n          resolve(canvas);\n        });\n    })\n      .then((canvas) => dataURLFetch(canvas.dataURL()))\n      .then(({ data: ab }) => blob(ab, options));\n  }\n\n  /**\n   * @method Elem#blur\n   * @returns {Elem} Returns this.\n   * @see https://developer.mozilla.org/en/docs/Web/API/HTMLElement/blur\n   * @description Synonym for\n   * [HTMLElement#blur]{@link https://developer.mozilla.org/en/docs/Web/API/HTMLElement/blur}.\n   */\n  blur() {\n    return this.forEach((elem) => {\n      elem.blur();\n    });\n  }\n\n  /**\n   * @method Elem#calcCSS\n   * @param {String} [pseudo] - See the link.\n   * @returns {CSSStyleDeclaration} See the link.\n   * @see https://developer.mozilla.org/en/docs/Web/API/Window/getComputedStyle\n   * @description Synonym for\n   * [getComputedStyle]{@link https://developer.mozilla.org/en/docs/Web/API/Window/getComputedStyle}.\n   * Returns computed style for the first element in the set or undefined.\n   */\n  calcCSS(pseudo = null) {\n    return getComputedStyle(getElem(this), pseudo);\n  }\n\n  /**\n   * @method Elem#changeRule\n   * @public\n   * @param {String} name - Name of the rule.\n   * @param {Object.<String, String>} style - Style for the selector.\n   * @returns {Elem} Returns this.\n   * @description Method for changing css styles in the first style tag in the set.\n   * Note: style element should be inside the document.\n   *\n   * @example\n   * style.changeRule('img-size', {\n   *   width: '50px !important',\n   *   height: '50px !important'\n   * });\n   */\n  changeRule(name, style) {\n    this.some((elem) => {\n      if (getName(elem) === 'style') {\n        const { value: rule } = new Arr(elem.sheet.cssRules).find((rule) => rule.dwayneData && rule.dwayneData.name === name) || {};\n\n        if (rule) {\n          new Elem(rule).css(style);\n\n          return true;\n        }\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Elem#child\n   * @public\n   * @param {Number|String|Elem|Element|Element[]} element - If the argument is a number a wrap of the set of the children\n   * of this index of each element in the set returned otherwise an element to put into this element, a collection\n   * or a selector of it.\n   * @returns {Elem} Returns a wrap of children or inserted elements.\n   * @description Method is similar to\n   * [Node#appendChild]{@link https://developer.mozilla.org/en/docs/Web/API/Node/appendChild}.\n   *\n   * @example\n   * const child = elem.child(1);\n   *\n   * elem.child(elem2);\n   * elem.child(document.getElementById('id'));\n   * elem.child('#id div.c1');\n   */\n  child(element) {\n    if (isInteger(element) && element >= 0) {\n      return this.children().elem(element);\n    }\n\n    return toFind(element).into(this);\n  }\n\n  /**\n   * @method Elem#children\n   * @public\n   * @returns {Elem} D-Wrap of the children of the first element in the set.\n   * @description Method for getting element's children.\n   *\n   * @example\n   * const children = elem.children();\n   */\n  children() {\n    return new Elem(this.length ? this.$[0].children : []);\n  }\n\n  /**\n   * @method Elem#class\n   * @public\n   * @param {String} [cls] - If it's present it has to contain class attribute to set.\n   * @returns {Arr|Elem} If the argument is present this returned otherwise a wrap of the classes array returned.\n   * @description Method for getting/setting classes.\n   *\n   * @example\n   * elem.class('c1 c2'); // class set to 'c1 c2'\n   * elem.class().$;      // ['c1', 'c2']\n   */\n  class(cls) {\n    if (!arguments.length) {\n      return new Arr(getElem(this).className.split(' '));\n    }\n\n    return this.forEach((elem) => {\n      elem.className = cls;\n    });\n  }\n\n  /**\n   * @method Elem#click\n   * @returns {Elem} Returns this.\n   * @see https://developer.mozilla.org/en/docs/Web/API/HTMLElement/click\n   * @description Synonym for\n   * [HTMLElement#click]{@link https://developer.mozilla.org/en/docs/Web/API/HTMLElement/click}.\n   */\n  click() {\n    return this.forEach(click);\n  }\n\n  /**\n   * @method Elem#clone\n   * @public\n   * @param {Boolean|*} [deep = false] - See thee link.\n   * @returns {Elem} New instance of Elem.\n   * @see https://developer.mozilla.org/en/docs/Web/API/Node/cloneNode\n   * @description Synonym for\n   * [Node#cloneNode]{@link https://developer.mozilla.org/en/docs/Web/API/Node/cloneNode}.\n   */\n  clone(deep = false) {\n    return this.object((elems, elem) => {\n      elems.add(elem.cloneNode(!!deep));\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#closest\n   * @public\n   * @param {String} selector - See the link.\n   * @returns {Elem} Set of the closest elements.\n   * @description Synonym for\n   * [Element#closest]{@link https://developer.mozilla.org/en/docs/Web/API/Element/closest}.\n   */\n  closest(selector) {\n    return this.object((elems, elem) => {\n      while (elem) {\n        if (new Elem(elem).is(selector)) {\n          return elems.add(elem);\n        }\n\n        elem = elem.parentElement;\n      }\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#contains\n   * @public\n   * @param {String|Elem|Element} element - Element to find out if it's within the first element\n   * in the set or a selector of it.\n   * @returns {Boolean} Returns if the argument within this element.\n   * @description Method is extension for\n   * [Node#contains]{@link https://developer.mozilla.org/en/docs/Web/API/Node/contains}.\n   *\n   * @example\n   * elem1.contains(elem2);   // true|false\n   * elem.contains(selector); // true|false\n   */\n  contains(element) {\n    element = toFind(element);\n\n    return getElem(this).contains(getElem(element));\n  }\n\n  /**\n   * @method Elem#create\n   * @public\n   * @param {String} type - Type of created element.\n   * @param {...String} appliedExpressions - Strings that are passed into {@link Elem#apply}.\n   * @returns {Elem} New instance of Elem - wrap of the created element.\n   * @description Method for creating elements inside this element. If this element is a document it's just created.\n   *\n   * @example\n   * elem.create('div', '#id .c1 .c2 *Some text*');\n   *\n   * // also there are shorthands for almost every HTML-element\n   * elem.div();\n   * elem.input('$type(checkbox) $name(country)');\n   */\n  create(type, ...appliedExpressions) {\n    return this.object((elems, elem) => {\n      const element = new Elem(nativeDocument.createElement(type));\n\n      if (elem !== nativeDocument) {\n        element.into(elem);\n      }\n\n      elems.add(element.apply.apply(element, appliedExpressions));\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#css\n   * @public\n   * @param {String|Object.<String, String|ElemValueCallback>} [property] - Name of the property to get or\n   * an object of the format { [property]: value, ... } to set styles.\n   * @param {String|ElemValueCallback} [value] - If the first argument is a string it should be a value to set for that property.\n   * @returns {Super|String|Elem} If no arguments passed, D-Wrap of css styles of the element returned,\n   * if 1 string argument is passed the value of the property returned otherwise returns this.\n   * @description Method for getting/setting styles. Supports !important.\n   *\n   * @example\n   * elem.css('display', 'none'); // display set to 'none' and this returned\n   * elem.css('display');         // 'none'\n   * elem.css({\n   *   display: 'inline',         // display set to 'inline'\n   *   cursor: 'pointer'          // cursor set to 'pointer'\n   * });                          // this returned\n   * elem.css().$;                // { display: 'none', cursor: 'pointer' }\n   */\n  css(property, value) {\n    const style = getElem(this).style;\n\n    if (!arguments.length) {\n      return new Str(style.cssText)\n        .split(/; ?/)\n\n        .object((o, value) => {\n          if (value) {\n            property = value.split(/: /);\n\n            o[new Str(property[0]).toCamelCase().$] = property[1];\n          }\n        });\n    }\n\n    if (arguments.length <= 1 && isString(property)) {\n      property = new Str(property).toHyphenCase().$;\n\n      return style.getPropertyValue(property) + (style.getPropertyPriority(property) ? ' !important' : '');\n    }\n\n    if (arguments.length >= 2) {\n      property = { [property]: value };\n    }\n\n    return this.forEach((elem, index) => {\n      new Super(property).forEach((value, property) => {\n        property = new Str(property).toHyphenCase().$;\n\n        if (isFunction(value)) {\n          value = value(new Elem(elem).css(property), elem, index);\n        }\n\n        elem.style.removeProperty(property);\n        elem.style.setProperty(\n          property,\n          value.replace(/ ?!important$/, ''),\n          /!important$/.test(value) ? 'important' : ''\n        );\n      });\n    });\n  }\n\n  /**\n   * @method Elem#ctx\n   * @public\n   * @param {String|Object|CtxCallback} [property] - If present and object\n   * it's assigned to the canvas rendering context, if function\n   * it's called with canvas rendering context argument, if string\n   * the value from the second argument is used for assigning\n   * this property to canvas rendering context and if not present\n   * canvas rendering context returned.\n   * @param {*} [value] - See the property argument.\n   * @returns {CanvasRenderingContext2D|Elem}\n   * @description Rendering context of the first canvas in the set.\n   *\n   * @example\n   * canvas.ctx; // CanvasRenderingContext2D\n   */\n  ctx(property, value) {\n    let ctx;\n\n    this.some((elem) => {\n      if (getName(elem) === 'canvas') {\n        ctx = elem.dwayneData.ctx;\n\n        return true;\n      }\n    });\n\n    if (!arguments.length) {\n      return ctx;\n    }\n\n    if (isFunction(property)) {\n      property(ctx);\n    } else {\n      if (arguments.length >= 2) {\n        property = { [property]: value };\n      }\n\n      assign(ctx, property);\n    }\n\n    return this;\n  }\n\n  /**\n   * @method Elem#data\n   * @public\n   * @param {String|Object.<String, String|ElemValueCallback>} [key] - Name of the data attribute (without data- prefix)\n   * to get or an object of the format { [attrName]: value, ... } to set attributes.\n   * @param {String|ElemValueCallback} [value] - If the first argument is a string it should be a value to set for that attribute.\n   * @returns {Super|String|Elem} If no arguments passed, D-Wrap of dataset of the element returned,\n   * if 1 string argument is passed the value of the data attribute returned otherwise returns this.\n   * @description Method for getting/setting data attributes. See\n   * [HTMLElement#dataset]{@link https://developer.mozilla.org/en/docs/Web/API/HTMLElement/dataset}.\n   *\n   * @example\n   * elem.data('someKey1', 'value'); // attribute data-some-key1 set to 'value1' and this returned\n   * elem.data('someKey1');          // 'value1'\n   * elem.data({\n   *   someKey1: 'value3',           // attribute data-some-key1 set to 'value3'\n   *   someKey2: 'value2'            // attribute data-some-key2 set to 'value2'\n   * });                             // this returned\n   * elem.data().$;                  // { someKey1: 'value3', someKey2: 'value2' }\n   */\n  data(key, value) {\n    const dataset = getElem(this).dataset;\n\n    if (!arguments.length) {\n      return new Super(dataset).object((o, value, key) => {\n        o[key] = value;\n      });\n    }\n\n    if (arguments.length === 1 && isString(key)) {\n      return dataset[key];\n    }\n\n    if (arguments.length >= 2) {\n      key = { [key]: value };\n    }\n\n    iterate(key, (value, key) => {\n      this.forEach((elem, index) => {\n        elem.dataset[key] = isFunction(value) ? value(elem.dataset[key], elem, index) : value;\n      });\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Elem#dataURL\n   * @param {String} [type = 'image/png'] - See the link\n   * @param {Number} [encoderOptions = 0.92] - See the link.\n   * @returns {String} Data URL for the first canvas element in the set.\n   * @see https://developer.mozilla.org/en/docs/Web/API/HTMLCanvasElement/toDataURL\n   * @description Synonym for\n   * [HTMLCanvasElement#toDataURL]{@link https://developer.mozilla.org/en/docs/Web/API/HTMLCanvasElement/toDataURL}.\n   *\n   * @example\n   * canvas.dataURL();\n   */\n  dataURL(type, encoderOptions) {\n    const ctx = this.ctx();\n\n    if (!ctx) {\n      return '';\n    }\n\n    return ctx.canvas.toDataURL.apply(ctx.canvas, arguments);\n  }\n\n  /**\n   * @method Elem#deleteRule\n   * @public\n   * @param {String} name - Name of the rule.\n   * @returns {Elem} Returns this.\n   * @description Method for deleting css styles in a style tag.\n   * Note: style element should be inside the document.\n   *\n   * @example\n   * style.deleteRule('img-size');\n   */\n  deleteRule(name) {\n    this.some((elem) => {\n      if (getName(elem) === 'style') {\n        const rule = new Arr(elem.sheet.cssRules).find((rule) => rule.dwayneData && rule.dwayneData.name === name);\n\n        if (rule) {\n          elem.sheet.deleteRule(rule.key);\n\n          return true;\n        }\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * @method Elem#dispatch\n   * @public\n   * @param {String|Event} event - Event or a string (new Event(event) is created).\n   * @param {Object} [eventInit = {}] - See the link.\n   * @param {Boolean} [eventInit.bubbles = true] - See the link.\n   * @param {Boolean} [eventInit.cancelable = true] - See the link.\n   * @param {Object} [details = {}] - Object that is assigned to the event.\n   * @returns {Elem} Returns this.\n   * @see https://developer.mozilla.org/en/docs/Web/API/Event/Event\n   * @description Synonym for\n   * [EventTarget#dispatchEvent]{@link https://developer.mozilla.org/en/docs/Web/API/EventTarget/dispatchEvent}.\n   *\n   * @example\n   * elem.dispatch('click');\n   * elem.dispatch('click', { bubbles: false, cancellable: false });\n   * elem.dispatch(new CustomEvent('custom-event'));\n   */\n  dispatch(event, eventInit = {}, details = {}) {\n    const { bubbles = true, cancelable = true } = eventInit || {};\n    let finalEvent = event;\n\n    if (!/Event$/.test(toStringTag(finalEvent))) {\n      try {\n        finalEvent = new Event(finalEvent, { bubbles, cancelable });\n      } catch (err) {\n        finalEvent = nativeDocument.createEvent('Event');\n        finalEvent.initEvent(event, bubbles, cancelable);\n      }\n\n      assign(finalEvent, details);\n    }\n\n    return this.forEach((elem) => {\n      elem.dispatchEvent(finalEvent);\n    });\n  }\n\n  /**\n   * @method Elem#elem\n   * @public\n   * @param {Number} [index = 0] - Index of the element of the set to get. Negative index means elem.length + index.\n   * @returns {Elem} New instance of Elem.\n   *\n   * @example\n   * elem.elem(1); // a wrap of the element in the set that has index 1\n   * elem.elem();  // a wrap of the element in the set that has index 0\n   */\n  elem(index = 0) {\n    if (index < 0) {\n      index = this.length + index;\n    }\n\n    return new Elem(this.$[index]);\n  }\n\n  /**\n   * @method Elem#filter\n   * @public\n   * @param {String|Function|Element[]|Elem} [selector = Boolean] - If it's a string the method filters elements with the selector\n   * otherwise super.filter is called.\n   * @returns {Elem} New instance of Elem.\n   * @description Method for filtering elements.\n   *\n   * @example\n   * elem.filter((elem) => new Elem(elem).closest('.parent'));\n   * elem.filter(elemsInArray);\n   * elem.filter(elemsInElem);\n   * elem.filter('.child');\n   */\n  filter(selector = Boolean) {\n    return new Elem(super.filter(filterSwitcher(selector)));\n  }\n\n  /**\n   * @method Elem#find\n   * @public\n   * @param {String|Function} selector - Selector to find.\n   * @returns {Elem|{ key: Key, value: * }|null} New instance of Elem if selector is a string\n   * otherwise super.find is called.\n   * @description Synonym for\n   * [Element#querySelectorAll]{@link https://developer.mozilla.org/en/docs/Web/API/Element/querySelectorAll}.\n   */\n  find(selector) {\n    if (!isString(selector)) {\n      return super.find(selector);\n    }\n\n    return this.object((elems, elem) => {\n      elems.add(find(selector, elem));\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#first\n   * @public\n   * @returns {Elem} New instance of Elem.\n   * @description Synonym for elem.elem(0).\n   */\n  first() {\n    return this.elem(0);\n  }\n\n  /**\n   * @method Elem#first\n   * @public\n   * @param {String} [selector = null] - If present, finds first child in every elem that matches the selector.\n   * If not, finds first child of each element in the set.\n   * @returns {Elem} New instance of Elem.\n   * @description Method for finding first children of each element in the set.\n   *\n   * @example\n   * elem.first();       // finds first child of each element in the elem set\n   * elem.first('.foo'); // find first child that has foo class of each element in the set\n   */\n  firstChild(selector = null) {\n    return this.object((elems, elem) => {\n      const { value: found } = new Arr(elem.children).find((elem) => new Elem(elem).is(selector)) || {};\n\n      elems.add(found);\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#focus\n   * @returns {Elem} Returns this.\n   * @see https://developer.mozilla.org/en/docs/Web/API/HTMLElement/focus\n   * @description Synonym for\n   * [HTMLElement#focus]{@link https://developer.mozilla.org/en/docs/Web/API/HTMLElement/focus}.\n   */\n  focus() {\n    return this.forEach((elem) => {\n      elem.focus();\n    });\n  }\n\n  /**\n   * @method Elem#getRule\n   * @public\n   * @param {String} name - Name of the rule.\n   * @returns {{ selector: (String|void), rules: Object }} Set of the css rules.\n   * @description Method for getting set of the rules under the name.\n   * Note: style element should be inside the document.\n   *\n   * @example\n   * style.addRule('img-size', 'img.square', {\n   *   width: '40px',\n   *   height: '40px'\n   * });\n   * style.getRule('img-size');\n   * // {\n   * //   selector: 'img.square',\n   * //   rules: {\n   * //     width: '40px',\n   * //     height: '40px'\n   * //   }\n   * // }\n   */\n  getRule(name) {\n    let found = {\n      selector: undefined,\n      rules: {}\n    };\n\n    this.some((elem) => {\n      if (getName(elem) === 'style') {\n        const { value: rule } = new Arr(elem.sheet.cssRules).find((rule) => rule.dwayneData && rule.dwayneData.name === name) || {};\n\n        if (rule) {\n          found = {\n            selector: rule.selectorText,\n            rules: new Elem(rule).css().$\n          };\n\n          return true;\n        }\n      }\n    });\n\n    return found;\n  }\n\n  /**\n   * @method Elem#hasAttr\n   * @public\n   * @param {String} attr - Name of the attribute.\n   * @returns {Boolean} If the first element in the set has the attribute.\n   * @description Method that returns if the first element in the set has the attribute or not.\n   *\n   * @example\n   * elem.attr('attr', 'value').hasAttr('attr'); // true\n   * elem.removeAttr('attr').hasAttr('attr');    // false\n   */\n  hasAttr(attr) {\n    return getElem(this).hasAttribute(attr);\n  }\n\n  /**\n   * @method Elem#hasClass\n   * @public\n   * @param {String} cls - Name of the class.\n   * @returns {Boolean} If the first element in the set has the class.\n   * @description Method that returns if the first element in the set has the class or not.\n   *\n   * @example\n   * elem.addClass('cls').hasClass('cls');    // true\n   * elem.removeClass('cls').hasClass('cls'); // false\n   */\n  hasClass(cls) {\n    return getElem(this).classList.contains(cls);\n  }\n\n  /**\n   * @method Elem#height\n   * @public\n   * @param {*|ElemValueCallback} [height] - Height to set.\n   * @returns {Elem|String} If no arguments passed height of the first element in the set returned.\n   * Otherwise all elements heights in the set are set to the height argument.\n   * @description Gets or sets height.\n   *\n   * @example\n   * elem.height(123);\n   * elem.height(); // 123\n   */\n  height(height) {\n    return this.prop.apply(this, new Arr(arguments).unshift('height').$);\n  }\n\n  /**\n   * @method Elem#hide\n   * @public\n   * @returns {Elem} Returns this.\n   * @description Hides all elements in the set.\n   *\n   * @example\n   * elem.hide();\n   */\n  hide() {\n    return this.forEach((elem) => {\n      elem = new Elem(elem);\n\n      const currentDisplay = elem.css('display');\n\n      if (currentDisplay.indexOf('none')) {\n        elem.prop('dwayneData').previousDisplay = currentDisplay;\n      }\n\n      elem.css('display', 'none !important');\n    });\n  }\n\n  /**\n   * @method Elem#html\n   * @public\n   * @param {String|ElemValueCallback|*} [html] - HTML to write instead of current HTML.\n   * @returns {Elem|String} If no arguments passed HTML of the first element in the set returned.\n   * Otherwise all elements HTML in the set are set to the html argument.\n   * @description Gets or sets HTML.\n   *\n   * @example\n   * elem.html('&lt;div&gt;1&lt;/div&gt;');\n   * elem.html(); // '&lt;div&gt;1&lt;/div&gt;'\n   */\n  html(html) {\n    if (!arguments.length) {\n      return getElem(this).innerHTML;\n    }\n\n    return this.forEach((elem, index) => {\n      elem.innerHTML = isFunction(html) ? html(elem.innerHTML, elem, index) : html;\n    });\n  }\n\n  /**\n   * @method Elem#id\n   * @public\n   * @param {String|*} [id] - Id to set.\n   * @returns {Elem|String} If no arguments passed id of the first element in the set returned.\n   * Otherwise all elements ids in the set are set to the id argument.\n   * @description Gets id or sets ids.\n   *\n   * @example\n   * elem.id('unique');\n   * elem.id(); // 'unique'\n   */\n  id(id) {\n    if (!arguments.length) {\n      return getElem(this).id;\n    }\n\n    return this.forEach((elem) => {\n      elem.id = id;\n    });\n  }\n\n  /**\n   * @member {Number} Elem#innerHeight\n   * @type {Number}\n   * @public\n   * @readonly\n   * @description Method for finding how much height content of the first element can be.\n   *\n   * @example\n   * elem.css({\n   *   boxSizing: 'border-box',\n   *   height: '200px',\n   *   paddingTop: '2px',\n   *   paddingBottom: '3px',\n   *   borderTop: '1px solid black',\n   *   borderBottom: '4px solid black'\n   * }).innerHeight; // 190\n   * elem\n   *   .css('box-sizing', 'content-box')\n   *   .innerHeight; // 200\n   * elem\n   *   .css('box-sizing', 'padding-box')\n   *   .innerHeight; // 195\n   */\n  get innerHeight() {\n    const elem = this.$[0];\n\n    if (!elem) {\n      return 0;\n    }\n\n    if (isWindow(elem)) {\n      return elem.innerHeight;\n    }\n\n    const {\n      borderTopWidth,\n      borderBottomWidth,\n      boxSizing,\n      height,\n      paddingTop,\n      paddingBottom\n    } = this.calcCSS();\n    const borders = px(borderTopWidth) + px(borderBottomWidth);\n    const paddings = px(paddingTop) + px(paddingBottom);\n\n    return px(height) - innerSwitcher(boxSizing, [paddings, borders]);\n  }\n\n  /**\n   * @member {Number} Elem#innerWidth\n   * @type {Number}\n   * @public\n   * @readonly\n   * @description Method for finding how much width content of the first element can be.\n   *\n   * @example\n   * elem.css({\n   *   boxSizing: 'border-box',\n   *   width: '200px',\n   *   paddingLeft: '2px',\n   *   paddingRight: '3px',\n   *   borderLeft: '1px solid black',\n   *   borderRight: '4px solid black'\n   * }).innerWidth; // 190\n   * elem\n   *   .css('box-sizing', 'content-box')\n   *   .innerWidth; // 200\n   * elem\n   *   .css('box-sizing', 'padding-box')\n   *   .innerWidth; // 195\n   */\n  get innerWidth() {\n    const elem = this.$[0];\n\n    if (!elem) {\n      return 0;\n    }\n\n    if (isWindow(elem)) {\n      return elem.innerWidth;\n    }\n\n    const {\n      borderLeftWidth,\n      borderRightWidth,\n      boxSizing,\n      paddingLeft,\n      paddingRight,\n      width\n    } = this.calcCSS();\n    const borders = px(borderLeftWidth) + px(borderRightWidth);\n    const paddings = px(paddingLeft) + px(paddingRight);\n\n    return px(width) - innerSwitcher(boxSizing, [paddings, borders]);\n  }\n\n  /**\n   * @method Elem#insertAfter\n   * @public\n   * @param {String|Elem|Element} element - Element to insert this element after or a selector of it.\n   * @returns {Elem} Returns this.\n   * @description Puts the elements from the set after the element specified by the argument.\n   * The elements remain in the same order.\n   *\n   * @example\n   * elem.insertAfter(elem2);\n   * elem.insertAfter(document.getElementById('id'));\n   * elem.insertAfter('#id div.c1');\n   */\n  insertAfter(element) {\n    element = toFind(element).first();\n\n    let parent = element.parent();\n\n    if (!parent.length) {\n      return this;\n    }\n\n    element = element.next().$[0];\n    parent = parent.$[0];\n\n    return this.forEach((elem) => {\n      if (element) {\n        parent.insertBefore(elem, element);\n\n        element = elem;\n      } else {\n        parent.appendChild(elem);\n      }\n    });\n  }\n\n  /**\n   * @method Elem#insertBefore\n   * @public\n   * @param {String|Elem|Element} element - Element to insert this element before or a selector of it.\n   * @returns {Elem} Returns this.\n   * @description Puts the elements from the set before the element specified by the argument.\n   * The elements remain in the same order.\n   *\n   * @example\n   * elem.insertBefore(elem2);\n   * elem.insertBefore(document.getElementById('id'));\n   * elem.insertBefore('#id div.c1');\n   */\n  insertBefore(element) {\n    element = toFind(element).first();\n\n    let parent = element.parent();\n\n    if (!parent.length) {\n      return this;\n    }\n\n    element = element.$[0];\n    parent = parent.$[0];\n\n    return this.forEach((elem) => {\n      parent.insertBefore(elem, element);\n    });\n  }\n\n  /**\n   * @method Elem#into\n   * @public\n   * @param {String|Elem|Element} element - Element to put this elements into or a selector of it.\n   * @returns {Elem} Returns this.\n   * @description Method is similar to\n   * [Node#appendChild]{@link https://developer.mozilla.org/en/docs/Web/API/Node/appendChild}.\n   *\n   * @example\n   * elem.into(elem2);\n   * elem.into(document.getElementById('id'));\n   * elem.into('#id div.c1');\n   */\n  into(element) {\n    element = toFind(element).$[0];\n\n    if (!element) {\n      return this;\n    }\n\n    return this.forEach((elem) => {\n      element.appendChild(elem);\n    });\n  }\n\n  /**\n   * @method Elem#is\n   * @public\n   * @param {String} selector\n   * @returns {Boolean} If the first element in the set matches the selector.\n   * If the selector is undefined or null always returns true.\n   * @description Synonym for\n   * [Element#matches]{@link https://developer.mozilla.org/en/docs/Web/API/Element/matches}.\n   *\n   * @example\n   * elem.addClass('cls');\n   * elem.is('.cls');         // true\n   *\n   * elem.removeClass('cls');\n   * elem.is('.cls');         // false\n   */\n  is(selector) {\n    if (isNull(selector)) {\n      return true;\n    }\n\n    const elem = getElem(this);\n    const matches = elem.matches ||\n      elem.matchesSelector ||\n      elem.webkitMatchesSelector ||\n      elem.mozMatchesSelector ||\n      elem.msMatchesSelector ||\n      elem.oMatchesSelector;\n\n    try {\n      return matches.call(elem, selector);\n    } catch (err) {\n      console.error(`Selector '${ selector }' is not a valid selector (Elem#is)`);\n\n      return false;\n    }\n  }\n\n  /**\n   * @method Elem#isBroken\n   * @public\n   * @returns {Boolean} If the first image in the set is broken.\n   * @description Returns if the first element in the set is broken. Not image and not loaded image is considered proper.\n   *\n   * @example\n   * const img = elem.img().on({\n   *   'load': onload,\n   *   'error': onload\n   * });\n   *\n   * onload = () => {\n   *   console.log(img.isBroken()); // true\n   * };\n   *\n   * img.ref('/some/non-existent/site/not-found.png');\n   */\n  isBroken() {\n    let isBroken = false;\n\n    this.some((elem) => {\n      if (getName(elem) === 'img') {\n        isBroken = !!(elem.complete && (!elem.naturalWidth || !elem.naturalHeight));\n\n        return true;\n      }\n    });\n\n    return isBroken;\n  }\n\n  /**\n   * @method Elem#isWithinDocument\n   * @public\n   * @returns {Boolean} Returns if the first element in the set is within the document or not.\n   * @description Returns if the first element in the set is within the document or not.\n   *\n   * @example\n   * new Elem(document.body).isWithinDocument();  // true\n   * new Elem(document).div().isWithinDocument(); // false\n   */\n  isWithinDocument() {\n    return this.first().closest('html').length !== 0;\n  }\n\n  /**\n   * @method Elem#last\n   * @public\n   * @returns {Elem} New instance of Elem.\n   * @description Synonym for elem.elem(-1).\n   */\n  last() {\n    return this.elem(-1);\n  }\n\n  /**\n   * @method Elem#last\n   * @public\n   * @param {String} [selector = null] - If present, finds last child in every elem that matches the selector.\n   * If not, finds last child of each element in the set.\n   * @returns {Elem} New instance of Elem.\n   * @description Method for finding last children of each element in the set.\n   *\n   * @example\n   * elem.last();       // finds last child of each element in the elem set\n   * elem.last('.foo'); // find last child that has 'foo' class of each element in the set\n   */\n  lastChild(selector = null) {\n    return this.object((elems, elem) => {\n      const { value: found } = new Arr(elem.children)\n        .reverse()\n        .find((elem) => new Elem(elem).is(selector)) || {};\n\n      elems.add(found);\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#load\n   * @public\n   * @returns {Promise.<{ proper: Elem, broken: Elem }>} Promise with broken and proper images.\n   * @description Loads each image in the set and puts it to the proper or broken array.\n   *\n   * @example\n   * images.load().then(({ broken }) => {\n   *   broken.filter('img').ref('/fallback.png');\n   * });\n   */\n  load() {\n    const images = {\n      proper: new Elem(),\n      broken: new Elem()\n    };\n\n    return Promise.all(\n      this\n        .filter((elem) => getName(elem) === 'img')\n        .map((elem) => {\n          const $elem = new Elem(elem);\n\n          if (elem.complete) {\n            images[$elem.isBroken() ? 'broken' : 'proper'].push(elem);\n\n            return;\n          }\n\n          return new Promise((resolve) => {\n            const removeListeners = $elem.on({\n              load() {\n                images.proper.add(elem);\n\n                removeListeners();\n                resolve();\n              },\n              error() {\n                images.broken.add(elem);\n\n                removeListeners();\n                resolve();\n              }\n            });\n          });\n        })\n        .$\n    ).then(() => images);\n  }\n\n  /**\n   * @method Elem#moveAttr\n   * @public\n   * @param {String} attr - Attribute to move to the first element.\n   * @param {String} [value = ''] - Value to set for the attribute. If not set attribute of the previous element or '' used.\n   * @returns {Elem} Returns this.\n   * @description Method for moving an attribute from previous element to the next one (first element in this set).\n   *\n   * @example\n   * elem1.moveAttr('attr', 'value');     // attribute 'attr' set to 'value' on elem1\n   * elem2.moveAttr('attr');              // attribute 'attr' removed from elem1. set to 'value' on elem2\n   * elem3.moveAttr('attr', 'new value'); // attribute 'attr' removed from elem2. set to 'new value' on elem3\n   */\n  moveAttr(attr, value = '') {\n    const prev = attrs[attr];\n    const elem = this.elem();\n\n    if (prev && elem.length) {\n      if (arguments.length < 2) {\n        value = prev.attr(attr);\n      }\n\n      prev.removeAttr(attr);\n    }\n\n    if (elem.length) {\n      attrs[attr] = elem.attr(attr, value);\n    }\n\n    return this;\n  }\n\n  /**\n   * @method Elem#moveClass\n   * @public\n   * @param {String} cls - Class to move to the first element.\n   * @returns {Elem} Returns this.\n   * @description Method for moving a class from previous element to the next one (first element in this set).\n   *\n   * @example\n   * elem1.moveClass('cls'); // class 'cls' added to elem1\n   * elem2.moveClass('cls'); // class 'cls' removed from elem1. added to elem1\n   */\n  moveClass(cls) {\n    const prev = classes[cls];\n    const elem = this.elem();\n\n    if (prev && elem.length) {\n      prev.removeClass(cls);\n    }\n\n    if (elem.length) {\n      classes[cls] = elem.addClass(cls);\n    }\n\n    return this;\n  }\n\n  /**\n   * @member Elem#name\n   * @type {String}\n   * @public\n   * @readonly\n   * @description tagName (lowercased) of the first element in the set.\n   *\n   * @example\n   * const elem1 = elem.create('div');\n   * elem1.name // 'div'\n   */\n  get name() {\n    return getName(this.$[0]);\n  }\n\n  /**\n   * @method Elem#next\n   * @public\n   * @param {String} [selector = null] - If present, finds next element to every elem that matches the selector.\n   * If not, finds next element to each element in the set.\n   * @returns {Elem} New instance of Elem.\n   * @description Method for finding next element to each element in the set.\n   *\n   * @example\n   * elem.next();       // finds next element to each element in the set\n   * elem.next('.foo'); // finds next element to each element that has 'foo' class\n   */\n  next(selector = null) {\n    return this.object((elems, elem) => {\n      /* eslint no-cond-assign: 0 */\n      while (elem = elem.nextElementSibling) {\n        if (isNull(selector) || new Elem(elem).is(selector)) {\n          return elems.add(elem);\n        }\n      }\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#off\n   * @public\n   * @param {...ElemEventString} events - Events to remove.\n   * @returns {Elem} Returns this.\n   * @description Method that removes all the listeners from each element in the set specified by the events arguments.\n   *\n   * @example\n   * elem.off('click');\n   * elem.off('click, input');\n   * elem.off('click, input', 'focus');\n   */\n  off(...events) {\n    return this.forEach((elem) => {\n      const { listeners } = elem.dwayneData;\n\n      iterate(arguments, (event) => {\n        iterate(event.split(eventSeparator), (event) => {\n          (listeners[event] || new Super()).forEach(({ removeListener }) => removeListener());\n        });\n      });\n    });\n  }\n\n  /**\n   * @method Elem#on\n   * @public\n   * @param {ElemEventString|Object.<ElemEventString|Listener>} event - Either a {@link ElemEventString} string\n   * or an object with event keys (a key is also ElemEventString) and listeners values.\n   * @param {String} [selector = null] - Selector to filter event targets.\n   * @param {Listener} [listener] - If the first argument is a string it must be a listener function for\n   * specified event(s).\n   * @returns {ElemRemoveListeners} Function that takes optional event argument.\n   * @description Adds event listeners for all the elements in the set.\n   * For debugging: If you need to know what listeners are in work (and what selectors filter targets)\n   * you can look at the base property of the only dwayne listener that listens for the event\n   * and find all working listeners in listener.base.dwayneData.listeners[event].$.\n   *\n   * @example\n   * elem.on(\n   *   'change, input',\n   *   'input, select, textarea, datalist, keygen, output',\n   *   (e, elem, index) => console.log(elem.value)\n   * );\n   * elem.on(\n   *   'change, input',\n   *   (e, elem, index) => console.log(elem.value)\n   * );\n   * elem.on(\n   *   {\n   *     'change, input': (e, elem, index) => console.log(elem.value),\n   *     'blur': console.log('blur')\n   *   },\n   *   'input, select, textarea, datalist, keygen, output'\n   * );\n   *\n   * const removeListeners = elem.on({\n   *   'change, input': (e, elem, index) => console.log(elem.value),\n   *   'blur': console.log('blur')\n   * });\n   *\n   * removeListeners('click');\n   * removeListeners('blur, change');\n   * removeListeners('blur, change', 'input');\n   * removeListeners();\n   */\n  on(event, selector = null, listener) {\n    const allListeners = new Super({});\n\n    if (isFunction(selector)) {\n      listener = selector;\n      selector = null;\n    }\n\n    if (isString(event)) {\n      event = { [event]: listener };\n    }\n\n    event = new Super(event).object((listeners, listener, event) => {\n      iterate(event.split(eventSeparator), (event) => {\n        listeners[event] = listener;\n      });\n    });\n\n    this.forEach((elem) => {\n      const { listeners } = (windowsDwayneData.find(({ element }) => element === elem) || {}).value || elem.dwayneData;\n\n      event.forEach((listener, event) => {\n        const removeEventListeners = listeners[event] = listeners[event] || new Super({}).define('index', {\n          value: 0,\n          configurable: true,\n          writable: true\n        });\n        const index = removeEventListeners.prop('index');\n\n        if (!removeEventListeners.has('listener')) {\n          const newListener = (e) => {\n            removeEventListeners.forEach(({ selector, listener }) => {\n              if (new Elem(e.target).is(selector)) {\n                listener.call(elem, e, elem, index);\n              }\n            });\n          };\n\n          newListener.base = elem;\n\n          elem.addEventListener(event, newListener, false);\n          removeEventListeners.define('listener', {\n            value: newListener,\n            configurable: true,\n            writable: true\n          });\n        }\n\n        const removeListener = () => {\n          removeEventListeners.delete(index);\n\n          if (!removeEventListeners.count) {\n            elem.removeEventListener(event, removeEventListeners.prop('listener'), false);\n            removeEventListeners.delete('listener');\n          }\n        };\n\n        allListeners.prop(event, (allListeners.prop(event) || new Arr()).push(removeListener));\n\n        removeEventListeners.assign({\n          index: index + 1,\n          [index]: {\n            selector,\n            listener,\n            removeListener\n          }\n        });\n      });\n    });\n\n    return function removeEventListeners(event) {\n      if (arguments.length) {\n        iterate(arguments, (event) => {\n          iterate(event.split(eventSeparator), (event) => {\n            if (allListeners.has(event)) {\n              allListeners.prop(event).forEach((removeListener) => removeListener());\n              allListeners.delete(event);\n            }\n          });\n        });\n\n        return;\n      }\n\n      allListeners.forEach((removeListeners) => {\n        removeListeners.forEach((removeListener) => removeListener());\n      });\n    };\n  }\n\n  /**\n   * @member {Number} Elem#outerWidth\n   * @type {Number}\n   * @public\n   * @readonly\n   * @description Method for finding how much height the element actually is.\n   *\n   * @example\n   * elem.css({\n   *   boxSizing: 'border-box',\n   *   height: '200px',\n   *   paddingTop: '2px',\n   *   paddingBottom: '3px',\n   *   borderTop: '1px solid black',\n   *   borderBottom: '4px solid black'\n   *   marginTop: '0px',\n   *   marginBottom: '5px'\n   * }).outerHeight; // 205\n   * elem\n   *   .css('box-sizing', 'content-box')\n   *   .outerHeight; // 215\n   * elem\n   *   .css('box-sizing', 'padding-box')\n   *   .outerHeight; // 210\n   */\n  get outerHeight() {\n    const elem = this.$[0];\n\n    if (!elem) {\n      return 0;\n    }\n\n    if (isWindow(elem)) {\n      return elem.outerHeight;\n    }\n\n    const {\n      borderTopWidth,\n      borderBottomWidth,\n      boxSizing,\n      height,\n      marginTop,\n      marginBottom,\n      paddingTop,\n      paddingBottom\n    } = this.calcCSS();\n    const borders = px(borderTopWidth) + px(borderBottomWidth);\n    const paddings = px(paddingTop) + px(paddingBottom);\n\n    return px(height) + px(marginTop) + px(marginBottom) + outerSwitcher(boxSizing, [borders, paddings]);\n  }\n\n  /**\n   * @member {Number} Elem#outerWidth\n   * @type {Number}\n   * @public\n   * @readonly\n   * @description Method for finding how much width the element actually is.\n   *\n   * @example\n   * elem.css({\n   *   boxSizing: 'border-box',\n   *   width: '200px',\n   *   paddingLeft: '2px',\n   *   paddingRight: '3px',\n   *   borderLeft: '1px solid black',\n   *   borderRight: '4px solid black'\n   *   marginLeft: '0px',\n   *   marginRight: '5px'\n   * }).outerWidth; // 205\n   * elem\n   *   .css('box-sizing', 'content-box')\n   *   .outerWidth; // 215\n   * elem\n   *   .css('box-sizing', 'padding-box')\n   *   .outerWidth; // 210\n   */\n  get outerWidth() {\n    const elem = this.$[0];\n\n    if (!elem) {\n      return 0;\n    }\n\n    if (isWindow(elem)) {\n      return elem.outerWidth;\n    }\n\n    const {\n      borderLeftWidth,\n      borderRightWidth,\n      boxSizing,\n      marginLeft,\n      marginRight,\n      paddingLeft,\n      paddingRight,\n      width\n    } = this.calcCSS();\n    const borders = px(borderLeftWidth) + px(borderRightWidth);\n    const paddings = px(paddingLeft) + px(paddingRight);\n\n    return px(width) + px(marginLeft) + px(marginRight) + outerSwitcher(boxSizing, [borders, paddings]);\n  }\n\n  /**\n   * @method Elem#parent\n   * @public\n   * @returns {Elem} New instance of Elem.\n   * @description Method returns wrap of the set of the parent elements of each element in the set.\n   */\n  parent() {\n    return this.object((elems, elem) => elems.add(elem.parentElement), new Elem());\n  }\n\n  /**\n   * @method Elem#parentTree\n   * @public\n   * @returns {Elem} New instance of Elem.\n   * @description Returns wrap of all parents of each element in the set.\n   *\n   * @example\n   * elem.parentTree(); // Elem\n   */\n  parentTree() {\n    return this.object((elems, elem) => {\n      while (elem = elem.parentNode) {\n        elems.add(elem);\n      }\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#prev\n   * @public\n   * @param {String} [selector = null] - If present, finds previous element to every elem that matches the selector.\n   * If not, finds previous element to each element in the set.\n   * @returns {Elem} New instance of Elem.\n   * @description Method for finding previous element to each element in the set.\n   *\n   * @example\n   * elem.next();       // finds previous element to each element in the set\n   * elem.next('.foo'); // finds previous element to each element that has 'foo' class\n   */\n  prev(selector = null) {\n    return this.object((elems, elem) => {\n      /* eslint no-cond-assign: 0 */\n      while (elem = elem.previousElementSibling) {\n        if (isNull(selector) || new Elem(elem).is(selector)) {\n          return elems.add(elem);\n        }\n      }\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#prop\n   * @public\n   * @param {String|Object.<String, ElemValueCallback|*>} property - Either a string of a property or an assigned object.\n   * @param {ElemValueCallback|*} [value] - If a property parameter is a string\n   * this has to be an assigned value if it's present.\n   * @returns {Elem|*} Returns this if it's setter or a value if getter.\n   * @description Method that is either a property getter for the first element in the set\n   * or a setter for every element in the set.\n   *\n   * @example\n   * elem.prop('draggable', false);\n   * elem.prop('draggable'); // false\n   */\n  prop(property, value) {\n    if (arguments.length <= 1 && isString(property)) {\n      return this.$[0] ? this.$[0][property] : undefined;\n    }\n\n    if (arguments.length >= 2) {\n      property = { [property]: value };\n    }\n\n    return this.forEach((elem, index) => {\n      iterate(property, (value, prop) => {\n        elem[prop] = isFunction(value) ? value(elem[prop], elem, index) : value;\n      });\n    });\n  }\n\n  /**\n   * @method Elem#ref\n   * @public\n   * @param {String|ElemValueCallback} [link] - If it's present link to a resource.\n   * @returns {Elem|String} If the link argument isn't present it's a getter of the 'src' attribute\n   * for the one of following elements: img, script, iframe, audio, video; of the 'action' attribute\n   * for a form element and of the 'href' attribute for the rest. If it's present it's a setter\n   * of the same attribute for all the element in the set.\n   * @description Method for getting resources links and setting them.\n   *\n   * @example\n   * elem.ref('/some/cool/image.png');\n   * elem.ref(); // '/some/cool/image.png'\n   */\n  ref(link) {\n    if (!arguments.length) {\n      return this.attr(refSwitcher(this.name));\n    }\n\n    return this.forEach((elem) => {\n      elem = new Elem(elem);\n\n      elem.attr(refSwitcher(elem.name), link);\n    });\n  }\n\n  /**\n   * @method Elem#remove\n   * @public\n   * @returns {Elem} Returns this.\n   * @description Removes all the elements from the set from the document.\n   * Note: it doesn't remove them from the set so watch out for the memory leaks.\n   *\n   * @example\n   * elem.remove();\n   */\n  remove() {\n    return this.forEach((elem) => {\n      const parent = elem.parentElement;\n\n      if (parent) {\n        parent.removeChild(elem);\n      }\n    });\n  }\n\n  /**\n   * @method Elem@removeAttr\n   * @public\n   * @param {...String} attributes - Attributes to remove.\n   * @returns {Elem} Returns this.\n   * @description Removes all the attributes from arguments from all the elements in the set.\n   *\n   * @example\n   * elem.removeAttr('foo', 'bar', 'baz');\n   */\n  removeAttr(...attributes) {\n    return this.forEach((elem) => {\n      iterate(arguments, (attr) => {\n        elem.removeAttribute(attr);\n      });\n    });\n  }\n\n  /**\n   * @method Elem#removeClass\n   * @public\n   * @param {...String} classes - Classes to remove.\n   * @returns {Elem} Returns this.\n   * @description Removes all the classes from arguments from all the elements in the set.\n   *\n   * @example\n   * elem.removeClass('foo', 'bar', 'baz');\n   */\n  removeClass(...classes) {\n    return this.forEach((elem) => {\n      const list = elem.classList;\n\n      iterate(arguments, (cls) => list.remove(cls));\n    });\n  }\n\n  /**\n   * @method Elem#removeCSS\n   * @public\n   * @param {...String} props - CSS properties to remove.\n   * @returns {Elem} Returns this.\n   * @description Removes all the CSS properties from arguments from all the elements in the set.\n   *\n   * @example\n   * elem.removeCSS('display', 'position', 'margin');\n   */\n  removeCSS(...props) {\n    return this.forEach((elem) => {\n      iterate(arguments, (css) => {\n        elem.style.removeProperty(css);\n      });\n    });\n  }\n\n  /**\n   * @method Elem#replace\n   * @public\n   * @param {String|Elem|Element} element - Element to replace the first element in the set\n   * with a set of elements specified by the argument (Element, set of elements or a selector of them).\n   * @returns {Elem} Returns this.\n   * @description Method is similar to\n   * [Node#replaceChild]{@link https://developer.mozilla.org/en/docs/Web/API/Node/replaceChild}.\n   *\n   * @example\n   * elem.replace(elem2);\n   * elem.replace(document.getElementById('id'));\n   * elem.replace('#id div.c1');\n   */\n  replace(element) {\n    element = toFind(element);\n\n    const parent = this.first().parent();\n\n    if (!parent.length) {\n      return this;\n    }\n\n    let elem = parent;\n    let method = 'into';\n    const next = this.next().first().$[0];\n    const prev = this.prev().first().$[0];\n\n    if (next) {\n      elem = next;\n      method = 'insertBefore';\n    } else if (prev) {\n      elem = prev;\n      method = 'insertAfter';\n    }\n\n    this.first().remove();\n\n    element[method](elem);\n  }\n\n  /**\n   * @method Elem#setOf\n   * @public\n   * @param {String} type - HTML element type.\n   * @param {Number|Object|*[]} iterator - A number (how many elements to create inside each element),\n   * an object or an array to iterate over.\n   * @param {ElemSetOfCallback} callback\n   * @returns {Elem} New instance of Elem.\n   * @description Function for creating set of elements inside each element in the set based on an array or an object.\n   *\n   * @example\n   * table.setOf('tr', [[1, 2], [3, 4], [5, 6]], (row, array) => {\n   *   D(row).setOf('td', array, (col, number) => {\n   *     D(col).text(number);\n   *   });\n   * });\n   */\n  setOf(type, iterator, callback) {\n    validate({ 2: callback }, { 2: ['function'] }, 'Elem#setOf');\n\n    iterator = new Super(iterator).$;\n\n    if (isNumber(iterator)) {\n      try {\n        validate({ 1: iterator }, { 1: ['intLike', '>=0'] }, 'Elem#setOf');\n      } catch (e) {\n        throw new Error('2nd argument must be either or non-negative integer, or object! (at Elem#setOf)');\n      }\n\n      iterator = array(iterator).$;\n    }\n\n    return this.object((elems, elem, index) => {\n      iterate(iterator, (value, key) => {\n        const created = new Elem(elem).create(type);\n\n        callback(created.$[0], value, key, iterator, elem, index);\n\n        elems.add(created);\n      });\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#show\n   * @public\n   * @returns {Elem} Returns this.\n   * @description Shows all elements in the set.\n   * If an element was hidden using {@link Elem#hide} previous display is set.\n   *\n   * @example\n   * elem.show();\n   */\n  show() {\n    return this.forEach((elem) => {\n      const { dwayneData } = elem;\n\n      elem = new Elem(elem);\n\n      if (elem.css('display').indexOf('none') === 0) {\n        elem.css('display', dwayneData.previousDisplay);\n      }\n\n      dwayneData.previousDisplay = '';\n    });\n  }\n\n  /**\n   * @method Elem#text\n   * @public\n   * @param {String|ElemValueCallback|*} [text] - Text to write instead of current text.\n   * @returns {Elem|String} If no arguments passed text of the first element in the set returned.\n   * Otherwise all elements texts in the set are set to the text argument.\n   * @description Gets or sets text.\n   *\n   * @example\n   * elem.text('123');\n   * elem.text(); // '123'\n   */\n  text(text) {\n    if (!arguments.length) {\n      return this.prop(textProperty);\n    }\n\n    return this.forEach((elem, index) => {\n      const txt = elem[textProperty];\n\n      new Elem(elem)\n        .html('')\n        .addText(\n          isFunction(text)\n            ? text(txt, elem, index)\n            : text\n        );\n    });\n  }\n\n  /**\n   * @method Elem#toggleAttr\n   * @public\n   * @param {String} attr - Attribute to toggle.\n   * @param {Boolean|*} [condition] - If present and the condition is truthy method adds the attribute\n   * with the '' value and if falsey method removes the attribute. If not present method adds\n   * the attribute if it doesn't exist and removes if it does.\n   * @returns {Elem} Returns this.\n   * @description Method for toggling attributes.\n   *\n   * @example\n   * elem.toggleAttr('attr');\n   * elem.toggleAttr('attr', someCondition);\n   */\n  toggleAttr(attr, condition) {\n    return this.forEach((elem) => {\n      elem = new Elem(elem);\n\n      if (arguments.length < 2 ? !elem.hasAttr(attr) : condition) {\n        elem.attr(attr, '');\n      } else {\n        elem.removeAttr(attr);\n      }\n    });\n  }\n\n  /**\n   * @method Elem#toggleAttr\n   * @public\n   * @param {String} cls - Class to toggle.\n   * @param {Boolean|*} [condition] - If present and the condition is truthy method adds the class\n   * and if falsey method removes the class. If not present method adds\n   * the class if it doesn't exist and removes if it does.\n   * @returns {Elem} Returns this.\n   * @description Method for toggling classes.\n   *\n   * @example\n   * elem.toggleClass('cls');\n   * elem.toggleClass('cls', someCondition);\n   */\n  toggleClass(cls, condition) {\n    return (arguments.length < 2 ? !this.hasClass(cls) : condition)\n      ? this.addClass(cls)\n      : this.removeClass(cls);\n  }\n\n  get toStringTag() {\n    return toStringTag(this.$$);\n  }\n\n  /**\n   * @method Elem#up\n   * @param {Integer} [level = 1] - What level up along the tree should be the parent.\n   * @returns {Elem} New instance of Elem.\n   * @description Creates a collection of parents of level &lt;level&gt;.\n   *\n   * @example\n   * elem.up();\n   * elem.up(2);\n   */\n  up(level = 1) {\n    validate([level], [['intLike', '>=0']], 'Elem#up');\n\n    level = Number(level);\n\n    return this.object((elems, elem) => {\n      let n = level;\n\n      while (n-- && elem) {\n        elem = elem.parentElement;\n      }\n\n      elems.add(elem);\n    }, new Elem());\n  }\n\n  /**\n   * @method Elem#validate\n   * @public\n   * @param {ValidateCallback} [validator] - If present, function that validates inputs.\n   * @returns {Elem|Object.<String, Error|*>|{ form: Error?, inputs: <Object.<String, Error>>|null }|null}\n   * If a callback argument provided returns this. If no arguments provided returns either an object\n   * with input names keys and errors values or null if no errors found.\n   * @description If a callback argument provided adds it to the element validators list.\n   * If no arguments provided validates every input element in the set with its own functions.\n   * If an element is a form it validates all input elements inside it. After the validation\n   * fires 'validate' event with 'valid' and 'error' (if form it's errors) properties.\n   *\n   * @example\n   * form.on('input change', 'input', (value, input) => {\n   *   const $input = D(input);\n   *\n   *   if (Number(value) %3) {\n   *     $input.attr('invalid', '');\n   *\n   *     throw new Error('The value should be divided by 3!');\n   *   }\n   *\n   *   $input.removeAttr('invalid');\n   * });\n   */\n  validate(validator) {\n    validate([validator], ['function||!'], 'Elem#validate');\n\n    if (validator) {\n      return this.forEach(({ dwayneData }) => {\n        dwayneData.validators.push(validator);\n      });\n    }\n\n    const errors = new Super({ errors: null });\n\n    this\n      .filter(`${ inputElements }, form`)\n      .forEach((elem, index) => {\n        if (getName(elem) === 'form') {\n          let formErrors = { errors: null };\n          const form = new Elem(elem);\n          const inputs = form.find(inputElements);\n\n          inputs.forEach((input, index) => {\n            validatorWrap(input, index, formErrors);\n          });\n\n          errors.deepAssign(formErrors);\n\n          formErrors = formErrors.errors;\n\n          form.dispatch('validate', {}, {\n            valid: !formErrors,\n            errors: formErrors\n          });\n\n          return inputs.forEach((input) => {\n            const inputError = (formErrors || {})[input.name];\n\n            new Elem(input).dispatch('validate', {}, {\n              valid: !inputError,\n              error: inputError || null\n            });\n          });\n        }\n\n        let inputError = { errors: null };\n\n        validatorWrap(elem, index, inputError);\n        errors.deepAssign(inputError);\n\n        inputError = (inputError.errors || {})[elem.name];\n\n        new Elem(elem).dispatch('validate', {}, {\n          valid: !inputError,\n          error: inputError || null\n        });\n      });\n\n    function validatorWrap(input, index, errors) {\n      try {\n        if (input.validity && !input.validity.valid) {\n          throw new Error(input.validationMessage);\n        }\n\n        input.dwayneData.validators.forEach((validator) => {\n          validator(input.value, input, index);\n        });\n      } catch (err) {\n        (errors.errors = errors.errors || {})[input.name] = err;\n      }\n    }\n\n    if (errors.every((error) => isNull(error))) {\n      return null;\n    }\n\n    return errors.$.errors;\n  }\n\n  /**\n   * @method Elem#width\n   * @public\n   * @param {*|ElemValueCallback} [width] - Width to set.\n   * @returns {Elem|String} If no arguments passed width of the first element in the set returned.\n   * Otherwise all elements widths in the set are set to the width argument.\n   * @description Gets or sets width.\n   *\n   * @example\n   * elem.width(123);\n   * elem.width(); // 123\n   */\n  width(width) {\n    return this.prop.apply(this, new Arr(arguments).unshift('width').$);\n  }\n}\n\ndefineProperties(Elem.prototype, {\n  [Symbol.toStringTag]: 'Elem'\n});\n\n/**\n * @const {Elem} win\n * @type {Elem}\n * @public\n * @description Elem instance of window.\n */\nexport const win = new Elem(global);\n\n/**\n * @const {Elem} doc\n * @type {Elem}\n * @public\n * @description Elem instance of document.\n */\nexport const doc = new Elem(nativeDocument);\n\n/**\n * @const {Elem} html\n * @type {Elem}\n * @public\n * @description Elem instance of document.documentElement.\n */\nexport const html = new Elem(nativeDocument.documentElement);\n\n/**\n * @const {Elem} body\n * @type {Elem}\n * @public\n * @description Elem instance of document.body.\n */\nexport const body = new Elem(nativeDocument.body);\n\n/**\n * @const {Elem} head\n * @type {Elem}\n * @public\n * @description Elem instance of document.head.\n */\nexport const head = new Elem(nativeDocument.head);\n\ndynamicDefineProperties(Elem.prototype, elements, (elem) => function () {\n  return this.create.apply(this, new Arr(arguments).unshift(elem).$);\n});\n\ndynamicDefineProperties(Elem.prototype, canvasGetMethods, (method) => function () {\n  const ctx = this.ctx();\n\n  if (ctx) {\n    return ctx[method].apply(ctx, arguments);\n  }\n});\n\ndynamicDefineProperties(Elem.prototype, canvasRestMethods, (method) => function () {\n  const ctx = this.ctx();\n\n  if (ctx) {\n    ctx[method].apply(ctx, arguments);\n  }\n\n  return this;\n});\n\n/**\n * @function toFind\n * @private\n * @param {Element|Elem|String} elem - Element, selector of Elements or Elem.\n * @returns {Elem} Instance of Elem.\n */\nfunction toFind(elem) {\n  if (isString(elem)) {\n    elem = find(elem);\n  }\n\n  return new Elem(elem);\n}\n\n/**\n * @function isElem\n * @private\n * @param {*} value - Value to check if it's Elem.\n * @returns {Boolean} If the value is Elem.\n * @description Returns if the value is Elem or not.\n */\nfunction isElem(value) {\n  return value instanceof Elem;\n}\n\n/**\n * @function isWindow\n * @private\n * @param {*} value - Value to check if it's Window.\n * @returns {Boolean} If the value is Window.\n * @description Returns if the value is Window or not.\n */\nfunction isWindow(value) {\n  return toStringTag(value) === 'Window';\n}\n\n/**\n * @function isHTMLDocument\n * @private\n * @param {*} value - Value to check if it's HTMLDocument.\n * @returns {Boolean} If the value is HTMLDocument.\n * @description Returns if the value is HTMLDocument or not.\n */\nfunction isHTMLDocument(value) {\n  return toStringTag(value) === 'HTMLDocument';\n}\n\n/**\n * @function getElem\n * @private\n * @param {Elem} elem - Element to check.\n * @returns {Element} The argument or a fallback if needed.\n */\nfunction getElem(elem) {\n  return elem.$[0] || emptyDiv;\n}\n\n/**\n * @function getName\n * @private\n * @param {Element} [elem] - Element which name is needed to know.\n * @returns {String} Elements name\n */\nfunction getName(elem) {\n  return (elem && elem.tagName && elem.tagName.toLowerCase()) || '';\n}\n\n/**\n * @function addDwayneData\n * @private\n * @param {Element} elem - Element to add dwayneData to.\n * @returns {void}\n */\nfunction addDwayneData(elem) {\n  if (!{}.hasOwnProperty.call(elem, 'dwayneData') && !isWindow(elem)) {\n    /**\n     * @member Element#dwayneData\n     * @type {Object}\n     * @protected\n     * @property {String} previousDisplay - Parameter used for hiding/showing elements.\n     * @property {Object.<String, Super>} removeListeners - Parameter used for remove event listeners.\n     * @property {CanvasRenderingContext2D} [ctx] - Canvas rendering context.\n     * @property {Arr} validators - Validators assigned to element.\n     * @description D data.\n     */\n    Object.defineProperty(elem, 'dwayneData', {\n      value: {\n        previousDisplay: '',\n        listeners: {},\n        ctx: getName(elem) === 'canvas' && elem.getContext('2d'),\n        validators: new Arr([])\n      }\n    });\n  } else if (!windowsDwayneData.some(({ element }) => element === elem)) {\n    windowsDwayneData.push({\n      element: elem,\n      listeners: {}\n    });\n  }\n}\n\nconstructors[2].push({\n  check: (elem) => (\n    isElement(elem) ||\n    isWindow(elem) ||\n    isHTMLDocument(elem) ||\n    /^(HTMLCollection|NodeList)$/.test(toStringTag(elem))\n  ),\n  cls: Elem\n});\n\n/**\n * @function find\n * @public\n * @param {String} selector - Selector to find.\n * @param {Element} [base = document] - Base to find in.\n * @returns {Elem} New instance of Elem.\n * @description Synonym for\n * [Document#querySelectorAll]{@link https://developer.mozilla.org/en/docs/Web/API/Document/querySelectorAll}.\n */\nexport function find(selector, base = nativeDocument) {\n  return new Elem(base.querySelectorAll(String(selector)));\n}\n\n/**\n * @function parseHTML\n * @public\n * @param {String} html - HTML to parse.\n * @returns {Elem} New instance of Elem.\n * @description Parses HTML and returns the contents.\n *\n * @example\n * parseHTML('&lt;div&gt;123&lt;/div&gt;'); // Elem\n */\nexport function parseHTML(html) {\n  return doc\n    .div()\n    .html(html)\n    .children();\n}\n\n/**\n * @function px\n * @public\n * @param {String|Number} size - String containing pixels value or a number.\n * @returns {Number} Number of pixels.\n * @description Function for parsing pixel strings.\n *\n * @example\n * px('0px');  // 0\n * px('42px'); // 42\n */\nexport function px(size) {\n  return Number(String(size).replace(/px$/, ''));\n}\n\nexport default Elem;\n","/**\n * @module Router\n * @private\n * @mixin\n * @description Exports Router class.\n */\n\nimport Arr from './Arr';\nimport Elem, { find, win } from './Elem';\nimport Func from './Func';\nimport Promise from './Promise';\nimport Str from './Str';\nimport Super from './Super';\nimport { switcher } from './Switcher';\nimport {\n  isFunction, isNull, isNullOrUndefined, isRegExp, isString,\n  assign, iterate, defineProperties\n} from './helpers';\nimport constructURL from './helpers/constructURL';\nimport resolveURL from './helpers/resolveURL';\n\n/**\n * @typedef {Object} URLOptions\n * @public\n * @property {Object} [params = {}] - URL params.\n * @property {Object} [query = {}] - Query params.\n * @property {String} [hash = ''] - Hash.\n */\n\n/**\n * @event Router#event\n * @public\n * @description Router event.\n */\n\n/**\n * @method Router#event#pause\n * @public\n * @description Method that pauses the event propagation. Only {@link Router#event:beforeLeave} and\n * {@link Router#event:beforeLoad} can be paused.\n *\n * @example\n * event.pause();\n */\n\n/**\n * @method Router#event#continue\n * @public\n * @description Method that continues the event propagation. Only {@link Router#event:beforeLeave} and\n * {@link Router#event:beforeLoad} can be paused therefore continued.\n *\n * @example\n * event.continue();\n */\n\n/**\n * @method Router#event#stop\n * @public\n * @description Method that stops the event propagation. Only {@link Router#event:beforeLeave} and\n * {@link Router#event:beforeLoad} can be stopped.\n *\n * @example\n * event.stop();\n */\n\n/**\n * @method Router#event#go\n * @public\n * @description Method that prevents Router from loading the default state forcing the page\n * going directly to another URL.\n *\n * @example\n * event.go('/login');\n */\n\n/**\n * @method Router#event#redirectTo\n * @public\n * @description Method that prevents Router from loading the default state forcing the page\n * going directly to another URL.\n *\n * @example\n * event.go('/login');\n */\n\n/**\n * @event Router#event:init\n * @public\n * @property {String} type - 'init' string.\n * @description Router init event. Is fired once after Router.init has been called\n * and Router initialization. It cannot be [paused]{@link Router#event#pause}\n * or [stopped]{@link Router#event#stop}.\n */\n\n/**\n * @event Router#event:beforeLeave\n * @public\n * @property {String} type - 'beforeLeave' string.\n * @property {Router} state - Current state.\n * @property {String} toURL - URL the redirect goes to.\n * @description Router beforeLeave event. Is fired when an attempt to leave the state happened\n * (or it bubbled to the parent state). It can be [paused]{@link Router#event#pause}\n * and [stopped]{@link Router#event#stop}.\n */\n\n/**\n * @event Router#event:leave\n * @public\n * @property {String} type - 'leave' string.\n * @property {Router} state - Current state.\n * @property {String} toURL - URL the redirect goes to.\n * @description Router leave event. Is fired right after {@link Router#event:beforeLeave} has been fired.\n * It cannot be [paused]{@link Router#event#pause} or [stopped]{@link Router#event#stop}.\n */\n\n/**\n * @event Router#event:beforeLoad\n * @public\n * @property {String} type - 'beforeLoad' string.\n * @property {Router} state - Loading state.\n * @description Router beforeLoad event. Is fired when the URL has been already changed after\n * {@link Router#event:leave} has been fired, after the only {@link Router#event:init}\n * has been fired and after browser back or forward buttons has been pressed.\n * It can be [paused]{@link Router#event#pause} and [stopped]{@link Router#event#stop}\n * preventing the state from loading and causing going to the next matched state.\n * Is fired from the Router state down to the loading state.\n */\n\n/**\n * @event Router#event:load\n * @public\n * @property {String} type - 'leave' string.\n * @property {Router} state - Loading state.\n * @description Router load event. Is fired right after {@link Router#event:beforeLoad} has been fired.\n * It cannot be [paused]{@link Router#event#pause} or [stopped]{@link Router#event#stop}.\n * Is fired from the Router state down to the loading state.\n */\n\n/**\n * @event Router#event:render\n * @public\n * @property {String} type - 'render' string.\n * @property {Router} state - Rendering state.\n * @description Router load event. Is fired right after {@link Router#event:beforeLoad} has been fired.\n * It cannot be [paused]{@link Router#event#pause} or [stopped]{@link Router#event#stop}.\n * In order to render the state there should be an element with the \"dwayne-router-state\" attribute\n * set to the state name. States are rendered from the Router down to the current state.\n */\n\n/**\n * @callback RouterRemoveListeners\n * @public\n * @param {String} [event] - If not specified all listeners are removed.\n * Otherwise only specified by the name are to be removed.\n */\n\nconst extendLink = 'https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes#Sub_classing_with_extends';\nconst stateAttrName = 'dwayne-router-state';\nconst isPrototypeOf = {}.isPrototypeOf;\nconst {\n  history,\n  location,\n  location: {\n    origin,\n    href\n  }\n} = global;\nconst stoppable = new Arr(['beforeLeave', 'beforeLoad']);\nconst states = new Arr([]);\nconst pathSwitcher = switcher('call', () => {\n  throw new Error('State path must be a string, a regular expression or undefined! (at registerState)');\n})\n  .case(isRegExp, (path) => ({\n    path: path.source.replace(/\\\\\\//g, '/'),\n    url: path,\n    params: {}\n  }))\n  .case(isNullOrUndefined, () => ({\n    path: '/',\n    url: '/',\n    params: {}\n  }))\n  .case(isString, (path) => {\n    if (path.indexOf('/')) {\n      throw new Error('If state path is a string it must start with \"/\"! (at registerState)');\n    }\n\n    const index = path.indexOf('?');\n    const params = new Super({});\n    let newURL = '';\n    const newPath = new Str(path)\n      .slice(0, index === -1 ? path.length : index)\n      .replace(/^\\/|\\/$/g)\n      .split(/\\//)\n      .map((part, i, array) => {\n        if (!part && array.length > 1) {\n          throw new Error('If state path is a string it must not contain \"//\" or end with \"/\"! (at registerState)');\n        }\n\n        const index = part.indexOf(':');\n\n        if (index > 0) {\n          throw new Error('If state path is a string resource part must be either a string or an URL parameter! (at registerState)');\n        }\n\n        if (index === -1) {\n          return {\n            url: part,\n            value: part\n          };\n        }\n\n        const {\n          name,\n          regexp = /[^\\/]*/\n        } = resolveParameter(\n          part.slice(1),\n          'URL parameter must not be an empty string or contain characters besides \"a-zA-Z_$\"! (at registerState)',\n          'URL parameter regexp validator must be within parentheses (e.g. :userId(\\\\d+) and not contain ones)! (at registerState)'\n        );\n\n        params.$[name] = params.count;\n\n        return {\n          type: 'param',\n          url: `:${ name }`,\n          value: regexp\n        };\n      })\n      .word(({ type, url, value }) => {\n        let newPath;\n\n        if (type === 'param') {\n          newPath = `(${ value.source.replace(/\\\\\\//g, '/') })`;\n        } else {\n          newPath = new Str(value).escapeRegExp().$;\n        }\n\n        newURL += `/${ url }`;\n\n        return `/${ newPath }`;\n      });\n\n    return {\n      path: newPath,\n      url: newURL,\n      params: params.$\n    };\n  });\n\nlet eventPromise = Promise.resolve();\nlet pushed;\nlet initialized;\nlet routerLoaded;\nlet router;\nlet pageTitle;\nlet pageIcon;\nlet defaultState;\nlet currentState;\nlet currentTitle;\nlet currentIcon;\n\n/**\n * @class Router\n * @public\n * @param {Object} props - Always pass props to the super constructor from the Router subclasses.\n * @returns {Router} New instance of Router state.\n * @description Wrap of an array.\n *\n * @example\n * Class for routing the app. It uses [History API]{@link https://developer.mozilla.org/en/docs/Web/API/History_API}.\n * You can redirect and go to parts of your app not reloading the page (changing the URL).\n * URLs and queries can be validates. There can hooks (such as {@link Router#event:beforeLoad},\n * {@link Router#event:load}, {@link Router#event:beforeLeave}, {@link Router#event:leave}\n * and {@link Router#event:render}). Don't try to call new <YourState>() or new Router().\n * All following examples contain proposed syntax for class properties.\n */\nexport class Router {\n  /**\n   * @member {Object} Router.$$\n   * @type {Object}\n   * @protected\n   * @property {Object} listeners - State listeners.\n   * @property {Arr} [states] - All states. Only Router has this property.\n   * @property {Router} [state] - Current state. Only Router has this property.\n   * @description Config object.\n   */\n  static $$ = {\n    listeners: {},\n    state: null,\n    states\n  };\n\n  /**\n   * @member {Router} Router.parent\n   * @type {Router}\n   * @protected\n   * @description Parent state.\n   */\n  static parent = null;\n\n  /**\n   * @member {Arr} Router.children\n   * @type {Arr}\n   * @protected\n   * @description Children states.\n   */\n  static children = new Arr([]);\n\n  /**\n   * @member {RegExp} Router.validatePath\n   * @type {RegExp}\n   * @protected\n   * @description Regexp to validate the URL. Created during the router initialization.\n   */\n  static validatePath = /^\\/$/;\n\n  /**\n   * @member {String} Router.url\n   * @type {String}\n   * @protected\n   * @description State matching URL. Generated during the router initialization.\n   */\n  static url = '/';\n\n  /**\n   * @member {String} Router.relativePath\n   * @type {String}\n   * @protected\n   * @description State matching relative path. Generated during the state registration.\n   */\n  static relativePath = '/';\n\n  /**\n   * @member {String|RegExp} Router.relativeURL\n   * @type {String|RegExp}\n   * @protected\n   * @description State matching relative URL. Generated during the state registration.\n   */\n  static relativeURL = '/';\n\n  /**\n   * @member {Object} Router.params\n   * @type {Object}\n   * @protected\n   * @description State URL params. Generated during the state registration.\n   */\n  static params = {};\n\n  /**\n   * @member {Object} Router.query\n   * @type {Object}\n   * @protected\n   * @description State query params. Generated during the state registration.\n   */\n  static query = {};\n\n  /**\n   * @member {Boolean} Router.abstract\n   * @type {Boolean}\n   * @public\n   * @description If the states should be abstract or not. Abstract state cannot be current state.\n   * This field is not required and defaults to false.\n   */\n  static abstract = false;\n\n  /**\n   * @member {String} Router.stateName\n   * @type {String}\n   * @public\n   * @description A unique name bound to state. Required.\n   */\n  static stateName = null;\n\n  /**\n   * @member {String|RegExp} Router.path\n   * @type {String|RegExp}\n   * @public\n   * @description State path relative to the parent state. Must begin with \"/\" if present.\n   * Not required and defaults to \"/\".\n   */\n  static path = '/';\n\n  /**\n   * @member {String|Function} Router.template\n   * @type {String|Function}\n   * @public\n   * @description State template. Can be either a static string template\n   * or a generated function from your javascript templates provider.\n   * Not required and defaults to \"\".\n   */\n  static template = '';\n\n  /**\n   * @member {Object} Router.templateParams\n   * @type {Object}\n   * @public\n   * @description State template params (for javascript templates).\n   * During the Router initialization are inherited from the parent state template params.\n   * Not required and defaults to {}.\n   */\n  static templateParams = {};\n\n  /**\n   * @member {Boolean} Router.encodeParams\n   * @type {Boolean}\n   * @public\n   * @description If the URL params should be encoded during the URL building (see {@link Router.buildURL}).\n   * Not required and inherited from the parent state. Router default value is true.\n   */\n  static encodeParams = true;\n\n  /**\n   * @member {Boolean} Router.decodeParams\n   * @type {Boolean}\n   * @public\n   * @description If the URL params should be decoded during the state initialization.\n   * Not required and inherited from the parent state. Router default value is true.\n   */\n  static decodeParams = true;\n\n  /**\n   * @member {Boolean} Router.encodeQuery\n   * @type {Boolean}\n   * @public\n   * @description If the query params should be encoded during the URL building (see {@link Router.buildURL}).\n   * Not required and inherited from the parent state. Router default value is true.\n   */\n  static encodeQuery = true;\n\n  /**\n   * @member {Boolean} Router.decodeQuery\n   * @type {Boolean}\n   * @public\n   * @description If the query params should be decoded during the state initialization.\n   * Not required and inherited from the parent state. Router default value is true.\n   */\n  static decodeQuery = true;\n\n  /**\n   * @member {Boolean} Router.icon\n   * @type {String}\n   * @public\n   * @description URL to the state icon (one within the tab). To set icons you should create a link element\n   * with \"dwayne-router-icon\" id. Router will set href itself.\n   * Not required and inherited from the parent state. Router default value is null.\n   */\n  static icon = null;\n\n  /**\n   * @member {Boolean} Router.title\n   * @type {String}\n   * @public\n   * @description App title (one within the tab). To set title you should create a title element\n   * with \"dwayne-router-title\" id. Router will set the value itself.\n   * Not required and inherited from the parent state. Router default value is null.\n   */\n  static title = null;\n\n  /**\n   * @member {Router} Router.default\n   * @type {Router}\n   * @public\n   * @description Works with Router only. Default Router state.\n   */\n  static get default() {\n    return defaultState;\n  }\n  // noinspection JSAnnotator\n  static set default(state) {\n    if (states.indexOf(state) === -1) {\n      throw new Error('State must be registered! (Router.default)');\n    }\n\n    const {\n      abstract,\n      path,\n      params,\n      query\n    } = state;\n\n    if (abstract) {\n      throw new Error('Default state must not be abstract! (Router.default)');\n    }\n\n    if (isRegExp(path)) {\n      throw new Error('Default state must not have regexp path! (Router.default)');\n    }\n\n    if (new Super(params).count || new Super(query).count) {\n      throw new Error('Default state must not have URL or query params! (Router.default)');\n    }\n\n    defaultState = state;\n  }\n\n  /**\n   * @method Router.buildURL\n   * @public\n   * @param {URLOptions} [options = {}] - URL options.\n   * @returns {String} Built URL.\n   * @description Method for building URLs that guaranteed to be matched by this state.\n   * Works properly only after {@link Router#event:init} has been fired.\n   *\n   * @example\n   * class MyState extends Router {\n   *   static stateName = 'myState';\n   *   static path = '/user/:userId';\n   * }\n   *\n   * registerState(MyState);\n   *\n   * Router.on('init', () => {\n   *   MyState.buildURL({\n   *     params: {\n   *       userId: 42\n   *     },\n   *     query: {\n   *       param: 'value'\n   *     }\n   *   }); // '<yourOrigin>/user/42?param=value'\n   * });\n   */\n  static buildURL(options = {}) {\n    const { url } = this;\n\n    if (isRegExp(url)) {\n      throw new Error('URL can be built only from the string URLs! (Router.buildURL)');\n    }\n\n    const {\n      params = {},\n      query = {},\n      hash = ''\n    } = options;\n\n    return constructURL(origin, url, params, query, hash, {\n      params: this.encodeParams,\n      query: this.encodeQuery\n    });\n  }\n\n  /**\n   * @method Router.go\n   * @public\n   * @fires Router#event:beforeLeave\n   * @param {URLOptions} [options = {}] - URL options.\n   * @description Method combines {@link Router#buildURL} and {@link go}.\n   *\n   * @example\n   * class MyState extends Router {\n   *   static stateName = 'myState';\n   *   static path = '/user/:userId';\n   * }\n   *\n   * registerState(MyState);\n   *\n   * Router.on('init', () => {\n   *   MyState.go({\n   *     params: {\n   *       userId: 42\n   *     },\n   *     query: {\n   *       param: 'value'\n   *     }\n   *   });\n   * });\n   */\n  static go(options) {\n    if (this.abstract) {\n      throw new Error('Cannot go to an abstract state! (at Router.go)');\n    }\n\n    go(this.buildURL(options));\n  }\n\n  /**\n   * @method Router.redirect\n   * @public\n   * @fires Router#event:beforeLeave\n   * @param {URLOptions} [options = {}] - URL options.\n   * @description Method combines {@link Router#buildURL} and {@link redirectTo}.\n   *\n   * @example\n   * class MyState extends Router {\n   *   static stateName = 'myState';\n   *   static path = '/user/:userId';\n   * }\n   *\n   * registerState(MyState);\n   *\n   * Router.on('init', () => {\n   *   MyState.redirect({\n   *     params: {\n   *       userId: 42\n   *     },\n   *     query: {\n   *       param: 'value'\n   *     }\n   *   });\n   * });\n   */\n  static redirect(options) {\n    if (this.abstract) {\n      throw new Error('Cannot go to an abstract state! (at Router.go)');\n    }\n\n    redirectTo(this.buildURL(options));\n  }\n\n  /**\n   * @method Router.init\n   * @public\n   * @fires Router#event:init\n   * @description Method for initializing Router.\n   * Note that method like {@link Router.buildURL} and {@link Router.go}\n   * don't work properly until the 'init' event is fired. In order to initialize Router\n   * there should be an element with the \"dwayne-router\" id (content of the Router states).\n   *\n   * @example\n   * Router.init();\n   */\n  static init() {\n    initialized = true;\n\n    initialize();\n  }\n\n  /**\n   * @method Router.on\n   * @public\n   * @listens Router#event\n   * @param {String|Object.<String|Listener>} event - Either a event string\n   * or an object with event keys and listeners values.\n   * @param {Listener} [listener] - If the first argument is a string it must be a listener function for\n   * specified event.\n   * @returns {RouterRemoveListeners} Function that can remove listeners that has just been set.\n   * @description Method for listening to all events you want. beforeLeave\n   */\n  static on(event, listener) {\n    if (arguments.length >= 2) {\n      event = { [event]: listener };\n    }\n\n    const { listeners } = this.$$;\n    const allListeners = {};\n\n    iterate(event, (listener, event) => {\n      const array = listeners[event] || new Arr([]);\n\n      listener = new Func(listener).bindContext(this);\n\n      allListeners[event] = listener;\n      (listeners[event] = array).push(listener);\n    });\n\n    return function removeEventListeners(event) {\n      let actualListeners = allListeners;\n\n      if (allListeners[event]) {\n        actualListeners = { [event]: allListeners[event] };\n      }\n\n      iterate(actualListeners, (listener, event) => {\n        const eventListeners = listeners[event];\n\n        const found = eventListeners.find((l) => l === listener);\n\n        if (found) {\n          eventListeners.splice(found.key);\n        }\n      });\n    };\n  }\n\n  // TODO: Router#store\n\n  /**\n   * @member {Elem} Router#base\n   * @type {Elem}\n   * @public\n   * @description State rendering base node.\n   * Created before firing {@link Router#event:render}.\n   */\n  base = router;\n\n  /**\n   * @member {String} Router#name\n   * @type {String}\n   * @public\n   * @description State name (inherited from the constructor).\n   * Created during state initialization.\n   */\n  name = null;\n\n  /**\n   * @member {Object} Router#params\n   * @type {Object}\n   * @public\n   * @description State URL params.\n   * Created during state initialization.\n   */\n  params = {};\n\n  /**\n   * @member {Object} Router#query\n   * @type {Object}\n   * @public\n   * @description State query params.\n   * Created during state initialization.\n   */\n  query = {};\n\n  /**\n   * @member {String} Router#hash\n   * @type {String}\n   * @public\n   * @description State query params.\n   * Created during state initialization.\n   */\n  hash = '';\n\n  /**\n   * @member {Object} Router#templateParams\n   * @type {Object}\n   * @public\n   * @description State template params. Inherited from the constructor template params.\n   * Can be changed before rendering in beforeLoad or load event listeners.\n   * Created during state initialization.\n   */\n  templateParams = new Super(new Super(this).proto().$.constructor.templateParams).create().$;\n\n  constructor(props = {}) {\n    assign(this, props);\n  }\n\n  /**\n   * @method Router#onBeforeLeave\n   * @public\n   * @listens Router#event:beforeLeave\n   * @param {Router#event:beforeLeave} event - Fired event.\n   * @description Called on beforeLeave event. Called after the listeners.\n   */\n  onBeforeLeave() {}\n\n  /**\n   * @method Router#onBeforeLoad\n   * @public\n   * @listens Router#event:beforeLoad\n   * @param {Router#event:beforeLoad} event - Fired event.\n   * @description Called on beforeLoad event. Called after the listeners.\n   */\n  onBeforeLoad() {}\n\n  /**\n   * @method Router#onInit\n   * @public\n   * @listens Router#event:init\n   * @param {Router#event:init} event - Fired event.\n   * @description Called on init event. Called after the listeners.\n   */\n  onInit() {}\n\n  /**\n   * @method Router#onLeave\n   * @public\n   * @listens Router#event:leave\n   * @param {Router#event:leave} event - Fired event.\n   * @description Called on leave event. Called after the listeners.\n   */\n  onLeave() {}\n\n  /**\n   * @method Router#onLoad\n   * @public\n   * @listens Router#event:load\n   * @param {Router#event:load} event - Fired event.\n   * @description Called on load event. Called after the listeners.\n   */\n  onLoad() {}\n\n  /**\n   * @method Router#onRender\n   * @public\n   * @listens Router#event:render\n   * @param {Router#event:render} event - Fired event.\n   * @description Called on render event. Called after the listeners.\n   */\n  onRender() {}\n}\n\nconst MainState = Router.prototype;\n\ndefaultState = Router;\n\nclass RouterError {}\n\nconst stopError = new RouterError();\n\n/**\n * @function redirect\n * @private\n * @param {String} newURL - New URL to go to.\n * @param {Boolean} [push] - If it's need to push state or rather replace it.\n */\nfunction redirect(newURL, push) {\n  eventPromise = eventPromise\n    .then(() => dispatchNewEvent('beforeLeave'))\n    .then(() => dispatchNewEvent('leave'))\n    .then(() => {\n      (currentState ? currentState.base : new Elem([]))\n        .hide()\n        .html('');\n\n      changeHistory(newURL, push);\n    })\n    .then(() => beforeLoad())\n    .catch(printError);\n\n  function dispatchNewEvent(type) {\n    return dispatchEvent(new Super({}).value({\n      type,\n      state: currentState,\n      toURL: newURL\n    }).$);\n  }\n}\n\n/**\n * @function beforeLoad\n * @private\n * @returns {Promise}\n */\nfunction beforeLoad() {\n  const { hash } = resolveURL(Router.decodeQuery);\n  let newState;\n\n  return Promise.resolve()\n    .then(() => loadStatesByOne())\n    .then(() => {\n      currentState = Router.$$.state = newState;\n\n      return dispatchNewEvent('load');\n    })\n    .then(() => {\n      const proto = new Super(newState).proto().$.constructor;\n      const renderStates = new Arr([proto]);\n      const {\n        stateName,\n        templateParams\n      } = newState;\n      const {\n        title,\n        icon\n      } = proto;\n      const ownTemplateParams = new Super(templateParams).clone();\n      let state = proto;\n      let promise = Promise.resolve();\n\n      while (!getStateBase(state).length && (state = state.parent)) {\n        renderStates.unshift(state);\n      }\n\n      find(`[${ stateAttrName }]`).forEach((elem) => {\n        elem = new Elem(elem);\n\n        const stateNameFromAttr = elem.attr(stateAttrName);\n        const { value: foundState } = states.find(({ stateName }) => stateName === stateNameFromAttr) || {};\n\n        if (!foundState || (stateNameFromAttr !== stateName && !(newState instanceof foundState))) {\n          elem\n            .hide()\n            .html('');\n        }\n      });\n\n      renderStates.forEach((state) => {\n        const {\n          template,\n          templateParams: parentTemplateParams\n        } = state;\n        const templateParams = new Super(parentTemplateParams)\n          .create()\n          .assign(ownTemplateParams)\n          .$;\n\n        promise = promise.then(() => {\n          const base = getStateBase(state)\n            .first()\n            .show();\n\n          try {\n            base.html(isFunction(template) ? template(templateParams) : template);\n          } catch (err) {\n            console.error('%s %o', 'Render error:', err);\n          }\n\n          base\n            .find(`[${ stateAttrName }]`)\n            .hide();\n\n          if (state === proto) {\n            newState.base = base;\n\n            if (!isNull(title) && title !== currentTitle) {\n              pageTitle.text(currentTitle = title);\n            }\n\n            if (!isNull(icon) && icon !== currentIcon) {\n              pageIcon.ref(currentIcon = icon);\n            }\n          }\n\n          return dispatchNewEvent('render', state);\n        });\n      });\n\n      return promise;\n    })\n    .catch(printError);\n\n  function dispatchNewEvent(type, renderingState) {\n    return dispatchEvent(new Super({}).value({\n      type,\n      state: newState\n    }).$, renderingState);\n  }\n\n  function loadStatesByOne() {\n    let promise = Promise.reject(stopError);\n\n    findStatesByURL().forEach(({ state, params, query }) => {\n      promise = promise.catch((err) => {\n        if (err instanceof RouterError && err.type === 'redirect') {\n          throw err;\n        }\n\n        printError(err);\n\n        newState = new state({\n          name: state.stateName,\n          params,\n          query,\n          hash\n        });\n\n        return dispatchNewEvent('beforeLoad');\n      });\n    });\n\n    return promise.catch((err) => {\n      if (err instanceof RouterError && err.type === 'redirect') {\n        changeHistory(err.url, err.push);\n\n        return loadStatesByOne();\n      }\n\n      throw err;\n    });\n  }\n}\n\n/**\n * @function changeHistory\n * @private\n * @param {String} url - URL to go to.\n * @param {Boolean} push - If the state is needed to be pushed or replaced.\n * @description Function for manipulating history.\n */\nfunction changeHistory(url, push) {\n  try {\n    history[push ? 'pushState' : 'replaceState'](null, null, url);\n    pushed = true;\n  } catch (err) {\n    location.href = url;\n  }\n}\n\n/**\n * @function decode\n * @private\n * @param {String} string - String to decode.\n * @param {Boolean} decodeParams - If the string should be decoded in the first place.\n * @returns {String} Decoded string.\n */\nfunction decode(string, decodeParams) {\n  return decodeParams\n    ? decodeURIComponent(string)\n    : string;\n}\n\n/**\n * @function printError\n * @private\n * @param {Error} err - Error to log.\n */\nfunction printError(err) {\n  if (!(err instanceof RouterError)) {\n    console.error('%s %o', 'Uncaught (in event listener)', err);\n  }\n}\n\n/**\n * @function getStateBase\n * @param {Router} state - State to find the base of.\n * @returns {Elem} State base.\n */\nfunction getStateBase(state) {\n  return state === Router ? router : find(`[${ stateAttrName }=\"${ state.stateName }\"]`);\n}\n\n/**\n * @function isInstanceOfRouterState\n * @param {Router} state - State to find out if it extends Router.\n * @returns {Boolean} If the state extends Router.\n */\nfunction isInstanceOfRouterState(state) {\n  return isPrototypeOf.call(Router, state) || isPrototypeOf.call(MainState, state.prototype);\n}\n\n/**\n * @function resolveParameter\n * @private\n * @param {String} param - Param to resolve.\n * @param {String} nameErrorName - Name error description.\n * @param {String} valueErrorName - Name error description.\n * @returns {{ name: String, regexp: RegExp|undefined }}\n */\nfunction resolveParameter(param, nameErrorName, valueErrorName) {\n  const nameMatch = param.match(/^[a-z_\\$]+/i);\n\n  if (!nameMatch) {\n    throw new Error(nameErrorName);\n  }\n\n  const name = nameMatch[0];\n  const value = param.slice(name.length);\n  let regexp;\n\n  if (value && (value.indexOf('(') || value.indexOf(')') !== value.length - 1)) {\n    throw new Error(valueErrorName);\n  }\n\n  if (value) {\n    regexp = new RegExp(value.slice(1, -1));\n  }\n\n  return {\n    name,\n    regexp\n  };\n}\n\n/**\n * @function findStatesByURL\n * @private\n * @returns {Arr} Arr of matching states.\n */\nfunction findStatesByURL() {\n  const pathname = location.pathname || '/';\n  const search = location.search || '';\n  const eventualStates = states.object((states, state) => {\n    if (state.abstract) {\n      return;\n    }\n\n    const {\n      url: stateURL,\n      validatePath,\n      params,\n      query: requiredQuery,\n      decodeParams,\n      decodeQuery\n    } = state;\n    const query = new Super(resolveURL(decodeQuery).query);\n    const eventualParams = {};\n    const match = (\n      (pathname.replace(/\\/$/, '') || '/') +\n      (isRegExp(stateURL) ? search : '')\n    ).match(validatePath);\n\n    if (!match) {\n      return false;\n    }\n\n    /* eslint guard-for-in: 0 */\n    for (const param in requiredQuery) {\n      if (!query.hasOwn(param) || !requiredQuery[param].test(query.$[param])) {\n        return;\n      }\n    }\n\n    match.shift();\n\n    for (const param in params) {\n      eventualParams[param] = decode(match[params[param]], decodeParams);\n    }\n\n    states.push({\n      state,\n      params: eventualParams,\n      query: query.$\n    });\n  }, new Arr([]));\n\n  if (eventualStates.every(({ state }) => state !== defaultState)) {\n    eventualStates.push({\n      state: defaultState,\n      params: {},\n      query: resolveURL(defaultState.decodeQuery).query\n    });\n  }\n\n  return eventualStates;\n}\n\n/**\n * @function dispatchEvent\n * @private\n * @param {Router#event} event - Event to be fired.\n * @param {Router} [renderingState] - If it's render event it's current rendering state.\n */\nfunction dispatchEvent(event, renderingState) {\n  let paused;\n  let stopped;\n  let continuePropagation = () => {};\n  let stopPropagation = () => {};\n  let redirect = () => {};\n  let promise = Promise.resolve();\n\n  const {\n    type,\n    state\n  } = event;\n  const isStoppable = stoppable.indexOfStrict(type) !== -1 && state && (\n    new Super(state).proto().$.constructor !== defaultState ||\n    type !== 'beforeLoad'\n  );\n\n  new Super(event).value({\n    continue() {\n      if (isStoppable) {\n        paused = false;\n        continuePropagation();\n      }\n    },\n    pause() {\n      if (isStoppable) {\n        paused = true;\n      }\n    },\n    stop() {\n      if (isStoppable) {\n        stopped = true;\n        stopPropagation();\n      }\n    },\n    go(url) {\n      if (isStoppable && type === 'beforeLoad') {\n        redirect(url, true);\n      }\n    },\n    redirectTo(url) {\n      if (isStoppable && type === 'beforeLoad') {\n        redirect(url);\n      }\n    }\n  });\n\n  getListeners(state, type, renderingState).forEach((listener) => {\n    promise = promise.then(() => new Promise((resolve, reject) => {\n      let finished = false;\n\n      continuePropagation = () => {\n        if (finished) {\n          resolve();\n        }\n      };\n\n      redirect = (url, push) => {\n        const err = new RouterError();\n\n        err.type = 'redirect';\n        err.push = push;\n        err.url = url;\n\n        reject(err);\n      };\n\n      stopPropagation = () => {\n        reject(stopError);\n      };\n\n      listener(event);\n\n      finished = true;\n\n      if (stopped) {\n        return reject(stopError);\n      }\n\n      if (!paused) {\n        resolve();\n      }\n    }));\n  });\n\n  return promise.catch((err) => {\n    if (isStoppable) {\n      throw err;\n    }\n\n    printError(err);\n  });\n}\n\n/**\n * @function getListeners\n * @private\n * @param {Router} state - State to get listeners from.\n * @param {String} type - Event type.\n * @param {Router} [renderingState] - If the type is \"render\" then it's current rendering state.\n */\nfunction getListeners(state = new Super(MainState).create().$, type, renderingState) {\n  const tree = new Arr([]);\n  const desc = /leave/i.test(type);\n  const method = desc ? 'push' : 'unshift';\n  const listenerName = `on${ new Str(type).capitalizeFirst() }`;\n  let proto = new Super(state).proto().$.constructor;\n\n  while (proto) {\n    if (!renderingState || isPrototypeOf.call(proto, renderingState) || renderingState === proto) {\n      tree[method](proto);\n    }\n\n    proto = proto.parent;\n  }\n\n  return tree\n    .object((listeners, {\n      $$: {\n        listeners: ownListeners\n      },\n      prototype: proto\n    }) => {\n      if (new Super(proto).hasOwn(listenerName)) {\n        listeners.push(new Func(proto[listenerName]).bind(state));\n      }\n\n      listeners.push.apply(listeners, (ownListeners[type] || new Arr([])).$);\n    }, new Arr([]));\n}\n\n/**\n * @function initialize\n * @private\n */\nfunction initialize() {\n  if (initialized && !routerLoaded) {\n    routerLoaded = true;\n    pageTitle = find('#dwayne-router-title');\n    pageIcon = find('#dwayne-router-icon');\n\n    find(`[${ stateAttrName }]`).hide();\n\n    defineProperties(MainState, {\n      base: router = find('#dwayne-router').first()\n    });\n\n    win.on('click', (e) => {\n      const target = new Elem(e.target);\n\n      if (target.name === 'a' && target.attr('target') !== '_blank') {\n        e.preventDefault();\n\n        redirect(target.attr('href') || '', true);\n      }\n    });\n\n    states.forEach((state) => {\n      const {\n        parent: {\n          children,\n          params: parentParams,\n          query: parentQuery,\n          templateParams: parentTemplateParams\n        },\n        params,\n        query,\n        templateParams,\n        relativeURL,\n        relativePath\n      } = state;\n      let proto = state;\n      let count = 0;\n      let newPath = relativePath;\n      let newURL = '';\n\n      while (proto = proto.parent) {\n        count += new Super(proto.params).count;\n        newPath = proto.relativePath + newPath;\n        newURL = proto.relativeURL + newURL;\n      }\n\n      newPath = new RegExp(`^${ newPath.replace(/\\/+/g, '/').replace(/\\/$/, '') || '/' }$`);\n      newURL = isRegExp(relativeURL)\n        ? newPath\n        : (newURL + relativeURL).replace(/\\/+/g, '/').replace(/\\/$/, '') || '/';\n\n      children.push(state);\n\n      new Super(templateParams).proto(parentTemplateParams);\n      new Super(query).proto(parentQuery);\n      new Super(params)\n        .proto(parentParams)\n        .forEach((value, key, params) => {\n          params[key] += count;\n        });\n\n      defineProperties(state, {\n        url: newURL,\n        validatePath: newPath\n      });\n    });\n\n    eventPromise = eventPromise\n      .then(() => dispatchEvent(new Super({}).value({\n        type: 'init'\n      }).$))\n      .then(() => beforeLoad())\n      .then(() => {\n        win.on('popstate', () => {\n          if (location.href !== href) {\n            pushed = true;\n          }\n\n          if (pushed) {\n            eventPromise = eventPromise.then(() => beforeLoad());\n          }\n        });\n      });\n  }\n}\n\n/**\n * @function go\n * @public\n * @fires Router#event:beforeLeave\n * @param {String} url - URL to go to.\n * @returns {void}\n * @description Function for directing to an URL. Can be external one or inner one.\n *\n * @example\n * go('/user/56');\n */\nexport function go(url) {\n  redirect(url, true);\n}\n\n/**\n * @function redirectTo\n * @public\n * @fires Router#event:beforeLeave\n * @param {String} url - URL to go to.\n * @returns {void}\n * @description Function for redirecting to an URL. Can be external one or inner one.\n *\n * @example\n * redirectTo('/user/56');\n */\nexport function redirectTo(url) {\n  redirect(url);\n}\n\n/**\n * @function registerState\n * @public\n * @param {Router} state - State to register.\n * @returns {void}\n * @description Function for registering states.\n *\n * @example\n * class MyState extends Router {\n *   static stateName = 'myState';\n *   static path = '/user/:userId';\n * }\n *\n * registerState(MyState);\n */\nexport function registerState(state) {\n  if (states.indexOf(state) !== -1) {\n    return;\n  }\n\n  if (!isInstanceOfRouterState(state)) {\n    throw new Error(`State must extend (${ extendLink }) Router! (at registerState)`);\n  }\n\n  const { stateName } = state;\n\n  if (!new Super(state).hasOwn('stateName') || states.find(({ stateName: n }) => n === stateName)) {\n    throw new Error('State must have unique stateName! (at registerState)');\n  }\n\n  const proto = Object.getPrototypeOf(state);\n\n  if (isRegExp(proto.url)) {\n    throw new Error('URL regexp state cannot be extended! (at registerState)');\n  }\n\n  const $state = new Super(state);\n  const path = $state.hasOwn('path')\n    ? state.path\n    : '';\n  const {\n    url: relativeURL,\n    path: relativePath,\n    params\n  } = pathSwitcher(path);\n\n  defineProperties(state, {\n    $$: {\n      listeners: {}\n    },\n\n    stateName,\n    parent: proto,\n    children: new Arr([]),\n    template: $state.hasOwn('template')\n      ? state.template\n      : '',\n    relativeURL,\n    relativePath,\n    params,\n    abstract: $state.hasOwn('abstract') && !!state.abstract,\n    templateParams: $state.hasOwn('templateParams')\n      ? state.templateParams\n      : {},\n    query: {}\n  });\n\n  const { query } = state;\n  const index = isString(path) ? path.indexOf('?') : -1;\n\n  if (index !== -1) {\n    new Str(path)\n      .replace(/&$/)\n      .slice(index + 1)\n      .split('&')\n      .forEach((param) => {\n        const {\n          name,\n          regexp = /[\\s\\S]*/\n        } = resolveParameter(\n          param,\n          'Query parameter must not be an empty string or contain characters besides \"a-zA-Z_$\"! (at registerState)',\n          'Query parameter regexp validator must be within parentheses (e.g. :userId(\\\\d+)) and not contain them! (at registerState)'\n        );\n\n        query[name] = new RegExp(`^${ regexp.source.replace(/\\\\\\//g, '/') }$`);\n      });\n  }\n\n  states.push(state);\n}\n","/* eslint no-nested-ternary: 0 */\r\n/* eslint no-negated-condition: 0 */\r\nexport default typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\r\n","/**\n * @module helpers/Symbol\n * @private\n * @description Exports Symbol class.\n */\n\nexport const Symbol = global.Symbol || {\n  toStringTag: 'Symbol.toStringTag',\n  iterator: Math.random().toString(36)\n};\n","/**\n * @module constants/validateCheckExpressions\n * @private\n * @description Exports different types of validate expressions for {@link module:helpers/validate}.\n */\n\nimport * as methods from '../helpers/checkTypes';\n\n/**\n * @callback checkValidityCallback\n * @private\n * @param {*} value - Value to check.\n */\n\n/**\n * @typedef {Object} validateExpr\n * @private\n * @property {String} text - Text of the thrown error.\n * @property {Error} error - Type of the thrown error.\n * @property {checkValidityCallback} check - Callback for checking value.\n */\n\n/**\n * @type {validateExpr[]}\n * @private\n * @description Object of different types of validation.\n */\nexport default {\n  '>0': {\n    check: (n) => n > 0,\n    text: '$n argument must be positive!',\n    error: RangeError\n  },\n  '>=0': {\n    check: (n) => n >= 0,\n    text: '$n argument must be non-negative!',\n    error: RangeError\n  },\n  '<0': {\n    check: (n) => n < 0,\n    text: '$n argument must be negative!',\n    error: RangeError\n  },\n  '<=0': {\n    check: (n) => n <= 0,\n    text: '$n argument must be non-positive!',\n    error: RangeError\n  },\n  '!!': {\n    check: methods.isNullOrUndefined,\n    text: '$n argument must be not null or undefined!',\n    error: TypeError\n  },\n  array: {\n    check: methods.isArray,\n    text: '$n argument must be an array!',\n    error: TypeError\n  },\n  'array||!': {\n    check: (a) => methods.isArray(a) || methods.isNullOrUndefined(a),\n    text: '$n argument must be an array, or undefined, or null!',\n    error: TypeError\n  },\n  arrayLike: {\n    check: methods.isArrayLike,\n    text: '$n argument must be array-like!',\n    error: TypeError\n  },\n  'arrayLike||!': {\n    check: (a) => methods.isArrayLike(a) || methods.isNullOrUndefined(a),\n    text: '$n argument must be array-like, or undefined, or null!',\n    error: TypeError\n  },\n  date: {\n    check: methods.isDate,\n    text: '$n argument must be a date!',\n    error: TypeError\n  },\n  'date||!': {\n    check: (d) => methods.isDate(d) || methods.isNullOrUndefined(d),\n    text: '$n argument must be a date, or undefined, or null!',\n    error: TypeError\n  },\n  dateLike: {\n    check: methods.isDateLike,\n    text: '$n argument must be date-like!',\n    error: TypeError\n  },\n  'dateLike||!': {\n    check: (d) => methods.isDateLike(d) || methods.isNullOrUndefined(d),\n    text: '$n argument must be date-like, or undefined, or null!',\n    error: TypeError\n  },\n  function: {\n    check: methods.isFunction,\n    text: '$n argument must be a function!',\n    error: TypeError\n  },\n  'function||!': {\n    check: (f) => methods.isFunction(f) || methods.isNullOrUndefined(f),\n    text: '$n argument must be a function, or undefined, or null!',\n    error: TypeError\n  },\n  int: {\n    check: methods.isInteger,\n    text: '$n argument must be an integer!',\n    error: TypeError\n  },\n  'int||!': {\n    check: (i) => methods.isInteger(i) || methods.isNullOrUndefined(i),\n    text: '$n argument must be an integer, or undefined, or null!',\n    error: TypeError\n  },\n  intLike: {\n    check: methods.isIntegerLike,\n    text: '$n argument must be integer-like!',\n    error: TypeError\n  },\n  'intLike||!': {\n    check: (i) => methods.isIntegerLike(i) || methods.isNullOrUndefined(i),\n    text: '$n argument must be integer-like, or undefined, or null!',\n    error: TypeError\n  },\n  number: {\n    check: methods.isNumber,\n    text: '$n argument must be a number!',\n    error: TypeError\n  },\n  'number||!': {\n    check: (n) => methods.isNumber(n) || methods.isNullOrUndefined(n),\n    text: '$n argument must be a number, or undefined, or null!',\n    error: TypeError\n  },\n  numberLike: {\n    check: methods.isNumberLike,\n    text: '$n argument must be number-like!',\n    error: TypeError\n  },\n  'numberLike||!': {\n    check: (n) => methods.isNumberLike(n) || methods.isNullOrUndefined(n),\n    text: '$n argument must be number-like, or undefined, or null!',\n    error: TypeError\n  },\n  object: {\n    check: methods.isObject,\n    text: '$n argument must be an object!',\n    error: TypeError\n  },\n  'object||!': {\n    check: (o) => methods.isObject(o) || methods.isNullOrUndefined(o),\n    text: '$n argument must be an object, or undefined, or null!',\n    error: TypeError\n  },\n  regexp: {\n    check: methods.isRegExp,\n    text: '$n argument must be a regular expression!',\n    error: TypeError\n  },\n  'regexp||!': {\n    check: (r) => methods.isRegExp(r) || methods.isNullOrUndefined(r),\n    text: '$n argument must be a regular expression, or undefined, or null!',\n    error: TypeError\n  },\n  string: {\n    check: methods.isString,\n    text: '$n argument must be a string!',\n    error: TypeError\n  },\n  'string||!': {\n    check: (s) => methods.isString(s) || methods.isNullOrUndefined(s),\n    text: '$n argument must be a string, or undefined, or null!',\n    error: TypeError\n  }\n};\n","/**\n * @module Promise\n * @private\n * @mixin\n * @description Exports Promise class.\n */\n\nimport { isFunction, defineProperties, Symbol } from './helpers';\n\nconst secret = {};\nconst iterator = Symbol.iterator;\n\nexport class Promise {\n  constructor(executor) {\n    if (!isFunction(executor)) {\n      throw new TypeError(`Promise resolver ${ {}.toString.call(executor) } is not a function`);\n    }\n\n    let hiddenStatus;\n    let hiddenValue;\n\n    const\tonFulfill = [];\n    const onReject = [];\n    const realPromise = this;\n    const hiddenPromise = {\n      handled: false,\n      get status() {\n        return hiddenStatus;\n      },\n      set status(value) {\n        hiddenStatus = value;\n        realPromise.status = value;\n      },\n      get value() {\n        return hiddenValue;\n      },\n      set value(val) {\n        hiddenValue = val;\n        realPromise.value = val;\n      }\n    };\n\n    hiddenPromise.status = 'pending';\n    hiddenPromise.value = undefined;\n\n    /**\n     * @typedef {Object} hiddenPromise\n     * @private\n     * @property {Boolean|Object} handled - If the promise is handled or not.\n     * @property {'pending'|'fulfilled'|'rejected'} status - Status of the promise.\n     * @property {*} value - Value of the promise.\n     */\n\n    /**\n     * @member {Function} hiddenPromise#handle\n     * @private\n     * @param {('reject'|'resolve')} event - Type of the event to handle.\n     * @param {Function} handler - Handler itself.\n     * @param {Function} resolve - Resolve function.\n     * @param {Function} reject - Reject function.\n     * @param {Object} secret - Secret.\n     * @description Private method for handling promises.\n     */\n\n    /**\n     * @member {hiddenPromise} Promise#$$\n     * @protected\n     */\n    defineProperties(this.$$ = {}, {\n      'get/set handled': {\n        get() {\n          return hiddenPromise.handled;\n        },\n        set(key) {\n          if (key === secret) {\n            hiddenPromise.handled = true;\n          }\n        }\n      },\n      handle(status, f, resolve, reject, key) {\n        if (key === secret) {\n          const proxy = isFunction(f) ? (value) => {\n            try {\n              resolve(f(value));\n            } catch (err) {\n              return reject(err);\n            }\n          } : null;\n\n          if (status === 'resolve') {\n            onFulfill.push(proxy || ((value) => resolve(value)));\n          } else if (status === 'reject') {\n            onReject.push(proxy || ((err) => reject(err)));\n          }\n        }\n      },\n      'get status'() {\n        return hiddenPromise.status;\n      },\n      'get value'() {\n        return hiddenPromise.value;\n      }\n    });\n\n    try {\n      executor(resolve, reject);\n    } catch (err) {\n      reject(err);\n    }\n\n    function reject(err) {\n      if (hiddenPromise.status === 'pending') {\n        hiddenPromise.status = 'rejected';\n        hiddenPromise.value = err;\n\n        for (let i = 0, length = onReject.length; i < length; i++) {\n          hiddenPromise.handled = true;\n\n          onReject[i](err);\n        }\n\n        setTimeout(() => {\n          if (!hiddenPromise.handled) {\n            console.error('%s %o', 'Uncaught (in promise)', err);\n          }\n        }, 1);\n      }\n    }\n\n    function resolve(value) {\n      if (hiddenPromise.status === 'pending') {\n        if (value && isFunction(value.then)) {\n          return value.then((value) => {\n            resolve(value);\n          }, (err) => {\n            reject(err);\n          });\n        }\n\n        hiddenPromise.status = 'fulfilled';\n        hiddenPromise.value = value;\n\n        for (let i = 0, length = onFulfill.length; i < length; i++) {\n          hiddenPromise.handled = true;\n\n          onFulfill[i](value);\n        }\n      }\n    }\n  }\n\n  static all(iterable) {\n    const array = [];\n\n    let toResolve = 0;\n\n    if (iterable[iterator]) {\n      iterable = iterable[iterator]();\n\n      return new Promise((resolve, reject) => {\n        let next;\n        let i = 0;\n\n        while (!(next = iterable.next()).done) {\n          const promise = Promise.resolve(next.value);\n\n          toResolve++;\n\n          ((i) => {\n            promise.then((value) => {\n              toResolve--;\n              array[i] = value;\n\n              setTimeout(() => {\n                if (next.done && !toResolve) {\n                  resolve(array);\n                }\n              }, 1);\n            }, reject);\n          })(i++);\n        }\n\n        if (!i) {\n          return Promise.resolve([]);\n        }\n      });\n    }\n\n    const length = iterable.length;\n\n    if (!length) {\n      return Promise.resolve([]);\n    }\n\n    toResolve = length;\n\n    return new Promise((resolve, reject) => {\n      for (let i = 0; i < length; i++) {\n        const promise = Promise.resolve(iterable[i]);\n\n        promise.then((value) => {\n          toResolve--;\n          array[i] = value;\n\n          if (!toResolve) {\n            resolve(array);\n          }\n        }, reject);\n      }\n    });\n  }\n\n  static race(iterable) {\n    if (iterable[iterator]) {\n      iterable = iterable[iterator]();\n\n      return new Promise((resolve, reject) => {\n        let next;\n\n        while (!(next = iterable.next()).done) {\n          next.value.then(resolve, reject);\n        }\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      for (let i = 0, length = iterable.length; i < length; i++) {\n        iterable[i].then(resolve, reject);\n      }\n    });\n  }\n\n  static reject(value) {\n    return new Promise((resolve, reject) => {\n      reject(value);\n    });\n  }\n\n  static resolve(value) {\n    if (value && isFunction(value.then)) {\n      return value;\n    }\n\n    return new Promise((resolve) => {\n      resolve(value);\n    });\n  }\n\n  abort() {}\n\n  catch(onRejected) {\n    return this.then(null, onRejected);\n  }\n\n  then(onFulfilled, onRejected) {\n    const promise = this.$$;\n\n    if (promise.status === 'pending') {\n      return new Promise((resolve, reject) => {\n        promise.handle('reject', onRejected, resolve, reject, secret);\n        promise.handle('resolve', onFulfilled, resolve, reject, secret);\n      });\n    }\n\n    promise.handled = secret;\n\n    const { value } = promise;\n\n    let method;\n    let handler;\n\n    if (promise.status === 'fulfilled') {\n      method = 'resolve';\n      handler = onFulfilled;\n    } else {\n      method = 'reject';\n      handler = onRejected;\n    }\n\n    if (!isFunction(handler)) {\n      return Promise[method](value);\n    }\n\n    try {\n      return Promise.resolve(handler(value));\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n}\n\ndefineProperties(Promise.prototype, {\n  [Symbol.toStringTag]: 'Promise'\n});\n\nexport default Promise;\n","/**\n * @module constants/regexpSpecialCharacters\n * @private\n * @description Exports special characters for RegExp.\n */\n\n/**\n * @const\n * @name module:constants/regexpSpecialCharacters~regexpSpecialCharacters\n * @type {String[]}\n */\nexport default [\n  '.',\n  '+', '*', '?',\n  '(', ')',\n  '[', ']',\n  '{', '}',\n  '<', '>',\n  '^', '$',\n  '!',\n  '=',\n  ':',\n  '-',\n  '|',\n  ',',\n  '\\\\'\n];\n","/**\n * @module helpers/parseHeaders\n * @private\n * @description Exports parseHeaders method.\n */\n\nimport Str from '../Str';\nimport { iterate } from './iterate';\n\n/**\n * @function parseHeaders\n * @param {String} rawHeaders - Raw headers.\n * @returns {Object} Headers object\n * @description Function for parsing raw headers.\n */\nexport default (rawHeaders) => {\n  const headers = {};\n\n  iterate((rawHeaders || '').split('\\n'), (value) => {\n    const index = value.indexOf(':');\n    const key = new Str(value.substring(0, index))\n      .trim()\n      .toCamelCase().$;\n    const val = new Str(value.substring(index + 1)).trim().$;\n\n    if (key) {\n      headers[key] = (headers[key] ? `${ headers[key] }, ` : '') + val;\n    }\n  });\n\n  return headers;\n};\n","/**\n * @module helpers/transformData\n * @private\n * @description Exports transformData method.\n */\n\nimport Arr from '../Arr';\nimport Super from '../Super';\nimport { isObject, toStringTag } from './';\n\nconst notToTransform = new Arr(['FormData', 'File', 'Blob', 'ArrayBuffer', 'String', 'Number']);\nconst withoutBody = new Arr(['DELETE', 'GET', 'HEAD']);\n\n/**\n * @function transformData\n * @param {*} data - Data to transform\n * @param {String} method - HTTP method.\n * @param {Object} headers - Object with headers.\n * @returns {*} - Transformed data.\n */\nexport default (data, method, headers) => {\n  data = new Super(data).$;\n\n  if (withoutBody.indexOfStrict(method) !== -1) {\n    return null;\n  }\n\n  if (isObject(data) && notToTransform.indexOfStrict(toStringTag(data)) === -1) {\n    if (!headers.contentType) {\n      headers.contentType = ['application/json;charset=utf-8'];\n    }\n\n    return new Super(data).json();\n  }\n\n  return data;\n};\n","/**\r\n * @module constants/appliedRegExps\r\n * @private\r\n * @description Exports different types of syntax for {@link Elem#apply}.\r\n */\r\n\r\n/**\r\n * @callback matchAppliedExprCallback\r\n * @param {Elem} elem - D-elem of an element to apply expression to.\r\n * @param {String} string - Matched applied name.\r\n * @param {String} arg - Argument within the parentheses.\r\n */\r\n\r\n/**\r\n * @type {Object.<String, matchAppliedExprCallback|Object.<String, matchAppliedExprCallback>>}\r\n * @description Object of different types of syntax.\r\n */\r\n\r\nexport default {\r\n  '#'(elem, id) {\r\n    elem.id(id);\r\n  },\r\n  '.'(elem, cls) {\r\n    elem.addClass(cls);\r\n  },\r\n  $(elem, attr, value) {\r\n    elem.attr(attr, value);\r\n  },\r\n  '@'(elem, prop, value) {\r\n    elem.css(prop, value);\r\n  },\r\n  '&'(elem, name, html) {\r\n    elem.html(html);\r\n  },\r\n  '*'(elem, name, text) {\r\n    elem.text(text);\r\n  },\r\n  '-': {\r\n    '.'(elem, cls) {\r\n      elem.removeClass(cls);\r\n    },\r\n    $(elem, attr) {\r\n      elem.removeAttr(attr);\r\n    },\r\n    '@'(elem, prop) {\r\n      elem.removeCSS(prop);\r\n    }\r\n  }\r\n};\r\n","/**\n * @module constants/elements\n * @private\n * @description Exports methods for {@link Elem} for creating html-elements.\n */\n\n/**\n * @const\n * @type {String[]}\n */\nexport default [\n  /**\n   * @member {Function} Elem#a\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'a',\n\n  /**\n   * @member {Function} Elem#abbr\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'abbr',\n\n  /**\n   * @member {Function} Elem#address\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'address',\n\n  /**\n   * @member {Function} Elem#area\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'area',\n\n  /**\n   * @member {Function} Elem#article\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'article',\n\n  /**\n   * @member {Function} Elem#audio\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'audio',\n\n  /**\n   * @member {Function} Elem#b\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'b',\n\n  /**\n   * @member {Function} Elem#base\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'base',\n\n  /**\n   * @member {Function} Elem#bdi\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'bdi',\n\n  /**\n   * @member {Function} Elem#bdo\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'bdo',\n\n  /**\n   * @member {Function} Elem#blockquote\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'blockquote',\n\n  /**\n   * @member {Function} Elem#body\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'body',\n\n  /**\n   * @member {Function} Elem#br\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'br',\n\n  /**\n   * @member {Function} Elem#button\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'button',\n\n  /**\n   * @member {Function} Elem#canvas\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'canvas',\n\n  /**\n   * @member {Function} Elem#caption\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'caption',\n\n  /**\n   * @member {Function} Elem#cite\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'cite',\n\n  /**\n   * @member {Function} Elem#code\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'code',\n\n  /**\n   * @member {Function} Elem#col\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'col',\n\n  /**\n   * @member {Function} Elem#colgroup\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'colgroup',\n\n  /**\n   * @member {Function} Elem#content\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'content',\n\n  /**\n   * @member {Function} Elem#datalist\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'datalist',\n\n  /**\n   * @member {Function} Elem#dd\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'dd',\n\n  /**\n   * @member {Function} Elem#del\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'del',\n\n  /**\n   * @member {Function} Elem#details\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'details',\n\n  /**\n   * @member {Function} Elem#dfn\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'dfn',\n\n  /**\n   * @member {Function} Elem#dialog\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'dialog',\n\n  /**\n   * @member {Function} Elem#div\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'div',\n\n  /**\n   * @member {Function} Elem#dl\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'dl',\n\n  /**\n   * @member {Function} Elem#dt\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'dt',\n\n  /**\n   * @member {Function} Elem#element\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'element',\n\n  /**\n   * @member {Function} Elem#em\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'em',\n\n  /**\n   * @member {Function} Elem#embed\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'embed',\n\n  /**\n   * @member {Function} Elem#fieldset\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'fieldset',\n\n  /**\n   * @member {Function} Elem#figcaption\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'figcaption',\n\n  /**\n   * @member {Function} Elem#figure\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'figure',\n\n  /**\n   * @member {Function} Elem#footer\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'footer',\n\n  /**\n   * @member {Function} Elem#form\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'form',\n\n  /**\n   * @member {Function} Elem#h1\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'h1',\n\n  /**\n   * @member {Function} Elem#h2\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'h2',\n\n  /**\n   * @member {Function} Elem#h3\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'h3',\n\n  /**\n   * @member {Function} Elem#h4\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'h4',\n\n  /**\n   * @member {Function} Elem#h5\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'h5',\n\n  /**\n   * @member {Function} Elem#h6\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'h6',\n\n  /**\n   * @member {Function} Elem#head\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'head',\n\n  /**\n   * @member {Function} Elem#header\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'header',\n\n  /**\n   * @member {Function} Elem#hgroup\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'hgroup',\n\n  /**\n   * @member {Function} Elem#hr\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'hr',\n\n  /**\n   * @member {Function} Elem#i\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'i',\n\n  /**\n   * @member {Function} Elem#iframe\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'iframe',\n\n  /**\n   * @member {Function} Elem#img\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'img',\n\n  /**\n   * @member {Function} Elem#input\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'input',\n\n  /**\n   * @member {Function} Elem#ins\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'ins',\n\n  /**\n   * @member {Function} Elem#kbd\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'kbd',\n\n  /**\n   * @member {Function} Elem#label\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'label',\n\n  /**\n   * @member {Function} Elem#legend\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'legend',\n\n  /**\n   * @member {Function} Elem#li\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'li',\n\n  /**\n   * @member {Function} Elem#link\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'link',\n\n  /**\n   * @member {Function} Elem#main\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'main',\n\n  /**\n   * @member {Function} Elem#mark\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'mark',\n\n  /**\n   * @member {Function} Elem#menu\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'menu',\n\n  /**\n   * @member {Function} Elem#menuitem\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'menuitem',\n\n  /**\n   * @member {Function} Elem#meta\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'meta',\n\n  /**\n   * @member {Function} Elem#meter\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'meter',\n\n  /**\n   * @member {Function} Elem#nav\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'nav',\n\n  /**\n   * @member {Function} Elem#noscript\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'noscript',\n\n  /**\n   * @member {Function} Elem#null\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'null',\n\n  /**\n   * @member {Function} Elem#ol\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'ol',\n\n  /**\n   * @member {Function} Elem#optgroup\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'optgroup',\n\n  /**\n   * @member {Function} Elem#option\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'option',\n\n  /**\n   * @member {Function} Elem#output\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'output',\n\n  /**\n   * @member {Function} Elem#p\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'p',\n\n  /**\n   * @member {Function} Elem#param\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'param',\n\n  /**\n   * @member {Function} Elem#pre\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'pre',\n\n  /**\n   * @member {Function} Elem#progress\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'progress',\n\n  /**\n   * @member {Function} Elem#q\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'q',\n\n  /**\n   * @member {Function} Elem#rp\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'rp',\n\n  /**\n   * @member {Function} Elem#rt\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'rt',\n\n  /**\n   * @member {Function} Elem#rtc\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'rtc',\n\n  /**\n   * @member {Function} Elem#ruby\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'ruby',\n\n  /**\n   * @member {Function} Elem#s\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  's',\n\n  /**\n   * @member {Function} Elem#samp\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'samp',\n\n  /**\n   * @member {Function} Elem#script\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'script',\n\n  /**\n   * @member {Function} Elem#section\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'section',\n\n  /**\n   * @member {Function} Elem#select\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'select',\n\n  /**\n   * @member {Function} Elem#shadow\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'shadow',\n\n  /**\n   * @member {Function} Elem#small\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'small',\n\n  /**\n   * @member {Function} Elem#source\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'source',\n\n  /**\n   * @member {Function} Elem#span\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'span',\n\n  /**\n   * @member {Function} Elem#strong\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'strong',\n\n  /**\n   * @member {Function} Elem#style\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'style',\n\n  /**\n   * @member {Function} Elem#sub\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'sub',\n\n  /**\n   * @member {Function} Elem#summary\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'summary',\n\n  /**\n   * @member {Function} Elem#sup\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'sup',\n\n  /**\n   * @member {Function} Elem#table\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'table',\n\n  /**\n   * @member {Function} Elem#tbody\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'tbody',\n\n  /**\n   * @member {Function} Elem#td\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'td',\n\n  /**\n   * @member {Function} Elem#template\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'template',\n\n  /**\n   * @member {Function} Elem#textarea\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'textarea',\n\n  /**\n   * @member {Function} Elem#tfoot\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'tfoot',\n\n  /**\n   * @member {Function} Elem#th\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'th',\n\n  /**\n   * @member {Function} Elem#thead\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'thead',\n\n  /**\n   * @member {Function} Elem#time\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'time',\n\n  /**\n   * @member {Function} Elem#title\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'title',\n\n  /**\n   * @member {Function} Elem#tr\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'tr',\n\n  /**\n   * @member {Function} Elem#track\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'track',\n\n  /**\n   * @member {Function} Elem#u\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'u',\n\n  /**\n   * @member {Function} Elem#ul\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'ul',\n\n  /**\n   * @member {Function} Elem#var\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'var',\n\n  /**\n   * @member {Function} Elem#video\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'video',\n\n  /**\n   * @member {Function} Elem#wbr\n   * @type {Function}\n   * @param {...String} appliedExpressions\n   * @returns {Elem}\n   */\n  'wbr'\n];\n","/**\n * @module constants/elements\n * @private\n * @description Exports different canvas methods for {@link Elem} for creating html-elements.\n */\n\n/**\n * @const\n * @type {String[]}\n */\nexport const canvasGetMethods = [\n  /**\n   * @member {Function} Elem#createImageData\n   * @type {Function}\n   * @param {...*} args\n   * @returns {ImageData|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/createImageData\n   */\n  'createImageData',\n\n  /**\n   * @member {Function} Elem#createLinearGradient\n   * @type {Function}\n   * @param {...*} args\n   * @returns {CanvasGradient|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/createLinearGradient\n   */\n  'createLinearGradient',\n\n  /**\n   * @member {Function} Elem#createPattern\n   * @type {Function}\n   * @param {...*} args\n   * @returns {CanvasPattern|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/createPattern\n   */\n  'createPattern',\n\n  /**\n   * @member {Function} Elem#createRadialGradient\n   * @type {Function}\n   * @param {...*} args\n   * @returns {CanvasGradient|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/createRadialGradient\n   */\n  'createRadialGradient',\n\n  /**\n   * @member {Function} Elem#getImageData\n   * @type {Function}\n   * @param {...*} args\n   * @returns {ImageData|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/getImageData\n   */\n  'getImageData',\n\n  /**\n   * @member {Function} Elem#getLineDash\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Number[]|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/getLineDash\n   */\n  'getLineDash',\n\n  /**\n   * @member {Function} Elem#isPointInPath\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Boolean|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/isPointInPath\n   */\n  'isPointInPath',\n\n  /**\n   * @member {Function} Elem#isPointInStroke\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Boolean|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/isPointInStroke\n   */\n  'isPointInStroke',\n\n  /**\n   * @member {Function} Elem#measureText\n   * @type {Function}\n   * @param {...*} args\n   * @returns {TextMetrics|void}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/measureText\n   */\n  'measureText'\n];\n\nexport const canvasRestMethods = [\n  /**\n   * @member {Function} Elem#arc\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/arc\n   */\n  'arc',\n\n  /**\n   * @member {Function} Elem#arcTo\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/arcTo\n   */\n  'arcTo',\n\n  /**\n   * @member {Function} Elem#beginPath\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/beginPath\n   */\n  'beginPath',\n\n  /**\n   * @member {Function} Elem#bezierCurveTo\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/bezierCurveTo\n   */\n  'bezierCurveTo',\n\n  /**\n   * @member {Function} Elem#clearRect\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/clearRect\n   */\n  'clearRect',\n\n  /**\n   * @member {Function} Elem#clip\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/clip\n   */\n  'clip',\n\n  /**\n   * @member {Function} Elem#closePath\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/closePath\n   */\n  'closePath',\n\n  /**\n   * @member {Function} Elem#drawFocusIfNeeded\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/drawFocusIfNeeded\n   */\n  'drawFocusIfNeeded',\n\n  /**\n   * @member {Function} Elem#drawImage\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/drawImage\n   */\n  'drawImage',\n\n  /**\n   * @member {Function} Elem#ellipse\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/ellipse\n   */\n  'ellipse',\n\n  /**\n   * @member {Function} Elem#fill\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/fill\n   */\n  'fill',\n\n  /**\n   * @member {Function} Elem#fillRect\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/fillRect\n   */\n  'fillRect',\n\n  /**\n   * @member {Function} Elem#fillText\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/fillText\n   */\n  'fillText',\n\n  /**\n   * @member {Function} Elem#lineTo\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/lineTo\n   */\n  'lineTo',\n\n  /**\n   * @member {Function} Elem#moveTo\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/moveTo\n   */\n  'moveTo',\n\n  /**\n   * @member {Function} Elem#putImageData\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/putImageData\n   */\n  'putImageData',\n\n  /**\n   * @member {Function} Elem#quadraticCurveTo\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/quadraticCurveTo\n   */\n  'quadraticCurveTo',\n\n  /**\n   * @member {Function} Elem#rect\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/rect\n   */\n  'rect',\n\n  /**\n   * @member {Function} Elem#resetTransform\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/resetTransform\n   */\n  'resetTransform',\n\n  /**\n   * @member {Function} Elem#restore\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/restore\n   */\n  'restore',\n\n  /**\n   * @member {Function} Elem#rotate\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/rotate\n   */\n  'rotate',\n\n  /**\n   * @member {Function} Elem#save\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/save\n   */\n  'save',\n\n  /**\n   * @member {Function} Elem#scale\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/scale\n   */\n  'scale',\n\n  /**\n   * @member {Function} Elem#setLineDash\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/setLineDash\n   */\n  'setLineDash',\n\n  /**\n   * @member {Function} Elem#setTransform\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/setTransform\n   */\n  'setTransform',\n\n  /**\n   * @member {Function} Elem#stroke\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/stroke\n   */\n  'stroke',\n\n  /**\n   * @member {Function} Elem#strokeRect\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/strokeRect\n   */\n  'strokeRect',\n\n  /**\n   * @member {Function} Elem#strokeText\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/strokeText\n   */\n  'strokeText',\n\n  /**\n   * @member {Function} Elem#transform\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/transform\n   */\n  'transform',\n\n  /**\n   * @member {Function} Elem#translate\n   * @type {Function}\n   * @param {...*} args\n   * @returns {Elem}\n   * @see https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/translate\n   */\n  'translate'\n];\n","/**\n * @module helpers/resolveURL\n * @private\n * @description Exports Object.assign-like method.\n */\n\nimport Str from '../Str';\n\nconst { location } = global;\n\nexport default (decodeQuery) => {\n  const {\n    search: query,\n    hash\n  } = location;\n  const params = {\n    query: {},\n    hash: hash.replace(/^#/, '')\n  };\n\n  if (!query) {\n    return params;\n  }\n\n  new Str(query.replace(/^\\?/, ''))\n    .split('&')\n    .forEach((rawParam) => {\n      let [param, value = ''] = rawParam.split('=');\n\n      param = decodeQuery ? decodeURIComponent(param) : param;\n      value = decodeQuery ? decodeURIComponent(value) : value;\n\n      if (!/^[^\\[]+/.test(param)) {\n        return;\n      }\n\n      let paramName;\n      let paramObject = params.query;\n\n      new Str(param)\n        .match(/^[^\\[\\]]*|\\[[^\\[\\]]*\\]/g)\n        .forEach((name) => {\n          if (name.indexOf('[')) {\n            paramName = name;\n\n            return;\n          }\n\n          name = name.slice(1, -1);\n\n          paramObject = paramObject[paramName] = paramObject[paramName] || (name ? {} : []);\n          paramName = name || paramObject.length;\n        });\n\n      paramObject[paramName] = value;\n    });\n\n  return params;\n};\n","import * as statics from './lib/browser';\r\nimport { assign } from './lib/helpers/assign';\r\n\r\nconst { D } = statics;\r\n\r\nassign(D, statics);\r\n\r\ndelete D.default;\r\ndelete D.D;\r\n\r\nglobal.D = D;\r\n"],"names":["toStringTag","object","toString","call","replace","isArray","value","isArrayLike","isFunction","length","isInteger","isBoolean","isDate","isDateLike","Date","isNaN","getTime","isElement","test","isFinite","isNumber","Number","Infinity","isIntegerLike","parseInt","isNull","isNullOrUndefined","isNumberLike","isObject","Object","isPlainObject","isPrimitive","proto","getPrototypeOf","constructor","isRegExp","isString","isSymbol","isUndefined","D","i","constructors","levelConstructors","k","len","_constructor","cls","check","iterate","callback","array","iterated","key","hasOwnProperty","assign","target","arguments","source","index","dynamicDefineProperties","properties","propertyGenerator","name","defineProperty","defineProperties","method","undefined","get","set","toArray","createNewArray","push","validate","args","options","number","checker","checkExpressions","error","text","numbers","char","alphabet","string","ranges","split","range","Error","start","charCodeAt","end","String","fromCharCode","Alphabet","switcher","cases","mode","defaultValue","Switcher","when","condition","value1","value2","_deepAssign","_deepClone","clone","cloneSwitcher","deepEqual","o1","o2","strict","match","lastIndex","p1","p2","keys","_deepEvery","n","tree","newTree","concat","_deepFilter","nul","o","filtered","_deepFind","result","_deepFreeze","freeze","_deepForEach","_deepMap","_deepReduce","IV","_deepSome","asc","x","y","Arr","blob","blobParts","BlobObject","Blob","apply","noop","self","rand","Math","random","floor","trim","parseJSON","json","JSON","parse","dates","parsed","this","round","digits","zeroes","zero","repeat","$","now","date","Super","Dat","isAbsolute","url","absoluteURLRegexp","encode","isEncoded","encodeURIComponent","fetchBeforeMiddleware","config","baseURL","data","headers","params","query","METHOD","toUpperCase","constructURL","transformData","values","header","Str","toCapitalCase","join","toFind","elem","_find","Elem","isElem","isWindow","isHTMLDocument","getElem","emptyDiv","getName","tagName","toLowerCase","addDwayneData","windowsDwayneData","some","element","getContext","selector","base","nativeDocument","querySelectorAll","parseHTML","html","doc","div","children","px","size","redirect","newURL","dispatchNewEvent","type","dispatchEvent","currentState","eventPromise","then","hide","beforeLoad","printError","renderingState","newState","loadStatesByOne","promise","Promise","reject","stopError","forEach","state","err","RouterError","stateName","resolveURL","Router","decodeQuery","hash","resolve","$$","renderStates","templateParams","title","icon","ownTemplateParams","getStateBase","parent","unshift","stateAttrName","stateNameFromAttr","attr","states","find","foundState","template","parentTemplateParams","create","first","show","currentTitle","currentIcon","ref","changeHistory","href","decode","decodeParams","decodeURIComponent","router","isInstanceOfRouterState","isPrototypeOf","MainState","prototype","resolveParameter","param","nameErrorName","valueErrorName","nameMatch","slice","regexp","indexOf","RegExp","findStatesByURL","pathname","location","search","eventualStates","stateURL","validatePath","requiredQuery","eventualParams","hasOwn","shift","_param","every","defaultState","event","paused","stopped","continuePropagation","stopPropagation","isStoppable","stoppable","indexOfStrict","listener","finished","getListeners","desc","listenerName","capitalizeFirst","listeners","ownListeners","Func","bind","initialize","initialized","routerLoaded","on","e","preventDefault","parentParams","parentQuery","relativeURL","relativePath","count","newPath","pushed","_go","redirectTo","registerState","extendLink","$state","path","pathSwitcher","window","global","_Symbol","Symbol","RangeError","methods.isNullOrUndefined","TypeError","methods.isArray","a","methods.isArrayLike","methods.isDate","d","methods.isDateLike","methods.isFunction","f","methods.isInteger","methods.isIntegerLike","methods.isNumber","methods.isNumberLike","methods.isObject","methods.isRegExp","r","methods.isString","s","chars","word","token","def","ret","val","Case","case","eventualCases","setPrototypeOf","_mode","Function","deep","objects","sum","func","descriptors","Boolean","property","descriptor","props","getter","isFrozen","replacer","space","stringify","max","min","_object","obj","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","_proto","isContextObject","startKey","setter","reduce","_value","keyOf","keyOfStrict","separator","pop","reverse","randomIndex","begin","compareFunction","sort","deleteCount","items","splice","secret","iterator","executor","hiddenPromise","status","onReject","handled","onFulfill","hiddenStatus","hiddenValue","realPromise","proxy","onRejected","onFulfilled","handle","handler","iterable","toResolve","next","done","methods","URL","progress","reader","FileReader","toReject","onprogress","onerror","onload","_this2","abort","anchor","document","createElement","dataURL","setAttribute","click","createObjectURL","_arguments","called","canBeCalled","before","after","sync","contextLocked","context","middleware","afterAll","beforeAll","bindContext","bindArgs","times","lockContext","lockArgs","argsLocked","mark","time","timeEnd","unbindContext","unbindArgs","toRadian","PI","toDegree","ln2","LN2","ln10","LN10","Num","toDegrees","acos","asin","atan","asDegrees","cos","clearTimeout","timeout","aborted","interval","setTimeout","log","power","pow","sin","tan","rej","fractionDigits","toExponential","toFixed","precision","toPrecision","abs","sqrt","cbrt","ceil","exp","ln","sign","htmlSpecials","regexpSpecialsRegexp","regexpSpecialCharacters","searchString","position","revert","startsWith","escaped","symbol","searchValue","fromIndex","lastIndexOf","str","beginSlice","endSlice","substr","indexStart","indexEnd","substring","daysOfTheWeekNames","daysOfTheWeekAliases","map","monthsNames","monthsAliases","utc","coeffs","getSwitcher","NaN","setSwitcher","what","prefix","formats","format","replaceString","date1","date2","isBefore","started","coeff","w","_this4","_time","setTime","toISOString","toLocaleString","valueOf","querySwitcher","queryParams","encodeOptions","encodeParams","encodeQuery","rawHeaders","toCamelCase","notToTransform","withoutBody","contentType","defaults","origin","uploadMethods","Fetch","fetch","request","conf","deepAssign","toPush","dataConfig","urlConfig","deepClone","xhr","auth","username","password","responseType","withCredentials","XMLHttpRequest","open","setRequestHeader","upload","onabort","ontimeout","onreadystatechange","readyState","response","responseText","parseHeaders","getAllResponseHeaders","statusText","send","id","addClass","prop","css","removeClass","removeAttr","removeCSS","canvasGetMethods","canvasRestMethods","eventSeparator","textProperty","Node","propertyDescriptor","classes","attrs","inputElements","dataURLFetch","_click","refSwitcher","filterSwitcher","is","elems","innerSwitcher","paddings","borders","outerSwitcher","elements","list","classList","add","innerHTML","style","sheet","cssRules","rules","toHyphenCase","insertRule","dwayneData","appendChild","createTextNode","strings","applied","setApplied","np1","appliedRegExps","_attr","getAttribute","attributes","load","isBroken","canvas","width","height","drawImage","ab","_blob","blur","pseudo","getComputedStyle","rule","into","className","cloneNode","parentElement","contains","appliedExpressions","getPropertyValue","getPropertyPriority","removeProperty","setProperty","cssText","ctx","dataset","encoderOptions","toDataURL","deleteRule","eventInit","details","bubbles","cancelable","finalEvent","Event","createEvent","initEvent","found","focus","selectorText","hasAttribute","_height","currentDisplay","previousDisplay","_html","_id","insertBefore","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","complete","naturalWidth","naturalHeight","closest","images","all","filter","$elem","removeListeners","proper","broken","prev","nextElementSibling","events","removeListener","allListeners","removeEventListeners","define","has","newListener","addEventListener","removeEventListener","parentNode","previousElementSibling","link","removeChild","removeAttribute","remove","2","1","created","_text","txt","addText","_arguments6","hasAttr","hasClass","level","validator","validatorWrap","input","errors","validity","valid","validationMessage","validators","formErrors","form","inputs","dispatch","inputError","_width","innerHeight","calcCSS","borderTopWidth","borderBottomWidth","boxSizing","paddingTop","paddingBottom","innerWidth","borderLeftWidth","borderRightWidth","paddingLeft","paddingRight","outerHeight","marginTop","marginBottom","outerWidth","marginLeft","marginRight","win","documentElement","body","head","rawParam","paramName","paramObject","history","part","escapeRegExp","pageTitle","pageIcon","buildURL","actualListeners","eventListeners","l","abstract","statics.D","statics"],"mappings":"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","sourceRoot":"/source/"}